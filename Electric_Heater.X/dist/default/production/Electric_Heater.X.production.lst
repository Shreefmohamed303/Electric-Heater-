

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Jul 13 03:31:57 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	intentry,global,class=CODE,delta=2
    54                           	psect	text39,local,class=CODE,merge=1,delta=2
    55                           	psect	text40,local,class=CODE,merge=1,delta=2
    56                           	psect	text41,local,class=CODE,merge=1,delta=2
    57                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    59                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text45,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text47,local,class=CODE,merge=1,delta=2
    63                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
    64                           	psect	text49,local,class=CODE,merge=1,delta=2
    65                           	psect	text50,local,class=CODE,merge=1,delta=2
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    67                           	dabs	1,0x7E,2
    68  0000                     
    69                           ; Version 2.20
    70                           ; Generated 12/02/2020 GMT
    71                           ; 
    72                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC16F877A Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     	;# 
   104  0001                     	;# 
   105  0002                     	;# 
   106  0003                     	;# 
   107  0004                     	;# 
   108  0005                     	;# 
   109  0006                     	;# 
   110  0007                     	;# 
   111  0008                     	;# 
   112  0009                     	;# 
   113  000A                     	;# 
   114  000B                     	;# 
   115  000C                     	;# 
   116  000D                     	;# 
   117  000E                     	;# 
   118  000E                     	;# 
   119  000F                     	;# 
   120  0010                     	;# 
   121  0011                     	;# 
   122  0012                     	;# 
   123  0013                     	;# 
   124  0014                     	;# 
   125  0015                     	;# 
   126  0015                     	;# 
   127  0016                     	;# 
   128  0017                     	;# 
   129  0018                     	;# 
   130  0019                     	;# 
   131  001A                     	;# 
   132  001B                     	;# 
   133  001B                     	;# 
   134  001C                     	;# 
   135  001D                     	;# 
   136  001E                     	;# 
   137  001F                     	;# 
   138  0081                     	;# 
   139  0085                     	;# 
   140  0086                     	;# 
   141  0087                     	;# 
   142  0088                     	;# 
   143  0089                     	;# 
   144  008C                     	;# 
   145  008D                     	;# 
   146  008E                     	;# 
   147  0091                     	;# 
   148  0092                     	;# 
   149  0093                     	;# 
   150  0094                     	;# 
   151  0098                     	;# 
   152  0099                     	;# 
   153  009C                     	;# 
   154  009D                     	;# 
   155  009E                     	;# 
   156  009F                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  0000                     	;# 
   164  0001                     	;# 
   165  0002                     	;# 
   166  0003                     	;# 
   167  0004                     	;# 
   168  0005                     	;# 
   169  0006                     	;# 
   170  0007                     	;# 
   171  0008                     	;# 
   172  0009                     	;# 
   173  000A                     	;# 
   174  000B                     	;# 
   175  000C                     	;# 
   176  000D                     	;# 
   177  000E                     	;# 
   178  000E                     	;# 
   179  000F                     	;# 
   180  0010                     	;# 
   181  0011                     	;# 
   182  0012                     	;# 
   183  0013                     	;# 
   184  0014                     	;# 
   185  0015                     	;# 
   186  0015                     	;# 
   187  0016                     	;# 
   188  0017                     	;# 
   189  0018                     	;# 
   190  0019                     	;# 
   191  001A                     	;# 
   192  001B                     	;# 
   193  001B                     	;# 
   194  001C                     	;# 
   195  001D                     	;# 
   196  001E                     	;# 
   197  001F                     	;# 
   198  0081                     	;# 
   199  0085                     	;# 
   200  0086                     	;# 
   201  0087                     	;# 
   202  0088                     	;# 
   203  0089                     	;# 
   204  008C                     	;# 
   205  008D                     	;# 
   206  008E                     	;# 
   207  0091                     	;# 
   208  0092                     	;# 
   209  0093                     	;# 
   210  0094                     	;# 
   211  0098                     	;# 
   212  0099                     	;# 
   213  009C                     	;# 
   214  009D                     	;# 
   215  009E                     	;# 
   216  009F                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0000                     	;# 
   284  0001                     	;# 
   285  0002                     	;# 
   286  0003                     	;# 
   287  0004                     	;# 
   288  0005                     	;# 
   289  0006                     	;# 
   290  0007                     	;# 
   291  0008                     	;# 
   292  0009                     	;# 
   293  000A                     	;# 
   294  000B                     	;# 
   295  000C                     	;# 
   296  000D                     	;# 
   297  000E                     	;# 
   298  000E                     	;# 
   299  000F                     	;# 
   300  0010                     	;# 
   301  0011                     	;# 
   302  0012                     	;# 
   303  0013                     	;# 
   304  0014                     	;# 
   305  0015                     	;# 
   306  0015                     	;# 
   307  0016                     	;# 
   308  0017                     	;# 
   309  0018                     	;# 
   310  0019                     	;# 
   311  001A                     	;# 
   312  001B                     	;# 
   313  001B                     	;# 
   314  001C                     	;# 
   315  001D                     	;# 
   316  001E                     	;# 
   317  001F                     	;# 
   318  0081                     	;# 
   319  0085                     	;# 
   320  0086                     	;# 
   321  0087                     	;# 
   322  0088                     	;# 
   323  0089                     	;# 
   324  008C                     	;# 
   325  008D                     	;# 
   326  008E                     	;# 
   327  0091                     	;# 
   328  0092                     	;# 
   329  0093                     	;# 
   330  0094                     	;# 
   331  0098                     	;# 
   332  0099                     	;# 
   333  009C                     	;# 
   334  009D                     	;# 
   335  009E                     	;# 
   336  009F                     	;# 
   337  010C                     	;# 
   338  010D                     	;# 
   339  010E                     	;# 
   340  010F                     	;# 
   341  018C                     	;# 
   342  018D                     	;# 
   343  0000                     	;# 
   344  0001                     	;# 
   345  0002                     	;# 
   346  0003                     	;# 
   347  0004                     	;# 
   348  0005                     	;# 
   349  0006                     	;# 
   350  0007                     	;# 
   351  0008                     	;# 
   352  0009                     	;# 
   353  000A                     	;# 
   354  000B                     	;# 
   355  000C                     	;# 
   356  000D                     	;# 
   357  000E                     	;# 
   358  000E                     	;# 
   359  000F                     	;# 
   360  0010                     	;# 
   361  0011                     	;# 
   362  0012                     	;# 
   363  0013                     	;# 
   364  0014                     	;# 
   365  0015                     	;# 
   366  0015                     	;# 
   367  0016                     	;# 
   368  0017                     	;# 
   369  0018                     	;# 
   370  0019                     	;# 
   371  001A                     	;# 
   372  001B                     	;# 
   373  001B                     	;# 
   374  001C                     	;# 
   375  001D                     	;# 
   376  001E                     	;# 
   377  001F                     	;# 
   378  0081                     	;# 
   379  0085                     	;# 
   380  0086                     	;# 
   381  0087                     	;# 
   382  0088                     	;# 
   383  0089                     	;# 
   384  008C                     	;# 
   385  008D                     	;# 
   386  008E                     	;# 
   387  0091                     	;# 
   388  0092                     	;# 
   389  0093                     	;# 
   390  0094                     	;# 
   391  0098                     	;# 
   392  0099                     	;# 
   393  009C                     	;# 
   394  009D                     	;# 
   395  009E                     	;# 
   396  009F                     	;# 
   397  010C                     	;# 
   398  010D                     	;# 
   399  010E                     	;# 
   400  010F                     	;# 
   401  018C                     	;# 
   402  018D                     	;# 
   403  0000                     	;# 
   404  0001                     	;# 
   405  0002                     	;# 
   406  0003                     	;# 
   407  0004                     	;# 
   408  0005                     	;# 
   409  0006                     	;# 
   410  0007                     	;# 
   411  0008                     	;# 
   412  0009                     	;# 
   413  000A                     	;# 
   414  000B                     	;# 
   415  000C                     	;# 
   416  000D                     	;# 
   417  000E                     	;# 
   418  000E                     	;# 
   419  000F                     	;# 
   420  0010                     	;# 
   421  0011                     	;# 
   422  0012                     	;# 
   423  0013                     	;# 
   424  0014                     	;# 
   425  0015                     	;# 
   426  0015                     	;# 
   427  0016                     	;# 
   428  0017                     	;# 
   429  0018                     	;# 
   430  0019                     	;# 
   431  001A                     	;# 
   432  001B                     	;# 
   433  001B                     	;# 
   434  001C                     	;# 
   435  001D                     	;# 
   436  001E                     	;# 
   437  001F                     	;# 
   438  0081                     	;# 
   439  0085                     	;# 
   440  0086                     	;# 
   441  0087                     	;# 
   442  0088                     	;# 
   443  0089                     	;# 
   444  008C                     	;# 
   445  008D                     	;# 
   446  008E                     	;# 
   447  0091                     	;# 
   448  0092                     	;# 
   449  0093                     	;# 
   450  0094                     	;# 
   451  0098                     	;# 
   452  0099                     	;# 
   453  009C                     	;# 
   454  009D                     	;# 
   455  009E                     	;# 
   456  009F                     	;# 
   457  010C                     	;# 
   458  010D                     	;# 
   459  010E                     	;# 
   460  010F                     	;# 
   461  018C                     	;# 
   462  018D                     	;# 
   463  0000                     	;# 
   464  0001                     	;# 
   465  0002                     	;# 
   466  0003                     	;# 
   467  0004                     	;# 
   468  0005                     	;# 
   469  0006                     	;# 
   470  0007                     	;# 
   471  0008                     	;# 
   472  0009                     	;# 
   473  000A                     	;# 
   474  000B                     	;# 
   475  000C                     	;# 
   476  000D                     	;# 
   477  000E                     	;# 
   478  000E                     	;# 
   479  000F                     	;# 
   480  0010                     	;# 
   481  0011                     	;# 
   482  0012                     	;# 
   483  0013                     	;# 
   484  0014                     	;# 
   485  0015                     	;# 
   486  0015                     	;# 
   487  0016                     	;# 
   488  0017                     	;# 
   489  0018                     	;# 
   490  0019                     	;# 
   491  001A                     	;# 
   492  001B                     	;# 
   493  001B                     	;# 
   494  001C                     	;# 
   495  001D                     	;# 
   496  001E                     	;# 
   497  001F                     	;# 
   498  0081                     	;# 
   499  0085                     	;# 
   500  0086                     	;# 
   501  0087                     	;# 
   502  0088                     	;# 
   503  0089                     	;# 
   504  008C                     	;# 
   505  008D                     	;# 
   506  008E                     	;# 
   507  0091                     	;# 
   508  0092                     	;# 
   509  0093                     	;# 
   510  0094                     	;# 
   511  0098                     	;# 
   512  0099                     	;# 
   513  009C                     	;# 
   514  009D                     	;# 
   515  009E                     	;# 
   516  009F                     	;# 
   517  010C                     	;# 
   518  010D                     	;# 
   519  010E                     	;# 
   520  010F                     	;# 
   521  018C                     	;# 
   522  018D                     	;# 
   523  0000                     	;# 
   524  0001                     	;# 
   525  0002                     	;# 
   526  0003                     	;# 
   527  0004                     	;# 
   528  0005                     	;# 
   529  0006                     	;# 
   530  0007                     	;# 
   531  0008                     	;# 
   532  0009                     	;# 
   533  000A                     	;# 
   534  000B                     	;# 
   535  000C                     	;# 
   536  000D                     	;# 
   537  000E                     	;# 
   538  000E                     	;# 
   539  000F                     	;# 
   540  0010                     	;# 
   541  0011                     	;# 
   542  0012                     	;# 
   543  0013                     	;# 
   544  0014                     	;# 
   545  0015                     	;# 
   546  0015                     	;# 
   547  0016                     	;# 
   548  0017                     	;# 
   549  0018                     	;# 
   550  0019                     	;# 
   551  001A                     	;# 
   552  001B                     	;# 
   553  001B                     	;# 
   554  001C                     	;# 
   555  001D                     	;# 
   556  001E                     	;# 
   557  001F                     	;# 
   558  0081                     	;# 
   559  0085                     	;# 
   560  0086                     	;# 
   561  0087                     	;# 
   562  0088                     	;# 
   563  0089                     	;# 
   564  008C                     	;# 
   565  008D                     	;# 
   566  008E                     	;# 
   567  0091                     	;# 
   568  0092                     	;# 
   569  0093                     	;# 
   570  0094                     	;# 
   571  0098                     	;# 
   572  0099                     	;# 
   573  009C                     	;# 
   574  009D                     	;# 
   575  009E                     	;# 
   576  009F                     	;# 
   577  010C                     	;# 
   578  010D                     	;# 
   579  010E                     	;# 
   580  010F                     	;# 
   581  018C                     	;# 
   582  018D                     	;# 
   583  0000                     	;# 
   584  0001                     	;# 
   585  0002                     	;# 
   586  0003                     	;# 
   587  0004                     	;# 
   588  0005                     	;# 
   589  0006                     	;# 
   590  0007                     	;# 
   591  0008                     	;# 
   592  0009                     	;# 
   593  000A                     	;# 
   594  000B                     	;# 
   595  000C                     	;# 
   596  000D                     	;# 
   597  000E                     	;# 
   598  000E                     	;# 
   599  000F                     	;# 
   600  0010                     	;# 
   601  0011                     	;# 
   602  0012                     	;# 
   603  0013                     	;# 
   604  0014                     	;# 
   605  0015                     	;# 
   606  0015                     	;# 
   607  0016                     	;# 
   608  0017                     	;# 
   609  0018                     	;# 
   610  0019                     	;# 
   611  001A                     	;# 
   612  001B                     	;# 
   613  001B                     	;# 
   614  001C                     	;# 
   615  001D                     	;# 
   616  001E                     	;# 
   617  001F                     	;# 
   618  0081                     	;# 
   619  0085                     	;# 
   620  0086                     	;# 
   621  0087                     	;# 
   622  0088                     	;# 
   623  0089                     	;# 
   624  008C                     	;# 
   625  008D                     	;# 
   626  008E                     	;# 
   627  0091                     	;# 
   628  0092                     	;# 
   629  0093                     	;# 
   630  0094                     	;# 
   631  0098                     	;# 
   632  0099                     	;# 
   633  009C                     	;# 
   634  009D                     	;# 
   635  009E                     	;# 
   636  009F                     	;# 
   637  010C                     	;# 
   638  010D                     	;# 
   639  010E                     	;# 
   640  010F                     	;# 
   641  018C                     	;# 
   642  018D                     	;# 
   643  0000                     	;# 
   644  0001                     	;# 
   645  0002                     	;# 
   646  0003                     	;# 
   647  0004                     	;# 
   648  0005                     	;# 
   649  0006                     	;# 
   650  0007                     	;# 
   651  0008                     	;# 
   652  0009                     	;# 
   653  000A                     	;# 
   654  000B                     	;# 
   655  000C                     	;# 
   656  000D                     	;# 
   657  000E                     	;# 
   658  000E                     	;# 
   659  000F                     	;# 
   660  0010                     	;# 
   661  0011                     	;# 
   662  0012                     	;# 
   663  0013                     	;# 
   664  0014                     	;# 
   665  0015                     	;# 
   666  0015                     	;# 
   667  0016                     	;# 
   668  0017                     	;# 
   669  0018                     	;# 
   670  0019                     	;# 
   671  001A                     	;# 
   672  001B                     	;# 
   673  001B                     	;# 
   674  001C                     	;# 
   675  001D                     	;# 
   676  001E                     	;# 
   677  001F                     	;# 
   678  0081                     	;# 
   679  0085                     	;# 
   680  0086                     	;# 
   681  0087                     	;# 
   682  0088                     	;# 
   683  0089                     	;# 
   684  008C                     	;# 
   685  008D                     	;# 
   686  008E                     	;# 
   687  0091                     	;# 
   688  0092                     	;# 
   689  0093                     	;# 
   690  0094                     	;# 
   691  0098                     	;# 
   692  0099                     	;# 
   693  009C                     	;# 
   694  009D                     	;# 
   695  009E                     	;# 
   696  009F                     	;# 
   697  010C                     	;# 
   698  010D                     	;# 
   699  010E                     	;# 
   700  010F                     	;# 
   701  018C                     	;# 
   702  018D                     	;# 
   703                           
   704                           	psect	idataBANK1
   705  086A                     __pidataBANK1:
   706                           
   707                           ;initializer for _SSD_code
   708  086A  343F               	retlw	63
   709  086B  3406               	retlw	6
   710  086C  345B               	retlw	91
   711  086D  344F               	retlw	79
   712  086E  3466               	retlw	102
   713  086F  346D               	retlw	109
   714  0870  347D               	retlw	125
   715  0871  3407               	retlw	7
   716  0872  347F               	retlw	127
   717  0873  346F               	retlw	111
   718  000E                     _TMR1	set	14
   719  0008                     _PORTD	set	8
   720  0005                     _PORTA	set	5
   721  001E                     _ADRESH	set	30
   722  001F                     _ADCON0	set	31
   723  0006                     _PORTB	set	6
   724  0007                     _PORTC	set	7
   725  0013                     _SSPBUF	set	19
   726  0014                     _SSPCON	set	20
   727  0059                     _INTF	set	89
   728  005C                     _INTE	set	92
   729  0080                     _TMR1ON	set	128
   730  0060                     _TMR1IF	set	96
   731  0085                     _T1CKPS1	set	133
   732  0084                     _T1CKPS0	set	132
   733  0066                     _ADIF	set	102
   734  00F8                     _ADON	set	248
   735  0063                     _SSPIF	set	99
   736  005E                     _PEIE	set	94
   737  005F                     _GIE	set	95
   738  00A5                     _SSPEN	set	165
   739  0088                     _TRISD	set	136
   740  0085                     _TRISA	set	133
   741  009E                     _ADRESL	set	158
   742  009F                     _ADCON1	set	159
   743  0086                     _TRISB	set	134
   744  0087                     _TRISC	set	135
   745  0093                     _SSPADD	set	147
   746  0094                     _SSPSTAT	set	148
   747  0091                     _SSPCON2	set	145
   748  040E                     _INTEDG	set	1038
   749  0460                     _TMR1IE	set	1120
   750  040D                     _T0CS	set	1037
   751  0466                     _ADIE	set	1126
   752  048B                     _RCEN	set	1163
   753  048E                     _ACKSTAT	set	1166
   754  048C                     _ACKEN	set	1164
   755  048D                     _ACKDT	set	1165
   756  0489                     _RSEN	set	1161
   757  048A                     _PEN	set	1162
   758  0488                     _SEN	set	1160
   759  0463                     _SSPIE	set	1123
   760                           
   761                           	psect	cinit
   762  0015                     start_initialization:	
   763                           ; #config settings
   764                           
   765  0015                     __initialization:
   766                           
   767                           ; Initialize objects allocated to BANK1
   768  0015  1383               	bcf	3,7	;select IRP bank0
   769  0016  30D4               	movlw	low (__pdataBANK1+10)
   770  0017  00FD               	movwf	btemp+-1
   771  0018  3008               	movlw	high __pidataBANK1
   772  0019  00FE               	movwf	btemp
   773  001A  306A               	movlw	low __pidataBANK1
   774  001B  00FF               	movwf	btemp+1
   775  001C  30CA               	movlw	low __pdataBANK1
   776  001D  0084               	movwf	4
   777  001E  120A  158A  20DA  120A  118A  	fcall	init_ram0
   778                           
   779                           ; Clear objects allocated to BANK1
   780  0023  30BD               	movlw	low __pbssBANK1
   781  0024  0084               	movwf	4
   782  0025  30CA               	movlw	low (__pbssBANK1+13)
   783  0026  120A  158A  2017  120A  118A  	fcall	clear_ram0
   784                           
   785                           ; Clear objects allocated to BANK0
   786  002B  304C               	movlw	low __pbssBANK0
   787  002C  0084               	movwf	4
   788  002D  3060               	movlw	low (__pbssBANK0+20)
   789  002E  120A  158A  2017  120A  118A  	fcall	clear_ram0
   790  0033                     end_of_initialization:	
   791                           ;End of C runtime variable initialization code
   792                           
   793  0033                     __end_of__initialization:
   794  0033  0183               	clrf	3
   795  0034  120A  158A  2A27   	ljmp	_main	;jump to C main() function
   796                           
   797                           	psect	bssBANK0
   798  004C                     __pbssBANK0:
   799  004C                     _SW_State:
   800  004C                     	ds	3
   801  004F                     _SW_StateControl:
   802  004F                     	ds	3
   803  0052                     ISR@overflow_count:
   804  0052                     	ds	1
   805  0053                     _TempReading_count:
   806  0053                     	ds	1
   807  0054                     _NoPress_Sec_count:
   808  0054                     	ds	1
   809  0055                     _EWH_State:
   810  0055                     	ds	1
   811  0056                     _ReadingBuffer:
   812  0056                     	ds	10
   813                           
   814                           	psect	bssBANK1
   815  00BD                     __pbssBANK1:
   816  00BD                     _EWH_Events:
   817  00BD                     	ds	4
   818  00C1                     _Devices_State:
   819  00C1                     	ds	3
   820  00C4                     _TempavgReading:
   821  00C4                     	ds	1
   822  00C5                     _ReadingBufferFull:
   823  00C5                     	ds	1
   824  00C6                     _SSD_Blink_flag:
   825  00C6                     	ds	1
   826  00C7                     _current_Temp:
   827  00C7                     	ds	1
   828  00C8                     _set_Temp:
   829  00C8                     	ds	1
   830  00C9                     _EWH_Mode:
   831  00C9                     	ds	1
   832                           
   833                           	psect	dataBANK1
   834  00CA                     __pdataBANK1:
   835  00CA                     _SSD_code:
   836  00CA                     	ds	10
   837                           
   838                           	psect	inittext
   839  08D6                     init_fetch0:	
   840                           ;	Called with low address in FSR and high address in W
   841                           
   842  08D6  087E               	movf	btemp,w
   843  08D7  008A               	movwf	10
   844  08D8  087F               	movf	btemp+1,w
   845  08D9  0082               	movwf	2
   846  08DA                     init_ram0:	
   847                           ;Called with:
   848                           ;	high address of idata address in btemp 
   849                           ;	low address of idata address in btemp+1 
   850                           ;	low address of data in FSR
   851                           ;	high address + 1 of data in btemp-1
   852                           
   853  08DA  120A  158A  20D6  120A  158A  	fcall	init_fetch0
   854  08DF  0080               	movwf	0
   855  08E0  0A84               	incf	4,f
   856  08E1  0804               	movf	4,w
   857  08E2  067D               	xorwf	btemp+-1,w
   858  08E3  1903               	btfsc	3,2
   859  08E4  3400               	retlw	0
   860  08E5  0AFF               	incf	btemp+1,f
   861  08E6  1903               	btfsc	3,2
   862  08E7  0AFE               	incf	btemp,f
   863  08E8  28DA               	goto	init_ram0
   864                           
   865                           	psect	clrtext
   866  0817                     clear_ram0:	
   867                           ;	Called with FSR containing the base address, and
   868                           ;	W with the last address+1
   869                           
   870  0817  0064               	clrwdt	;clear the watchdog before getting into this loop
   871  0818                     clrloop0:
   872  0818  0180               	clrf	0	;clear RAM location pointed to by FSR
   873  0819  0A84               	incf	4,f	;increment pointer
   874  081A  0604               	xorwf	4,w	;XOR with final address
   875  081B  1903               	btfsc	3,2	;have we reached the end yet?
   876  081C  3400               	retlw	0	;all done for this memory range, return
   877  081D  0604               	xorwf	4,w	;XOR again to restore value
   878  081E  2818               	goto	clrloop0	;do the next byte
   879                           
   880                           	psect	cstackBANK1
   881  00A0                     __pcstackBANK1:
   882  00A0                     ??_I2C_Master_Send_Start:
   883  00A0                     ??_I2C_Master_Send_RepeatedStart:	
   884                           ; 1 bytes @ 0x0
   885                           
   886  00A0                     ??_I2C_Master_WriteByte:	
   887                           ; 1 bytes @ 0x0
   888                           
   889  00A0                     ??_I2C_Master_Send_Stop:	
   890                           ; 1 bytes @ 0x0
   891                           
   892  00A0                     ??_I2C_Master_ReadByte:	
   893                           ; 1 bytes @ 0x0
   894                           
   895  00A0                     ??_EWH_ClearEvent:	
   896                           ; 1 bytes @ 0x0
   897                           
   898  00A0                     ??_EWH_SetMode:	
   899                           ; 1 bytes @ 0x0
   900                           
   901  00A0                     ??_EWH_SetEvent:	
   902                           ; 1 bytes @ 0x0
   903                           
   904  00A0                     ??_I2C_Wait_IDLE:	
   905                           ; 1 bytes @ 0x0
   906                           
   907  00A0                     ??_I2C_Master_Send_ACK:	
   908                           ; 1 bytes @ 0x0
   909                           
   910  00A0                     ??_I2C_Master_Send_NACK:	
   911                           ; 1 bytes @ 0x0
   912                           
   913  00A0                     ??_DD_Init:	
   914                           ; 1 bytes @ 0x0
   915                           
   916  00A0                     ?_DD_SetState:	
   917                           ; 1 bytes @ 0x0
   918                           
   919  00A0                     ??_ADC_Init:	
   920                           ; 1 bytes @ 0x0
   921                           
   922  00A0                     ??_TMR1_Init:	
   923                           ; 1 bytes @ 0x0
   924                           
   925  00A0                     ??_TMR1_Start:	
   926                           ; 1 bytes @ 0x0
   927                           
   928  00A0                     ??_TMR1_Stop:	
   929                           ; 1 bytes @ 0x0
   930                           
   931  00A0                     ??_SW_Init:	
   932                           ; 1 bytes @ 0x0
   933                           
   934  00A0                     ?_SSD_config:	
   935                           ; 1 bytes @ 0x0
   936                           
   937  00A0                     ?___awdiv:	
   938                           ; 1 bytes @ 0x0
   939                           
   940  00A0                     ?___lwmod:	
   941                           ; 2 bytes @ 0x0
   942                           
   943  00A0                     ?___lldiv:	
   944                           ; 2 bytes @ 0x0
   945                           
   946  00A0                     I2C_Master_WriteByte@Data:	
   947                           ; 4 bytes @ 0x0
   948                           
   949  00A0                     DD_SetState@state:	
   950                           ; 1 bytes @ 0x0
   951                           
   952  00A0                     EWH_SetMode@new_mode:	
   953                           ; 1 bytes @ 0x0
   954                           
   955  00A0                     EWH_SetEvent@Event_index:	
   956                           ; 1 bytes @ 0x0
   957                           
   958  00A0                     EWH_ClearEvent@Event_index:	
   959                           ; 1 bytes @ 0x0
   960                           
   961  00A0                     SSD_config@SSD_state:	
   962                           ; 1 bytes @ 0x0
   963                           
   964  00A0                     ___awdiv@divisor:	
   965                           ; 1 bytes @ 0x0
   966                           
   967  00A0                     ___lwmod@divisor:	
   968                           ; 2 bytes @ 0x0
   969                           
   970  00A0                     ___lldiv@divisor:	
   971                           ; 2 bytes @ 0x0
   972                           
   973                           
   974                           ; 4 bytes @ 0x0
   975  00A0                     	ds	1
   976  00A1                     ?_EEPROM_WriteByte:
   977  00A1                     ??_DD_SetState:	
   978                           ; 1 bytes @ 0x1
   979                           
   980  00A1                     ??_SSD_config:	
   981                           ; 1 bytes @ 0x1
   982                           
   983  00A1                     I2C_Master_ReadByte@Read_State:	
   984                           ; 1 bytes @ 0x1
   985                           
   986  00A1                     EEPROM_WriteByte@address:	
   987                           ; 1 bytes @ 0x1
   988                           
   989                           
   990                           ; 2 bytes @ 0x1
   991  00A1                     	ds	1
   992  00A2                     ?_EEPROM_ReadByte:
   993  00A2                     ADC_Init@config:	
   994                           ; 1 bytes @ 0x2
   995                           
   996  00A2                     TMR1_Init@config:	
   997                           ; 1 bytes @ 0x2
   998                           
   999  00A2                     EEPROM_ReadByte@address:	
  1000                           ; 1 bytes @ 0x2
  1001                           
  1002  00A2                     ___awdiv@dividend:	
  1003                           ; 2 bytes @ 0x2
  1004                           
  1005  00A2                     ___lwmod@dividend:	
  1006                           ; 2 bytes @ 0x2
  1007                           
  1008                           
  1009                           ; 2 bytes @ 0x2
  1010  00A2                     	ds	1
  1011  00A3                     EEPROM_WriteByte@data:
  1012  00A3                     DD_SetState@device:	
  1013                           ; 1 bytes @ 0x3
  1014                           
  1015  00A3                     SSD_config@ID:	
  1016                           ; 1 bytes @ 0x3
  1017                           
  1018                           
  1019                           ; 1 bytes @ 0x3
  1020  00A3                     	ds	1
  1021  00A4                     ??_SSD_OFF:
  1022  00A4                     ??_EEPROM_WriteByte:	
  1023                           ; 1 bytes @ 0x4
  1024                           
  1025  00A4                     ??_EEPROM_ReadByte:	
  1026                           ; 1 bytes @ 0x4
  1027                           
  1028  00A4                     ??___awdiv:	
  1029                           ; 1 bytes @ 0x4
  1030                           
  1031  00A4                     ??___lwmod:	
  1032                           ; 1 bytes @ 0x4
  1033                           
  1034  00A4                     SSD_OFF@ID:	
  1035                           ; 1 bytes @ 0x4
  1036                           
  1037  00A4                     ___awdiv@counter:	
  1038                           ; 1 bytes @ 0x4
  1039                           
  1040  00A4                     ___lwmod@counter:	
  1041                           ; 1 bytes @ 0x4
  1042                           
  1043  00A4                     ___lldiv@dividend:	
  1044                           ; 1 bytes @ 0x4
  1045                           
  1046                           
  1047                           ; 4 bytes @ 0x4
  1048  00A4                     	ds	1
  1049  00A5                     ??_EWH_Sleep_Mode:
  1050  00A5                     ??_EWH_SSD_OFF:	
  1051                           ; 1 bytes @ 0x5
  1052                           
  1053  00A5                     ___awdiv@sign:	
  1054                           ; 1 bytes @ 0x5
  1055                           
  1056                           
  1057                           ; 1 bytes @ 0x5
  1058  00A5                     	ds	1
  1059  00A6                     ??_EWH_EEPROM_Update:
  1060  00A6                     ??_EWH_EEPROM_Init:	
  1061                           ; 1 bytes @ 0x6
  1062                           
  1063  00A6                     EEPROM_ReadByte@data:	
  1064                           ; 1 bytes @ 0x6
  1065                           
  1066  00A6                     EWH_EEPROM_Update@newSetTemp:	
  1067                           ; 1 bytes @ 0x6
  1068                           
  1069  00A6                     ___awdiv@quotient:	
  1070                           ; 1 bytes @ 0x6
  1071                           
  1072                           
  1073                           ; 2 bytes @ 0x6
  1074  00A6                     	ds	1
  1075  00A7                     ??_EWH_EEPROM_Read:
  1076                           
  1077                           ; 1 bytes @ 0x7
  1078  00A7                     	ds	1
  1079  00A8                     ?_SSD_Write:
  1080  00A8                     ??___lldiv:	
  1081                           ; 1 bytes @ 0x8
  1082                           
  1083  00A8                     SSD_Write@Number:	
  1084                           ; 1 bytes @ 0x8
  1085                           
  1086                           
  1087                           ; 1 bytes @ 0x8
  1088  00A8                     	ds	1
  1089  00A9                     ??_SSD_Write:
  1090  00A9                     SSD_Write@ID:	
  1091                           ; 1 bytes @ 0x9
  1092                           
  1093  00A9                     ___lldiv@quotient:	
  1094                           ; 1 bytes @ 0x9
  1095                           
  1096                           
  1097                           ; 4 bytes @ 0x9
  1098  00A9                     	ds	1
  1099  00AA                     ?_EWH_SSD_Update:
  1100  00AA                     EWH_SSD_Update@temp:	
  1101                           ; 1 bytes @ 0xA
  1102                           
  1103                           
  1104                           ; 2 bytes @ 0xA
  1105  00AA                     	ds	2
  1106  00AC                     ??_EWH_SSD_Update:
  1107                           
  1108                           ; 1 bytes @ 0xC
  1109  00AC                     	ds	1
  1110  00AD                     ___lldiv@counter:
  1111                           
  1112                           ; 1 bytes @ 0xD
  1113  00AD                     	ds	1
  1114  00AE                     ??_EWH_WakeUP_Mode:
  1115  00AE                     ??_EWH_Operating_Mode:	
  1116                           ; 1 bytes @ 0xE
  1117                           
  1118  00AE                     ??_EWH_SetTemp_Mode:	
  1119                           ; 1 bytes @ 0xE
  1120                           
  1121  00AE                     ??_I2C_Init:	
  1122                           ; 1 bytes @ 0xE
  1123                           
  1124  00AE                     I2C_Init@i2c_config:	
  1125                           ; 1 bytes @ 0xE
  1126                           
  1127                           
  1128                           ; 1 bytes @ 0xE
  1129  00AE                     	ds	1
  1130  00AF                     ??_EWH_Init:
  1131  00AF                     EWH_Init@TMR1_cfg:	
  1132                           ; 1 bytes @ 0xF
  1133                           
  1134                           
  1135                           ; 2 bytes @ 0xF
  1136  00AF                     	ds	2
  1137  00B1                     EWH_Init@i2c_config:
  1138                           
  1139                           ; 6 bytes @ 0x11
  1140  00B1                     	ds	6
  1141  00B7                     EWH_Init@adc_config:
  1142                           
  1143                           ; 4 bytes @ 0x17
  1144  00B7                     	ds	4
  1145  00BB                     ??_main:
  1146                           
  1147                           ; 1 bytes @ 0x1B
  1148  00BB                     	ds	2
  1149                           
  1150                           	psect	cstackCOMMON
  1151  0070                     __pcstackCOMMON:
  1152  0070                     ?_I2C_Master_Send_Start:
  1153  0070                     ?_I2C_Master_Send_RepeatedStart:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156  0070                     ?_I2C_Master_WriteByte:	
  1157                           ; 1 bytes @ 0x0
  1158                           
  1159  0070                     ?_I2C_Master_Send_Stop:	
  1160                           ; 1 bytes @ 0x0
  1161                           
  1162  0070                     ?_I2C_Master_ReadByte:	
  1163                           ; 1 bytes @ 0x0
  1164                           
  1165  0070                     ?_EWH_Init:	
  1166                           ; 1 bytes @ 0x0
  1167                           
  1168  0070                     ?_EWH_Sleep_Mode:	
  1169                           ; 1 bytes @ 0x0
  1170                           
  1171  0070                     ?_EWH_WakeUP_Mode:	
  1172                           ; 1 bytes @ 0x0
  1173                           
  1174  0070                     ?_EWH_Operating_Mode:	
  1175                           ; 1 bytes @ 0x0
  1176                           
  1177  0070                     ?_EWH_SetTemp_Mode:	
  1178                           ; 1 bytes @ 0x0
  1179                           
  1180  0070                     ?_EWH_ClearEvent:	
  1181                           ; 1 bytes @ 0x0
  1182                           
  1183  0070                     ?_EWH_SSD_OFF:	
  1184                           ; 1 bytes @ 0x0
  1185                           
  1186  0070                     ?_EWH_EEPROM_Read:	
  1187                           ; 1 bytes @ 0x0
  1188                           
  1189  0070                     ?_EWH_SetMode:	
  1190                           ; 1 bytes @ 0x0
  1191                           
  1192  0070                     ?_EWH_EEPROM_Update:	
  1193                           ; 1 bytes @ 0x0
  1194                           
  1195  0070                     ?_EWH_SetEvent:	
  1196                           ; 1 bytes @ 0x0
  1197                           
  1198  0070                     ?_EWH_EEPROM_Init:	
  1199                           ; 1 bytes @ 0x0
  1200                           
  1201  0070                     ?_SSD_OFF:	
  1202                           ; 1 bytes @ 0x0
  1203                           
  1204  0070                     ?_I2C_Init:	
  1205                           ; 1 bytes @ 0x0
  1206                           
  1207  0070                     ?_I2C_Wait_IDLE:	
  1208                           ; 1 bytes @ 0x0
  1209                           
  1210  0070                     ?_I2C_Master_Send_ACK:	
  1211                           ; 1 bytes @ 0x0
  1212                           
  1213  0070                     ?_I2C_Master_Send_NACK:	
  1214                           ; 1 bytes @ 0x0
  1215                           
  1216  0070                     ?_main:	
  1217                           ; 1 bytes @ 0x0
  1218                           
  1219  0070                     ?_DD_Init:	
  1220                           ; 1 bytes @ 0x0
  1221                           
  1222  0070                     ?_DD_GetState:	
  1223                           ; 1 bytes @ 0x0
  1224                           
  1225  0070                     ??_DD_GetState:	
  1226                           ; 1 bytes @ 0x0
  1227                           
  1228  0070                     ?_ADC_Init:	
  1229                           ; 1 bytes @ 0x0
  1230                           
  1231  0070                     ?_TMR1_Init:	
  1232                           ; 1 bytes @ 0x0
  1233                           
  1234  0070                     ?_TMR1_Start:	
  1235                           ; 1 bytes @ 0x0
  1236                           
  1237  0070                     ?_TMR1_Stop:	
  1238                           ; 1 bytes @ 0x0
  1239                           
  1240  0070                     ?_SW_Init:	
  1241                           ; 1 bytes @ 0x0
  1242                           
  1243  0070                     ?_EWH_TempUpdate:	
  1244                           ; 1 bytes @ 0x0
  1245                           
  1246  0070                     ?_ISR:	
  1247                           ; 1 bytes @ 0x0
  1248                           
  1249  0070                     ?i1_EWH_SetMode:	
  1250                           ; 1 bytes @ 0x0
  1251                           
  1252  0070                     ??i1_EWH_SetMode:	
  1253                           ; 1 bytes @ 0x0
  1254                           
  1255  0070                     ?i1_EWH_SetEvent:	
  1256                           ; 1 bytes @ 0x0
  1257                           
  1258  0070                     ??i1_EWH_SetEvent:	
  1259                           ; 1 bytes @ 0x0
  1260                           
  1261  0070                     ?__Umul8_16:	
  1262                           ; 1 bytes @ 0x0
  1263                           
  1264  0070                     ?_ADC_ReadChannel:	
  1265                           ; 2 bytes @ 0x0
  1266                           
  1267  0070                     ?___awmod:	
  1268                           ; 2 bytes @ 0x0
  1269                           
  1270  0070                     ?___lwdiv:	
  1271                           ; 2 bytes @ 0x0
  1272                           
  1273  0070                     ?___xxtofl:	
  1274                           ; 2 bytes @ 0x0
  1275                           
  1276  0070                     __Umul8_16@multiplicand:	
  1277                           ; 4 bytes @ 0x0
  1278                           
  1279  0070                     i1EWH_SetMode@new_mode:	
  1280                           ; 1 bytes @ 0x0
  1281                           
  1282  0070                     i1EWH_SetEvent@Event_index:	
  1283                           ; 1 bytes @ 0x0
  1284                           
  1285  0070                     ___awmod@divisor:	
  1286                           ; 1 bytes @ 0x0
  1287                           
  1288  0070                     ___lwdiv@divisor:	
  1289                           ; 2 bytes @ 0x0
  1290                           
  1291  0070                     ___xxtofl@val:	
  1292                           ; 2 bytes @ 0x0
  1293                           
  1294                           
  1295                           ; 4 bytes @ 0x0
  1296  0070                     	ds	2
  1297  0072                     ??__Umul8_16:
  1298  0072                     ??_ADC_ReadChannel:	
  1299                           ; 1 bytes @ 0x2
  1300                           
  1301  0072                     DD_GetState@device:	
  1302                           ; 1 bytes @ 0x2
  1303                           
  1304  0072                     ___awmod@dividend:	
  1305                           ; 1 bytes @ 0x2
  1306                           
  1307  0072                     ___lwdiv@dividend:	
  1308                           ; 2 bytes @ 0x2
  1309                           
  1310                           
  1311                           ; 2 bytes @ 0x2
  1312  0072                     	ds	1
  1313  0073                     ADC_ReadChannel@result:
  1314                           
  1315                           ; 2 bytes @ 0x3
  1316  0073                     	ds	1
  1317  0074                     ??___awmod:
  1318  0074                     ??___lwdiv:	
  1319                           ; 1 bytes @ 0x4
  1320                           
  1321  0074                     ??___xxtofl:	
  1322                           ; 1 bytes @ 0x4
  1323                           
  1324  0074                     ___awmod@counter:	
  1325                           ; 1 bytes @ 0x4
  1326                           
  1327  0074                     ___lwdiv@quotient:	
  1328                           ; 1 bytes @ 0x4
  1329                           
  1330  0074                     __Umul8_16@product:	
  1331                           ; 2 bytes @ 0x4
  1332                           
  1333                           
  1334                           ; 2 bytes @ 0x4
  1335  0074                     	ds	1
  1336  0075                     ADC_ReadChannel@channel:
  1337  0075                     ___awmod@sign:	
  1338                           ; 1 bytes @ 0x5
  1339                           
  1340                           
  1341                           ; 1 bytes @ 0x5
  1342  0075                     	ds	1
  1343  0076                     ___lwdiv@counter:
  1344  0076                     __Umul8_16@word_mpld:	
  1345                           ; 1 bytes @ 0x6
  1346                           
  1347                           
  1348                           ; 2 bytes @ 0x6
  1349  0076                     	ds	1
  1350  0077                     ?_EWH_getAvrgTempReading:
  1351  0077                     EWH_getAvrgTempReading@length:	
  1352                           ; 1 bytes @ 0x7
  1353                           
  1354                           
  1355                           ; 1 bytes @ 0x7
  1356  0077                     	ds	1
  1357  0078                     ??_EWH_getAvrgTempReading:
  1358  0078                     __Umul8_16@multiplier:	
  1359                           ; 1 bytes @ 0x8
  1360                           
  1361  0078                     ___xxtofl@sign:	
  1362                           ; 1 bytes @ 0x8
  1363                           
  1364                           
  1365                           ; 1 bytes @ 0x8
  1366  0078                     	ds	1
  1367  0079                     ___xxtofl@exp:
  1368                           
  1369                           ; 1 bytes @ 0x9
  1370  0079                     	ds	1
  1371  007A                     ___xxtofl@arg:
  1372                           
  1373                           ; 4 bytes @ 0xA
  1374  007A                     	ds	4
  1375                           
  1376                           	psect	cstackBANK0
  1377  0020                     __pcstackBANK0:
  1378  0020                     ?___flmul:
  1379  0020                     EWH_getAvrgTempReading@sumOfReadings:	
  1380                           ; 4 bytes @ 0x0
  1381                           
  1382  0020                     ___flmul@b:	
  1383                           ; 2 bytes @ 0x0
  1384                           
  1385                           
  1386                           ; 4 bytes @ 0x0
  1387  0020                     	ds	2
  1388  0022                     EWH_getAvrgTempReading@averageReading:
  1389                           
  1390                           ; 1 bytes @ 0x2
  1391  0022                     	ds	1
  1392  0023                     EWH_getAvrgTempReading@buffer:
  1393                           
  1394                           ; 1 bytes @ 0x3
  1395  0023                     	ds	1
  1396  0024                     EWH_getAvrgTempReading@i:
  1397  0024                     ___flmul@a:	
  1398                           ; 1 bytes @ 0x4
  1399                           
  1400                           
  1401                           ; 4 bytes @ 0x4
  1402  0024                     	ds	4
  1403  0028                     ??___flmul:
  1404                           
  1405                           ; 1 bytes @ 0x8
  1406  0028                     	ds	5
  1407  002D                     ___flmul@sign:
  1408                           
  1409                           ; 1 bytes @ 0xD
  1410  002D                     	ds	1
  1411  002E                     ___flmul@grs:
  1412                           
  1413                           ; 4 bytes @ 0xE
  1414  002E                     	ds	4
  1415  0032                     ___flmul@aexp:
  1416                           
  1417                           ; 1 bytes @ 0x12
  1418  0032                     	ds	1
  1419  0033                     ___flmul@bexp:
  1420                           
  1421                           ; 1 bytes @ 0x13
  1422  0033                     	ds	1
  1423  0034                     ___flmul@prod:
  1424                           
  1425                           ; 4 bytes @ 0x14
  1426  0034                     	ds	4
  1427  0038                     ___flmul@temp:
  1428                           
  1429                           ; 2 bytes @ 0x18
  1430  0038                     	ds	2
  1431  003A                     ?___fltol:
  1432  003A                     ___fltol@f1:	
  1433                           ; 4 bytes @ 0x1A
  1434                           
  1435                           
  1436                           ; 4 bytes @ 0x1A
  1437  003A                     	ds	4
  1438  003E                     ??___fltol:
  1439                           
  1440                           ; 1 bytes @ 0x1E
  1441  003E                     	ds	4
  1442  0042                     ___fltol@sign1:
  1443                           
  1444                           ; 1 bytes @ 0x22
  1445  0042                     	ds	1
  1446  0043                     ___fltol@exp1:
  1447                           
  1448                           ; 1 bytes @ 0x23
  1449  0043                     	ds	1
  1450  0044                     ??_EWH_TempUpdate:
  1451                           
  1452                           ; 1 bytes @ 0x24
  1453  0044                     	ds	2
  1454  0046                     EWH_TempUpdate@Reading:
  1455                           
  1456                           ; 2 bytes @ 0x26
  1457  0046                     	ds	2
  1458  0048                     ??_ISR:
  1459                           
  1460                           ; 1 bytes @ 0x28
  1461  0048                     	ds	4
  1462                           
  1463                           	psect	maintext
  1464  0A27                     __pmaintext:	
  1465 ;;
  1466 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1467 ;;
  1468 ;; *************** function _main *****************
  1469 ;; Defined at:
  1470 ;;		line 3 in file "main.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;		None
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;		None
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      void 
  1477 ;; Registers used:
  1478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1479 ;; Tracked objects:
  1480 ;;		On entry : B00/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1484 ;;      Params:         0       0       0       0       0
  1485 ;;      Locals:         0       0       0       0       0
  1486 ;;      Temps:          0       0       2       0       0
  1487 ;;      Totals:         0       0       2       0       0
  1488 ;;Total ram usage:        2 bytes
  1489 ;; Hardware stack levels required when called:   10
  1490 ;; This function calls:
  1491 ;;		_EWH_Init
  1492 ;;		_EWH_Operating_Mode
  1493 ;;		_EWH_SetTemp_Mode
  1494 ;;		_EWH_Sleep_Mode
  1495 ;;		_EWH_WakeUP_Mode
  1496 ;; This function is called by:
  1497 ;;		Startup code after reset
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           
  1502                           ;psect for function _main
  1503  0A27                     _main:
  1504  0A27                     l3586:	
  1505                           ;incstack = 0
  1506 ;; hardware stack exceeded
  1507                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1508                           
  1509                           
  1510                           ;main.c: 5:     EWH_Init();
  1511  0A27  120A  158A  2357  120A  158A  	fcall	_EWH_Init
  1512  0A2C  2A44               	goto	l3598
  1513  0A2D                     l3588:
  1514                           
  1515                           ;main.c: 12:                 EWH_Sleep_Mode();
  1516  0A2D  120A  158A  21BC  120A  158A  	fcall	_EWH_Sleep_Mode
  1517                           
  1518                           ;main.c: 13:                 break;
  1519  0A32  2A44               	goto	l3598
  1520  0A33                     l3590:
  1521                           
  1522                           ;main.c: 15:                 EWH_WakeUP_Mode();
  1523  0A33  120A  118A  270C  120A  158A  	fcall	_EWH_WakeUP_Mode
  1524                           
  1525                           ;main.c: 16:                 break;
  1526  0A38  2A44               	goto	l3598
  1527  0A39                     l3592:
  1528                           
  1529                           ;main.c: 18:                 EWH_Operating_Mode();
  1530  0A39  120A  118A  2398  120A  158A  	fcall	_EWH_Operating_Mode
  1531                           
  1532                           ;main.c: 19:                 break;
  1533  0A3E  2A44               	goto	l3598
  1534  0A3F                     l3594:
  1535                           
  1536                           ;main.c: 21:                 EWH_SetTemp_Mode();
  1537  0A3F  120A  118A  24B7  120A  158A  	fcall	_EWH_SetTemp_Mode
  1538  0A44                     l3598:	
  1539                           ;main.c: 22:                 break;
  1540                           
  1541  0A44  1683               	bsf	3,5	;RP0=1, select bank1
  1542  0A45  1303               	bcf	3,6	;RP1=0, select bank1
  1543  0A46  0849               	movf	_EWH_Mode^(0+128),w
  1544  0A47  00BB               	movwf	??_main^(0+128)
  1545  0A48  01BC               	clrf	(??_main^(0+128)+1)
  1546                           
  1547                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1548                           ; Switch size 1, requested type "simple"
  1549                           ; Number of cases is 1, Range of values is 0 to 0
  1550                           ; switch strategies available:
  1551                           ; Name         Instructions Cycles
  1552                           ; simple_byte            4     3 (average)
  1553                           ; direct_byte           11     8 (fixed)
  1554                           ; jumptable            260     6 (fixed)
  1555                           ;	Chosen strategy is simple_byte
  1556  0A49  083C               	movf	(??_main+1)^(0+128),w
  1557  0A4A  3A00               	xorlw	0	; case 0
  1558  0A4B  1903               	skipnz
  1559  0A4C  2A4E               	goto	l3890
  1560  0A4D  2A44               	goto	l3598
  1561  0A4E                     l3890:
  1562                           
  1563                           ; Switch size 1, requested type "simple"
  1564                           ; Number of cases is 4, Range of values is 0 to 3
  1565                           ; switch strategies available:
  1566                           ; Name         Instructions Cycles
  1567                           ; simple_byte           13     7 (average)
  1568                           ; direct_byte           20     8 (fixed)
  1569                           ; jumptable            260     6 (fixed)
  1570                           ;	Chosen strategy is simple_byte
  1571  0A4E  083B               	movf	??_main^(0+128),w
  1572  0A4F  3A00               	xorlw	0	; case 0
  1573  0A50  1903               	skipnz
  1574  0A51  2A2D               	goto	l3588
  1575  0A52  3A01               	xorlw	1	; case 1
  1576  0A53  1903               	skipnz
  1577  0A54  2A33               	goto	l3590
  1578  0A55  3A03               	xorlw	3	; case 2
  1579  0A56  1903               	skipnz
  1580  0A57  2A3F               	goto	l3594
  1581  0A58  3A01               	xorlw	1	; case 3
  1582  0A59  1903               	skipnz
  1583  0A5A  2A39               	goto	l3592
  1584  0A5B  2A44               	goto	l3598
  1585  0A5C  120A  118A  2812   	ljmp	start
  1586  0A5F                     __end_of_main:
  1587                           
  1588                           	psect	text1
  1589  070C                     __ptext1:	
  1590 ;; *************** function _EWH_WakeUP_Mode *****************
  1591 ;; Defined at:
  1592 ;;		line 39 in file "EWH.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;		None
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;		None
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  1    wreg      void 
  1599 ;; Registers used:
  1600 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1606 ;;      Params:         0       0       0       0       0
  1607 ;;      Locals:         0       0       0       0       0
  1608 ;;      Temps:          0       0       2       0       0
  1609 ;;      Totals:         0       0       2       0       0
  1610 ;;Total ram usage:        2 bytes
  1611 ;; Hardware stack levels used:    1
  1612 ;; Hardware stack levels required when called:    9
  1613 ;; This function calls:
  1614 ;;		_EWH_ClearEvent
  1615 ;;		_EWH_EEPROM_Read
  1616 ;;		_EWH_SSD_Update
  1617 ;;		_EWH_SetMode
  1618 ;; This function is called by:
  1619 ;;		_main
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623                           
  1624                           ;psect for function _EWH_WakeUP_Mode
  1625  070C                     _EWH_WakeUP_Mode:
  1626  070C                     l3352:	
  1627                           ;incstack = 0
  1628 ;; hardware stack exceeded
  1629                           ; Regs used in _EWH_WakeUP_Mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1630                           
  1631                           
  1632                           ;EWH.c: 42:     EWH_ClearEvent(0);
  1633  070C  3000               	movlw	0
  1634  070D  120A  158A  2043  120A  118A  	fcall	_EWH_ClearEvent
  1635  0712                     l3354:
  1636                           
  1637                           ;EWH.c: 45:     set_Temp = EWH_EEPROM_Read();
  1638  0712  120A  158A  207F  120A  118A  	fcall	_EWH_EEPROM_Read
  1639  0717  00FF               	movwf	btemp+1
  1640  0718  087F               	movf	btemp+1,w
  1641  0719  1683               	bsf	3,5	;RP0=1, select bank1
  1642  071A  1303               	bcf	3,6	;RP1=0, select bank1
  1643  071B  00C8               	movwf	_set_Temp^(0+128)
  1644  071C                     l3356:
  1645                           
  1646                           ;EWH.c: 48:     {;EWH.c: 50:         EWH_SSD_Update(set_Temp);
  1647  071C  0848               	movf	_set_Temp^(0+128),w
  1648  071D  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  1649  071E  01AF               	clrf	(??_EWH_WakeUP_Mode^(0+128)+1)
  1650  071F  082E               	movf	??_EWH_WakeUP_Mode^(0+128),w
  1651  0720  00AA               	movwf	EWH_SSD_Update@temp^(0+128)
  1652  0721  082F               	movf	(??_EWH_WakeUP_Mode+1)^(0+128),w
  1653  0722  00AB               	movwf	(EWH_SSD_Update@temp+1)^(0+128)
  1654  0723  120A  118A  27A4  120A  118A  	fcall	_EWH_SSD_Update
  1655  0728                     l3358:
  1656                           
  1657                           ;EWH.c: 53:         if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED))
  1658  0728  1283               	bcf	3,5	;RP0=0, select bank0
  1659  0729  1303               	bcf	3,6	;RP1=0, select bank0
  1660  072A  0806               	movf	6,w	;volatile
  1661  072B  1683               	bsf	3,5	;RP0=1, select bank1
  1662  072C  1303               	bcf	3,6	;RP1=0, select bank1
  1663  072D  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  1664  072E  3002               	movlw	2
  1665  072F                     u3195:
  1666  072F  1003               	clrc
  1667  0730  0CAE               	rrf	??_EWH_WakeUP_Mode^(0+128),f
  1668  0731  3EFF               	addlw	-1
  1669  0732  1D03               	skipz
  1670  0733  2F2F               	goto	u3195
  1671  0734  182E               	btfsc	??_EWH_WakeUP_Mode^(0+128),0
  1672  0735  2F37               	goto	u3201
  1673  0736  2F38               	goto	u3200
  1674  0737                     u3201:
  1675  0737  2F5D               	goto	l3368
  1676  0738                     u3200:
  1677  0738                     l3360:
  1678                           
  1679                           ;EWH.c: 54:         {;EWH.c: 55:             _delay((unsigned long)((50)*(4000000/4000.0
      +                          )));
  1680  0738  3041               	movlw	65
  1681  0739  1683               	bsf	3,5	;RP0=1, select bank1
  1682  073A  1303               	bcf	3,6	;RP1=0, select bank1
  1683  073B  00AF               	movwf	(??_EWH_WakeUP_Mode^(0+128)+1)
  1684  073C  30ED               	movlw	237
  1685  073D  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  1686  073E                     u3827:
  1687  073E  0BAE               	decfsz	??_EWH_WakeUP_Mode^(0+128),f
  1688  073F  2F3E               	goto	u3827
  1689  0740  0BAF               	decfsz	(??_EWH_WakeUP_Mode^(0+128)+1),f
  1690  0741  2F3E               	goto	u3827
  1691  0742  2F43               	nop2
  1692  0743                     l3362:
  1693                           
  1694                           ;EWH.c: 56:             if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED))
  1695  0743  1283               	bcf	3,5	;RP0=0, select bank0
  1696  0744  1303               	bcf	3,6	;RP1=0, select bank0
  1697  0745  0806               	movf	6,w	;volatile
  1698  0746  1683               	bsf	3,5	;RP0=1, select bank1
  1699  0747  1303               	bcf	3,6	;RP1=0, select bank1
  1700  0748  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  1701  0749  3002               	movlw	2
  1702  074A                     u3215:
  1703  074A  1003               	clrc
  1704  074B  0CAE               	rrf	??_EWH_WakeUP_Mode^(0+128),f
  1705  074C  3EFF               	addlw	-1
  1706  074D  1D03               	skipz
  1707  074E  2F4A               	goto	u3215
  1708  074F  182E               	btfsc	??_EWH_WakeUP_Mode^(0+128),0
  1709  0750  2F52               	goto	u3221
  1710  0751  2F53               	goto	u3220
  1711  0752                     u3221:
  1712  0752  2F5D               	goto	l3368
  1713  0753                     u3220:
  1714  0753                     l3364:
  1715                           
  1716                           ;EWH.c: 57:             {;EWH.c: 63:                 NoPress_Sec_count=0;
  1717  0753  1283               	bcf	3,5	;RP0=0, select bank0
  1718  0754  1303               	bcf	3,6	;RP1=0, select bank0
  1719  0755  01D4               	clrf	_NoPress_Sec_count
  1720  0756                     l3366:
  1721                           
  1722                           ;EWH.c: 65:                 EWH_SetMode(EWH_SET_TEMP_MODE);
  1723  0756  3002               	movlw	2
  1724  0757  120A  158A  200F  120A  118A  	fcall	_EWH_SetMode
  1725                           
  1726                           ;EWH.c: 67:                 break;
  1727  075C  2FA3               	goto	l480
  1728  075D                     l3368:
  1729                           
  1730                           ;EWH.c: 70:         if((!((PORTB & (1<<1)) >> 1)==SW_PRESSED))
  1731  075D  1283               	bcf	3,5	;RP0=0, select bank0
  1732  075E  1303               	bcf	3,6	;RP1=0, select bank0
  1733  075F  0806               	movf	6,w	;volatile
  1734  0760  1683               	bsf	3,5	;RP0=1, select bank1
  1735  0761  1303               	bcf	3,6	;RP1=0, select bank1
  1736  0762  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  1737  0763  3001               	movlw	1
  1738  0764                     u3235:
  1739  0764  1003               	clrc
  1740  0765  0CAE               	rrf	??_EWH_WakeUP_Mode^(0+128),f
  1741  0766  3EFF               	addlw	-1
  1742  0767  1D03               	skipz
  1743  0768  2F64               	goto	u3235
  1744  0769  182E               	btfsc	??_EWH_WakeUP_Mode^(0+128),0
  1745  076A  2F6C               	goto	u3241
  1746  076B  2F6D               	goto	u3240
  1747  076C                     u3241:
  1748  076C  2F92               	goto	l3378
  1749  076D                     u3240:
  1750  076D                     l3370:
  1751                           
  1752                           ;EWH.c: 71:         {;EWH.c: 72:             _delay((unsigned long)((50)*(4000000/4000.0
      +                          )));
  1753  076D  3041               	movlw	65
  1754  076E  1683               	bsf	3,5	;RP0=1, select bank1
  1755  076F  1303               	bcf	3,6	;RP1=0, select bank1
  1756  0770  00AF               	movwf	(??_EWH_WakeUP_Mode^(0+128)+1)
  1757  0771  30ED               	movlw	237
  1758  0772  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  1759  0773                     u3837:
  1760  0773  0BAE               	decfsz	??_EWH_WakeUP_Mode^(0+128),f
  1761  0774  2F73               	goto	u3837
  1762  0775  0BAF               	decfsz	(??_EWH_WakeUP_Mode^(0+128)+1),f
  1763  0776  2F73               	goto	u3837
  1764  0777  2F78               	nop2
  1765  0778                     l3372:
  1766                           
  1767                           ;EWH.c: 73:             if((!((PORTB & (1<<1)) >> 1)==SW_PRESSED))
  1768  0778  1283               	bcf	3,5	;RP0=0, select bank0
  1769  0779  1303               	bcf	3,6	;RP1=0, select bank0
  1770  077A  0806               	movf	6,w	;volatile
  1771  077B  1683               	bsf	3,5	;RP0=1, select bank1
  1772  077C  1303               	bcf	3,6	;RP1=0, select bank1
  1773  077D  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  1774  077E  3001               	movlw	1
  1775  077F                     u3255:
  1776  077F  1003               	clrc
  1777  0780  0CAE               	rrf	??_EWH_WakeUP_Mode^(0+128),f
  1778  0781  3EFF               	addlw	-1
  1779  0782  1D03               	skipz
  1780  0783  2F7F               	goto	u3255
  1781  0784  182E               	btfsc	??_EWH_WakeUP_Mode^(0+128),0
  1782  0785  2F87               	goto	u3261
  1783  0786  2F88               	goto	u3260
  1784  0787                     u3261:
  1785  0787  2F92               	goto	l3378
  1786  0788                     u3260:
  1787  0788                     l3374:
  1788                           
  1789                           ;EWH.c: 74:             {;EWH.c: 80:                 NoPress_Sec_count=0;
  1790  0788  1283               	bcf	3,5	;RP0=0, select bank0
  1791  0789  1303               	bcf	3,6	;RP1=0, select bank0
  1792  078A  01D4               	clrf	_NoPress_Sec_count
  1793  078B                     l3376:
  1794                           
  1795                           ;EWH.c: 82:                 EWH_SetMode(EWH_SET_TEMP_MODE);
  1796  078B  3002               	movlw	2
  1797  078C  120A  158A  200F  120A  118A  	fcall	_EWH_SetMode
  1798                           
  1799                           ;EWH.c: 84:                 break;
  1800  0791  2FA3               	goto	l480
  1801  0792                     l3378:
  1802                           
  1803                           ;EWH.c: 87:         if(EWH_Events[0]==1)
  1804  0792  033D               	decf	_EWH_Events^(0+128),w
  1805  0793  1D03               	btfss	3,2
  1806  0794  2F96               	goto	u3271
  1807  0795  2F97               	goto	u3270
  1808  0796                     u3271:
  1809  0796  2F1C               	goto	l3356
  1810  0797                     u3270:
  1811  0797                     l3380:
  1812                           
  1813                           ;EWH.c: 88:         {;EWH.c: 90:             EWH_ClearEvent(0);
  1814  0797  3000               	movlw	0
  1815  0798  120A  158A  2043  120A  118A  	fcall	_EWH_ClearEvent
  1816  079D                     l3382:
  1817                           
  1818                           ;EWH.c: 92:             EWH_SetMode(EWH_SLEEP_MODE);
  1819  079D  3000               	movlw	0
  1820  079E  120A  158A  200F  120A  118A  	fcall	_EWH_SetMode
  1821  07A3                     l480:	
  1822                           ;EWH.c: 94:             break ;
  1823                           
  1824  07A3  0008               	return
  1825  07A4                     __end_of_EWH_WakeUP_Mode:
  1826                           
  1827                           	psect	text2
  1828  087F                     __ptext2:	
  1829 ;; *************** function _EWH_EEPROM_Read *****************
  1830 ;; Defined at:
  1831 ;;		line 309 in file "EWH.c"
  1832 ;; Parameters:    Size  Location     Type
  1833 ;;		None
  1834 ;; Auto vars:     Size  Location     Type
  1835 ;;		None
  1836 ;; Return value:  Size  Location     Type
  1837 ;;                  1    wreg      unsigned char 
  1838 ;; Registers used:
  1839 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1845 ;;      Params:         0       0       0       0       0
  1846 ;;      Locals:         0       0       0       0       0
  1847 ;;      Temps:          0       0       0       0       0
  1848 ;;      Totals:         0       0       0       0       0
  1849 ;;Total ram usage:        0 bytes
  1850 ;; Hardware stack levels used:    1
  1851 ;; Hardware stack levels required when called:    8
  1852 ;; This function calls:
  1853 ;;		_EEPROM_ReadByte
  1854 ;; This function is called by:
  1855 ;;		_EWH_WakeUP_Mode
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           
  1860                           ;psect for function _EWH_EEPROM_Read
  1861  087F                     _EWH_EEPROM_Read:
  1862  087F                     l3006:	
  1863                           ;incstack = 0
  1864 ;; hardware stack exceeded
  1865                           ; Regs used in _EWH_EEPROM_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1866                           
  1867                           
  1868                           ;EWH.c: 311:     return EEPROM_ReadByte(0x0020);
  1869  087F  3020               	movlw	32
  1870  0880  1683               	bsf	3,5	;RP0=1, select bank1
  1871  0881  1303               	bcf	3,6	;RP1=0, select bank1
  1872  0882  00A2               	movwf	EEPROM_ReadByte@address^(0+128)
  1873  0883  3000               	movlw	0
  1874  0884  00A3               	movwf	(EEPROM_ReadByte@address^(0+128)+1)
  1875  0885  120A  158A  24E2  120A  158A  	fcall	_EEPROM_ReadByte
  1876  088A                     l531:
  1877  088A  0008               	return
  1878  088B                     __end_of_EWH_EEPROM_Read:
  1879                           
  1880                           	psect	text3
  1881  0CE2                     __ptext3:	
  1882 ;; *************** function _EEPROM_ReadByte *****************
  1883 ;; Defined at:
  1884 ;;		line 48 in file "EEPROM.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  address         2    2[BANK1 ] unsigned short 
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;  data            1    6[BANK1 ] unsigned char 
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      unsigned char 
  1891 ;; Registers used:
  1892 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1898 ;;      Params:         0       0       2       0       0
  1899 ;;      Locals:         0       0       1       0       0
  1900 ;;      Temps:          0       0       2       0       0
  1901 ;;      Totals:         0       0       5       0       0
  1902 ;;Total ram usage:        5 bytes
  1903 ;; Hardware stack levels used:    1
  1904 ;; Hardware stack levels required when called:    7
  1905 ;; This function calls:
  1906 ;;		_I2C_Master_ReadByte
  1907 ;;		_I2C_Master_Send_RepeatedStart
  1908 ;;		_I2C_Master_Send_Start
  1909 ;;		_I2C_Master_Send_Stop
  1910 ;;		_I2C_Master_WriteByte
  1911 ;; This function is called by:
  1912 ;;		_EWH_EEPROM_Read
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           
  1917                           ;psect for function _EEPROM_ReadByte
  1918  0CE2                     _EEPROM_ReadByte:
  1919  0CE2                     l2678:	
  1920                           ;incstack = 0
  1921 ;; hardware stack exceeded
  1922                           ; Regs used in _EEPROM_ReadByte: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1923                           
  1924                           
  1925                           ;EEPROM.c: 48: uint8_t EEPROM_ReadByte(uint16_t address );EEPROM.c: 49: {;EEPROM.c: 50: 
      +                              uint8_t data;;EEPROM.c: 52:     I2C_Master_Send_Start();
  1926  0CE2  120A  158A  2028  120A  158A  	fcall	_I2C_Master_Send_Start
  1927                           
  1928                           ;EEPROM.c: 54:     while(I2C_Master_WriteByte(0xA0 | ((address & 0x0700)>>7)) )
  1929  0CE7  2CED               	goto	l28
  1930  0CE8                     l2680:
  1931                           
  1932                           ;EEPROM.c: 55:         I2C_Master_Send_RepeatedStart();
  1933  0CE8  120A  158A  201F  120A  158A  	fcall	_I2C_Master_Send_RepeatedStart
  1934  0CED                     l28:
  1935                           
  1936                           ;EEPROM.c: 54:     while(I2C_Master_WriteByte(0xA0 | ((address & 0x0700)>>7)) )
  1937  0CED  1683               	bsf	3,5	;RP0=1, select bank1
  1938  0CEE  1303               	bcf	3,6	;RP1=0, select bank1
  1939  0CEF  0823               	movf	(EEPROM_ReadByte@address+1)^(0+128),w
  1940  0CF0  00A5               	movwf	(??_EEPROM_ReadByte^(0+128)+1)
  1941  0CF1  0822               	movf	EEPROM_ReadByte@address^(0+128),w
  1942  0CF2  00A4               	movwf	??_EEPROM_ReadByte^(0+128)
  1943  0CF3  3007               	movlw	7
  1944  0CF4                     u2025:
  1945  0CF4  1003               	clrc
  1946  0CF5  0CA5               	rrf	(??_EEPROM_ReadByte^(0+128)+1),f
  1947  0CF6  0CA4               	rrf	??_EEPROM_ReadByte^(0+128),f
  1948  0CF7  3EFF               	addlw	-1
  1949  0CF8  1D03               	skipz
  1950  0CF9  2CF4               	goto	u2025
  1951  0CFA  0824               	movf	??_EEPROM_ReadByte^(0+128),w
  1952  0CFB  390E               	andlw	14
  1953  0CFC  38A0               	iorlw	160
  1954  0CFD  120A  158A  2123  120A  158A  	fcall	_I2C_Master_WriteByte
  1955  0D02  3A00               	xorlw	0
  1956  0D03  1D03               	skipz
  1957  0D04  2D06               	goto	u2031
  1958  0D05  2D07               	goto	u2030
  1959  0D06                     u2031:
  1960  0D06  2CE8               	goto	l2680
  1961  0D07                     u2030:
  1962  0D07                     l2682:
  1963                           
  1964                           ;EEPROM.c: 58:     I2C_Master_WriteByte((uint8_t)address);
  1965  0D07  1683               	bsf	3,5	;RP0=1, select bank1
  1966  0D08  1303               	bcf	3,6	;RP1=0, select bank1
  1967  0D09  0822               	movf	EEPROM_ReadByte@address^(0+128),w
  1968  0D0A  120A  158A  2123  120A  158A  	fcall	_I2C_Master_WriteByte
  1969                           
  1970                           ;EEPROM.c: 60:     I2C_Master_Send_RepeatedStart();
  1971  0D0F  120A  158A  201F  120A  158A  	fcall	_I2C_Master_Send_RepeatedStart
  1972                           
  1973                           ;EEPROM.c: 61:     I2C_Master_WriteByte(0xA1 | ((address & 0x0700)>>7));
  1974  0D14  1683               	bsf	3,5	;RP0=1, select bank1
  1975  0D15  1303               	bcf	3,6	;RP1=0, select bank1
  1976  0D16  0823               	movf	(EEPROM_ReadByte@address+1)^(0+128),w
  1977  0D17  00A5               	movwf	(??_EEPROM_ReadByte^(0+128)+1)
  1978  0D18  0822               	movf	EEPROM_ReadByte@address^(0+128),w
  1979  0D19  00A4               	movwf	??_EEPROM_ReadByte^(0+128)
  1980  0D1A  3007               	movlw	7
  1981  0D1B                     u2045:
  1982  0D1B  1003               	clrc
  1983  0D1C  0CA5               	rrf	(??_EEPROM_ReadByte^(0+128)+1),f
  1984  0D1D  0CA4               	rrf	??_EEPROM_ReadByte^(0+128),f
  1985  0D1E  3EFF               	addlw	-1
  1986  0D1F  1D03               	skipz
  1987  0D20  2D1B               	goto	u2045
  1988  0D21  0824               	movf	??_EEPROM_ReadByte^(0+128),w
  1989  0D22  390E               	andlw	14
  1990  0D23  38A1               	iorlw	161
  1991  0D24  120A  158A  2123  120A  158A  	fcall	_I2C_Master_WriteByte
  1992  0D29                     l2684:
  1993                           
  1994                           ;EEPROM.c: 63:     data=I2C_Master_ReadByte(I2C_STOP_READING);
  1995  0D29  3001               	movlw	1
  1996  0D2A  120A  158A  2168  120A  158A  	fcall	_I2C_Master_ReadByte
  1997  0D2F  00FF               	movwf	btemp+1
  1998  0D30  087F               	movf	btemp+1,w
  1999  0D31  1683               	bsf	3,5	;RP0=1, select bank1
  2000  0D32  1303               	bcf	3,6	;RP1=0, select bank1
  2001  0D33  00A6               	movwf	EEPROM_ReadByte@data^(0+128)
  2002  0D34                     l2686:
  2003                           
  2004                           ;EEPROM.c: 64:     I2C_Master_Send_Stop();
  2005  0D34  120A  158A  2031  120A  158A  	fcall	_I2C_Master_Send_Stop
  2006  0D39                     l2688:
  2007                           
  2008                           ;EEPROM.c: 66:     return data;
  2009  0D39  1683               	bsf	3,5	;RP0=1, select bank1
  2010  0D3A  1303               	bcf	3,6	;RP1=0, select bank1
  2011  0D3B  0826               	movf	EEPROM_ReadByte@data^(0+128),w
  2012  0D3C                     l31:
  2013  0D3C  0008               	return
  2014  0D3D                     __end_of_EEPROM_ReadByte:
  2015                           
  2016                           	psect	text4
  2017  0968                     __ptext4:	
  2018 ;; *************** function _I2C_Master_ReadByte *****************
  2019 ;; Defined at:
  2020 ;;		line 110 in file "i2c.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  Read_State      1    wreg     enum E881
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  Read_State      1    1[BANK1 ] enum E881
  2025 ;;  data            1    0        unsigned char 
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  1    wreg      unsigned char 
  2028 ;; Registers used:
  2029 ;;		wreg, status,2, status,0, pclath, cstack
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2035 ;;      Params:         0       0       0       0       0
  2036 ;;      Locals:         0       0       2       0       0
  2037 ;;      Temps:          0       0       0       0       0
  2038 ;;      Totals:         0       0       2       0       0
  2039 ;;Total ram usage:        2 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:    6
  2042 ;; This function calls:
  2043 ;;		_I2C_Master_Send_ACK
  2044 ;;		_I2C_Master_Send_NACK
  2045 ;;		_I2C_Wait_IDLE
  2046 ;; This function is called by:
  2047 ;;		_EEPROM_ReadByte
  2048 ;;		_EEPROM_ReadPage
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           
  2053                           ;psect for function _I2C_Master_ReadByte
  2054  0968                     _I2C_Master_ReadByte:
  2055                           
  2056                           ;incstack = 0
  2057 ;; hardware stack exceeded
  2058                           ; Regs used in _I2C_Master_ReadByte: [wreg+status,2+status,0+pclath+cstack]
  2059                           ;I2C_Master_ReadByte@Read_State stored from wreg
  2060  0968  1683               	bsf	3,5	;RP0=1, select bank1
  2061  0969  1303               	bcf	3,6	;RP1=0, select bank1
  2062  096A  00A1               	movwf	I2C_Master_ReadByte@Read_State^(0+128)
  2063  096B                     l2604:
  2064                           
  2065                           ;i2c.c: 110: uint8_t I2C_Master_ReadByte(tI2C_ReadingState Read_State);i2c.c: 111: {;i2c
      +                          .c: 113:     uint8_t data;;i2c.c: 115:     I2C_Wait_IDLE();
  2066  096B  120A  158A  208B  120A  158A  	fcall	_I2C_Wait_IDLE
  2067  0970                     l2606:
  2068                           
  2069                           ;i2c.c: 116:     RCEN=1;
  2070  0970  1683               	bsf	3,5	;RP0=1, select bank1
  2071  0971  1303               	bcf	3,6	;RP1=0, select bank1
  2072  0972  1591               	bsf	17,3	;volatile
  2073                           
  2074                           ;i2c.c: 117:     I2C_Wait_IDLE();
  2075  0973  120A  158A  208B  120A  158A  	fcall	_I2C_Wait_IDLE
  2076  0978                     l2608:
  2077  0978  1283               	bcf	3,5	;RP0=0, select bank0
  2078  0979  1303               	bcf	3,6	;RP1=0, select bank0
  2079  097A  0813               	movf	19,w	;volatile
  2080  097B                     l2610:
  2081                           
  2082                           ;i2c.c: 120:     if(Read_State==I2C_STOP_READING)
  2083  097B  1683               	bsf	3,5	;RP0=1, select bank1
  2084  097C  1303               	bcf	3,6	;RP1=0, select bank1
  2085  097D  0321               	decf	I2C_Master_ReadByte@Read_State^(0+128),w
  2086  097E  1D03               	btfss	3,2
  2087  097F  2981               	goto	u1951
  2088  0980  2982               	goto	u1950
  2089  0981                     u1951:
  2090  0981  2988               	goto	l2614
  2091  0982                     u1950:
  2092  0982                     l2612:
  2093                           
  2094                           ;i2c.c: 121:         I2C_Master_Send_NACK();
  2095  0982  120A  158A  2060  120A  158A  	fcall	_I2C_Master_Send_NACK
  2096  0987  298D               	goto	l2616
  2097  0988                     l2614:
  2098                           
  2099                           ;i2c.c: 123:         I2C_Master_Send_ACK();
  2100  0988  120A  158A  2056  120A  158A  	fcall	_I2C_Master_Send_ACK
  2101  098D                     l2616:
  2102                           
  2103                           ;i2c.c: 125:     return SSPBUF ;
  2104  098D  1283               	bcf	3,5	;RP0=0, select bank0
  2105  098E  1303               	bcf	3,6	;RP1=0, select bank0
  2106  098F  0813               	movf	19,w	;volatile
  2107  0990                     l120:
  2108  0990  0008               	return
  2109  0991                     __end_of_I2C_Master_ReadByte:
  2110                           
  2111                           	psect	text5
  2112  0860                     __ptext5:	
  2113 ;; *************** function _I2C_Master_Send_NACK *****************
  2114 ;; Defined at:
  2115 ;;		line 92 in file "i2c.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;		None
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;		None
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      void 
  2122 ;; Registers used:
  2123 ;;		wreg, status,2, status,0, pclath, cstack
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2129 ;;      Params:         0       0       0       0       0
  2130 ;;      Locals:         0       0       0       0       0
  2131 ;;      Temps:          0       0       0       0       0
  2132 ;;      Totals:         0       0       0       0       0
  2133 ;;Total ram usage:        0 bytes
  2134 ;; Hardware stack levels used:    1
  2135 ;; Hardware stack levels required when called:    5
  2136 ;; This function calls:
  2137 ;;		_I2C_Wait_IDLE
  2138 ;; This function is called by:
  2139 ;;		_I2C_Master_ReadByte
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           
  2144                           ;psect for function _I2C_Master_Send_NACK
  2145  0860                     _I2C_Master_Send_NACK:
  2146  0860                     l2576:	
  2147                           ;incstack = 0
  2148 ;; hardware stack exceeded
  2149                           ; Regs used in _I2C_Master_Send_NACK: [wreg+status,2+status,0+pclath+cstack]
  2150                           
  2151                           
  2152                           ;i2c.c: 95:     I2C_Wait_IDLE();
  2153  0860  120A  158A  208B  120A  158A  	fcall	_I2C_Wait_IDLE
  2154  0865                     l2578:
  2155                           
  2156                           ;i2c.c: 97:     ACKDT=1;
  2157  0865  1683               	bsf	3,5	;RP0=1, select bank1
  2158  0866  1303               	bcf	3,6	;RP1=0, select bank1
  2159  0867  1691               	bsf	17,5	;volatile
  2160  0868                     l2580:
  2161                           
  2162                           ;i2c.c: 98:     ACKEN=1;
  2163  0868  1611               	bsf	17,4	;volatile
  2164  0869                     l109:
  2165  0869  0008               	return
  2166  086A                     __end_of_I2C_Master_Send_NACK:
  2167                           
  2168                           	psect	text6
  2169  0856                     __ptext6:	
  2170 ;; *************** function _I2C_Master_Send_ACK *****************
  2171 ;; Defined at:
  2172 ;;		line 84 in file "i2c.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;		None
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;		None
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  1    wreg      void 
  2179 ;; Registers used:
  2180 ;;		wreg, status,2, status,0, pclath, cstack
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2186 ;;      Params:         0       0       0       0       0
  2187 ;;      Locals:         0       0       0       0       0
  2188 ;;      Temps:          0       0       0       0       0
  2189 ;;      Totals:         0       0       0       0       0
  2190 ;;Total ram usage:        0 bytes
  2191 ;; Hardware stack levels used:    1
  2192 ;; Hardware stack levels required when called:    5
  2193 ;; This function calls:
  2194 ;;		_I2C_Wait_IDLE
  2195 ;; This function is called by:
  2196 ;;		_I2C_Master_ReadByte
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           
  2201                           ;psect for function _I2C_Master_Send_ACK
  2202  0856                     _I2C_Master_Send_ACK:
  2203  0856                     l2570:	
  2204                           ;incstack = 0
  2205 ;; hardware stack exceeded
  2206                           ; Regs used in _I2C_Master_Send_ACK: [wreg+status,2+status,0+pclath+cstack]
  2207                           
  2208                           
  2209                           ;i2c.c: 87:     I2C_Wait_IDLE();
  2210  0856  120A  158A  208B  120A  158A  	fcall	_I2C_Wait_IDLE
  2211  085B                     l2572:
  2212                           
  2213                           ;i2c.c: 89:     ACKDT=0;
  2214  085B  1683               	bsf	3,5	;RP0=1, select bank1
  2215  085C  1303               	bcf	3,6	;RP1=0, select bank1
  2216  085D  1291               	bcf	17,5	;volatile
  2217  085E                     l2574:
  2218                           
  2219                           ;i2c.c: 90:     ACKEN=1;
  2220  085E  1611               	bsf	17,4	;volatile
  2221  085F                     l106:
  2222  085F  0008               	return
  2223  0860                     __end_of_I2C_Master_Send_ACK:
  2224                           
  2225                           	psect	text7
  2226  09BC                     __ptext7:	
  2227 ;; *************** function _EWH_Sleep_Mode *****************
  2228 ;; Defined at:
  2229 ;;		line 16 in file "EWH.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;		None
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;		None
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  1    wreg      void 
  2236 ;; Registers used:
  2237 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2243 ;;      Params:         0       0       0       0       0
  2244 ;;      Locals:         0       0       0       0       0
  2245 ;;      Temps:          0       0       0       0       0
  2246 ;;      Totals:         0       0       0       0       0
  2247 ;;Total ram usage:        0 bytes
  2248 ;; Hardware stack levels used:    1
  2249 ;; Hardware stack levels required when called:    7
  2250 ;; This function calls:
  2251 ;;		_DD_SetState
  2252 ;;		_EWH_ClearEvent
  2253 ;;		_EWH_SSD_OFF
  2254 ;;		_TMR1_Stop
  2255 ;; This function is called by:
  2256 ;;		_main
  2257 ;; This function uses a non-reentrant model
  2258 ;;
  2259                           
  2260                           
  2261                           ;psect for function _EWH_Sleep_Mode
  2262  09BC                     _EWH_Sleep_Mode:
  2263  09BC                     l3336:	
  2264                           ;incstack = 0
  2265                           ; Regs used in _EWH_Sleep_Mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2266                           
  2267                           
  2268                           ;EWH.c: 20:     EWH_ClearEvent(0);
  2269  09BC  3000               	movlw	0
  2270  09BD  120A  158A  2043  120A  158A  	fcall	_EWH_ClearEvent
  2271  09C2                     l3338:
  2272                           
  2273                           ;EWH.c: 22:     EWH_SSD_OFF();
  2274  09C2  120A  158A  2098  120A  158A  	fcall	_EWH_SSD_OFF
  2275  09C7                     l3340:
  2276                           
  2277                           ;EWH.c: 24:     DD_SetState(HEATER,OFF);
  2278  09C7  1683               	bsf	3,5	;RP0=1, select bank1
  2279  09C8  1303               	bcf	3,6	;RP1=0, select bank1
  2280  09C9  01A0               	clrf	DD_SetState@state^(0+128)
  2281  09CA  3000               	movlw	0
  2282  09CB  120A  158A  2488  120A  158A  	fcall	_DD_SetState
  2283  09D0                     l3342:
  2284                           
  2285                           ;EWH.c: 26:     DD_SetState(COOLER,OFF);
  2286  09D0  1683               	bsf	3,5	;RP0=1, select bank1
  2287  09D1  1303               	bcf	3,6	;RP1=0, select bank1
  2288  09D2  01A0               	clrf	DD_SetState@state^(0+128)
  2289  09D3  3001               	movlw	1
  2290  09D4  120A  158A  2488  120A  158A  	fcall	_DD_SetState
  2291  09D9                     l3344:
  2292                           
  2293                           ;EWH.c: 28:     DD_SetState(HEATER_LED,OFF);
  2294  09D9  1683               	bsf	3,5	;RP0=1, select bank1
  2295  09DA  1303               	bcf	3,6	;RP1=0, select bank1
  2296  09DB  01A0               	clrf	DD_SetState@state^(0+128)
  2297  09DC  3002               	movlw	2
  2298  09DD  120A  158A  2488  120A  158A  	fcall	_DD_SetState
  2299  09E2                     l3346:
  2300                           
  2301                           ;EWH.c: 30:     TMR1_Stop();
  2302  09E2  120A  158A  2003  120A  158A  	fcall	_TMR1_Stop
  2303  09E7                     l3348:
  2304                           
  2305                           ;EWH.c: 33:     {;EWH.c: 34:         if(EWH_Mode!=EWH_SLEEP_MODE)
  2306  09E7  1683               	bsf	3,5	;RP0=1, select bank1
  2307  09E8  1303               	bcf	3,6	;RP1=0, select bank1
  2308  09E9  0849               	movf	_EWH_Mode^(0+128),w
  2309  09EA  1903               	btfsc	3,2
  2310  09EB  29ED               	goto	u3181
  2311  09EC  29EE               	goto	u3180
  2312  09ED                     u3181:
  2313  09ED  29E7               	goto	l3348
  2314  09EE                     u3180:
  2315  09EE                     l467:
  2316  09EE  0008               	return
  2317  09EF                     __end_of_EWH_Sleep_Mode:
  2318                           
  2319                           	psect	text8
  2320  04B7                     __ptext8:	
  2321 ;; *************** function _EWH_SetTemp_Mode *****************
  2322 ;; Defined at:
  2323 ;;		line 99 in file "EWH.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;		None
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;		None
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  1    wreg      void 
  2330 ;; Registers used:
  2331 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2337 ;;      Params:         0       0       0       0       0
  2338 ;;      Locals:         0       0       0       0       0
  2339 ;;      Temps:          0       0       2       0       0
  2340 ;;      Totals:         0       0       2       0       0
  2341 ;;Total ram usage:        2 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; Hardware stack levels required when called:    8
  2344 ;; This function calls:
  2345 ;;		_DD_SetState
  2346 ;;		_EWH_ClearEvent
  2347 ;;		_EWH_EEPROM_Update
  2348 ;;		_EWH_SSD_OFF
  2349 ;;		_EWH_SSD_Update
  2350 ;;		_EWH_SetMode
  2351 ;;		_TMR1_Start
  2352 ;; This function is called by:
  2353 ;;		_main
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           
  2358                           ;psect for function _EWH_SetTemp_Mode
  2359  04B7                     _EWH_SetTemp_Mode:
  2360  04B7                     l3442:	
  2361                           ;incstack = 0
  2362 ;; hardware stack exceeded
  2363                           ; Regs used in _EWH_SetTemp_Mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2364                           
  2365                           
  2366                           ;EWH.c: 102:     TMR1_Start();
  2367  04B7  120A  158A  20B5  120A  118A  	fcall	_TMR1_Start
  2368  04BC                     l3444:
  2369                           
  2370                           ;EWH.c: 104:     NoPress_Sec_count=0;
  2371  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  2372  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  2373  04BE  01D4               	clrf	_NoPress_Sec_count
  2374  04BF                     l3446:
  2375                           
  2376                           ;EWH.c: 106:     DD_SetState(HEATER,OFF);
  2377  04BF  1683               	bsf	3,5	;RP0=1, select bank1
  2378  04C0  1303               	bcf	3,6	;RP1=0, select bank1
  2379  04C1  01A0               	clrf	DD_SetState@state^(0+128)
  2380  04C2  3000               	movlw	0
  2381  04C3  120A  158A  2488  120A  118A  	fcall	_DD_SetState
  2382  04C8                     l3448:
  2383                           
  2384                           ;EWH.c: 107:     DD_SetState(COOLER,OFF);
  2385  04C8  1683               	bsf	3,5	;RP0=1, select bank1
  2386  04C9  1303               	bcf	3,6	;RP1=0, select bank1
  2387  04CA  01A0               	clrf	DD_SetState@state^(0+128)
  2388  04CB  3001               	movlw	1
  2389  04CC  120A  158A  2488  120A  118A  	fcall	_DD_SetState
  2390  04D1                     l3450:
  2391                           
  2392                           ;EWH.c: 108:     DD_SetState(HEATER_LED,OFF);
  2393  04D1  1683               	bsf	3,5	;RP0=1, select bank1
  2394  04D2  1303               	bcf	3,6	;RP1=0, select bank1
  2395  04D3  01A0               	clrf	DD_SetState@state^(0+128)
  2396  04D4  3002               	movlw	2
  2397  04D5  120A  158A  2488  120A  118A  	fcall	_DD_SetState
  2398  04DA                     l3452:
  2399                           
  2400                           ;EWH.c: 110:     EWH_SSD_Update(set_Temp);
  2401  04DA  1683               	bsf	3,5	;RP0=1, select bank1
  2402  04DB  1303               	bcf	3,6	;RP1=0, select bank1
  2403  04DC  0848               	movf	_set_Temp^(0+128),w
  2404  04DD  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2405  04DE  01AF               	clrf	(??_EWH_SetTemp_Mode^(0+128)+1)
  2406  04DF  082E               	movf	??_EWH_SetTemp_Mode^(0+128),w
  2407  04E0  00AA               	movwf	EWH_SSD_Update@temp^(0+128)
  2408  04E1  082F               	movf	(??_EWH_SetTemp_Mode+1)^(0+128),w
  2409  04E2  00AB               	movwf	(EWH_SSD_Update@temp+1)^(0+128)
  2410  04E3  120A  118A  27A4  120A  118A  	fcall	_EWH_SSD_Update
  2411  04E8                     l3454:
  2412                           
  2413                           ;EWH.c: 113:     {;EWH.c: 114:         if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED) && set_
      +                          Temp<75)
  2414  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  2415  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  2416  04EA  0806               	movf	6,w	;volatile
  2417  04EB  1683               	bsf	3,5	;RP0=1, select bank1
  2418  04EC  1303               	bcf	3,6	;RP1=0, select bank1
  2419  04ED  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2420  04EE  3002               	movlw	2
  2421  04EF                     u3425:
  2422  04EF  1003               	clrc
  2423  04F0  0CAE               	rrf	??_EWH_SetTemp_Mode^(0+128),f
  2424  04F1  3EFF               	addlw	-1
  2425  04F2  1D03               	skipz
  2426  04F3  2CEF               	goto	u3425
  2427  04F4  182E               	btfsc	??_EWH_SetTemp_Mode^(0+128),0
  2428  04F5  2CF7               	goto	u3431
  2429  04F6  2CF8               	goto	u3430
  2430  04F7                     u3431:
  2431  04F7  2D21               	goto	l3466
  2432  04F8                     u3430:
  2433  04F8                     l3456:
  2434  04F8  304B               	movlw	75
  2435  04F9  0248               	subwf	_set_Temp^(0+128),w
  2436  04FA  1803               	skipnc
  2437  04FB  2CFD               	goto	u3441
  2438  04FC  2CFE               	goto	u3440
  2439  04FD                     u3441:
  2440  04FD  2D21               	goto	l3466
  2441  04FE                     u3440:
  2442  04FE                     l3458:
  2443                           
  2444                           ;EWH.c: 115:         {;EWH.c: 116:             _delay((unsigned long)((50)*(4000000/4000
      +                          .0)));
  2445  04FE  3041               	movlw	65
  2446  04FF  1683               	bsf	3,5	;RP0=1, select bank1
  2447  0500  1303               	bcf	3,6	;RP1=0, select bank1
  2448  0501  00AF               	movwf	(??_EWH_SetTemp_Mode^(0+128)+1)
  2449  0502  30ED               	movlw	237
  2450  0503  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2451  0504                     u3847:
  2452  0504  0BAE               	decfsz	??_EWH_SetTemp_Mode^(0+128),f
  2453  0505  2D04               	goto	u3847
  2454  0506  0BAF               	decfsz	(??_EWH_SetTemp_Mode^(0+128)+1),f
  2455  0507  2D04               	goto	u3847
  2456  0508  2D09               	nop2
  2457  0509                     l3460:
  2458                           
  2459                           ;EWH.c: 117:             if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED))
  2460  0509  1283               	bcf	3,5	;RP0=0, select bank0
  2461  050A  1303               	bcf	3,6	;RP1=0, select bank0
  2462  050B  0806               	movf	6,w	;volatile
  2463  050C  1683               	bsf	3,5	;RP0=1, select bank1
  2464  050D  1303               	bcf	3,6	;RP1=0, select bank1
  2465  050E  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2466  050F  3002               	movlw	2
  2467  0510                     u3455:
  2468  0510  1003               	clrc
  2469  0511  0CAE               	rrf	??_EWH_SetTemp_Mode^(0+128),f
  2470  0512  3EFF               	addlw	-1
  2471  0513  1D03               	skipz
  2472  0514  2D10               	goto	u3455
  2473  0515  182E               	btfsc	??_EWH_SetTemp_Mode^(0+128),0
  2474  0516  2D18               	goto	u3461
  2475  0517  2D19               	goto	u3460
  2476  0518                     u3461:
  2477  0518  2D55               	goto	l3478
  2478  0519                     u3460:
  2479  0519                     l3462:
  2480                           
  2481                           ;EWH.c: 118:             {;EWH.c: 119:                 set_Temp+=5;
  2482  0519  3005               	movlw	5
  2483  051A  00FF               	movwf	btemp+1
  2484  051B  087F               	movf	btemp+1,w
  2485  051C  07C8               	addwf	_set_Temp^(0+128),f
  2486  051D                     l3464:
  2487                           
  2488                           ;EWH.c: 120:                 NoPress_Sec_count=0;
  2489  051D  1283               	bcf	3,5	;RP0=0, select bank0
  2490  051E  1303               	bcf	3,6	;RP1=0, select bank0
  2491  051F  01D4               	clrf	_NoPress_Sec_count
  2492  0520  2D55               	goto	l3478
  2493  0521                     l3466:
  2494  0521  1283               	bcf	3,5	;RP0=0, select bank0
  2495  0522  1303               	bcf	3,6	;RP1=0, select bank0
  2496  0523  0806               	movf	6,w	;volatile
  2497  0524  1683               	bsf	3,5	;RP0=1, select bank1
  2498  0525  1303               	bcf	3,6	;RP1=0, select bank1
  2499  0526  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2500  0527  3001               	movlw	1
  2501  0528                     u3475:
  2502  0528  1003               	clrc
  2503  0529  0CAE               	rrf	??_EWH_SetTemp_Mode^(0+128),f
  2504  052A  3EFF               	addlw	-1
  2505  052B  1D03               	skipz
  2506  052C  2D28               	goto	u3475
  2507  052D  182E               	btfsc	??_EWH_SetTemp_Mode^(0+128),0
  2508  052E  2D30               	goto	u3481
  2509  052F  2D31               	goto	u3480
  2510  0530                     u3481:
  2511  0530  2D55               	goto	l3478
  2512  0531                     u3480:
  2513  0531                     l3468:
  2514  0531  3024               	movlw	36
  2515  0532  0248               	subwf	_set_Temp^(0+128),w
  2516  0533  1C03               	skipc
  2517  0534  2D36               	goto	u3491
  2518  0535  2D37               	goto	u3490
  2519  0536                     u3491:
  2520  0536  2D55               	goto	l3478
  2521  0537                     u3490:
  2522  0537                     l3470:
  2523                           
  2524                           ;EWH.c: 124:         {;EWH.c: 125:             _delay((unsigned long)((50)*(4000000/4000
      +                          .0)));
  2525  0537  3041               	movlw	65
  2526  0538  1683               	bsf	3,5	;RP0=1, select bank1
  2527  0539  1303               	bcf	3,6	;RP1=0, select bank1
  2528  053A  00AF               	movwf	(??_EWH_SetTemp_Mode^(0+128)+1)
  2529  053B  30ED               	movlw	237
  2530  053C  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2531  053D                     u3857:
  2532  053D  0BAE               	decfsz	??_EWH_SetTemp_Mode^(0+128),f
  2533  053E  2D3D               	goto	u3857
  2534  053F  0BAF               	decfsz	(??_EWH_SetTemp_Mode^(0+128)+1),f
  2535  0540  2D3D               	goto	u3857
  2536  0541  2D42               	nop2
  2537  0542                     l3472:
  2538                           
  2539                           ;EWH.c: 126:             if((!((PORTB & (1<<1)) >> 1)==SW_PRESSED))
  2540  0542  1283               	bcf	3,5	;RP0=0, select bank0
  2541  0543  1303               	bcf	3,6	;RP1=0, select bank0
  2542  0544  0806               	movf	6,w	;volatile
  2543  0545  1683               	bsf	3,5	;RP0=1, select bank1
  2544  0546  1303               	bcf	3,6	;RP1=0, select bank1
  2545  0547  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2546  0548  3001               	movlw	1
  2547  0549                     u3505:
  2548  0549  1003               	clrc
  2549  054A  0CAE               	rrf	??_EWH_SetTemp_Mode^(0+128),f
  2550  054B  3EFF               	addlw	-1
  2551  054C  1D03               	skipz
  2552  054D  2D49               	goto	u3505
  2553  054E  182E               	btfsc	??_EWH_SetTemp_Mode^(0+128),0
  2554  054F  2D51               	goto	u3511
  2555  0550  2D52               	goto	u3510
  2556  0551                     u3511:
  2557  0551  2D55               	goto	l3478
  2558  0552                     u3510:
  2559  0552                     l3474:
  2560                           
  2561                           ;EWH.c: 127:             {;EWH.c: 128:                 set_Temp-=5;
  2562  0552  3005               	movlw	5
  2563  0553  02C8               	subwf	_set_Temp^(0+128),f
  2564  0554  2D1D               	goto	l3464
  2565  0555                     l3478:
  2566                           
  2567                           ;EWH.c: 133:         if(SSD_Blink_flag)
  2568  0555  1683               	bsf	3,5	;RP0=1, select bank1
  2569  0556  1303               	bcf	3,6	;RP1=0, select bank1
  2570  0557  0846               	movf	_SSD_Blink_flag^(0+128),w
  2571  0558  1903               	btfsc	3,2
  2572  0559  2D5B               	goto	u3521
  2573  055A  2D5C               	goto	u3520
  2574  055B                     u3521:
  2575  055B  2D69               	goto	l3482
  2576  055C                     u3520:
  2577  055C                     l3480:
  2578                           
  2579                           ;EWH.c: 134:         {;EWH.c: 135:             EWH_SSD_Update(set_Temp);
  2580  055C  0848               	movf	_set_Temp^(0+128),w
  2581  055D  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2582  055E  01AF               	clrf	(??_EWH_SetTemp_Mode^(0+128)+1)
  2583  055F  082E               	movf	??_EWH_SetTemp_Mode^(0+128),w
  2584  0560  00AA               	movwf	EWH_SSD_Update@temp^(0+128)
  2585  0561  082F               	movf	(??_EWH_SetTemp_Mode+1)^(0+128),w
  2586  0562  00AB               	movwf	(EWH_SSD_Update@temp+1)^(0+128)
  2587  0563  120A  118A  27A4  120A  118A  	fcall	_EWH_SSD_Update
  2588                           
  2589                           ;EWH.c: 136:         }
  2590  0568  2D6E               	goto	l3484
  2591  0569                     l3482:
  2592                           
  2593                           ;EWH.c: 138:         {;EWH.c: 139:             EWH_SSD_OFF();
  2594  0569  120A  158A  2098  120A  118A  	fcall	_EWH_SSD_OFF
  2595  056E                     l3484:
  2596                           
  2597                           ;EWH.c: 143:         if(EWH_Events[0]==1)
  2598  056E  1683               	bsf	3,5	;RP0=1, select bank1
  2599  056F  1303               	bcf	3,6	;RP1=0, select bank1
  2600  0570  033D               	decf	_EWH_Events^(0+128),w
  2601  0571  1D03               	btfss	3,2
  2602  0572  2D74               	goto	u3531
  2603  0573  2D75               	goto	u3530
  2604  0574                     u3531:
  2605  0574  2D88               	goto	l3492
  2606  0575                     u3530:
  2607  0575                     l3486:
  2608                           
  2609                           ;EWH.c: 144:         {;EWH.c: 146:             EWH_EEPROM_Update(set_Temp);
  2610  0575  0848               	movf	_set_Temp^(0+128),w
  2611  0576  120A  158A  20C5  120A  118A  	fcall	_EWH_EEPROM_Update
  2612  057B                     l3488:
  2613                           
  2614                           ;EWH.c: 148:             EWH_ClearEvent(0);
  2615  057B  3000               	movlw	0
  2616  057C  120A  158A  2043  120A  118A  	fcall	_EWH_ClearEvent
  2617  0581                     l3490:
  2618                           
  2619                           ;EWH.c: 150:             EWH_SetMode(EWH_SLEEP_MODE);
  2620  0581  3000               	movlw	0
  2621  0582  120A  158A  200F  120A  118A  	fcall	_EWH_SetMode
  2622                           
  2623                           ;EWH.c: 152:             break ;
  2624  0587  2DA7               	goto	l495
  2625  0588                     l3492:
  2626                           
  2627                           ;EWH.c: 154:         if(EWH_Events[3]==1 && (EWH_Mode!=EWH_SLEEP_MODE))
  2628  0588  0340               	decf	(_EWH_Events^(0+128)+3),w
  2629  0589  1D03               	btfss	3,2
  2630  058A  2D8C               	goto	u3541
  2631  058B  2D8D               	goto	u3540
  2632  058C                     u3541:
  2633  058C  2CE8               	goto	l3454
  2634  058D                     u3540:
  2635  058D                     l3494:
  2636  058D  0849               	movf	_EWH_Mode^(0+128),w
  2637  058E  1903               	btfsc	3,2
  2638  058F  2D91               	goto	u3551
  2639  0590  2D92               	goto	u3550
  2640  0591                     u3551:
  2641  0591  2CE8               	goto	l3454
  2642  0592                     u3550:
  2643  0592                     l3496:
  2644                           
  2645                           ;EWH.c: 155:         {;EWH.c: 157:             EWH_EEPROM_Update(set_Temp);
  2646  0592  0848               	movf	_set_Temp^(0+128),w
  2647  0593  120A  158A  20C5  120A  118A  	fcall	_EWH_EEPROM_Update
  2648  0598                     l3498:
  2649                           
  2650                           ;EWH.c: 159:             EWH_ClearEvent(3);
  2651  0598  3003               	movlw	3
  2652  0599  120A  158A  2043  120A  118A  	fcall	_EWH_ClearEvent
  2653  059E                     l3500:
  2654                           
  2655                           ;EWH.c: 161:             NoPress_Sec_count=0;
  2656  059E  1283               	bcf	3,5	;RP0=0, select bank0
  2657  059F  1303               	bcf	3,6	;RP1=0, select bank0
  2658  05A0  01D4               	clrf	_NoPress_Sec_count
  2659  05A1                     l3502:
  2660                           
  2661                           ;EWH.c: 163:             EWH_SetMode(EWH_OPERATING_MODE);
  2662  05A1  3003               	movlw	3
  2663  05A2  120A  158A  200F  120A  118A  	fcall	_EWH_SetMode
  2664  05A7                     l495:	
  2665                           ;EWH.c: 165:             break ;
  2666                           
  2667  05A7  0008               	return
  2668  05A8                     __end_of_EWH_SetTemp_Mode:
  2669                           
  2670                           	psect	text9
  2671  0898                     __ptext9:	
  2672 ;; *************** function _EWH_SSD_OFF *****************
  2673 ;; Defined at:
  2674 ;;		line 319 in file "EWH.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;		None
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;		None
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      void 
  2681 ;; Registers used:
  2682 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2688 ;;      Params:         0       0       0       0       0
  2689 ;;      Locals:         0       0       0       0       0
  2690 ;;      Temps:          0       0       0       0       0
  2691 ;;      Totals:         0       0       0       0       0
  2692 ;;Total ram usage:        0 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; Hardware stack levels required when called:    6
  2695 ;; This function calls:
  2696 ;;		_SSD_OFF
  2697 ;; This function is called by:
  2698 ;;		_EWH_Sleep_Mode
  2699 ;;		_EWH_SetTemp_Mode
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           
  2704                           ;psect for function _EWH_SSD_OFF
  2705  0898                     _EWH_SSD_OFF:
  2706  0898                     l3004:	
  2707                           ;incstack = 0
  2708                           ; Regs used in _EWH_SSD_OFF: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2709                           
  2710                           
  2711                           ;EWH.c: 321:     SSD_OFF(3);
  2712  0898  3003               	movlw	3
  2713  0899  120A  158A  2074  120A  158A  	fcall	_SSD_OFF
  2714                           
  2715                           ;EWH.c: 322:     SSD_OFF(4);
  2716  089E  3004               	movlw	4
  2717  089F  120A  158A  2074  120A  158A  	fcall	_SSD_OFF
  2718  08A4                     l537:
  2719  08A4  0008               	return
  2720  08A5                     __end_of_EWH_SSD_OFF:
  2721                           
  2722                           	psect	text10
  2723  08C5                     __ptext10:	
  2724 ;; *************** function _EWH_EEPROM_Update *****************
  2725 ;; Defined at:
  2726 ;;		line 305 in file "EWH.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;  newSetTemp      1    wreg     unsigned char 
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;  newSetTemp      1    6[BANK1 ] unsigned char 
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  1    wreg      void 
  2733 ;; Registers used:
  2734 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2740 ;;      Params:         0       0       0       0       0
  2741 ;;      Locals:         0       0       1       0       0
  2742 ;;      Temps:          0       0       0       0       0
  2743 ;;      Totals:         0       0       1       0       0
  2744 ;;Total ram usage:        1 bytes
  2745 ;; Hardware stack levels used:    1
  2746 ;; Hardware stack levels required when called:    7
  2747 ;; This function calls:
  2748 ;;		_EEPROM_WriteByte
  2749 ;; This function is called by:
  2750 ;;		_EWH_SetTemp_Mode
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           
  2755                           ;psect for function _EWH_EEPROM_Update
  2756  08C5                     _EWH_EEPROM_Update:
  2757                           
  2758                           ;incstack = 0
  2759 ;; hardware stack exceeded
  2760                           ; Regs used in _EWH_EEPROM_Update: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2761                           ;EWH_EEPROM_Update@newSetTemp stored from wreg
  2762  08C5  1683               	bsf	3,5	;RP0=1, select bank1
  2763  08C6  1303               	bcf	3,6	;RP1=0, select bank1
  2764  08C7  00A6               	movwf	EWH_EEPROM_Update@newSetTemp^(0+128)
  2765  08C8                     l3022:
  2766                           
  2767                           ;EWH.c: 305: void EWH_EEPROM_Update(uint8_t newSetTemp);EWH.c: 306: {;EWH.c: 307:     EE
      +                          PROM_WriteByte(0x0020,newSetTemp);
  2768  08C8  3020               	movlw	32
  2769  08C9  00A1               	movwf	EEPROM_WriteByte@address^(0+128)
  2770  08CA  3000               	movlw	0
  2771  08CB  00A2               	movwf	(EEPROM_WriteByte@address^(0+128)+1)
  2772  08CC  0826               	movf	EWH_EEPROM_Update@newSetTemp^(0+128),w
  2773  08CD  00FF               	movwf	btemp+1
  2774  08CE  087F               	movf	btemp+1,w
  2775  08CF  00A3               	movwf	EEPROM_WriteByte@data^(0+128)
  2776  08D0  120A  158A  225F  120A  158A  	fcall	_EEPROM_WriteByte
  2777  08D5                     l528:
  2778  08D5  0008               	return
  2779  08D6                     __end_of_EWH_EEPROM_Update:
  2780                           
  2781                           	psect	text11
  2782  0398                     __ptext11:	
  2783 ;; *************** function _EWH_Operating_Mode *****************
  2784 ;; Defined at:
  2785 ;;		line 171 in file "EWH.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;		None
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;		None
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  1    wreg      void 
  2792 ;; Registers used:
  2793 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2799 ;;      Params:         0       0       0       0       0
  2800 ;;      Locals:         0       0       0       0       0
  2801 ;;      Temps:          0       0       3       0       0
  2802 ;;      Totals:         0       0       3       0       0
  2803 ;;Total ram usage:        3 bytes
  2804 ;; Hardware stack levels used:    1
  2805 ;; Hardware stack levels required when called:    7
  2806 ;; This function calls:
  2807 ;;		_DD_SetState
  2808 ;;		_EWH_ClearEvent
  2809 ;;		_EWH_SSD_Update
  2810 ;;		_EWH_SetEvent
  2811 ;;		_EWH_SetMode
  2812 ;;		_TMR1_Start
  2813 ;;		_TMR1_Stop
  2814 ;; This function is called by:
  2815 ;;		_main
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           
  2820                           ;psect for function _EWH_Operating_Mode
  2821  0398                     _EWH_Operating_Mode:
  2822  0398                     l3384:	
  2823                           ;incstack = 0
  2824                           ; Regs used in _EWH_Operating_Mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2825                           
  2826                           
  2827                           ;EWH.c: 174:     TMR1_Start();
  2828  0398  120A  158A  20B5  120A  118A  	fcall	_TMR1_Start
  2829  039D                     l3386:
  2830                           
  2831                           ;EWH.c: 177:     {;EWH.c: 178:         EWH_SSD_Update(current_Temp);
  2832  039D  1683               	bsf	3,5	;RP0=1, select bank1
  2833  039E  1303               	bcf	3,6	;RP1=0, select bank1
  2834  039F  0847               	movf	_current_Temp^(0+128),w
  2835  03A0  00AE               	movwf	??_EWH_Operating_Mode^(0+128)
  2836  03A1  01AF               	clrf	(??_EWH_Operating_Mode^(0+128)+1)
  2837  03A2  082E               	movf	??_EWH_Operating_Mode^(0+128),w
  2838  03A3  00AA               	movwf	EWH_SSD_Update@temp^(0+128)
  2839  03A4  082F               	movf	(??_EWH_Operating_Mode+1)^(0+128),w
  2840  03A5  00AB               	movwf	(EWH_SSD_Update@temp+1)^(0+128)
  2841  03A6  120A  118A  27A4  120A  118A  	fcall	_EWH_SSD_Update
  2842  03AB                     l3388:
  2843                           
  2844                           ;EWH.c: 180:         if(ReadingBufferFull)
  2845  03AB  1683               	bsf	3,5	;RP0=1, select bank1
  2846  03AC  1303               	bcf	3,6	;RP1=0, select bank1
  2847  03AD  0845               	movf	_ReadingBufferFull^(0+128),w
  2848  03AE  1903               	btfsc	3,2
  2849  03AF  2BB1               	goto	u3281
  2850  03B0  2BB2               	goto	u3280
  2851  03B1                     u3281:
  2852  03B1  2C01               	goto	l3398
  2853  03B2                     u3280:
  2854  03B2                     l3390:
  2855                           
  2856                           ;EWH.c: 181:         {;EWH.c: 182:             if(TempavgReading>=(set_Temp+5))
  2857  03B2  0848               	movf	_set_Temp^(0+128),w
  2858  03B3  3E05               	addlw	5
  2859  03B4  00AE               	movwf	??_EWH_Operating_Mode^(0+128)
  2860  03B5  3000               	movlw	0
  2861  03B6  1803               	skipnc
  2862  03B7  3001               	movlw	1
  2863  03B8  00AF               	movwf	(??_EWH_Operating_Mode^(0+128)+1)
  2864  03B9  082F               	movf	(??_EWH_Operating_Mode+1)^(0+128),w
  2865  03BA  3A80               	xorlw	128
  2866  03BB  3C80               	sublw	128
  2867  03BC  1D03               	skipz
  2868  03BD  2BC0               	goto	u3295
  2869  03BE  082E               	movf	??_EWH_Operating_Mode^(0+128),w
  2870  03BF  0244               	subwf	_TempavgReading^(0+128),w
  2871  03C0                     u3295:
  2872  03C0  1C03               	skipc
  2873  03C1  2BC3               	goto	u3291
  2874  03C2  2BC4               	goto	u3290
  2875  03C3                     u3291:
  2876  03C3  2BD8               	goto	l3394
  2877  03C4                     u3290:
  2878  03C4                     l3392:
  2879                           
  2880                           ;EWH.c: 183:             {;EWH.c: 184:                 DD_SetState(HEATER,OFF);
  2881  03C4  1683               	bsf	3,5	;RP0=1, select bank1
  2882  03C5  1303               	bcf	3,6	;RP1=0, select bank1
  2883  03C6  01A0               	clrf	DD_SetState@state^(0+128)
  2884  03C7  3000               	movlw	0
  2885  03C8  120A  158A  2488  120A  118A  	fcall	_DD_SetState
  2886                           
  2887                           ;EWH.c: 185:                 DD_SetState(COOLER,ON);
  2888  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  2889  03CE  1303               	bcf	3,6	;RP1=0, select bank1
  2890  03CF  01A0               	clrf	DD_SetState@state^(0+128)
  2891  03D0  0AA0               	incf	DD_SetState@state^(0+128),f
  2892  03D1  3001               	movlw	1
  2893  03D2  120A  158A  2488  120A  118A  	fcall	_DD_SetState
  2894                           
  2895                           ;EWH.c: 186:             }
  2896  03D7  2C01               	goto	l3398
  2897  03D8                     l3394:
  2898  03D8  1683               	bsf	3,5	;RP0=1, select bank1
  2899  03D9  1303               	bcf	3,6	;RP1=0, select bank1
  2900  03DA  0848               	movf	_set_Temp^(0+128),w
  2901  03DB  3EFB               	addlw	251
  2902  03DC  00AE               	movwf	??_EWH_Operating_Mode^(0+128)
  2903  03DD  30FF               	movlw	255
  2904  03DE  1803               	skipnc
  2905  03DF  3000               	movlw	0
  2906  03E0  00AF               	movwf	(??_EWH_Operating_Mode^(0+128)+1)
  2907  03E1  082F               	movf	(??_EWH_Operating_Mode+1)^(0+128),w
  2908  03E2  3A80               	xorlw	128
  2909  03E3  00B0               	movwf	(??_EWH_Operating_Mode+2)^(0+128)
  2910  03E4  3080               	movlw	128
  2911  03E5  0230               	subwf	(??_EWH_Operating_Mode+2)^(0+128),w
  2912  03E6  1D03               	skipz
  2913  03E7  2BEA               	goto	u3305
  2914  03E8  0844               	movf	_TempavgReading^(0+128),w
  2915  03E9  022E               	subwf	??_EWH_Operating_Mode^(0+128),w
  2916  03EA                     u3305:
  2917  03EA  1C03               	skipc
  2918  03EB  2BED               	goto	u3301
  2919  03EC  2BEE               	goto	u3300
  2920  03ED                     u3301:
  2921  03ED  2C01               	goto	l3398
  2922  03EE                     u3300:
  2923  03EE                     l3396:
  2924                           
  2925                           ;EWH.c: 188:             {;EWH.c: 189:                 DD_SetState(HEATER,ON);
  2926  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  2927  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  2928  03F0  01A0               	clrf	DD_SetState@state^(0+128)
  2929  03F1  0AA0               	incf	DD_SetState@state^(0+128),f
  2930  03F2  3000               	movlw	0
  2931  03F3  120A  158A  2488  120A  118A  	fcall	_DD_SetState
  2932                           
  2933                           ;EWH.c: 190:                 DD_SetState(COOLER,OFF);
  2934  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  2935  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  2936  03FA  01A0               	clrf	DD_SetState@state^(0+128)
  2937  03FB  3001               	movlw	1
  2938  03FC  120A  158A  2488  120A  118A  	fcall	_DD_SetState
  2939  0401                     l3398:
  2940                           
  2941                           ;EWH.c: 195:         if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED) && (EWH_Mode!=EWH_SLEEP_M
      +                          ODE))
  2942  0401  1283               	bcf	3,5	;RP0=0, select bank0
  2943  0402  1303               	bcf	3,6	;RP1=0, select bank0
  2944  0403  0806               	movf	6,w	;volatile
  2945  0404  1683               	bsf	3,5	;RP0=1, select bank1
  2946  0405  1303               	bcf	3,6	;RP1=0, select bank1
  2947  0406  00AE               	movwf	??_EWH_Operating_Mode^(0+128)
  2948  0407  3002               	movlw	2
  2949  0408                     u3315:
  2950  0408  1003               	clrc
  2951  0409  0CAE               	rrf	??_EWH_Operating_Mode^(0+128),f
  2952  040A  3EFF               	addlw	-1
  2953  040B  1D03               	skipz
  2954  040C  2C08               	goto	u3315
  2955  040D  182E               	btfsc	??_EWH_Operating_Mode^(0+128),0
  2956  040E  2C10               	goto	u3321
  2957  040F  2C11               	goto	u3320
  2958  0410                     u3321:
  2959  0410  2C4C               	goto	l3416
  2960  0411                     u3320:
  2961  0411                     l3400:
  2962  0411  0849               	movf	_EWH_Mode^(0+128),w
  2963  0412  1903               	btfsc	3,2
  2964  0413  2C15               	goto	u3331
  2965  0414  2C16               	goto	u3330
  2966  0415                     u3331:
  2967  0415  2C4C               	goto	l3416
  2968  0416                     u3330:
  2969  0416                     l3402:
  2970                           
  2971                           ;EWH.c: 196:         {;EWH.c: 197:             _delay((unsigned long)((50)*(4000000/4000
      +                          .0)));
  2972  0416  3041               	movlw	65
  2973  0417  1683               	bsf	3,5	;RP0=1, select bank1
  2974  0418  1303               	bcf	3,6	;RP1=0, select bank1
  2975  0419  00AF               	movwf	(??_EWH_Operating_Mode^(0+128)+1)
  2976  041A  30ED               	movlw	237
  2977  041B  00AE               	movwf	??_EWH_Operating_Mode^(0+128)
  2978  041C                     u3867:
  2979  041C  0BAE               	decfsz	??_EWH_Operating_Mode^(0+128),f
  2980  041D  2C1C               	goto	u3867
  2981  041E  0BAF               	decfsz	(??_EWH_Operating_Mode^(0+128)+1),f
  2982  041F  2C1C               	goto	u3867
  2983  0420  2C21               	nop2
  2984  0421                     l3404:
  2985                           
  2986                           ;EWH.c: 198:             if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED))
  2987  0421  1283               	bcf	3,5	;RP0=0, select bank0
  2988  0422  1303               	bcf	3,6	;RP1=0, select bank0
  2989  0423  0806               	movf	6,w	;volatile
  2990  0424  1683               	bsf	3,5	;RP0=1, select bank1
  2991  0425  1303               	bcf	3,6	;RP1=0, select bank1
  2992  0426  00AE               	movwf	??_EWH_Operating_Mode^(0+128)
  2993  0427  3002               	movlw	2
  2994  0428                     u3345:
  2995  0428  1003               	clrc
  2996  0429  0CAE               	rrf	??_EWH_Operating_Mode^(0+128),f
  2997  042A  3EFF               	addlw	-1
  2998  042B  1D03               	skipz
  2999  042C  2C28               	goto	u3345
  3000  042D  182E               	btfsc	??_EWH_Operating_Mode^(0+128),0
  3001  042E  2C30               	goto	u3351
  3002  042F  2C31               	goto	u3350
  3003  0430                     u3351:
  3004  0430  2C4C               	goto	l3416
  3005  0431                     u3350:
  3006  0431                     l3406:
  3007                           
  3008                           ;EWH.c: 199:             {;EWH.c: 201:                 EWH_SetEvent(1);
  3009  0431  3001               	movlw	1
  3010  0432  120A  158A  204C  120A  118A  	fcall	_EWH_SetEvent
  3011  0437                     l3408:
  3012                           
  3013                           ;EWH.c: 203:                 TMR1_Stop();
  3014  0437  120A  158A  2003  120A  118A  	fcall	_TMR1_Stop
  3015  043C                     l3410:
  3016                           
  3017                           ;EWH.c: 205:                 EWH_ClearEvent(1);
  3018  043C  3001               	movlw	1
  3019  043D  120A  158A  2043  120A  118A  	fcall	_EWH_ClearEvent
  3020  0442                     l3412:
  3021                           
  3022                           ;EWH.c: 207:                 NoPress_Sec_count=0;
  3023  0442  1283               	bcf	3,5	;RP0=0, select bank0
  3024  0443  1303               	bcf	3,6	;RP1=0, select bank0
  3025  0444  01D4               	clrf	_NoPress_Sec_count
  3026  0445                     l3414:
  3027                           
  3028                           ;EWH.c: 209:                 EWH_SetMode(EWH_SET_TEMP_MODE);
  3029  0445  3002               	movlw	2
  3030  0446  120A  158A  200F  120A  118A  	fcall	_EWH_SetMode
  3031                           
  3032                           ;EWH.c: 211:                 break;
  3033  044B  2CB6               	goto	l510
  3034  044C                     l3416:
  3035                           
  3036                           ;EWH.c: 214:         if((!((PORTB & (1<<1)) >> 1)==SW_PRESSED) && (EWH_Mode!=EWH_SLEEP_M
      +                          ODE))
  3037  044C  1283               	bcf	3,5	;RP0=0, select bank0
  3038  044D  1303               	bcf	3,6	;RP1=0, select bank0
  3039  044E  0806               	movf	6,w	;volatile
  3040  044F  1683               	bsf	3,5	;RP0=1, select bank1
  3041  0450  1303               	bcf	3,6	;RP1=0, select bank1
  3042  0451  00AE               	movwf	??_EWH_Operating_Mode^(0+128)
  3043  0452  3001               	movlw	1
  3044  0453                     u3365:
  3045  0453  1003               	clrc
  3046  0454  0CAE               	rrf	??_EWH_Operating_Mode^(0+128),f
  3047  0455  3EFF               	addlw	-1
  3048  0456  1D03               	skipz
  3049  0457  2C53               	goto	u3365
  3050  0458  182E               	btfsc	??_EWH_Operating_Mode^(0+128),0
  3051  0459  2C5B               	goto	u3371
  3052  045A  2C5C               	goto	u3370
  3053  045B                     u3371:
  3054  045B  2C97               	goto	l3434
  3055  045C                     u3370:
  3056  045C                     l3418:
  3057  045C  0849               	movf	_EWH_Mode^(0+128),w
  3058  045D  1903               	btfsc	3,2
  3059  045E  2C60               	goto	u3381
  3060  045F  2C61               	goto	u3380
  3061  0460                     u3381:
  3062  0460  2C97               	goto	l3434
  3063  0461                     u3380:
  3064  0461                     l3420:
  3065                           
  3066                           ;EWH.c: 215:         {;EWH.c: 216:             _delay((unsigned long)((50)*(4000000/4000
      +                          .0)));
  3067  0461  3041               	movlw	65
  3068  0462  1683               	bsf	3,5	;RP0=1, select bank1
  3069  0463  1303               	bcf	3,6	;RP1=0, select bank1
  3070  0464  00AF               	movwf	(??_EWH_Operating_Mode^(0+128)+1)
  3071  0465  30ED               	movlw	237
  3072  0466  00AE               	movwf	??_EWH_Operating_Mode^(0+128)
  3073  0467                     u3877:
  3074  0467  0BAE               	decfsz	??_EWH_Operating_Mode^(0+128),f
  3075  0468  2C67               	goto	u3877
  3076  0469  0BAF               	decfsz	(??_EWH_Operating_Mode^(0+128)+1),f
  3077  046A  2C67               	goto	u3877
  3078  046B  2C6C               	nop2
  3079  046C                     l3422:
  3080                           
  3081                           ;EWH.c: 217:             if((!((PORTB & (1<<1)) >> 1)==SW_PRESSED))
  3082  046C  1283               	bcf	3,5	;RP0=0, select bank0
  3083  046D  1303               	bcf	3,6	;RP1=0, select bank0
  3084  046E  0806               	movf	6,w	;volatile
  3085  046F  1683               	bsf	3,5	;RP0=1, select bank1
  3086  0470  1303               	bcf	3,6	;RP1=0, select bank1
  3087  0471  00AE               	movwf	??_EWH_Operating_Mode^(0+128)
  3088  0472  3001               	movlw	1
  3089  0473                     u3395:
  3090  0473  1003               	clrc
  3091  0474  0CAE               	rrf	??_EWH_Operating_Mode^(0+128),f
  3092  0475  3EFF               	addlw	-1
  3093  0476  1D03               	skipz
  3094  0477  2C73               	goto	u3395
  3095  0478  182E               	btfsc	??_EWH_Operating_Mode^(0+128),0
  3096  0479  2C7B               	goto	u3401
  3097  047A  2C7C               	goto	u3400
  3098  047B                     u3401:
  3099  047B  2C97               	goto	l3434
  3100  047C                     u3400:
  3101  047C                     l3424:
  3102                           
  3103                           ;EWH.c: 218:             {;EWH.c: 220:                 EWH_SetEvent(2);
  3104  047C  3002               	movlw	2
  3105  047D  120A  158A  204C  120A  118A  	fcall	_EWH_SetEvent
  3106  0482                     l3426:
  3107                           
  3108                           ;EWH.c: 222:                 TMR1_Stop();
  3109  0482  120A  158A  2003  120A  118A  	fcall	_TMR1_Stop
  3110  0487                     l3428:
  3111                           
  3112                           ;EWH.c: 224:                 EWH_ClearEvent(2);
  3113  0487  3002               	movlw	2
  3114  0488  120A  158A  2043  120A  118A  	fcall	_EWH_ClearEvent
  3115  048D                     l3430:
  3116                           
  3117                           ;EWH.c: 226:                 NoPress_Sec_count=0;
  3118  048D  1283               	bcf	3,5	;RP0=0, select bank0
  3119  048E  1303               	bcf	3,6	;RP1=0, select bank0
  3120  048F  01D4               	clrf	_NoPress_Sec_count
  3121  0490                     l3432:
  3122                           
  3123                           ;EWH.c: 228:                 EWH_SetMode(EWH_SET_TEMP_MODE);
  3124  0490  3002               	movlw	2
  3125  0491  120A  158A  200F  120A  118A  	fcall	_EWH_SetMode
  3126                           
  3127                           ;EWH.c: 230:                 break;
  3128  0496  2CB6               	goto	l510
  3129  0497                     l3434:
  3130                           
  3131                           ;EWH.c: 233:         if(EWH_Events[0]==1)
  3132  0497  033D               	decf	_EWH_Events^(0+128),w
  3133  0498  1D03               	btfss	3,2
  3134  0499  2C9B               	goto	u3411
  3135  049A  2C9C               	goto	u3410
  3136  049B                     u3411:
  3137  049B  2CA9               	goto	l3440
  3138  049C                     u3410:
  3139  049C                     l3436:
  3140                           
  3141                           ;EWH.c: 234:         {;EWH.c: 236:             EWH_ClearEvent(0);
  3142  049C  3000               	movlw	0
  3143  049D  120A  158A  2043  120A  118A  	fcall	_EWH_ClearEvent
  3144  04A2                     l3438:
  3145                           
  3146                           ;EWH.c: 238:             EWH_SetMode(EWH_SLEEP_MODE);
  3147  04A2  3000               	movlw	0
  3148  04A3  120A  158A  200F  120A  118A  	fcall	_EWH_SetMode
  3149                           
  3150                           ;EWH.c: 240:             break ;
  3151  04A8  2CB6               	goto	l510
  3152  04A9                     l3440:
  3153                           
  3154                           ;EWH.c: 243:         EWH_SSD_Update(current_Temp);
  3155  04A9  0847               	movf	_current_Temp^(0+128),w
  3156  04AA  00AE               	movwf	??_EWH_Operating_Mode^(0+128)
  3157  04AB  01AF               	clrf	(??_EWH_Operating_Mode^(0+128)+1)
  3158  04AC  082E               	movf	??_EWH_Operating_Mode^(0+128),w
  3159  04AD  00AA               	movwf	EWH_SSD_Update@temp^(0+128)
  3160  04AE  082F               	movf	(??_EWH_Operating_Mode+1)^(0+128),w
  3161  04AF  00AB               	movwf	(EWH_SSD_Update@temp+1)^(0+128)
  3162  04B0  120A  118A  27A4  120A  118A  	fcall	_EWH_SSD_Update
  3163  04B5  2B9D               	goto	l3386
  3164  04B6                     l510:
  3165  04B6  0008               	return
  3166  04B7                     __end_of_EWH_Operating_Mode:
  3167                           
  3168                           	psect	text12
  3169  0803                     __ptext12:	
  3170 ;; *************** function _TMR1_Stop *****************
  3171 ;; Defined at:
  3172 ;;		line 53 in file "TMR1.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;		None
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;		None
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  1    wreg      void 
  3179 ;; Registers used:
  3180 ;;		None
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3186 ;;      Params:         0       0       0       0       0
  3187 ;;      Locals:         0       0       0       0       0
  3188 ;;      Temps:          0       0       0       0       0
  3189 ;;      Totals:         0       0       0       0       0
  3190 ;;Total ram usage:        0 bytes
  3191 ;; Hardware stack levels used:    1
  3192 ;; Hardware stack levels required when called:    4
  3193 ;; This function calls:
  3194 ;;		Nothing
  3195 ;; This function is called by:
  3196 ;;		_EWH_Sleep_Mode
  3197 ;;		_EWH_Operating_Mode
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201                           
  3202                           ;psect for function _TMR1_Stop
  3203  0803                     _TMR1_Stop:
  3204  0803                     l2982:	
  3205                           ;incstack = 0
  3206                           ; Regs used in _TMR1_Stop: []
  3207                           
  3208                           
  3209                           ;TMR1.c: 55:     (TMR1ON = 0);
  3210  0803  1283               	bcf	3,5	;RP0=0, select bank0
  3211  0804  1303               	bcf	3,6	;RP1=0, select bank0
  3212  0805  1010               	bcf	16,0	;volatile
  3213  0806                     l326:
  3214  0806  0008               	return
  3215  0807                     __end_of_TMR1_Stop:
  3216                           
  3217                           	psect	text13
  3218  08B5                     __ptext13:	
  3219 ;; *************** function _TMR1_Start *****************
  3220 ;; Defined at:
  3221 ;;		line 43 in file "TMR1.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;		None
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;		None
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  1    wreg      void 
  3228 ;; Registers used:
  3229 ;;		None
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3235 ;;      Params:         0       0       0       0       0
  3236 ;;      Locals:         0       0       0       0       0
  3237 ;;      Temps:          0       0       0       0       0
  3238 ;;      Totals:         0       0       0       0       0
  3239 ;;Total ram usage:        0 bytes
  3240 ;; Hardware stack levels used:    1
  3241 ;; Hardware stack levels required when called:    4
  3242 ;; This function calls:
  3243 ;;		Nothing
  3244 ;; This function is called by:
  3245 ;;		_EWH_SetTemp_Mode
  3246 ;;		_EWH_Operating_Mode
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250                           
  3251                           ;psect for function _TMR1_Start
  3252  08B5                     _TMR1_Start:
  3253  08B5                     l2980:	
  3254                           ;incstack = 0
  3255                           ; Regs used in _TMR1_Start: []
  3256                           
  3257                           
  3258                           ;TMR1.c: 45:     (TMR1IF = 0);
  3259  08B5  1283               	bcf	3,5	;RP0=0, select bank0
  3260  08B6  1303               	bcf	3,6	;RP1=0, select bank0
  3261  08B7  100C               	bcf	12,0	;volatile
  3262                           
  3263                           ;TMR1.c: 46:     (TMR1IE = 1);
  3264  08B8  1683               	bsf	3,5	;RP0=1, select bank1
  3265  08B9  1303               	bcf	3,6	;RP1=0, select bank1
  3266  08BA  140C               	bsf	12,0	;volatile
  3267                           
  3268                           ;TMR1.c: 47:     (PEIE = 1);
  3269  08BB  170B               	bsf	11,6	;volatile
  3270                           
  3271                           ;TMR1.c: 48:     (GIE = 1);
  3272  08BC  178B               	bsf	11,7	;volatile
  3273                           
  3274                           ;TMR1.c: 49:     TMR1=40536;
  3275  08BD  309E               	movlw	158
  3276  08BE  1283               	bcf	3,5	;RP0=0, select bank0
  3277  08BF  1303               	bcf	3,6	;RP1=0, select bank0
  3278  08C0  008F               	movwf	15	;volatile
  3279  08C1  3058               	movlw	88
  3280  08C2  008E               	movwf	14	;volatile
  3281                           
  3282                           ;TMR1.c: 50:     (TMR1ON = 1);
  3283  08C3  1410               	bsf	16,0	;volatile
  3284  08C4                     l323:
  3285  08C4  0008               	return
  3286  08C5                     __end_of_TMR1_Start:
  3287                           
  3288                           	psect	text14
  3289  080F                     __ptext14:	
  3290 ;; *************** function _EWH_SetMode *****************
  3291 ;; Defined at:
  3292 ;;		line 288 in file "EWH.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;  new_mode        1    wreg     enum E1032
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;  new_mode        1    0[BANK1 ] enum E1032
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      void 
  3299 ;; Registers used:
  3300 ;;		wreg, btemp+1
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3306 ;;      Params:         0       0       0       0       0
  3307 ;;      Locals:         0       0       1       0       0
  3308 ;;      Temps:          0       0       0       0       0
  3309 ;;      Totals:         0       0       1       0       0
  3310 ;;Total ram usage:        1 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; Hardware stack levels required when called:    4
  3313 ;; This function calls:
  3314 ;;		Nothing
  3315 ;; This function is called by:
  3316 ;;		_EWH_WakeUP_Mode
  3317 ;;		_EWH_SetTemp_Mode
  3318 ;;		_EWH_Operating_Mode
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322                           
  3323                           ;psect for function _EWH_SetMode
  3324  080F                     _EWH_SetMode:
  3325                           
  3326                           ;incstack = 0
  3327                           ; Regs used in _EWH_SetMode: [wreg+btemp+1]
  3328                           ;EWH_SetMode@new_mode stored from wreg
  3329  080F  1683               	bsf	3,5	;RP0=1, select bank1
  3330  0810  1303               	bcf	3,6	;RP1=0, select bank1
  3331  0811  00A0               	movwf	EWH_SetMode@new_mode^(0+128)
  3332  0812                     l3020:
  3333                           
  3334                           ;EWH.c: 288: void EWH_SetMode(sEWH_Mode new_mode);EWH.c: 289: {;EWH.c: 290:     EWH_Mode
      +                          =new_mode;
  3335  0812  0820               	movf	EWH_SetMode@new_mode^(0+128),w
  3336  0813  00FF               	movwf	btemp+1
  3337  0814  087F               	movf	btemp+1,w
  3338  0815  00C9               	movwf	_EWH_Mode^(0+128)
  3339  0816                     l516:
  3340  0816  0008               	return
  3341  0817                     __end_of_EWH_SetMode:
  3342                           
  3343                           	psect	text15
  3344  084C                     __ptext15:	
  3345 ;; *************** function _EWH_SetEvent *****************
  3346 ;; Defined at:
  3347 ;;		line 292 in file "EWH.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;  Event_index     1    wreg     unsigned char 
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;  Event_index     1    0[BANK1 ] unsigned char 
  3352 ;; Return value:  Size  Location     Type
  3353 ;;                  1    wreg      void 
  3354 ;; Registers used:
  3355 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3356 ;; Tracked objects:
  3357 ;;		On entry : 0/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3361 ;;      Params:         0       0       0       0       0
  3362 ;;      Locals:         0       0       1       0       0
  3363 ;;      Temps:          0       0       0       0       0
  3364 ;;      Totals:         0       0       1       0       0
  3365 ;;Total ram usage:        1 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; Hardware stack levels required when called:    4
  3368 ;; This function calls:
  3369 ;;		Nothing
  3370 ;; This function is called by:
  3371 ;;		_EWH_Operating_Mode
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           
  3376                           ;psect for function _EWH_SetEvent
  3377  084C                     _EWH_SetEvent:
  3378                           
  3379                           ;incstack = 0
  3380                           ; Regs used in _EWH_SetEvent: [wreg-fsr0h+status,2+status,0]
  3381                           ;EWH_SetEvent@Event_index stored from wreg
  3382  084C  1683               	bsf	3,5	;RP0=1, select bank1
  3383  084D  1303               	bcf	3,6	;RP1=0, select bank1
  3384  084E  00A0               	movwf	EWH_SetEvent@Event_index^(0+128)
  3385  084F                     l3024:
  3386                           
  3387                           ;EWH.c: 292: void EWH_SetEvent(uint8_t Event_index);EWH.c: 293: {;EWH.c: 294:     EWH_Ev
      +                          ents[Event_index]=1;
  3388  084F  0820               	movf	EWH_SetEvent@Event_index^(0+128),w
  3389  0850  3EBD               	addlw	(low (_EWH_Events| 0))& (0+255)
  3390  0851  0084               	movwf	4
  3391  0852  1383               	bcf	3,7	;select IRP bank1
  3392  0853  0180               	clrf	0
  3393  0854  0A80               	incf	0,f
  3394  0855                     l519:
  3395  0855  0008               	return
  3396  0856                     __end_of_EWH_SetEvent:
  3397                           
  3398                           	psect	text16
  3399  07A4                     __ptext16:	
  3400 ;; *************** function _EWH_SSD_Update *****************
  3401 ;; Defined at:
  3402 ;;		line 324 in file "EWH.c"
  3403 ;; Parameters:    Size  Location     Type
  3404 ;;  temp            2   10[BANK1 ] unsigned short 
  3405 ;; Auto vars:     Size  Location     Type
  3406 ;;		None
  3407 ;; Return value:  Size  Location     Type
  3408 ;;                  1    wreg      void 
  3409 ;; Registers used:
  3410 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3411 ;; Tracked objects:
  3412 ;;		On entry : 0/0
  3413 ;;		On exit  : 0/0
  3414 ;;		Unchanged: 0/0
  3415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3416 ;;      Params:         0       0       2       0       0
  3417 ;;      Locals:         0       0       0       0       0
  3418 ;;      Temps:          0       0       2       0       0
  3419 ;;      Totals:         0       0       4       0       0
  3420 ;;Total ram usage:        4 bytes
  3421 ;; Hardware stack levels used:    1
  3422 ;; Hardware stack levels required when called:    6
  3423 ;; This function calls:
  3424 ;;		_SSD_OFF
  3425 ;;		_SSD_Write
  3426 ;;		___awdiv
  3427 ;;		___lwmod
  3428 ;; This function is called by:
  3429 ;;		_EWH_WakeUP_Mode
  3430 ;;		_EWH_SetTemp_Mode
  3431 ;;		_EWH_Operating_Mode
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435                           
  3436                           ;psect for function _EWH_SSD_Update
  3437  07A4                     _EWH_SSD_Update:
  3438  07A4                     l3010:	
  3439                           ;incstack = 0
  3440                           ; Regs used in _EWH_SSD_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3441                           
  3442                           
  3443                           ;EWH.c: 324: void EWH_SSD_Update(uint16_t temp);EWH.c: 325: {;EWH.c: 326:     SSD_OFF(3)
      +                          ;
  3444  07A4  3003               	movlw	3
  3445  07A5  120A  158A  2074  120A  118A  	fcall	_SSD_OFF
  3446                           
  3447                           ;EWH.c: 327:     SSD_Write(4,temp%10);
  3448  07AA  300A               	movlw	10
  3449  07AB  1683               	bsf	3,5	;RP0=1, select bank1
  3450  07AC  1303               	bcf	3,6	;RP1=0, select bank1
  3451  07AD  00A0               	movwf	___lwmod@divisor^(0+128)
  3452  07AE  3000               	movlw	0
  3453  07AF  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  3454  07B0  082B               	movf	(EWH_SSD_Update@temp+1)^(0+128),w
  3455  07B1  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  3456  07B2  082A               	movf	EWH_SSD_Update@temp^(0+128),w
  3457  07B3  00A2               	movwf	___lwmod@dividend^(0+128)
  3458  07B4  120A  158A  229A  120A  118A  	fcall	___lwmod
  3459  07B9  1683               	bsf	3,5	;RP0=1, select bank1
  3460  07BA  1303               	bcf	3,6	;RP1=0, select bank1
  3461  07BB  0820               	movf	?___lwmod^(0+128),w
  3462  07BC  00FF               	movwf	btemp+1
  3463  07BD  087F               	movf	btemp+1,w
  3464  07BE  00A8               	movwf	SSD_Write@Number^(0+128)
  3465  07BF  3004               	movlw	4
  3466  07C0  120A  158A  2106  120A  118A  	fcall	_SSD_Write
  3467  07C5                     l3012:
  3468                           
  3469                           ;EWH.c: 328:     _delay((unsigned long)((25)*(4000000/4000.0)));
  3470  07C5  3021               	movlw	33
  3471  07C6  1683               	bsf	3,5	;RP0=1, select bank1
  3472  07C7  1303               	bcf	3,6	;RP1=0, select bank1
  3473  07C8  00AD               	movwf	(??_EWH_SSD_Update^(0+128)+1)
  3474  07C9  3075               	movlw	117
  3475  07CA  00AC               	movwf	??_EWH_SSD_Update^(0+128)
  3476  07CB                     u3887:
  3477  07CB  0BAC               	decfsz	??_EWH_SSD_Update^(0+128),f
  3478  07CC  2FCB               	goto	u3887
  3479  07CD  0BAD               	decfsz	(??_EWH_SSD_Update^(0+128)+1),f
  3480  07CE  2FCB               	goto	u3887
  3481  07CF  2FD0               	nop2
  3482  07D0                     l3014:
  3483                           
  3484                           ;EWH.c: 329:     SSD_OFF(4);
  3485  07D0  3004               	movlw	4
  3486  07D1  120A  158A  2074  120A  118A  	fcall	_SSD_OFF
  3487  07D6                     l3016:
  3488                           
  3489                           ;EWH.c: 330:     SSD_Write(3,(uint8_t)temp/10);
  3490  07D6  300A               	movlw	10
  3491  07D7  1683               	bsf	3,5	;RP0=1, select bank1
  3492  07D8  1303               	bcf	3,6	;RP1=0, select bank1
  3493  07D9  00A0               	movwf	___awdiv@divisor^(0+128)
  3494  07DA  3000               	movlw	0
  3495  07DB  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
  3496  07DC  082A               	movf	EWH_SSD_Update@temp^(0+128),w
  3497  07DD  00AC               	movwf	??_EWH_SSD_Update^(0+128)
  3498  07DE  01AD               	clrf	(??_EWH_SSD_Update^(0+128)+1)
  3499  07DF  082C               	movf	??_EWH_SSD_Update^(0+128),w
  3500  07E0  00A2               	movwf	___awdiv@dividend^(0+128)
  3501  07E1  082D               	movf	(??_EWH_SSD_Update+1)^(0+128),w
  3502  07E2  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
  3503  07E3  120A  158A  25A5  120A  118A  	fcall	___awdiv
  3504  07E8  1683               	bsf	3,5	;RP0=1, select bank1
  3505  07E9  1303               	bcf	3,6	;RP1=0, select bank1
  3506  07EA  0820               	movf	?___awdiv^(0+128),w
  3507  07EB  00FF               	movwf	btemp+1
  3508  07EC  087F               	movf	btemp+1,w
  3509  07ED  00A8               	movwf	SSD_Write@Number^(0+128)
  3510  07EE  3003               	movlw	3
  3511  07EF  120A  158A  2106  120A  118A  	fcall	_SSD_Write
  3512  07F4                     l3018:
  3513                           
  3514                           ;EWH.c: 331:     _delay((unsigned long)((25)*(4000000/4000.0)));
  3515  07F4  3021               	movlw	33
  3516  07F5  1683               	bsf	3,5	;RP0=1, select bank1
  3517  07F6  1303               	bcf	3,6	;RP1=0, select bank1
  3518  07F7  00AD               	movwf	(??_EWH_SSD_Update^(0+128)+1)
  3519  07F8  3075               	movlw	117
  3520  07F9  00AC               	movwf	??_EWH_SSD_Update^(0+128)
  3521  07FA                     u3897:
  3522  07FA  0BAC               	decfsz	??_EWH_SSD_Update^(0+128),f
  3523  07FB  2FFA               	goto	u3897
  3524  07FC  0BAD               	decfsz	(??_EWH_SSD_Update^(0+128)+1),f
  3525  07FD  2FFA               	goto	u3897
  3526  07FE  2FFF               	nop2
  3527  07FF                     l540:
  3528  07FF  0008               	return
  3529  0800                     __end_of_EWH_SSD_Update:
  3530                           
  3531                           	psect	text17
  3532  0A9A                     __ptext17:	
  3533 ;; *************** function ___lwmod *****************
  3534 ;; Defined at:
  3535 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;  divisor         2    0[BANK1 ] unsigned int 
  3538 ;;  dividend        2    2[BANK1 ] unsigned int 
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;  counter         1    4[BANK1 ] unsigned char 
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  2    0[BANK1 ] unsigned int 
  3543 ;; Registers used:
  3544 ;;		wreg, status,2, status,0, btemp+1
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3550 ;;      Params:         0       0       4       0       0
  3551 ;;      Locals:         0       0       1       0       0
  3552 ;;      Temps:          0       0       0       0       0
  3553 ;;      Totals:         0       0       5       0       0
  3554 ;;Total ram usage:        5 bytes
  3555 ;; Hardware stack levels used:    1
  3556 ;; Hardware stack levels required when called:    4
  3557 ;; This function calls:
  3558 ;;		Nothing
  3559 ;; This function is called by:
  3560 ;;		_EWH_SSD_Update
  3561 ;; This function uses a non-reentrant model
  3562 ;;
  3563                           
  3564                           
  3565                           ;psect for function ___lwmod
  3566  0A9A                     ___lwmod:
  3567  0A9A                     l2802:	
  3568                           ;incstack = 0
  3569                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  3570                           
  3571  0A9A  1683               	bsf	3,5	;RP0=1, select bank1
  3572  0A9B  1303               	bcf	3,6	;RP1=0, select bank1
  3573  0A9C  0820               	movf	___lwmod@divisor^(0+128),w
  3574  0A9D  0421               	iorwf	(___lwmod@divisor+1)^(0+128),w
  3575  0A9E  1903               	btfsc	3,2
  3576  0A9F  2AA1               	goto	u2301
  3577  0AA0  2AA2               	goto	u2300
  3578  0AA1                     u2301:
  3579  0AA1  2AD1               	goto	l2820
  3580  0AA2                     u2300:
  3581  0AA2                     l2804:
  3582  0AA2  01A4               	clrf	___lwmod@counter^(0+128)
  3583  0AA3  0AA4               	incf	___lwmod@counter^(0+128),f
  3584  0AA4  2AB0               	goto	l2810
  3585  0AA5                     l2806:
  3586  0AA5  3001               	movlw	1
  3587  0AA6                     u2315:
  3588  0AA6  1003               	clrc
  3589  0AA7  0DA0               	rlf	___lwmod@divisor^(0+128),f
  3590  0AA8  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
  3591  0AA9  3EFF               	addlw	-1
  3592  0AAA  1D03               	skipz
  3593  0AAB  2AA6               	goto	u2315
  3594  0AAC                     l2808:
  3595  0AAC  3001               	movlw	1
  3596  0AAD  00FF               	movwf	btemp+1
  3597  0AAE  087F               	movf	btemp+1,w
  3598  0AAF  07A4               	addwf	___lwmod@counter^(0+128),f
  3599  0AB0                     l2810:
  3600  0AB0  1FA1               	btfss	(___lwmod@divisor+1)^(0+128),7
  3601  0AB1  2AB3               	goto	u2321
  3602  0AB2  2AB4               	goto	u2320
  3603  0AB3                     u2321:
  3604  0AB3  2AA5               	goto	l2806
  3605  0AB4                     u2320:
  3606  0AB4                     l2812:
  3607  0AB4  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  3608  0AB5  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
  3609  0AB6  1D03               	skipz
  3610  0AB7  2ABA               	goto	u2335
  3611  0AB8  0820               	movf	___lwmod@divisor^(0+128),w
  3612  0AB9  0222               	subwf	___lwmod@dividend^(0+128),w
  3613  0ABA                     u2335:
  3614  0ABA  1C03               	skipc
  3615  0ABB  2ABD               	goto	u2331
  3616  0ABC  2ABE               	goto	u2330
  3617  0ABD                     u2331:
  3618  0ABD  2AC4               	goto	l2816
  3619  0ABE                     u2330:
  3620  0ABE                     l2814:
  3621  0ABE  0820               	movf	___lwmod@divisor^(0+128),w
  3622  0ABF  02A2               	subwf	___lwmod@dividend^(0+128),f
  3623  0AC0  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  3624  0AC1  1C03               	skipc
  3625  0AC2  03A3               	decf	(___lwmod@dividend+1)^(0+128),f
  3626  0AC3  02A3               	subwf	(___lwmod@dividend+1)^(0+128),f
  3627  0AC4                     l2816:
  3628  0AC4  3001               	movlw	1
  3629  0AC5                     u2345:
  3630  0AC5  1003               	clrc
  3631  0AC6  0CA1               	rrf	(___lwmod@divisor+1)^(0+128),f
  3632  0AC7  0CA0               	rrf	___lwmod@divisor^(0+128),f
  3633  0AC8  3EFF               	addlw	-1
  3634  0AC9  1D03               	skipz
  3635  0ACA  2AC5               	goto	u2345
  3636  0ACB                     l2818:
  3637  0ACB  3001               	movlw	1
  3638  0ACC  02A4               	subwf	___lwmod@counter^(0+128),f
  3639  0ACD  1D03               	btfss	3,2
  3640  0ACE  2AD0               	goto	u2351
  3641  0ACF  2AD1               	goto	u2350
  3642  0AD0                     u2351:
  3643  0AD0  2AB4               	goto	l2812
  3644  0AD1                     u2350:
  3645  0AD1                     l2820:
  3646  0AD1  0823               	movf	(___lwmod@dividend+1)^(0+128),w
  3647  0AD2  00A1               	movwf	(?___lwmod+1)^(0+128)
  3648  0AD3  0822               	movf	___lwmod@dividend^(0+128),w
  3649  0AD4  00A0               	movwf	?___lwmod^(0+128)
  3650  0AD5                     l1006:
  3651  0AD5  0008               	return
  3652  0AD6                     __end_of___lwmod:
  3653                           
  3654                           	psect	text18
  3655  0DA5                     __ptext18:	
  3656 ;; *************** function ___awdiv *****************
  3657 ;; Defined at:
  3658 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;  divisor         2    0[BANK1 ] int 
  3661 ;;  dividend        2    2[BANK1 ] int 
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;  quotient        2    6[BANK1 ] int 
  3664 ;;  sign            1    5[BANK1 ] unsigned char 
  3665 ;;  counter         1    4[BANK1 ] unsigned char 
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  2    0[BANK1 ] int 
  3668 ;; Registers used:
  3669 ;;		wreg, status,2, status,0, btemp+1
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3675 ;;      Params:         0       0       4       0       0
  3676 ;;      Locals:         0       0       4       0       0
  3677 ;;      Temps:          0       0       0       0       0
  3678 ;;      Totals:         0       0       8       0       0
  3679 ;;Total ram usage:        8 bytes
  3680 ;; Hardware stack levels used:    1
  3681 ;; Hardware stack levels required when called:    4
  3682 ;; This function calls:
  3683 ;;		Nothing
  3684 ;; This function is called by:
  3685 ;;		_EWH_SSD_Update
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689                           
  3690                           ;psect for function ___awdiv
  3691  0DA5                     ___awdiv:
  3692  0DA5                     l2732:	
  3693                           ;incstack = 0
  3694                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  3695                           
  3696  0DA5  1683               	bsf	3,5	;RP0=1, select bank1
  3697  0DA6  1303               	bcf	3,6	;RP1=0, select bank1
  3698  0DA7  01A5               	clrf	___awdiv@sign^(0+128)
  3699  0DA8                     l2734:
  3700  0DA8  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  3701  0DA9  2DAB               	goto	u2131
  3702  0DAA  2DAC               	goto	u2130
  3703  0DAB                     u2131:
  3704  0DAB  2DB3               	goto	l2740
  3705  0DAC                     u2130:
  3706  0DAC                     l2736:
  3707  0DAC  09A0               	comf	___awdiv@divisor^(0+128),f
  3708  0DAD  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
  3709  0DAE  0AA0               	incf	___awdiv@divisor^(0+128),f
  3710  0DAF  1903               	skipnz
  3711  0DB0  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
  3712  0DB1                     l2738:
  3713  0DB1  01A5               	clrf	___awdiv@sign^(0+128)
  3714  0DB2  0AA5               	incf	___awdiv@sign^(0+128),f
  3715  0DB3                     l2740:
  3716  0DB3  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
  3717  0DB4  2DB6               	goto	u2141
  3718  0DB5  2DB7               	goto	u2140
  3719  0DB6                     u2141:
  3720  0DB6  2DC0               	goto	l2746
  3721  0DB7                     u2140:
  3722  0DB7                     l2742:
  3723  0DB7  09A2               	comf	___awdiv@dividend^(0+128),f
  3724  0DB8  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
  3725  0DB9  0AA2               	incf	___awdiv@dividend^(0+128),f
  3726  0DBA  1903               	skipnz
  3727  0DBB  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
  3728  0DBC                     l2744:
  3729  0DBC  3001               	movlw	1
  3730  0DBD  00FF               	movwf	btemp+1
  3731  0DBE  087F               	movf	btemp+1,w
  3732  0DBF  06A5               	xorwf	___awdiv@sign^(0+128),f
  3733  0DC0                     l2746:
  3734  0DC0  01A6               	clrf	___awdiv@quotient^(0+128)
  3735  0DC1  01A7               	clrf	(___awdiv@quotient+1)^(0+128)
  3736  0DC2                     l2748:
  3737  0DC2  0820               	movf	___awdiv@divisor^(0+128),w
  3738  0DC3  0421               	iorwf	(___awdiv@divisor+1)^(0+128),w
  3739  0DC4  1903               	btfsc	3,2
  3740  0DC5  2DC7               	goto	u2151
  3741  0DC6  2DC8               	goto	u2150
  3742  0DC7                     u2151:
  3743  0DC7  2DFF               	goto	l2768
  3744  0DC8                     u2150:
  3745  0DC8                     l2750:
  3746  0DC8  01A4               	clrf	___awdiv@counter^(0+128)
  3747  0DC9  0AA4               	incf	___awdiv@counter^(0+128),f
  3748  0DCA  2DD6               	goto	l2756
  3749  0DCB                     l2752:
  3750  0DCB  3001               	movlw	1
  3751  0DCC                     u2165:
  3752  0DCC  1003               	clrc
  3753  0DCD  0DA0               	rlf	___awdiv@divisor^(0+128),f
  3754  0DCE  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
  3755  0DCF  3EFF               	addlw	-1
  3756  0DD0  1D03               	skipz
  3757  0DD1  2DCC               	goto	u2165
  3758  0DD2                     l2754:
  3759  0DD2  3001               	movlw	1
  3760  0DD3  00FF               	movwf	btemp+1
  3761  0DD4  087F               	movf	btemp+1,w
  3762  0DD5  07A4               	addwf	___awdiv@counter^(0+128),f
  3763  0DD6                     l2756:
  3764  0DD6  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  3765  0DD7  2DD9               	goto	u2171
  3766  0DD8  2DDA               	goto	u2170
  3767  0DD9                     u2171:
  3768  0DD9  2DCB               	goto	l2752
  3769  0DDA                     u2170:
  3770  0DDA                     l2758:
  3771  0DDA  3001               	movlw	1
  3772  0DDB                     u2185:
  3773  0DDB  1003               	clrc
  3774  0DDC  0DA6               	rlf	___awdiv@quotient^(0+128),f
  3775  0DDD  0DA7               	rlf	(___awdiv@quotient+1)^(0+128),f
  3776  0DDE  3EFF               	addlw	-1
  3777  0DDF  1D03               	skipz
  3778  0DE0  2DDB               	goto	u2185
  3779  0DE1  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  3780  0DE2  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
  3781  0DE3  1D03               	skipz
  3782  0DE4  2DE7               	goto	u2195
  3783  0DE5  0820               	movf	___awdiv@divisor^(0+128),w
  3784  0DE6  0222               	subwf	___awdiv@dividend^(0+128),w
  3785  0DE7                     u2195:
  3786  0DE7  1C03               	skipc
  3787  0DE8  2DEA               	goto	u2191
  3788  0DE9  2DEB               	goto	u2190
  3789  0DEA                     u2191:
  3790  0DEA  2DF2               	goto	l2764
  3791  0DEB                     u2190:
  3792  0DEB                     l2760:
  3793  0DEB  0820               	movf	___awdiv@divisor^(0+128),w
  3794  0DEC  02A2               	subwf	___awdiv@dividend^(0+128),f
  3795  0DED  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  3796  0DEE  1C03               	skipc
  3797  0DEF  03A3               	decf	(___awdiv@dividend+1)^(0+128),f
  3798  0DF0  02A3               	subwf	(___awdiv@dividend+1)^(0+128),f
  3799  0DF1                     l2762:
  3800  0DF1  1426               	bsf	___awdiv@quotient^(0+128),0
  3801  0DF2                     l2764:
  3802  0DF2  3001               	movlw	1
  3803  0DF3                     u2205:
  3804  0DF3  1003               	clrc
  3805  0DF4  0CA1               	rrf	(___awdiv@divisor+1)^(0+128),f
  3806  0DF5  0CA0               	rrf	___awdiv@divisor^(0+128),f
  3807  0DF6  3EFF               	addlw	-1
  3808  0DF7  1D03               	skipz
  3809  0DF8  2DF3               	goto	u2205
  3810  0DF9                     l2766:
  3811  0DF9  3001               	movlw	1
  3812  0DFA  02A4               	subwf	___awdiv@counter^(0+128),f
  3813  0DFB  1D03               	btfss	3,2
  3814  0DFC  2DFE               	goto	u2211
  3815  0DFD  2DFF               	goto	u2210
  3816  0DFE                     u2211:
  3817  0DFE  2DDA               	goto	l2758
  3818  0DFF                     u2210:
  3819  0DFF                     l2768:
  3820  0DFF  0825               	movf	___awdiv@sign^(0+128),w
  3821  0E00  1903               	btfsc	3,2
  3822  0E01  2E03               	goto	u2221
  3823  0E02  2E04               	goto	u2220
  3824  0E03                     u2221:
  3825  0E03  2E09               	goto	l2772
  3826  0E04                     u2220:
  3827  0E04                     l2770:
  3828  0E04  09A6               	comf	___awdiv@quotient^(0+128),f
  3829  0E05  09A7               	comf	(___awdiv@quotient+1)^(0+128),f
  3830  0E06  0AA6               	incf	___awdiv@quotient^(0+128),f
  3831  0E07  1903               	skipnz
  3832  0E08  0AA7               	incf	(___awdiv@quotient+1)^(0+128),f
  3833  0E09                     l2772:
  3834  0E09  0827               	movf	(___awdiv@quotient+1)^(0+128),w
  3835  0E0A  00A1               	movwf	(?___awdiv+1)^(0+128)
  3836  0E0B  0826               	movf	___awdiv@quotient^(0+128),w
  3837  0E0C  00A0               	movwf	?___awdiv^(0+128)
  3838  0E0D                     l877:
  3839  0E0D  0008               	return
  3840  0E0E                     __end_of___awdiv:
  3841                           
  3842                           	psect	text19
  3843  0906                     __ptext19:	
  3844 ;; *************** function _SSD_Write *****************
  3845 ;; Defined at:
  3846 ;;		line 41 in file "SSD.c"
  3847 ;; Parameters:    Size  Location     Type
  3848 ;;  ID              1    wreg     unsigned char 
  3849 ;;  Number          1    8[BANK1 ] unsigned char 
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;  ID              1    9[BANK1 ] unsigned char 
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  1    wreg      unsigned char 
  3854 ;; Registers used:
  3855 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3861 ;;      Params:         0       0       1       0       0
  3862 ;;      Locals:         0       0       1       0       0
  3863 ;;      Temps:          0       0       0       0       0
  3864 ;;      Totals:         0       0       2       0       0
  3865 ;;Total ram usage:        2 bytes
  3866 ;; Hardware stack levels used:    1
  3867 ;; Hardware stack levels required when called:    5
  3868 ;; This function calls:
  3869 ;;		_SSD_config
  3870 ;; This function is called by:
  3871 ;;		_EWH_SSD_Update
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           
  3876                           ;psect for function _SSD_Write
  3877  0906                     _SSD_Write:
  3878                           
  3879                           ;incstack = 0
  3880                           ; Regs used in _SSD_Write: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3881                           ;SSD_Write@ID stored from wreg
  3882  0906  1683               	bsf	3,5	;RP0=1, select bank1
  3883  0907  1303               	bcf	3,6	;RP1=0, select bank1
  3884  0908  00A9               	movwf	SSD_Write@ID^(0+128)
  3885  0909                     l2694:
  3886                           
  3887                           ;SSD.c: 41: Std_ReturnType SSD_Write(SSD_ID ID ,SSD_Number Number);SSD.c: 42: {;SSD.c: 4
      +                          4:     SSD_config(ID,ON);
  3888  0909  01A0               	clrf	SSD_config@SSD_state^(0+128)
  3889  090A  0AA0               	incf	SSD_config@SSD_state^(0+128),f
  3890  090B  0829               	movf	SSD_Write@ID^(0+128),w
  3891  090C  120A  158A  260E  120A  158A  	fcall	_SSD_config
  3892  0911                     l2696:
  3893                           
  3894                           ;SSD.c: 46:     ((TRISD)=(0u));
  3895  0911  1683               	bsf	3,5	;RP0=1, select bank1
  3896  0912  1303               	bcf	3,6	;RP1=0, select bank1
  3897  0913  0188               	clrf	8	;volatile
  3898  0914                     l2698:
  3899                           
  3900                           ;SSD.c: 48:     if((Number>=0) && (Number<=9))
  3901  0914  300A               	movlw	10
  3902  0915  0228               	subwf	SSD_Write@Number^(0+128),w
  3903  0916  1803               	skipnc
  3904  0917  2919               	goto	u2051
  3905  0918  291A               	goto	u2050
  3906  0919                     u2051:
  3907  0919  2922               	goto	l631
  3908  091A                     u2050:
  3909  091A                     l2700:
  3910                           
  3911                           ;SSD.c: 49:     {;SSD.c: 51:         ((PORTD)=(SSD_code[Number]));
  3912  091A  0828               	movf	SSD_Write@Number^(0+128),w
  3913  091B  3ECA               	addlw	(low (_SSD_code| 0))& (0+255)
  3914  091C  0084               	movwf	4
  3915  091D  1383               	bcf	3,7	;select IRP bank1
  3916  091E  0800               	movf	0,w
  3917  091F  1283               	bcf	3,5	;RP0=0, select bank0
  3918  0920  1303               	bcf	3,6	;RP1=0, select bank0
  3919  0921  0088               	movwf	8	;volatile
  3920  0922                     l631:
  3921  0922  0008               	return
  3922  0923                     __end_of_SSD_Write:
  3923                           
  3924                           	psect	text20
  3925  0874                     __ptext20:	
  3926 ;; *************** function _SSD_OFF *****************
  3927 ;; Defined at:
  3928 ;;		line 61 in file "SSD.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;  ID              1    wreg     unsigned char 
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;  ID              1    4[BANK1 ] unsigned char 
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      void 
  3935 ;; Registers used:
  3936 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3942 ;;      Params:         0       0       0       0       0
  3943 ;;      Locals:         0       0       1       0       0
  3944 ;;      Temps:          0       0       0       0       0
  3945 ;;      Totals:         0       0       1       0       0
  3946 ;;Total ram usage:        1 bytes
  3947 ;; Hardware stack levels used:    1
  3948 ;; Hardware stack levels required when called:    5
  3949 ;; This function calls:
  3950 ;;		_SSD_config
  3951 ;; This function is called by:
  3952 ;;		_EWH_SSD_OFF
  3953 ;;		_EWH_SSD_Update
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           
  3958                           ;psect for function _SSD_OFF
  3959  0874                     _SSD_OFF:
  3960                           
  3961                           ;incstack = 0
  3962                           ; Regs used in _SSD_OFF: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3963                           ;SSD_OFF@ID stored from wreg
  3964  0874  1683               	bsf	3,5	;RP0=1, select bank1
  3965  0875  1303               	bcf	3,6	;RP1=0, select bank1
  3966  0876  00A4               	movwf	SSD_OFF@ID^(0+128)
  3967  0877                     l2692:
  3968                           
  3969                           ;SSD.c: 61: void SSD_OFF (SSD_ID ID);SSD.c: 62: {;SSD.c: 63:     SSD_config(ID,OFF);
  3970  0877  01A0               	clrf	SSD_config@SSD_state^(0+128)
  3971  0878  0824               	movf	SSD_OFF@ID^(0+128),w
  3972  0879  120A  158A  260E  120A  158A  	fcall	_SSD_config
  3973  087E                     l635:
  3974  087E  0008               	return
  3975  087F                     __end_of_SSD_OFF:
  3976                           
  3977                           	psect	text21
  3978  0E0E                     __ptext21:	
  3979 ;; *************** function _SSD_config *****************
  3980 ;; Defined at:
  3981 ;;		line 17 in file "SSD.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;  ID              1    wreg     unsigned char 
  3984 ;;  SSD_state       1    0[BANK1 ] enum E13
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;  ID              1    3[BANK1 ] unsigned char 
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  1    wreg      void 
  3989 ;; Registers used:
  3990 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3996 ;;      Params:         0       0       1       0       0
  3997 ;;      Locals:         0       0       1       0       0
  3998 ;;      Temps:          0       0       2       0       0
  3999 ;;      Totals:         0       0       4       0       0
  4000 ;;Total ram usage:        4 bytes
  4001 ;; Hardware stack levels used:    1
  4002 ;; Hardware stack levels required when called:    4
  4003 ;; This function calls:
  4004 ;;		Nothing
  4005 ;; This function is called by:
  4006 ;;		_SSD_Write
  4007 ;;		_SSD_OFF
  4008 ;;		_SSD_ON
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011                           
  4012                           
  4013                           ;psect for function _SSD_config
  4014  0E0E                     _SSD_config:
  4015                           
  4016                           ;incstack = 0
  4017                           ; Regs used in _SSD_config: [wreg-fsr0h+status,2+status,0+btemp+1]
  4018                           ;SSD_config@ID stored from wreg
  4019  0E0E  1683               	bsf	3,5	;RP0=1, select bank1
  4020  0E0F  1303               	bcf	3,6	;RP1=0, select bank1
  4021  0E10  00A3               	movwf	SSD_config@ID^(0+128)
  4022  0E11                     l2620:
  4023                           
  4024                           ;SSD.c: 17: static void SSD_config (SSD_ID ID ,tState SSD_state);SSD.c: 18: {;SSD.c: 21:
      +                               switch(ID)
  4025  0E11  2E62               	goto	l2664
  4026  0E12                     l2624:
  4027  0E12  30FB               	movlw	251
  4028  0E13  00FF               	movwf	btemp+1
  4029  0E14  087F               	movf	btemp+1,w
  4030  0E15  0585               	andwf	5,f	;volatile
  4031  0E16                     l2626:
  4032                           
  4033                           ;SSD.c: 25:             (SSD_state)?(PORTA |= (1<<2)) : (PORTA &= ~(1<<2));
  4034  0E16  0820               	movf	SSD_config@SSD_state^(0+128),w
  4035  0E17  1903               	btfsc	3,2
  4036  0E18  2E1A               	goto	u1961
  4037  0E19  2E1B               	goto	u1960
  4038  0E1A                     u1961:
  4039  0E1A  2E1F               	goto	l2630
  4040  0E1B                     u1960:
  4041  0E1B                     l2628:
  4042  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  4043  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  4044  0E1D  1505               	bsf	5,2	;volatile
  4045  0E1E  2E78               	goto	l627
  4046  0E1F                     l2630:
  4047  0E1F  30FB               	movlw	251
  4048  0E20  00FF               	movwf	btemp+1
  4049  0E21  087F               	movf	btemp+1,w
  4050  0E22  1283               	bcf	3,5	;RP0=0, select bank0
  4051  0E23  1303               	bcf	3,6	;RP1=0, select bank0
  4052  0E24  0585               	andwf	5,f	;volatile
  4053  0E25  2E78               	goto	l627
  4054  0E26                     l2634:
  4055  0E26  30F7               	movlw	247
  4056  0E27  00FF               	movwf	btemp+1
  4057  0E28  087F               	movf	btemp+1,w
  4058  0E29  0585               	andwf	5,f	;volatile
  4059  0E2A                     l2636:
  4060                           
  4061                           ;SSD.c: 29:             (SSD_state)?(PORTA |= (1<<3)) : (PORTA &= ~(1<<3));
  4062  0E2A  0820               	movf	SSD_config@SSD_state^(0+128),w
  4063  0E2B  1903               	btfsc	3,2
  4064  0E2C  2E2E               	goto	u1971
  4065  0E2D  2E2F               	goto	u1970
  4066  0E2E                     u1971:
  4067  0E2E  2E33               	goto	l2640
  4068  0E2F                     u1970:
  4069  0E2F                     l2638:
  4070  0E2F  1283               	bcf	3,5	;RP0=0, select bank0
  4071  0E30  1303               	bcf	3,6	;RP1=0, select bank0
  4072  0E31  1585               	bsf	5,3	;volatile
  4073  0E32  2E78               	goto	l627
  4074  0E33                     l2640:
  4075  0E33  30F7               	movlw	247
  4076  0E34  00FF               	movwf	btemp+1
  4077  0E35  087F               	movf	btemp+1,w
  4078  0E36  1283               	bcf	3,5	;RP0=0, select bank0
  4079  0E37  1303               	bcf	3,6	;RP1=0, select bank0
  4080  0E38  0585               	andwf	5,f	;volatile
  4081  0E39  2E78               	goto	l627
  4082  0E3A                     l2644:
  4083  0E3A  30EF               	movlw	239
  4084  0E3B  00FF               	movwf	btemp+1
  4085  0E3C  087F               	movf	btemp+1,w
  4086  0E3D  0585               	andwf	5,f	;volatile
  4087  0E3E                     l2646:
  4088                           
  4089                           ;SSD.c: 33:             (SSD_state)?(PORTA |= (1<<4)) : (PORTA &= ~(1<<4));
  4090  0E3E  0820               	movf	SSD_config@SSD_state^(0+128),w
  4091  0E3F  1903               	btfsc	3,2
  4092  0E40  2E42               	goto	u1981
  4093  0E41  2E43               	goto	u1980
  4094  0E42                     u1981:
  4095  0E42  2E47               	goto	l2650
  4096  0E43                     u1980:
  4097  0E43                     l2648:
  4098  0E43  1283               	bcf	3,5	;RP0=0, select bank0
  4099  0E44  1303               	bcf	3,6	;RP1=0, select bank0
  4100  0E45  1605               	bsf	5,4	;volatile
  4101  0E46  2E78               	goto	l627
  4102  0E47                     l2650:
  4103  0E47  30EF               	movlw	239
  4104  0E48  00FF               	movwf	btemp+1
  4105  0E49  087F               	movf	btemp+1,w
  4106  0E4A  1283               	bcf	3,5	;RP0=0, select bank0
  4107  0E4B  1303               	bcf	3,6	;RP1=0, select bank0
  4108  0E4C  0585               	andwf	5,f	;volatile
  4109  0E4D  2E78               	goto	l627
  4110  0E4E                     l2654:
  4111  0E4E  30DF               	movlw	223
  4112  0E4F  00FF               	movwf	btemp+1
  4113  0E50  087F               	movf	btemp+1,w
  4114  0E51  0585               	andwf	5,f	;volatile
  4115  0E52                     l2656:
  4116                           
  4117                           ;SSD.c: 37:             (SSD_state)?(PORTA |= (1<<5)) : (PORTA &= ~(1<<5));
  4118  0E52  0820               	movf	SSD_config@SSD_state^(0+128),w
  4119  0E53  1903               	btfsc	3,2
  4120  0E54  2E56               	goto	u1991
  4121  0E55  2E57               	goto	u1990
  4122  0E56                     u1991:
  4123  0E56  2E5B               	goto	l2660
  4124  0E57                     u1990:
  4125  0E57                     l2658:
  4126  0E57  1283               	bcf	3,5	;RP0=0, select bank0
  4127  0E58  1303               	bcf	3,6	;RP1=0, select bank0
  4128  0E59  1685               	bsf	5,5	;volatile
  4129  0E5A  2E78               	goto	l627
  4130  0E5B                     l2660:
  4131  0E5B  30DF               	movlw	223
  4132  0E5C  00FF               	movwf	btemp+1
  4133  0E5D  087F               	movf	btemp+1,w
  4134  0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  4135  0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  4136  0E60  0585               	andwf	5,f	;volatile
  4137  0E61  2E78               	goto	l627
  4138  0E62                     l2664:
  4139  0E62  0823               	movf	SSD_config@ID^(0+128),w
  4140  0E63  00A1               	movwf	??_SSD_config^(0+128)
  4141  0E64  01A2               	clrf	(??_SSD_config^(0+128)+1)
  4142                           
  4143                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4144                           ; Switch size 1, requested type "simple"
  4145                           ; Number of cases is 1, Range of values is 0 to 0
  4146                           ; switch strategies available:
  4147                           ; Name         Instructions Cycles
  4148                           ; simple_byte            4     3 (average)
  4149                           ; direct_byte           11     8 (fixed)
  4150                           ; jumptable            260     6 (fixed)
  4151                           ;	Chosen strategy is simple_byte
  4152  0E65  0822               	movf	(??_SSD_config+1)^(0+128),w
  4153  0E66  3A00               	xorlw	0	; case 0
  4154  0E67  1903               	skipnz
  4155  0E68  2E6A               	goto	l3892
  4156  0E69  2E78               	goto	l627
  4157  0E6A                     l3892:
  4158                           
  4159                           ; Switch size 1, requested type "simple"
  4160                           ; Number of cases is 4, Range of values is 2 to 5
  4161                           ; switch strategies available:
  4162                           ; Name         Instructions Cycles
  4163                           ; simple_byte           13     7 (average)
  4164                           ; direct_byte           23    11 (fixed)
  4165                           ; jumptable            263     9 (fixed)
  4166                           ;	Chosen strategy is simple_byte
  4167  0E6A  0821               	movf	??_SSD_config^(0+128),w
  4168  0E6B  3A02               	xorlw	2	; case 2
  4169  0E6C  1903               	skipnz
  4170  0E6D  2E12               	goto	l2624
  4171  0E6E  3A01               	xorlw	1	; case 3
  4172  0E6F  1903               	skipnz
  4173  0E70  2E26               	goto	l2634
  4174  0E71  3A07               	xorlw	7	; case 4
  4175  0E72  1903               	skipnz
  4176  0E73  2E3A               	goto	l2644
  4177  0E74  3A01               	xorlw	1	; case 5
  4178  0E75  1903               	skipnz
  4179  0E76  2E4E               	goto	l2654
  4180  0E77  2E78               	goto	l627
  4181  0E78                     l627:
  4182  0E78  0008               	return
  4183  0E79                     __end_of_SSD_config:
  4184                           
  4185                           	psect	text22
  4186  0843                     __ptext22:	
  4187 ;; *************** function _EWH_ClearEvent *****************
  4188 ;; Defined at:
  4189 ;;		line 296 in file "EWH.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;  Event_index     1    wreg     unsigned char 
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;  Event_index     1    0[BANK1 ] unsigned char 
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  1    wreg      void 
  4196 ;; Registers used:
  4197 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4203 ;;      Params:         0       0       0       0       0
  4204 ;;      Locals:         0       0       1       0       0
  4205 ;;      Temps:          0       0       0       0       0
  4206 ;;      Totals:         0       0       1       0       0
  4207 ;;Total ram usage:        1 bytes
  4208 ;; Hardware stack levels used:    1
  4209 ;; Hardware stack levels required when called:    4
  4210 ;; This function calls:
  4211 ;;		Nothing
  4212 ;; This function is called by:
  4213 ;;		_EWH_Sleep_Mode
  4214 ;;		_EWH_WakeUP_Mode
  4215 ;;		_EWH_SetTemp_Mode
  4216 ;;		_EWH_Operating_Mode
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219                           
  4220                           
  4221                           ;psect for function _EWH_ClearEvent
  4222  0843                     _EWH_ClearEvent:
  4223                           
  4224                           ;incstack = 0
  4225                           ; Regs used in _EWH_ClearEvent: [wreg-fsr0h+status,2+status,0]
  4226                           ;EWH_ClearEvent@Event_index stored from wreg
  4227  0843  1683               	bsf	3,5	;RP0=1, select bank1
  4228  0844  1303               	bcf	3,6	;RP1=0, select bank1
  4229  0845  00A0               	movwf	EWH_ClearEvent@Event_index^(0+128)
  4230  0846                     l3002:
  4231                           
  4232                           ;EWH.c: 296: void EWH_ClearEvent(uint8_t Event_index);EWH.c: 297: {;EWH.c: 298:     EWH_
      +                          Events[Event_index]=0;
  4233  0846  0820               	movf	EWH_ClearEvent@Event_index^(0+128),w
  4234  0847  3EBD               	addlw	(low (_EWH_Events| 0))& (0+255)
  4235  0848  0084               	movwf	4
  4236  0849  1383               	bcf	3,7	;select IRP bank1
  4237  084A  0180               	clrf	0
  4238  084B                     l522:
  4239  084B  0008               	return
  4240  084C                     __end_of_EWH_ClearEvent:
  4241                           
  4242                           	psect	text23
  4243  0C88                     __ptext23:	
  4244 ;; *************** function _DD_SetState *****************
  4245 ;; Defined at:
  4246 ;;		line 28 in file "DD.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;  device          1    wreg     enum E882
  4249 ;;  state           1    0[BANK1 ] enum E13
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;  device          1    3[BANK1 ] enum E882
  4252 ;; Return value:  Size  Location     Type
  4253 ;;                  1    wreg      void 
  4254 ;; Registers used:
  4255 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4256 ;; Tracked objects:
  4257 ;;		On entry : 0/0
  4258 ;;		On exit  : 0/0
  4259 ;;		Unchanged: 0/0
  4260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4261 ;;      Params:         0       0       1       0       0
  4262 ;;      Locals:         0       0       1       0       0
  4263 ;;      Temps:          0       0       2       0       0
  4264 ;;      Totals:         0       0       4       0       0
  4265 ;;Total ram usage:        4 bytes
  4266 ;; Hardware stack levels used:    1
  4267 ;; Hardware stack levels required when called:    4
  4268 ;; This function calls:
  4269 ;;		Nothing
  4270 ;; This function is called by:
  4271 ;;		_EWH_Sleep_Mode
  4272 ;;		_EWH_SetTemp_Mode
  4273 ;;		_EWH_Operating_Mode
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277                           
  4278                           ;psect for function _DD_SetState
  4279  0C88                     _DD_SetState:
  4280                           
  4281                           ;incstack = 0
  4282                           ; Regs used in _DD_SetState: [wreg-fsr0h+status,2+status,0+btemp+1]
  4283                           ;DD_SetState@device stored from wreg
  4284  0C88  1683               	bsf	3,5	;RP0=1, select bank1
  4285  0C89  1303               	bcf	3,6	;RP1=0, select bank1
  4286  0C8A  00A3               	movwf	DD_SetState@device^(0+128)
  4287  0C8B                     l2886:
  4288                           
  4289                           ;DD.c: 28: void DD_SetState(tDD device ,tState state);DD.c: 29: {;DD.c: 30:     switch(d
      +                          evice)
  4290  0C8B  2CCE               	goto	l2914
  4291  0C8C                     l2888:
  4292                           
  4293                           ;DD.c: 33:             (state)?(PORTC |= (1<<5)) : (PORTC &= ~(1<<5));
  4294  0C8C  0820               	movf	DD_SetState@state^(0+128),w
  4295  0C8D  1903               	btfsc	3,2
  4296  0C8E  2C90               	goto	u2401
  4297  0C8F  2C91               	goto	u2400
  4298  0C90                     u2401:
  4299  0C90  2C95               	goto	l2892
  4300  0C91                     u2400:
  4301  0C91                     l2890:
  4302  0C91  1283               	bcf	3,5	;RP0=0, select bank0
  4303  0C92  1303               	bcf	3,6	;RP1=0, select bank0
  4304  0C93  1687               	bsf	7,5	;volatile
  4305  0C94  2C9B               	goto	l2894
  4306  0C95                     l2892:
  4307  0C95  30DF               	movlw	223
  4308  0C96  00FF               	movwf	btemp+1
  4309  0C97  087F               	movf	btemp+1,w
  4310  0C98  1283               	bcf	3,5	;RP0=0, select bank0
  4311  0C99  1303               	bcf	3,6	;RP1=0, select bank0
  4312  0C9A  0587               	andwf	7,f	;volatile
  4313  0C9B                     l2894:
  4314                           
  4315                           ;DD.c: 34:             Devices_State.HEATER_State=state;
  4316  0C9B  1683               	bsf	3,5	;RP0=1, select bank1
  4317  0C9C  1303               	bcf	3,6	;RP1=0, select bank1
  4318  0C9D  0820               	movf	DD_SetState@state^(0+128),w
  4319  0C9E  00FF               	movwf	btemp+1
  4320  0C9F  087F               	movf	btemp+1,w
  4321  0CA0  00C1               	movwf	_Devices_State^(0+128)
  4322                           
  4323                           ;DD.c: 35:             break;
  4324  0CA1  2CE1               	goto	l234
  4325  0CA2                     l2896:
  4326                           
  4327                           ;DD.c: 37:             (state)?(PORTC |= (1<<2)) : (PORTC &= ~(1<<2));
  4328  0CA2  0820               	movf	DD_SetState@state^(0+128),w
  4329  0CA3  1903               	btfsc	3,2
  4330  0CA4  2CA6               	goto	u2411
  4331  0CA5  2CA7               	goto	u2410
  4332  0CA6                     u2411:
  4333  0CA6  2CAB               	goto	l2900
  4334  0CA7                     u2410:
  4335  0CA7                     l2898:
  4336  0CA7  1283               	bcf	3,5	;RP0=0, select bank0
  4337  0CA8  1303               	bcf	3,6	;RP1=0, select bank0
  4338  0CA9  1507               	bsf	7,2	;volatile
  4339  0CAA  2CB1               	goto	l2902
  4340  0CAB                     l2900:
  4341  0CAB  30FB               	movlw	251
  4342  0CAC  00FF               	movwf	btemp+1
  4343  0CAD  087F               	movf	btemp+1,w
  4344  0CAE  1283               	bcf	3,5	;RP0=0, select bank0
  4345  0CAF  1303               	bcf	3,6	;RP1=0, select bank0
  4346  0CB0  0587               	andwf	7,f	;volatile
  4347  0CB1                     l2902:
  4348                           
  4349                           ;DD.c: 38:             Devices_State.COOLER_State=state;
  4350  0CB1  1683               	bsf	3,5	;RP0=1, select bank1
  4351  0CB2  1303               	bcf	3,6	;RP1=0, select bank1
  4352  0CB3  0820               	movf	DD_SetState@state^(0+128),w
  4353  0CB4  00FF               	movwf	btemp+1
  4354  0CB5  087F               	movf	btemp+1,w
  4355  0CB6  00C3               	movwf	(_Devices_State^(0+128)+2)
  4356                           
  4357                           ;DD.c: 39:             break;
  4358  0CB7  2CE1               	goto	l234
  4359  0CB8                     l2904:
  4360                           
  4361                           ;DD.c: 41:             (state)?(PORTB |= (1<<7)) : (PORTB &= ~(1<<7));
  4362  0CB8  0820               	movf	DD_SetState@state^(0+128),w
  4363  0CB9  1903               	btfsc	3,2
  4364  0CBA  2CBC               	goto	u2421
  4365  0CBB  2CBD               	goto	u2420
  4366  0CBC                     u2421:
  4367  0CBC  2CC1               	goto	l2908
  4368  0CBD                     u2420:
  4369  0CBD                     l2906:
  4370  0CBD  1283               	bcf	3,5	;RP0=0, select bank0
  4371  0CBE  1303               	bcf	3,6	;RP1=0, select bank0
  4372  0CBF  1786               	bsf	6,7	;volatile
  4373  0CC0  2CC7               	goto	l2910
  4374  0CC1                     l2908:
  4375  0CC1  307F               	movlw	127
  4376  0CC2  00FF               	movwf	btemp+1
  4377  0CC3  087F               	movf	btemp+1,w
  4378  0CC4  1283               	bcf	3,5	;RP0=0, select bank0
  4379  0CC5  1303               	bcf	3,6	;RP1=0, select bank0
  4380  0CC6  0586               	andwf	6,f	;volatile
  4381  0CC7                     l2910:
  4382                           
  4383                           ;DD.c: 42:             Devices_State.HEATER_LED_State=state;
  4384  0CC7  1683               	bsf	3,5	;RP0=1, select bank1
  4385  0CC8  1303               	bcf	3,6	;RP1=0, select bank1
  4386  0CC9  0820               	movf	DD_SetState@state^(0+128),w
  4387  0CCA  00FF               	movwf	btemp+1
  4388  0CCB  087F               	movf	btemp+1,w
  4389  0CCC  00C2               	movwf	(_Devices_State^(0+128)+1)
  4390                           
  4391                           ;DD.c: 43:             break;
  4392  0CCD  2CE1               	goto	l234
  4393  0CCE                     l2914:
  4394  0CCE  0823               	movf	DD_SetState@device^(0+128),w
  4395  0CCF  00A1               	movwf	??_DD_SetState^(0+128)
  4396  0CD0  01A2               	clrf	(??_DD_SetState^(0+128)+1)
  4397                           
  4398                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4399                           ; Switch size 1, requested type "simple"
  4400                           ; Number of cases is 1, Range of values is 0 to 0
  4401                           ; switch strategies available:
  4402                           ; Name         Instructions Cycles
  4403                           ; simple_byte            4     3 (average)
  4404                           ; direct_byte           11     8 (fixed)
  4405                           ; jumptable            260     6 (fixed)
  4406                           ;	Chosen strategy is simple_byte
  4407  0CD1  0822               	movf	(??_DD_SetState+1)^(0+128),w
  4408  0CD2  3A00               	xorlw	0	; case 0
  4409  0CD3  1903               	skipnz
  4410  0CD4  2CD6               	goto	l3894
  4411  0CD5  2CE1               	goto	l234
  4412  0CD6                     l3894:
  4413                           
  4414                           ; Switch size 1, requested type "simple"
  4415                           ; Number of cases is 3, Range of values is 0 to 2
  4416                           ; switch strategies available:
  4417                           ; Name         Instructions Cycles
  4418                           ; simple_byte           10     6 (average)
  4419                           ; direct_byte           17     8 (fixed)
  4420                           ; jumptable            260     6 (fixed)
  4421                           ;	Chosen strategy is simple_byte
  4422  0CD6  0821               	movf	??_DD_SetState^(0+128),w
  4423  0CD7  3A00               	xorlw	0	; case 0
  4424  0CD8  1903               	skipnz
  4425  0CD9  2C8C               	goto	l2888
  4426  0CDA  3A01               	xorlw	1	; case 1
  4427  0CDB  1903               	skipnz
  4428  0CDC  2CA2               	goto	l2896
  4429  0CDD  3A03               	xorlw	3	; case 2
  4430  0CDE  1903               	skipnz
  4431  0CDF  2CB8               	goto	l2904
  4432  0CE0  2CE1               	goto	l234
  4433  0CE1                     l234:
  4434  0CE1  0008               	return
  4435  0CE2                     __end_of_DD_SetState:
  4436                           
  4437                           	psect	text24
  4438  0B57                     __ptext24:	
  4439 ;; *************** function _EWH_Init *****************
  4440 ;; Defined at:
  4441 ;;		line 249 in file "EWH.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;		None
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;  i2c_config      6   17[BANK1 ] struct .
  4446 ;;  adc_config      4   23[BANK1 ] struct .
  4447 ;;  TMR1_cfg        2   15[BANK1 ] struct .
  4448 ;; Return value:  Size  Location     Type
  4449 ;;                  1    wreg      void 
  4450 ;; Registers used:
  4451 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4452 ;; Tracked objects:
  4453 ;;		On entry : 0/0
  4454 ;;		On exit  : 0/0
  4455 ;;		Unchanged: 0/0
  4456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4457 ;;      Params:         0       0       0       0       0
  4458 ;;      Locals:         0       0      12       0       0
  4459 ;;      Temps:          0       0       0       0       0
  4460 ;;      Totals:         0       0      12       0       0
  4461 ;;Total ram usage:       12 bytes
  4462 ;; Hardware stack levels used:    1
  4463 ;; Hardware stack levels required when called:    8
  4464 ;; This function calls:
  4465 ;;		_ADC_Init
  4466 ;;		_DD_Init
  4467 ;;		_EWH_EEPROM_Init
  4468 ;;		_I2C_Init
  4469 ;;		_SW_Init
  4470 ;;		_TMR1_Init
  4471 ;; This function is called by:
  4472 ;;		_main
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475                           
  4476                           
  4477                           ;psect for function _EWH_Init
  4478  0B57                     _EWH_Init:
  4479  0B57                     l3308:	
  4480                           ;incstack = 0
  4481 ;; hardware stack exceeded
  4482                           ; Regs used in _EWH_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4483                           
  4484                           
  4485                           ;EWH.c: 252:     tTMR1_Config TMR1_cfg;;EWH.c: 253:     TMR1_cfg.Prescaler=TMR1_PRESCALE
      +                          R_4;
  4486  0B57  3002               	movlw	2
  4487  0B58  00FF               	movwf	btemp+1
  4488  0B59  087F               	movf	btemp+1,w
  4489  0B5A  1683               	bsf	3,5	;RP0=1, select bank1
  4490  0B5B  1303               	bcf	3,6	;RP1=0, select bank1
  4491  0B5C  00AF               	movwf	EWH_Init@TMR1_cfg^(0+128)
  4492  0B5D                     l3310:
  4493                           
  4494                           ;EWH.c: 254:     TMR1_cfg.clkSource=EXTERNAL_CLK_SOURCE;
  4495  0B5D  01B0               	clrf	(EWH_Init@TMR1_cfg^(0+128)+1)
  4496  0B5E  0AB0               	incf	(EWH_Init@TMR1_cfg^(0+128)+1),f
  4497  0B5F                     l3312:
  4498                           
  4499                           ;EWH.c: 257:     TMR1_Init(&TMR1_cfg);
  4500  0B5F  30AF               	movlw	(low (EWH_Init@TMR1_cfg| 0))& (0+255)
  4501  0B60  120A  158A  23E5  120A  158A  	fcall	_TMR1_Init
  4502  0B65                     l3314:
  4503                           
  4504                           ;EWH.c: 260:     tADC_Config adc_config;;EWH.c: 261:     adc_config.alignment=RIGHT;
  4505  0B65  1683               	bsf	3,5	;RP0=1, select bank1
  4506  0B66  1303               	bcf	3,6	;RP1=0, select bank1
  4507  0B67  01B9               	clrf	(EWH_Init@adc_config^(0+128)+2)
  4508  0B68  0AB9               	incf	(EWH_Init@adc_config^(0+128)+2),f
  4509  0B69                     l3316:
  4510                           
  4511                           ;EWH.c: 262:     adc_config.channel=ADC2;
  4512  0B69  3002               	movlw	2
  4513  0B6A  00FF               	movwf	btemp+1
  4514  0B6B  087F               	movf	btemp+1,w
  4515  0B6C  00B7               	movwf	EWH_Init@adc_config^(0+128)
  4516  0B6D                     l3318:
  4517                           
  4518                           ;EWH.c: 263:     adc_config.clk=FOSC_8;
  4519  0B6D  01BA               	clrf	(EWH_Init@adc_config^(0+128)+3)
  4520  0B6E  0ABA               	incf	(EWH_Init@adc_config^(0+128)+3),f
  4521  0B6F                     l3320:
  4522                           
  4523                           ;EWH.c: 264:     adc_config.mode= POLLING_MODE;
  4524  0B6F  01B8               	clrf	(EWH_Init@adc_config^(0+128)+1)
  4525  0B70                     l3322:
  4526                           
  4527                           ;EWH.c: 267:     ADC_Init(&adc_config);
  4528  0B70  30B7               	movlw	(low (EWH_Init@adc_config| 0))& (0+255)
  4529  0B71  120A  158A  26F5  120A  158A  	fcall	_ADC_Init
  4530  0B76                     l3324:
  4531                           
  4532                           ;EWH.c: 270:     tI2C_Config i2c_config;;EWH.c: 271:     i2c_config.BaudRate=100000;
  4533  0B76  3000               	movlw	0
  4534  0B77  1683               	bsf	3,5	;RP0=1, select bank1
  4535  0B78  1303               	bcf	3,6	;RP1=0, select bank1
  4536  0B79  00B5               	movwf	((EWH_Init@i2c_config+3)^(0+128)+1)
  4537  0B7A  3001               	movlw	1
  4538  0B7B  00B4               	movwf	((EWH_Init@i2c_config+2)^(0+128)+1)
  4539  0B7C  3086               	movlw	134
  4540  0B7D  00B3               	movwf	((EWH_Init@i2c_config+1)^(0+128)+1)
  4541  0B7E  30A0               	movlw	160
  4542  0B7F  00B2               	movwf	(EWH_Init@i2c_config^(0+128)+1)
  4543  0B80                     l3326:
  4544                           
  4545                           ;EWH.c: 272:     i2c_config.Mode=Master_Mode;
  4546  0B80  3008               	movlw	8
  4547  0B81  00FF               	movwf	btemp+1
  4548  0B82  087F               	movf	btemp+1,w
  4549  0B83  00B1               	movwf	EWH_Init@i2c_config^(0+128)
  4550                           
  4551                           ;EWH.c: 273:     i2c_config.operationMode=POLLING;
  4552  0B84  01B6               	clrf	(EWH_Init@i2c_config^(0+128)+5)
  4553  0B85                     l3328:
  4554                           
  4555                           ;EWH.c: 276:     I2C_Init(&i2c_config);
  4556  0B85  30B1               	movlw	(low (EWH_Init@i2c_config| 0))& (0+255)
  4557  0B86  120A  158A  239B  120A  158A  	fcall	_I2C_Init
  4558  0B8B                     l3330:
  4559                           
  4560                           ;EWH.c: 279:     DD_Init();
  4561  0B8B  120A  158A  20E9  120A  158A  	fcall	_DD_Init
  4562  0B90                     l3332:
  4563                           
  4564                           ;EWH.c: 282:     SW_Init();
  4565  0B90  120A  158A  203A  120A  158A  	fcall	_SW_Init
  4566  0B95                     l3334:
  4567                           
  4568                           ;EWH.c: 285:     EWH_EEPROM_Init();
  4569  0B95  120A  158A  20A5  120A  158A  	fcall	_EWH_EEPROM_Init
  4570  0B9A                     l513:
  4571  0B9A  0008               	return
  4572  0B9B                     __end_of_EWH_Init:
  4573                           
  4574                           	psect	text25
  4575  0BE5                     __ptext25:	
  4576 ;; *************** function _TMR1_Init *****************
  4577 ;; Defined at:
  4578 ;;		line 15 in file "TMR1.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;  config          1    wreg     PTR struct .
  4581 ;;		 -> EWH_Init@TMR1_cfg(2), 
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;  config          1    2[BANK1 ] PTR struct .
  4584 ;;		 -> EWH_Init@TMR1_cfg(2), 
  4585 ;; Return value:  Size  Location     Type
  4586 ;;                  1    wreg      void 
  4587 ;; Registers used:
  4588 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4589 ;; Tracked objects:
  4590 ;;		On entry : 0/0
  4591 ;;		On exit  : 0/0
  4592 ;;		Unchanged: 0/0
  4593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4594 ;;      Params:         0       0       0       0       0
  4595 ;;      Locals:         0       0       1       0       0
  4596 ;;      Temps:          0       0       2       0       0
  4597 ;;      Totals:         0       0       3       0       0
  4598 ;;Total ram usage:        3 bytes
  4599 ;; Hardware stack levels used:    1
  4600 ;; Hardware stack levels required when called:    4
  4601 ;; This function calls:
  4602 ;;		Nothing
  4603 ;; This function is called by:
  4604 ;;		_EWH_Init
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608                           
  4609                           ;psect for function _TMR1_Init
  4610  0BE5                     _TMR1_Init:
  4611                           
  4612                           ;incstack = 0
  4613                           ; Regs used in _TMR1_Init: [wreg-fsr0h+status,2+status,0]
  4614                           ;TMR1_Init@config stored from wreg
  4615  0BE5  1683               	bsf	3,5	;RP0=1, select bank1
  4616  0BE6  1303               	bcf	3,6	;RP1=0, select bank1
  4617  0BE7  00A2               	movwf	TMR1_Init@config^(0+128)
  4618  0BE8                     l2958:
  4619                           
  4620                           ;TMR1.c: 15: void TMR1_Init(tTMR1_Config *config);TMR1.c: 16: {;TMR1.c: 17:     switch(c
      +                          onfig->Prescaler)
  4621  0BE8  2BFD               	goto	l2962
  4622  0BE9                     l311:	
  4623                           ;TMR1.c: 18:     {;TMR1.c: 19:         case TMR1_PRESCALER_1:
  4624                           
  4625                           
  4626                           ;TMR1.c: 20:             T1CKPS0 = 0; T1CKPS1 = 0;
  4627  0BE9  1283               	bcf	3,5	;RP0=0, select bank0
  4628  0BEA  1303               	bcf	3,6	;RP1=0, select bank0
  4629  0BEB  1210               	bcf	16,4	;volatile
  4630  0BEC  1290               	bcf	16,5	;volatile
  4631                           
  4632                           ;TMR1.c: 21:             break;
  4633  0BED  2C1A               	goto	l2966
  4634  0BEE                     l313:	
  4635                           ;TMR1.c: 22:         case TMR1_PRESCALER_2:
  4636                           
  4637                           
  4638                           ;TMR1.c: 23:             T1CKPS0 = 1; T1CKPS1 = 0;
  4639  0BEE  1283               	bcf	3,5	;RP0=0, select bank0
  4640  0BEF  1303               	bcf	3,6	;RP1=0, select bank0
  4641  0BF0  1610               	bsf	16,4	;volatile
  4642  0BF1  1290               	bcf	16,5	;volatile
  4643                           
  4644                           ;TMR1.c: 24:             break;
  4645  0BF2  2C1A               	goto	l2966
  4646  0BF3                     l314:	
  4647                           ;TMR1.c: 25:         case TMR1_PRESCALER_4:
  4648                           
  4649                           
  4650                           ;TMR1.c: 26:             T1CKPS0 = 0; T1CKPS1 = 1;
  4651  0BF3  1283               	bcf	3,5	;RP0=0, select bank0
  4652  0BF4  1303               	bcf	3,6	;RP1=0, select bank0
  4653  0BF5  1210               	bcf	16,4	;volatile
  4654  0BF6  1690               	bsf	16,5	;volatile
  4655                           
  4656                           ;TMR1.c: 27:             break;
  4657  0BF7  2C1A               	goto	l2966
  4658  0BF8                     l315:	
  4659                           ;TMR1.c: 28:         case TMR1_PRESCALER_8:
  4660                           
  4661                           
  4662                           ;TMR1.c: 29:             T1CKPS0 = 1; T1CKPS1 = 1;
  4663  0BF8  1283               	bcf	3,5	;RP0=0, select bank0
  4664  0BF9  1303               	bcf	3,6	;RP1=0, select bank0
  4665  0BFA  1610               	bsf	16,4	;volatile
  4666  0BFB  1690               	bsf	16,5	;volatile
  4667                           
  4668                           ;TMR1.c: 30:             break;
  4669  0BFC  2C1A               	goto	l2966
  4670  0BFD                     l2962:
  4671  0BFD  0822               	movf	TMR1_Init@config^(0+128),w
  4672  0BFE  0084               	movwf	4
  4673  0BFF  1383               	bcf	3,7	;select IRP bank0
  4674  0C00  0800               	movf	0,w
  4675  0C01  00A0               	movwf	??_TMR1_Init^(0+128)
  4676  0C02  01A1               	clrf	(??_TMR1_Init^(0+128)+1)
  4677                           
  4678                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4679                           ; Switch size 1, requested type "simple"
  4680                           ; Number of cases is 1, Range of values is 0 to 0
  4681                           ; switch strategies available:
  4682                           ; Name         Instructions Cycles
  4683                           ; simple_byte            4     3 (average)
  4684                           ; direct_byte           11     8 (fixed)
  4685                           ; jumptable            260     6 (fixed)
  4686                           ;	Chosen strategy is simple_byte
  4687  0C03  0821               	movf	(??_TMR1_Init+1)^(0+128),w
  4688  0C04  3A00               	xorlw	0	; case 0
  4689  0C05  1903               	skipnz
  4690  0C06  2C08               	goto	l3896
  4691  0C07  2C1A               	goto	l2966
  4692  0C08                     l3896:
  4693                           
  4694                           ; Switch size 1, requested type "simple"
  4695                           ; Number of cases is 4, Range of values is 0 to 3
  4696                           ; switch strategies available:
  4697                           ; Name         Instructions Cycles
  4698                           ; simple_byte           13     7 (average)
  4699                           ; direct_byte           20     8 (fixed)
  4700                           ; jumptable            260     6 (fixed)
  4701                           ;	Chosen strategy is simple_byte
  4702  0C08  0820               	movf	??_TMR1_Init^(0+128),w
  4703  0C09  3A00               	xorlw	0	; case 0
  4704  0C0A  1903               	skipnz
  4705  0C0B  2BE9               	goto	l311
  4706  0C0C  3A01               	xorlw	1	; case 1
  4707  0C0D  1903               	skipnz
  4708  0C0E  2BEE               	goto	l313
  4709  0C0F  3A03               	xorlw	3	; case 2
  4710  0C10  1903               	skipnz
  4711  0C11  2BF3               	goto	l314
  4712  0C12  3A01               	xorlw	1	; case 3
  4713  0C13  1903               	skipnz
  4714  0C14  2BF8               	goto	l315
  4715  0C15  2C1A               	goto	l2966
  4716  0C16                     l317:	
  4717                           ;TMR1.c: 34:     {;TMR1.c: 35:         case INTERNAL_CLK_SOURCE:
  4718                           
  4719                           
  4720                           ;TMR1.c: 36:             (T0CS = 0);
  4721  0C16  1281               	bcf	1,5	;volatile
  4722                           
  4723                           ;TMR1.c: 37:             break ;
  4724  0C17  2C2E               	goto	l320
  4725  0C18                     l319:	
  4726                           ;TMR1.c: 38:         case EXTERNAL_CLK_SOURCE:
  4727                           
  4728                           
  4729                           ;TMR1.c: 39:             (T0CS = 1);
  4730  0C18  1681               	bsf	1,5	;volatile
  4731                           
  4732                           ;TMR1.c: 40:             break ;
  4733  0C19  2C2E               	goto	l320
  4734  0C1A                     l2966:
  4735  0C1A  1683               	bsf	3,5	;RP0=1, select bank1
  4736  0C1B  1303               	bcf	3,6	;RP1=0, select bank1
  4737  0C1C  0A22               	incf	TMR1_Init@config^(0+128),w
  4738  0C1D  0084               	movwf	4
  4739  0C1E  0800               	movf	0,w
  4740  0C1F  00A0               	movwf	??_TMR1_Init^(0+128)
  4741  0C20  01A1               	clrf	(??_TMR1_Init^(0+128)+1)
  4742                           
  4743                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4744                           ; Switch size 1, requested type "simple"
  4745                           ; Number of cases is 1, Range of values is 0 to 0
  4746                           ; switch strategies available:
  4747                           ; Name         Instructions Cycles
  4748                           ; simple_byte            4     3 (average)
  4749                           ; direct_byte           11     8 (fixed)
  4750                           ; jumptable            260     6 (fixed)
  4751                           ;	Chosen strategy is simple_byte
  4752  0C21  0821               	movf	(??_TMR1_Init+1)^(0+128),w
  4753  0C22  3A00               	xorlw	0	; case 0
  4754  0C23  1903               	skipnz
  4755  0C24  2C26               	goto	l3898
  4756  0C25  2C2E               	goto	l320
  4757  0C26                     l3898:
  4758                           
  4759                           ; Switch size 1, requested type "simple"
  4760                           ; Number of cases is 2, Range of values is 0 to 1
  4761                           ; switch strategies available:
  4762                           ; Name         Instructions Cycles
  4763                           ; simple_byte            7     4 (average)
  4764                           ; direct_byte           14     8 (fixed)
  4765                           ; jumptable            260     6 (fixed)
  4766                           ;	Chosen strategy is simple_byte
  4767  0C26  0820               	movf	??_TMR1_Init^(0+128),w
  4768  0C27  3A00               	xorlw	0	; case 0
  4769  0C28  1903               	skipnz
  4770  0C29  2C16               	goto	l317
  4771  0C2A  3A01               	xorlw	1	; case 1
  4772  0C2B  1903               	skipnz
  4773  0C2C  2C18               	goto	l319
  4774  0C2D  2C2E               	goto	l320
  4775  0C2E                     l320:
  4776  0C2E  0008               	return
  4777  0C2F                     __end_of_TMR1_Init:
  4778                           
  4779                           	psect	text26
  4780  083A                     __ptext26:	
  4781 ;; *************** function _SW_Init *****************
  4782 ;; Defined at:
  4783 ;;		line 16 in file "SW.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;		None
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;		None
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  1    wreg      void 
  4790 ;; Registers used:
  4791 ;;		wreg, status,2, status,0, btemp+1
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4797 ;;      Params:         0       0       0       0       0
  4798 ;;      Locals:         0       0       0       0       0
  4799 ;;      Temps:          0       0       0       0       0
  4800 ;;      Totals:         0       0       0       0       0
  4801 ;;Total ram usage:        0 bytes
  4802 ;; Hardware stack levels used:    1
  4803 ;; Hardware stack levels required when called:    4
  4804 ;; This function calls:
  4805 ;;		Nothing
  4806 ;; This function is called by:
  4807 ;;		_EWH_Init
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811                           
  4812                           ;psect for function _SW_Init
  4813  083A                     _SW_Init:
  4814  083A                     l2984:	
  4815                           ;incstack = 0
  4816                           ; Regs used in _SW_Init: [wreg+status,2+status,0+btemp+1]
  4817                           
  4818  083A  1683               	bsf	3,5	;RP0=1, select bank1
  4819  083B  1303               	bcf	3,6	;RP1=0, select bank1
  4820  083C  1506               	bsf	6,2	;volatile
  4821  083D                     l2988:
  4822  083D  1486               	bsf	6,1	;volatile
  4823  083E                     l2992:
  4824  083E  1406               	bsf	6,0	;volatile
  4825  083F                     l2996:
  4826                           
  4827                           ;SW.c: 24:     INTEDG=0;
  4828  083F  1301               	bcf	1,6	;volatile
  4829  0840                     l2998:
  4830                           
  4831                           ;SW.c: 25:     INTE=1;
  4832  0840  160B               	bsf	11,4	;volatile
  4833  0841                     l3000:
  4834                           
  4835                           ;SW.c: 26:     GIE=1;
  4836  0841  178B               	bsf	11,7	;volatile
  4837  0842                     l357:
  4838  0842  0008               	return
  4839  0843                     __end_of_SW_Init:
  4840                           
  4841                           	psect	text27
  4842  0B9B                     __ptext27:	
  4843 ;; *************** function _I2C_Init *****************
  4844 ;; Defined at:
  4845 ;;		line 17 in file "i2c.c"
  4846 ;; Parameters:    Size  Location     Type
  4847 ;;  i2c_config      1    wreg     PTR struct .
  4848 ;;		 -> EWH_Init@i2c_config(6), 
  4849 ;; Auto vars:     Size  Location     Type
  4850 ;;  i2c_config      1   14[BANK1 ] PTR struct .
  4851 ;;		 -> EWH_Init@i2c_config(6), 
  4852 ;; Return value:  Size  Location     Type
  4853 ;;                  1    wreg      void 
  4854 ;; Registers used:
  4855 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4856 ;; Tracked objects:
  4857 ;;		On entry : 0/0
  4858 ;;		On exit  : 0/0
  4859 ;;		Unchanged: 0/0
  4860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4861 ;;      Params:         0       0       0       0       0
  4862 ;;      Locals:         0       0       1       0       0
  4863 ;;      Temps:          0       0       0       0       0
  4864 ;;      Totals:         0       0       1       0       0
  4865 ;;Total ram usage:        1 bytes
  4866 ;; Hardware stack levels used:    1
  4867 ;; Hardware stack levels required when called:    5
  4868 ;; This function calls:
  4869 ;;		___lldiv
  4870 ;; This function is called by:
  4871 ;;		_EWH_Init
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           
  4876                           ;psect for function _I2C_Init
  4877  0B9B                     _I2C_Init:
  4878                           
  4879                           ;incstack = 0
  4880                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4881                           ;I2C_Init@i2c_config stored from wreg
  4882  0B9B  1683               	bsf	3,5	;RP0=1, select bank1
  4883  0B9C  1303               	bcf	3,6	;RP1=0, select bank1
  4884  0B9D  00AE               	movwf	I2C_Init@i2c_config^(0+128)
  4885  0B9E                     l2838:
  4886                           
  4887                           ;i2c.c: 17: void I2C_Init(tI2C_Config *i2c_config);i2c.c: 18: {;i2c.c: 20:     SSPCON2=0
      +                          x00;
  4888  0B9E  0191               	clrf	17	;volatile
  4889                           
  4890                           ;i2c.c: 21:     SSPSTAT=0x00;
  4891  0B9F  0194               	clrf	20	;volatile
  4892  0BA0                     l2840:
  4893                           
  4894                           ;i2c.c: 23:     SSPCON |= i2c_config->Mode;
  4895  0BA0  082E               	movf	I2C_Init@i2c_config^(0+128),w
  4896  0BA1  0084               	movwf	4
  4897  0BA2  1383               	bcf	3,7	;select IRP bank0
  4898  0BA3  0800               	movf	0,w
  4899  0BA4  00FF               	movwf	btemp+1
  4900  0BA5  087F               	movf	btemp+1,w
  4901  0BA6  1283               	bcf	3,5	;RP0=0, select bank0
  4902  0BA7  1303               	bcf	3,6	;RP1=0, select bank0
  4903  0BA8  0494               	iorwf	20,f	;volatile
  4904  0BA9                     l2842:
  4905                           
  4906                           ;i2c.c: 27:     SSPADD = (((4000000/4)/i2c_config->BaudRate) - 1);
  4907  0BA9  1683               	bsf	3,5	;RP0=1, select bank1
  4908  0BAA  1303               	bcf	3,6	;RP1=0, select bank1
  4909  0BAB  0A2E               	incf	I2C_Init@i2c_config^(0+128),w
  4910  0BAC  0084               	movwf	4
  4911  0BAD  0800               	movf	0,w
  4912  0BAE  00A0               	movwf	___lldiv@divisor^(0+128)
  4913  0BAF  0A84               	incf	4,f
  4914  0BB0  0800               	movf	0,w
  4915  0BB1  00A1               	movwf	(___lldiv@divisor+1)^(0+128)
  4916  0BB2  0A84               	incf	4,f
  4917  0BB3  0800               	movf	0,w
  4918  0BB4  00A2               	movwf	(___lldiv@divisor+2)^(0+128)
  4919  0BB5  0A84               	incf	4,f
  4920  0BB6  0800               	movf	0,w
  4921  0BB7  00A3               	movwf	(___lldiv@divisor+3)^(0+128)
  4922  0BB8  3000               	movlw	0
  4923  0BB9  00A7               	movwf	(___lldiv@dividend+3)^(0+128)
  4924  0BBA  300F               	movlw	15
  4925  0BBB  00A6               	movwf	(___lldiv@dividend+2)^(0+128)
  4926  0BBC  3042               	movlw	66
  4927  0BBD  00A5               	movwf	(___lldiv@dividend+1)^(0+128)
  4928  0BBE  3040               	movlw	64
  4929  0BBF  00A4               	movwf	___lldiv@dividend^(0+128)
  4930  0BC0  120A  158A  253D  120A  158A  	fcall	___lldiv
  4931  0BC5  1683               	bsf	3,5	;RP0=1, select bank1
  4932  0BC6  1303               	bcf	3,6	;RP1=0, select bank1
  4933  0BC7  0820               	movf	?___lldiv^(0+128),w
  4934  0BC8  3EFF               	addlw	255
  4935  0BC9  0093               	movwf	19	;volatile
  4936  0BCA                     l2844:
  4937                           
  4938                           ;i2c.c: 37:     SSPEN=1;
  4939  0BCA  1283               	bcf	3,5	;RP0=0, select bank0
  4940  0BCB  1303               	bcf	3,6	;RP1=0, select bank0
  4941  0BCC  1694               	bsf	20,5	;volatile
  4942  0BCD                     l2846:
  4943                           
  4944                           ;i2c.c: 43:     (1u)? (TRISC |= (1<<4)) : (TRISC &= ~(1<<4));
  4945  0BCD  3080               	movlw	128
  4946  0BCE  1683               	bsf	3,5	;RP0=1, select bank1
  4947  0BCF  1303               	bcf	3,6	;RP1=0, select bank1
  4948  0BD0  0094               	movwf	20	;volatile
  4949  0BD1                     l2848:
  4950  0BD1  1607               	bsf	7,4	;volatile
  4951  0BD2                     l2852:
  4952  0BD2  1587               	bsf	7,3	;volatile
  4953  0BD3                     l2856:
  4954                           
  4955                           ;i2c.c: 49:     if(i2c_config->operationMode==INTERRUPT)
  4956  0BD3  082E               	movf	I2C_Init@i2c_config^(0+128),w
  4957  0BD4  3E05               	addlw	5
  4958  0BD5  0084               	movwf	4
  4959  0BD6  1383               	bcf	3,7	;select IRP bank0
  4960  0BD7  0300               	decf	0,w
  4961  0BD8  1D03               	btfss	3,2
  4962  0BD9  2BDB               	goto	u2391
  4963  0BDA  2BDC               	goto	u2390
  4964  0BDB                     u2391:
  4965  0BDB  2BE4               	goto	l88
  4966  0BDC                     u2390:
  4967  0BDC                     l2858:
  4968                           
  4969                           ;i2c.c: 50:     {;i2c.c: 51:           GIE = 1;
  4970  0BDC  178B               	bsf	11,7	;volatile
  4971                           
  4972                           ;i2c.c: 52:           PEIE = 1;
  4973  0BDD  170B               	bsf	11,6	;volatile
  4974                           
  4975                           ;i2c.c: 53:           SSPIF = 0;
  4976  0BDE  1283               	bcf	3,5	;RP0=0, select bank0
  4977  0BDF  1303               	bcf	3,6	;RP1=0, select bank0
  4978  0BE0  118C               	bcf	12,3	;volatile
  4979                           
  4980                           ;i2c.c: 54:           SSPIE = 1;
  4981  0BE1  1683               	bsf	3,5	;RP0=1, select bank1
  4982  0BE2  1303               	bcf	3,6	;RP1=0, select bank1
  4983  0BE3  158C               	bsf	12,3	;volatile
  4984  0BE4                     l88:
  4985  0BE4  0008               	return
  4986  0BE5                     __end_of_I2C_Init:
  4987                           
  4988                           	psect	text28
  4989  0D3D                     __ptext28:	
  4990 ;; *************** function ___lldiv *****************
  4991 ;; Defined at:
  4992 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  4993 ;; Parameters:    Size  Location     Type
  4994 ;;  divisor         4    0[BANK1 ] unsigned long 
  4995 ;;  dividend        4    4[BANK1 ] unsigned long 
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;  quotient        4    9[BANK1 ] unsigned long 
  4998 ;;  counter         1   13[BANK1 ] unsigned char 
  4999 ;; Return value:  Size  Location     Type
  5000 ;;                  4    0[BANK1 ] unsigned long 
  5001 ;; Registers used:
  5002 ;;		wreg, status,2, status,0, btemp+1
  5003 ;; Tracked objects:
  5004 ;;		On entry : 0/0
  5005 ;;		On exit  : 0/0
  5006 ;;		Unchanged: 0/0
  5007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5008 ;;      Params:         0       0       8       0       0
  5009 ;;      Locals:         0       0       5       0       0
  5010 ;;      Temps:          0       0       1       0       0
  5011 ;;      Totals:         0       0      14       0       0
  5012 ;;Total ram usage:       14 bytes
  5013 ;; Hardware stack levels used:    1
  5014 ;; Hardware stack levels required when called:    4
  5015 ;; This function calls:
  5016 ;;		Nothing
  5017 ;; This function is called by:
  5018 ;;		_I2C_Init
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022                           
  5023                           ;psect for function ___lldiv
  5024  0D3D                     ___lldiv:
  5025  0D3D                     l2706:	
  5026                           ;incstack = 0
  5027                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  5028                           
  5029  0D3D  3000               	movlw	0
  5030  0D3E  1683               	bsf	3,5	;RP0=1, select bank1
  5031  0D3F  1303               	bcf	3,6	;RP1=0, select bank1
  5032  0D40  00AC               	movwf	(___lldiv@quotient+3)^(0+128)
  5033  0D41  3000               	movlw	0
  5034  0D42  00AB               	movwf	(___lldiv@quotient+2)^(0+128)
  5035  0D43  3000               	movlw	0
  5036  0D44  00AA               	movwf	(___lldiv@quotient+1)^(0+128)
  5037  0D45  3000               	movlw	0
  5038  0D46  00A9               	movwf	___lldiv@quotient^(0+128)
  5039  0D47  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  5040  0D48  0422               	iorwf	(___lldiv@divisor+2)^(0+128),w
  5041  0D49  0421               	iorwf	(___lldiv@divisor+1)^(0+128),w
  5042  0D4A  0420               	iorwf	___lldiv@divisor^(0+128),w
  5043  0D4B  1903               	skipnz
  5044  0D4C  2D4E               	goto	u2061
  5045  0D4D  2D4F               	goto	u2060
  5046  0D4E                     u2061:
  5047  0D4E  2D9C               	goto	l2728
  5048  0D4F                     u2060:
  5049  0D4F                     l2708:
  5050  0D4F  01AD               	clrf	___lldiv@counter^(0+128)
  5051  0D50  0AAD               	incf	___lldiv@counter^(0+128),f
  5052  0D51  2D5F               	goto	l2714
  5053  0D52                     l2710:
  5054  0D52  3001               	movlw	1
  5055  0D53  00A8               	movwf	??___lldiv^(0+128)
  5056  0D54                     u2075:
  5057  0D54  1003               	clrc
  5058  0D55  0DA0               	rlf	___lldiv@divisor^(0+128),f
  5059  0D56  0DA1               	rlf	(___lldiv@divisor+1)^(0+128),f
  5060  0D57  0DA2               	rlf	(___lldiv@divisor+2)^(0+128),f
  5061  0D58  0DA3               	rlf	(___lldiv@divisor+3)^(0+128),f
  5062  0D59  0BA8               	decfsz	??___lldiv^(0+128),f
  5063  0D5A  2D54               	goto	u2075
  5064  0D5B                     l2712:
  5065  0D5B  3001               	movlw	1
  5066  0D5C  00FF               	movwf	btemp+1
  5067  0D5D  087F               	movf	btemp+1,w
  5068  0D5E  07AD               	addwf	___lldiv@counter^(0+128),f
  5069  0D5F                     l2714:
  5070  0D5F  1FA3               	btfss	(___lldiv@divisor+3)^(0+128),7
  5071  0D60  2D62               	goto	u2081
  5072  0D61  2D63               	goto	u2080
  5073  0D62                     u2081:
  5074  0D62  2D52               	goto	l2710
  5075  0D63                     u2080:
  5076  0D63                     l2716:
  5077  0D63  3001               	movlw	1
  5078  0D64  00A8               	movwf	??___lldiv^(0+128)
  5079  0D65                     u2095:
  5080  0D65  1003               	clrc
  5081  0D66  0DA9               	rlf	___lldiv@quotient^(0+128),f
  5082  0D67  0DAA               	rlf	(___lldiv@quotient+1)^(0+128),f
  5083  0D68  0DAB               	rlf	(___lldiv@quotient+2)^(0+128),f
  5084  0D69  0DAC               	rlf	(___lldiv@quotient+3)^(0+128),f
  5085  0D6A  0BA8               	decfsz	??___lldiv^(0+128),f
  5086  0D6B  2D65               	goto	u2095
  5087  0D6C                     l2718:
  5088  0D6C  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  5089  0D6D  0227               	subwf	(___lldiv@dividend+3)^(0+128),w
  5090  0D6E  1D03               	skipz
  5091  0D6F  2D7A               	goto	u2105
  5092  0D70  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  5093  0D71  0226               	subwf	(___lldiv@dividend+2)^(0+128),w
  5094  0D72  1D03               	skipz
  5095  0D73  2D7A               	goto	u2105
  5096  0D74  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  5097  0D75  0225               	subwf	(___lldiv@dividend+1)^(0+128),w
  5098  0D76  1D03               	skipz
  5099  0D77  2D7A               	goto	u2105
  5100  0D78  0820               	movf	___lldiv@divisor^(0+128),w
  5101  0D79  0224               	subwf	___lldiv@dividend^(0+128),w
  5102  0D7A                     u2105:
  5103  0D7A  1C03               	skipc
  5104  0D7B  2D7D               	goto	u2101
  5105  0D7C  2D7E               	goto	u2100
  5106  0D7D                     u2101:
  5107  0D7D  2D8D               	goto	l2724
  5108  0D7E                     u2100:
  5109  0D7E                     l2720:
  5110  0D7E  0820               	movf	___lldiv@divisor^(0+128),w
  5111  0D7F  02A4               	subwf	___lldiv@dividend^(0+128),f
  5112  0D80  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  5113  0D81  1C03               	skipc
  5114  0D82  0F21               	incfsz	(___lldiv@divisor+1)^(0+128),w
  5115  0D83  02A5               	subwf	(___lldiv@dividend+1)^(0+128),f
  5116  0D84  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  5117  0D85  1C03               	skipc
  5118  0D86  0F22               	incfsz	(___lldiv@divisor+2)^(0+128),w
  5119  0D87  02A6               	subwf	(___lldiv@dividend+2)^(0+128),f
  5120  0D88  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  5121  0D89  1C03               	skipc
  5122  0D8A  0F23               	incfsz	(___lldiv@divisor+3)^(0+128),w
  5123  0D8B  02A7               	subwf	(___lldiv@dividend+3)^(0+128),f
  5124  0D8C                     l2722:
  5125  0D8C  1429               	bsf	___lldiv@quotient^(0+128),0
  5126  0D8D                     l2724:
  5127  0D8D  3001               	movlw	1
  5128  0D8E                     u2115:
  5129  0D8E  1003               	clrc
  5130  0D8F  0CA3               	rrf	(___lldiv@divisor+3)^(0+128),f
  5131  0D90  0CA2               	rrf	(___lldiv@divisor+2)^(0+128),f
  5132  0D91  0CA1               	rrf	(___lldiv@divisor+1)^(0+128),f
  5133  0D92  0CA0               	rrf	___lldiv@divisor^(0+128),f
  5134  0D93  3EFF               	addlw	-1
  5135  0D94  1D03               	skipz
  5136  0D95  2D8E               	goto	u2115
  5137  0D96                     l2726:
  5138  0D96  3001               	movlw	1
  5139  0D97  02AD               	subwf	___lldiv@counter^(0+128),f
  5140  0D98  1D03               	btfss	3,2
  5141  0D99  2D9B               	goto	u2121
  5142  0D9A  2D9C               	goto	u2120
  5143  0D9B                     u2121:
  5144  0D9B  2D63               	goto	l2716
  5145  0D9C                     u2120:
  5146  0D9C                     l2728:
  5147  0D9C  082C               	movf	(___lldiv@quotient+3)^(0+128),w
  5148  0D9D  00A3               	movwf	(?___lldiv+3)^(0+128)
  5149  0D9E  082B               	movf	(___lldiv@quotient+2)^(0+128),w
  5150  0D9F  00A2               	movwf	(?___lldiv+2)^(0+128)
  5151  0DA0  082A               	movf	(___lldiv@quotient+1)^(0+128),w
  5152  0DA1  00A1               	movwf	(?___lldiv+1)^(0+128)
  5153  0DA2  0829               	movf	___lldiv@quotient^(0+128),w
  5154  0DA3  00A0               	movwf	?___lldiv^(0+128)
  5155  0DA4                     l760:
  5156  0DA4  0008               	return
  5157  0DA5                     __end_of___lldiv:
  5158                           
  5159                           	psect	text29
  5160  08A5                     __ptext29:	
  5161 ;; *************** function _EWH_EEPROM_Init *****************
  5162 ;; Defined at:
  5163 ;;		line 301 in file "EWH.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;		None
  5166 ;; Auto vars:     Size  Location     Type
  5167 ;;		None
  5168 ;; Return value:  Size  Location     Type
  5169 ;;                  1    wreg      void 
  5170 ;; Registers used:
  5171 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5172 ;; Tracked objects:
  5173 ;;		On entry : 0/0
  5174 ;;		On exit  : 0/0
  5175 ;;		Unchanged: 0/0
  5176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5177 ;;      Params:         0       0       0       0       0
  5178 ;;      Locals:         0       0       0       0       0
  5179 ;;      Temps:          0       0       0       0       0
  5180 ;;      Totals:         0       0       0       0       0
  5181 ;;Total ram usage:        0 bytes
  5182 ;; Hardware stack levels used:    1
  5183 ;; Hardware stack levels required when called:    7
  5184 ;; This function calls:
  5185 ;;		_EEPROM_WriteByte
  5186 ;; This function is called by:
  5187 ;;		_EWH_Init
  5188 ;; This function uses a non-reentrant model
  5189 ;;
  5190                           
  5191                           
  5192                           ;psect for function _EWH_EEPROM_Init
  5193  08A5                     _EWH_EEPROM_Init:
  5194  08A5                     l3026:	
  5195                           ;incstack = 0
  5196 ;; hardware stack exceeded
  5197                           ; Regs used in _EWH_EEPROM_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5198                           
  5199                           
  5200                           ;EWH.c: 303:     EEPROM_WriteByte(0x0020,60);
  5201  08A5  3020               	movlw	32
  5202  08A6  1683               	bsf	3,5	;RP0=1, select bank1
  5203  08A7  1303               	bcf	3,6	;RP1=0, select bank1
  5204  08A8  00A1               	movwf	EEPROM_WriteByte@address^(0+128)
  5205  08A9  3000               	movlw	0
  5206  08AA  00A2               	movwf	(EEPROM_WriteByte@address^(0+128)+1)
  5207  08AB  303C               	movlw	60
  5208  08AC  00FF               	movwf	btemp+1
  5209  08AD  087F               	movf	btemp+1,w
  5210  08AE  00A3               	movwf	EEPROM_WriteByte@data^(0+128)
  5211  08AF  120A  158A  225F  120A  158A  	fcall	_EEPROM_WriteByte
  5212  08B4                     l525:
  5213  08B4  0008               	return
  5214  08B5                     __end_of_EWH_EEPROM_Init:
  5215                           
  5216                           	psect	text30
  5217  0A5F                     __ptext30:	
  5218 ;; *************** function _EEPROM_WriteByte *****************
  5219 ;; Defined at:
  5220 ;;		line 16 in file "EEPROM.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;  address         2    1[BANK1 ] unsigned short 
  5223 ;;  data            1    3[BANK1 ] unsigned char 
  5224 ;; Auto vars:     Size  Location     Type
  5225 ;;		None
  5226 ;; Return value:  Size  Location     Type
  5227 ;;                  1    wreg      void 
  5228 ;; Registers used:
  5229 ;;		wreg, status,2, status,0, pclath, cstack
  5230 ;; Tracked objects:
  5231 ;;		On entry : 0/0
  5232 ;;		On exit  : 0/0
  5233 ;;		Unchanged: 0/0
  5234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5235 ;;      Params:         0       0       3       0       0
  5236 ;;      Locals:         0       0       0       0       0
  5237 ;;      Temps:          0       0       2       0       0
  5238 ;;      Totals:         0       0       5       0       0
  5239 ;;Total ram usage:        5 bytes
  5240 ;; Hardware stack levels used:    1
  5241 ;; Hardware stack levels required when called:    6
  5242 ;; This function calls:
  5243 ;;		_I2C_Master_Send_RepeatedStart
  5244 ;;		_I2C_Master_Send_Start
  5245 ;;		_I2C_Master_Send_Stop
  5246 ;;		_I2C_Master_WriteByte
  5247 ;; This function is called by:
  5248 ;;		_EWH_EEPROM_Init
  5249 ;;		_EWH_EEPROM_Update
  5250 ;; This function uses a non-reentrant model
  5251 ;;
  5252                           
  5253                           
  5254                           ;psect for function _EEPROM_WriteByte
  5255  0A5F                     _EEPROM_WriteByte:
  5256  0A5F                     l2672:	
  5257                           ;incstack = 0
  5258 ;; hardware stack exceeded
  5259                           ; Regs used in _EEPROM_WriteByte: [wreg+status,2+status,0+pclath+cstack]
  5260                           
  5261                           
  5262                           ;EEPROM.c: 16: void EEPROM_WriteByte(uint16_t address , uint8_t data);EEPROM.c: 17: {;EE
      +                          PROM.c: 18:   I2C_Master_Send_Start();
  5263  0A5F  120A  158A  2028  120A  158A  	fcall	_I2C_Master_Send_Start
  5264                           
  5265                           ;EEPROM.c: 21:   while(I2C_Master_WriteByte(0xA0 | ((address & 0x0700)>>7)) )
  5266  0A64  2A6A               	goto	l13
  5267  0A65                     l2674:
  5268                           
  5269                           ;EEPROM.c: 22:         I2C_Master_Send_RepeatedStart();
  5270  0A65  120A  158A  201F  120A  158A  	fcall	_I2C_Master_Send_RepeatedStart
  5271  0A6A                     l13:
  5272                           
  5273                           ;EEPROM.c: 21:   while(I2C_Master_WriteByte(0xA0 | ((address & 0x0700)>>7)) )
  5274  0A6A  1683               	bsf	3,5	;RP0=1, select bank1
  5275  0A6B  1303               	bcf	3,6	;RP1=0, select bank1
  5276  0A6C  0822               	movf	(EEPROM_WriteByte@address+1)^(0+128),w
  5277  0A6D  00A5               	movwf	(??_EEPROM_WriteByte^(0+128)+1)
  5278  0A6E  0821               	movf	EEPROM_WriteByte@address^(0+128),w
  5279  0A6F  00A4               	movwf	??_EEPROM_WriteByte^(0+128)
  5280  0A70  3007               	movlw	7
  5281  0A71                     u2005:
  5282  0A71  1003               	clrc
  5283  0A72  0CA5               	rrf	(??_EEPROM_WriteByte^(0+128)+1),f
  5284  0A73  0CA4               	rrf	??_EEPROM_WriteByte^(0+128),f
  5285  0A74  3EFF               	addlw	-1
  5286  0A75  1D03               	skipz
  5287  0A76  2A71               	goto	u2005
  5288  0A77  0824               	movf	??_EEPROM_WriteByte^(0+128),w
  5289  0A78  390E               	andlw	14
  5290  0A79  38A0               	iorlw	160
  5291  0A7A  120A  158A  2123  120A  158A  	fcall	_I2C_Master_WriteByte
  5292  0A7F  3A00               	xorlw	0
  5293  0A80  1D03               	skipz
  5294  0A81  2A83               	goto	u2011
  5295  0A82  2A84               	goto	u2010
  5296  0A83                     u2011:
  5297  0A83  2A65               	goto	l2674
  5298  0A84                     u2010:
  5299  0A84                     l2676:
  5300                           
  5301                           ;EEPROM.c: 25:   I2C_Master_WriteByte((uint8_t)address);
  5302  0A84  1683               	bsf	3,5	;RP0=1, select bank1
  5303  0A85  1303               	bcf	3,6	;RP1=0, select bank1
  5304  0A86  0821               	movf	EEPROM_WriteByte@address^(0+128),w
  5305  0A87  120A  158A  2123  120A  158A  	fcall	_I2C_Master_WriteByte
  5306                           
  5307                           ;EEPROM.c: 26:   I2C_Master_WriteByte(data);
  5308  0A8C  1683               	bsf	3,5	;RP0=1, select bank1
  5309  0A8D  1303               	bcf	3,6	;RP1=0, select bank1
  5310  0A8E  0823               	movf	EEPROM_WriteByte@data^(0+128),w
  5311  0A8F  120A  158A  2123  120A  158A  	fcall	_I2C_Master_WriteByte
  5312                           
  5313                           ;EEPROM.c: 27:   I2C_Master_Send_Stop();
  5314  0A94  120A  158A  2031  120A  158A  	fcall	_I2C_Master_Send_Stop
  5315  0A99                     l16:
  5316  0A99  0008               	return
  5317  0A9A                     __end_of_EEPROM_WriteByte:
  5318                           
  5319                           	psect	text31
  5320  0923                     __ptext31:	
  5321 ;; *************** function _I2C_Master_WriteByte *****************
  5322 ;; Defined at:
  5323 ;;		line 100 in file "i2c.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;  Data            1    wreg     unsigned char 
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;  Data            1    0[BANK1 ] unsigned char 
  5328 ;; Return value:  Size  Location     Type
  5329 ;;                  1    wreg      unsigned char 
  5330 ;; Registers used:
  5331 ;;		wreg, status,2, status,0, pclath, cstack
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5337 ;;      Params:         0       0       0       0       0
  5338 ;;      Locals:         0       0       1       0       0
  5339 ;;      Temps:          0       0       0       0       0
  5340 ;;      Totals:         0       0       1       0       0
  5341 ;;Total ram usage:        1 bytes
  5342 ;; Hardware stack levels used:    1
  5343 ;; Hardware stack levels required when called:    5
  5344 ;; This function calls:
  5345 ;;		_I2C_Wait_IDLE
  5346 ;; This function is called by:
  5347 ;;		_EEPROM_WriteByte
  5348 ;;		_EEPROM_ReadByte
  5349 ;;		_EEPROM_WritePage
  5350 ;;		_EEPROM_ReadPage
  5351 ;; This function uses a non-reentrant model
  5352 ;;
  5353                           
  5354                           
  5355                           ;psect for function _I2C_Master_WriteByte
  5356  0923                     _I2C_Master_WriteByte:
  5357                           
  5358                           ;incstack = 0
  5359 ;; hardware stack exceeded
  5360                           ; Regs used in _I2C_Master_WriteByte: [wreg+status,2+status,0+pclath+cstack]
  5361                           ;I2C_Master_WriteByte@Data stored from wreg
  5362  0923  1683               	bsf	3,5	;RP0=1, select bank1
  5363  0924  1303               	bcf	3,6	;RP1=0, select bank1
  5364  0925  00A0               	movwf	I2C_Master_WriteByte@Data^(0+128)
  5365  0926                     l2590:
  5366                           
  5367                           ;i2c.c: 100: uint8_t I2C_Master_WriteByte(uint8_t Data);i2c.c: 101: {;i2c.c: 103:     I2
      +                          C_Wait_IDLE();
  5368  0926  120A  158A  208B  120A  158A  	fcall	_I2C_Wait_IDLE
  5369  092B                     l2592:
  5370                           
  5371                           ;i2c.c: 104:     SSPBUF=Data;
  5372  092B  1683               	bsf	3,5	;RP0=1, select bank1
  5373  092C  1303               	bcf	3,6	;RP1=0, select bank1
  5374  092D  0820               	movf	I2C_Master_WriteByte@Data^(0+128),w
  5375  092E  1283               	bcf	3,5	;RP0=0, select bank0
  5376  092F  1303               	bcf	3,6	;RP1=0, select bank0
  5377  0930  0093               	movwf	19	;volatile
  5378  0931                     l112:	
  5379                           ;i2c.c: 105:     while(!SSPIF);
  5380                           
  5381  0931  1D8C               	btfss	12,3	;volatile
  5382  0932  2934               	goto	u1941
  5383  0933  2935               	goto	u1940
  5384  0934                     u1941:
  5385  0934  2931               	goto	l112
  5386  0935                     u1940:
  5387  0935                     l114:
  5388                           
  5389                           ;i2c.c: 106:     SSPIF=0;
  5390  0935  118C               	bcf	12,3	;volatile
  5391  0936                     l2594:
  5392                           
  5393                           ;i2c.c: 107:     I2C_Wait_IDLE();
  5394  0936  120A  158A  208B  120A  158A  	fcall	_I2C_Wait_IDLE
  5395  093B                     l2596:
  5396                           
  5397                           ;i2c.c: 108:     return ACKSTAT;
  5398  093B  3000               	movlw	0
  5399  093C  1683               	bsf	3,5	;RP0=1, select bank1
  5400  093D  1303               	bcf	3,6	;RP1=0, select bank1
  5401  093E  1B11               	btfsc	17,6	;volatile
  5402  093F  3001               	movlw	1
  5403  0940                     l115:
  5404  0940  0008               	return
  5405  0941                     __end_of_I2C_Master_WriteByte:
  5406                           
  5407                           	psect	text32
  5408  0831                     __ptext32:	
  5409 ;; *************** function _I2C_Master_Send_Stop *****************
  5410 ;; Defined at:
  5411 ;;		line 72 in file "i2c.c"
  5412 ;; Parameters:    Size  Location     Type
  5413 ;;		None
  5414 ;; Auto vars:     Size  Location     Type
  5415 ;;		None
  5416 ;; Return value:  Size  Location     Type
  5417 ;;                  1    wreg      void 
  5418 ;; Registers used:
  5419 ;;		wreg, status,2, status,0, pclath, cstack
  5420 ;; Tracked objects:
  5421 ;;		On entry : 0/0
  5422 ;;		On exit  : 0/0
  5423 ;;		Unchanged: 0/0
  5424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5425 ;;      Params:         0       0       0       0       0
  5426 ;;      Locals:         0       0       0       0       0
  5427 ;;      Temps:          0       0       0       0       0
  5428 ;;      Totals:         0       0       0       0       0
  5429 ;;Total ram usage:        0 bytes
  5430 ;; Hardware stack levels used:    1
  5431 ;; Hardware stack levels required when called:    5
  5432 ;; This function calls:
  5433 ;;		_I2C_Wait_IDLE
  5434 ;; This function is called by:
  5435 ;;		_EEPROM_WriteByte
  5436 ;;		_EEPROM_ReadByte
  5437 ;;		_EEPROM_WritePage
  5438 ;;		_EEPROM_ReadPage
  5439 ;; This function uses a non-reentrant model
  5440 ;;
  5441                           
  5442                           
  5443                           ;psect for function _I2C_Master_Send_Stop
  5444  0831                     _I2C_Master_Send_Stop:
  5445  0831                     l2600:	
  5446                           ;incstack = 0
  5447 ;; hardware stack exceeded
  5448                           ; Regs used in _I2C_Master_Send_Stop: [wreg+status,2+status,0+pclath+cstack]
  5449                           
  5450                           
  5451                           ;i2c.c: 75:     I2C_Wait_IDLE();
  5452  0831  120A  158A  208B  120A  158A  	fcall	_I2C_Wait_IDLE
  5453  0836                     l2602:
  5454                           
  5455                           ;i2c.c: 76:     PEN=1 ;
  5456  0836  1683               	bsf	3,5	;RP0=1, select bank1
  5457  0837  1303               	bcf	3,6	;RP1=0, select bank1
  5458  0838  1511               	bsf	17,2	;volatile
  5459  0839                     l100:
  5460  0839  0008               	return
  5461  083A                     __end_of_I2C_Master_Send_Stop:
  5462                           
  5463                           	psect	text33
  5464  0828                     __ptext33:	
  5465 ;; *************** function _I2C_Master_Send_Start *****************
  5466 ;; Defined at:
  5467 ;;		line 66 in file "i2c.c"
  5468 ;; Parameters:    Size  Location     Type
  5469 ;;		None
  5470 ;; Auto vars:     Size  Location     Type
  5471 ;;		None
  5472 ;; Return value:  Size  Location     Type
  5473 ;;                  1    wreg      void 
  5474 ;; Registers used:
  5475 ;;		wreg, status,2, status,0, pclath, cstack
  5476 ;; Tracked objects:
  5477 ;;		On entry : 0/0
  5478 ;;		On exit  : 0/0
  5479 ;;		Unchanged: 0/0
  5480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5481 ;;      Params:         0       0       0       0       0
  5482 ;;      Locals:         0       0       0       0       0
  5483 ;;      Temps:          0       0       0       0       0
  5484 ;;      Totals:         0       0       0       0       0
  5485 ;;Total ram usage:        0 bytes
  5486 ;; Hardware stack levels used:    1
  5487 ;; Hardware stack levels required when called:    5
  5488 ;; This function calls:
  5489 ;;		_I2C_Wait_IDLE
  5490 ;; This function is called by:
  5491 ;;		_EEPROM_WriteByte
  5492 ;;		_EEPROM_ReadByte
  5493 ;;		_EEPROM_WritePage
  5494 ;;		_EEPROM_ReadPage
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           
  5499                           ;psect for function _I2C_Master_Send_Start
  5500  0828                     _I2C_Master_Send_Start:
  5501  0828                     l2582:	
  5502                           ;incstack = 0
  5503 ;; hardware stack exceeded
  5504                           ; Regs used in _I2C_Master_Send_Start: [wreg+status,2+status,0+pclath+cstack]
  5505                           
  5506                           
  5507                           ;i2c.c: 69:     I2C_Wait_IDLE();
  5508  0828  120A  158A  208B  120A  158A  	fcall	_I2C_Wait_IDLE
  5509  082D                     l2584:
  5510                           
  5511                           ;i2c.c: 70:     SEN=1 ;
  5512  082D  1683               	bsf	3,5	;RP0=1, select bank1
  5513  082E  1303               	bcf	3,6	;RP1=0, select bank1
  5514  082F  1411               	bsf	17,0	;volatile
  5515  0830                     l97:
  5516  0830  0008               	return
  5517  0831                     __end_of_I2C_Master_Send_Start:
  5518                           
  5519                           	psect	text34
  5520  081F                     __ptext34:	
  5521 ;; *************** function _I2C_Master_Send_RepeatedStart *****************
  5522 ;; Defined at:
  5523 ;;		line 78 in file "i2c.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;		None
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;		None
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  1    wreg      void 
  5530 ;; Registers used:
  5531 ;;		wreg, status,2, status,0, pclath, cstack
  5532 ;; Tracked objects:
  5533 ;;		On entry : 0/0
  5534 ;;		On exit  : 0/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5537 ;;      Params:         0       0       0       0       0
  5538 ;;      Locals:         0       0       0       0       0
  5539 ;;      Temps:          0       0       0       0       0
  5540 ;;      Totals:         0       0       0       0       0
  5541 ;;Total ram usage:        0 bytes
  5542 ;; Hardware stack levels used:    1
  5543 ;; Hardware stack levels required when called:    5
  5544 ;; This function calls:
  5545 ;;		_I2C_Wait_IDLE
  5546 ;; This function is called by:
  5547 ;;		_EEPROM_WriteByte
  5548 ;;		_EEPROM_ReadByte
  5549 ;;		_EEPROM_WritePage
  5550 ;;		_EEPROM_ReadPage
  5551 ;; This function uses a non-reentrant model
  5552 ;;
  5553                           
  5554                           
  5555                           ;psect for function _I2C_Master_Send_RepeatedStart
  5556  081F                     _I2C_Master_Send_RepeatedStart:
  5557  081F                     l2586:	
  5558                           ;incstack = 0
  5559 ;; hardware stack exceeded
  5560                           ; Regs used in _I2C_Master_Send_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  5561                           
  5562                           
  5563                           ;i2c.c: 81:     I2C_Wait_IDLE();
  5564  081F  120A  158A  208B  120A  158A  	fcall	_I2C_Wait_IDLE
  5565  0824                     l2588:
  5566                           
  5567                           ;i2c.c: 82:     RSEN=1 ;
  5568  0824  1683               	bsf	3,5	;RP0=1, select bank1
  5569  0825  1303               	bcf	3,6	;RP1=0, select bank1
  5570  0826  1491               	bsf	17,1	;volatile
  5571  0827                     l103:
  5572  0827  0008               	return
  5573  0828                     __end_of_I2C_Master_Send_RepeatedStart:
  5574                           
  5575                           	psect	text35
  5576  088B                     __ptext35:	
  5577 ;; *************** function _I2C_Wait_IDLE *****************
  5578 ;; Defined at:
  5579 ;;		line 58 in file "i2c.c"
  5580 ;; Parameters:    Size  Location     Type
  5581 ;;		None
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;		None
  5584 ;; Return value:  Size  Location     Type
  5585 ;;                  1    wreg      void 
  5586 ;; Registers used:
  5587 ;;		wreg, status,2
  5588 ;; Tracked objects:
  5589 ;;		On entry : 0/0
  5590 ;;		On exit  : 0/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5593 ;;      Params:         0       0       0       0       0
  5594 ;;      Locals:         0       0       0       0       0
  5595 ;;      Temps:          0       0       0       0       0
  5596 ;;      Totals:         0       0       0       0       0
  5597 ;;Total ram usage:        0 bytes
  5598 ;; Hardware stack levels used:    1
  5599 ;; Hardware stack levels required when called:    4
  5600 ;; This function calls:
  5601 ;;		Nothing
  5602 ;; This function is called by:
  5603 ;;		_I2C_Master_Send_Start
  5604 ;;		_I2C_Master_Send_Stop
  5605 ;;		_I2C_Master_Send_RepeatedStart
  5606 ;;		_I2C_Master_Send_ACK
  5607 ;;		_I2C_Master_Send_NACK
  5608 ;;		_I2C_Master_WriteByte
  5609 ;;		_I2C_Master_ReadByte
  5610 ;; This function uses a non-reentrant model
  5611 ;;
  5612                           
  5613                           
  5614                           ;psect for function _I2C_Wait_IDLE
  5615  088B                     _I2C_Wait_IDLE:
  5616  088B                     l2566:	
  5617                           ;incstack = 0
  5618 ;; hardware stack exceeded
  5619                           ; Regs used in _I2C_Wait_IDLE: [wreg+status,2]
  5620                           
  5621  088B                     l91:	
  5622                           ;i2c.c: 63:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  5623                           
  5624  088B  1683               	bsf	3,5	;RP0=1, select bank1
  5625  088C  1303               	bcf	3,6	;RP1=0, select bank1
  5626  088D  1914               	btfsc	20,2	;volatile
  5627  088E  2890               	goto	u1921
  5628  088F  2891               	goto	u1920
  5629  0890                     u1921:
  5630  0890  288B               	goto	l91
  5631  0891                     u1920:
  5632  0891                     l2568:
  5633  0891  0811               	movf	17,w	;volatile
  5634  0892  391F               	andlw	31
  5635  0893  1D03               	btfss	3,2
  5636  0894  2896               	goto	u1931
  5637  0895  2897               	goto	u1930
  5638  0896                     u1931:
  5639  0896  288B               	goto	l91
  5640  0897                     u1930:
  5641  0897                     l94:
  5642  0897  0008               	return
  5643  0898                     __end_of_I2C_Wait_IDLE:
  5644                           
  5645                           	psect	text36
  5646  08E9                     __ptext36:	
  5647 ;; *************** function _DD_Init *****************
  5648 ;; Defined at:
  5649 ;;		line 14 in file "DD.c"
  5650 ;; Parameters:    Size  Location     Type
  5651 ;;		None
  5652 ;; Auto vars:     Size  Location     Type
  5653 ;;		None
  5654 ;; Return value:  Size  Location     Type
  5655 ;;                  1    wreg      void 
  5656 ;; Registers used:
  5657 ;;		wreg, status,2, status,0, btemp+1
  5658 ;; Tracked objects:
  5659 ;;		On entry : 0/0
  5660 ;;		On exit  : 0/0
  5661 ;;		Unchanged: 0/0
  5662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5663 ;;      Params:         0       0       0       0       0
  5664 ;;      Locals:         0       0       0       0       0
  5665 ;;      Temps:          0       0       0       0       0
  5666 ;;      Totals:         0       0       0       0       0
  5667 ;;Total ram usage:        0 bytes
  5668 ;; Hardware stack levels used:    1
  5669 ;; Hardware stack levels required when called:    4
  5670 ;; This function calls:
  5671 ;;		Nothing
  5672 ;; This function is called by:
  5673 ;;		_EWH_Init
  5674 ;; This function uses a non-reentrant model
  5675 ;;
  5676                           
  5677                           
  5678                           ;psect for function _DD_Init
  5679  08E9                     _DD_Init:
  5680  08E9                     l2860:	
  5681                           ;incstack = 0
  5682                           ; Regs used in _DD_Init: [wreg+status,2+status,0+btemp+1]
  5683                           
  5684  08E9                     l2864:	
  5685                           ;DD.c: 17:     (0u)? (TRISC |= (1<<5)) : (TRISC &= ~(1<<5));
  5686                           
  5687  08E9  30DF               	movlw	223
  5688  08EA  00FF               	movwf	btemp+1
  5689  08EB  087F               	movf	btemp+1,w
  5690  08EC  1683               	bsf	3,5	;RP0=1, select bank1
  5691  08ED  1303               	bcf	3,6	;RP1=0, select bank1
  5692  08EE  0587               	andwf	7,f	;volatile
  5693  08EF                     l2868:
  5694  08EF  30FB               	movlw	251
  5695  08F0  00FF               	movwf	btemp+1
  5696  08F1  087F               	movf	btemp+1,w
  5697  08F2  0587               	andwf	7,f	;volatile
  5698  08F3                     l2872:
  5699  08F3  307F               	movlw	127
  5700  08F4  00FF               	movwf	btemp+1
  5701  08F5  087F               	movf	btemp+1,w
  5702  08F6  0586               	andwf	6,f	;volatile
  5703  08F7                     l2876:
  5704  08F7  30DF               	movlw	223
  5705  08F8  00FF               	movwf	btemp+1
  5706  08F9  087F               	movf	btemp+1,w
  5707  08FA  1283               	bcf	3,5	;RP0=0, select bank0
  5708  08FB  1303               	bcf	3,6	;RP1=0, select bank0
  5709  08FC  0587               	andwf	7,f	;volatile
  5710  08FD                     l2880:
  5711  08FD  30FB               	movlw	251
  5712  08FE  00FF               	movwf	btemp+1
  5713  08FF  087F               	movf	btemp+1,w
  5714  0900  0587               	andwf	7,f	;volatile
  5715  0901                     l2884:
  5716  0901  307F               	movlw	127
  5717  0902  00FF               	movwf	btemp+1
  5718  0903  087F               	movf	btemp+1,w
  5719  0904  0586               	andwf	6,f	;volatile
  5720  0905                     l213:
  5721  0905  0008               	return
  5722  0906                     __end_of_DD_Init:
  5723                           
  5724                           	psect	text37
  5725  0EF5                     __ptext37:	
  5726 ;; *************** function _ADC_Init *****************
  5727 ;; Defined at:
  5728 ;;		line 16 in file "adc.c"
  5729 ;; Parameters:    Size  Location     Type
  5730 ;;  config          1    wreg     PTR struct .
  5731 ;;		 -> EWH_Init@adc_config(4), 
  5732 ;; Auto vars:     Size  Location     Type
  5733 ;;  config          1    2[BANK1 ] PTR struct .
  5734 ;;		 -> EWH_Init@adc_config(4), 
  5735 ;; Return value:  Size  Location     Type
  5736 ;;                  1    wreg      void 
  5737 ;; Registers used:
  5738 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5739 ;; Tracked objects:
  5740 ;;		On entry : 0/0
  5741 ;;		On exit  : 0/0
  5742 ;;		Unchanged: 0/0
  5743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5744 ;;      Params:         0       0       0       0       0
  5745 ;;      Locals:         0       0       1       0       0
  5746 ;;      Temps:          0       0       2       0       0
  5747 ;;      Totals:         0       0       3       0       0
  5748 ;;Total ram usage:        3 bytes
  5749 ;; Hardware stack levels used:    1
  5750 ;; Hardware stack levels required when called:    4
  5751 ;; This function calls:
  5752 ;;		Nothing
  5753 ;; This function is called by:
  5754 ;;		_EWH_Init
  5755 ;; This function uses a non-reentrant model
  5756 ;;
  5757                           
  5758                           
  5759                           ;psect for function _ADC_Init
  5760  0EF5                     _ADC_Init:
  5761                           
  5762                           ;incstack = 0
  5763                           ; Regs used in _ADC_Init: [wreg-fsr0h+status,2+status,0+btemp+1]
  5764                           ;ADC_Init@config stored from wreg
  5765  0EF5  1683               	bsf	3,5	;RP0=1, select bank1
  5766  0EF6  1303               	bcf	3,6	;RP1=0, select bank1
  5767  0EF7  00A2               	movwf	ADC_Init@config^(0+128)
  5768  0EF8                     l2922:
  5769                           
  5770                           ;adc.c: 16: void ADC_Init(tADC_Config* config);adc.c: 17: {;adc.c: 19:     ADON=1;
  5771  0EF8  1283               	bcf	3,5	;RP0=0, select bank0
  5772  0EF9  1303               	bcf	3,6	;RP1=0, select bank0
  5773  0EFA  141F               	bsf	31,0	;volatile
  5774                           
  5775                           ;adc.c: 21:     switch(config->clk)
  5776  0EFB  2F2A               	goto	l2932
  5777  0EFC                     l2924:
  5778                           
  5779                           ;adc.c: 24:             ADCON0 &= ~(0xC0);
  5780  0EFC  303F               	movlw	63
  5781  0EFD  00FF               	movwf	btemp+1
  5782  0EFE  087F               	movf	btemp+1,w
  5783  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  5784  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  5785  0F01  059F               	andwf	31,f	;volatile
  5786                           
  5787                           ;adc.c: 25:             break;
  5788  0F02  2F4F               	goto	l2934
  5789  0F03                     l269:	
  5790                           ;adc.c: 26:         case FOSC_8:
  5791                           
  5792                           
  5793                           ;adc.c: 27:             ADCON0 |= (1<<6);
  5794  0F03  1283               	bcf	3,5	;RP0=0, select bank0
  5795  0F04  1303               	bcf	3,6	;RP1=0, select bank0
  5796  0F05  171F               	bsf	31,6	;volatile
  5797                           
  5798                           ;adc.c: 28:             break;
  5799  0F06  2F4F               	goto	l2934
  5800  0F07                     l270:	
  5801                           ;adc.c: 29:         case FOSC_32:
  5802                           
  5803                           
  5804                           ;adc.c: 30:             ADCON0 |= (2<<6);
  5805  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  5806  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  5807  0F09  179F               	bsf	31,7	;volatile
  5808                           
  5809                           ;adc.c: 31:             break;
  5810  0F0A  2F4F               	goto	l2934
  5811  0F0B                     l2926:
  5812                           
  5813                           ;adc.c: 33:             ADCON0 |= (3<<6);
  5814  0F0B  30C0               	movlw	192
  5815  0F0C  00FF               	movwf	btemp+1
  5816  0F0D  087F               	movf	btemp+1,w
  5817  0F0E  1283               	bcf	3,5	;RP0=0, select bank0
  5818  0F0F  1303               	bcf	3,6	;RP1=0, select bank0
  5819  0F10  049F               	iorwf	31,f	;volatile
  5820                           
  5821                           ;adc.c: 34:             break;
  5822  0F11  2F4F               	goto	l2934
  5823  0F12                     l2928:
  5824                           
  5825                           ;adc.c: 36:             ADCON0 &= ~(0xC0);
  5826  0F12  303F               	movlw	63
  5827  0F13  00FF               	movwf	btemp+1
  5828  0F14  087F               	movf	btemp+1,w
  5829  0F15  1283               	bcf	3,5	;RP0=0, select bank0
  5830  0F16  1303               	bcf	3,6	;RP1=0, select bank0
  5831  0F17  059F               	andwf	31,f	;volatile
  5832  0F18                     l2930:
  5833                           
  5834                           ;adc.c: 37:             ADCON1 |= (1<<6);
  5835  0F18  1683               	bsf	3,5	;RP0=1, select bank1
  5836  0F19  1303               	bcf	3,6	;RP1=0, select bank1
  5837  0F1A  171F               	bsf	31,6	;volatile
  5838                           
  5839                           ;adc.c: 38:             break;
  5840  0F1B  2F4F               	goto	l2934
  5841  0F1C                     l273:	
  5842                           ;adc.c: 39:         case FOSC_16:
  5843                           
  5844                           
  5845                           ;adc.c: 40:             ADCON0 |= (1<<6);
  5846  0F1C  1283               	bcf	3,5	;RP0=0, select bank0
  5847  0F1D  1303               	bcf	3,6	;RP1=0, select bank0
  5848  0F1E  171F               	bsf	31,6	;volatile
  5849                           
  5850                           ;adc.c: 41:             ADCON1 |= (1<<6);
  5851  0F1F  1683               	bsf	3,5	;RP0=1, select bank1
  5852  0F20  1303               	bcf	3,6	;RP1=0, select bank1
  5853  0F21  171F               	bsf	31,6	;volatile
  5854                           
  5855                           ;adc.c: 42:             break;
  5856  0F22  2F4F               	goto	l2934
  5857  0F23                     l274:	
  5858                           ;adc.c: 43:         case FOSC_64:
  5859                           
  5860                           
  5861                           ;adc.c: 44:             ADCON0 |= (2<<6);
  5862  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  5863  0F24  1303               	bcf	3,6	;RP1=0, select bank0
  5864  0F25  179F               	bsf	31,7	;volatile
  5865                           
  5866                           ;adc.c: 45:             ADCON1 |= (1<<6);
  5867  0F26  1683               	bsf	3,5	;RP0=1, select bank1
  5868  0F27  1303               	bcf	3,6	;RP1=0, select bank1
  5869  0F28  171F               	bsf	31,6	;volatile
  5870                           
  5871                           ;adc.c: 46:             break;
  5872  0F29  2F4F               	goto	l2934
  5873  0F2A                     l2932:
  5874  0F2A  1683               	bsf	3,5	;RP0=1, select bank1
  5875  0F2B  1303               	bcf	3,6	;RP1=0, select bank1
  5876  0F2C  0822               	movf	ADC_Init@config^(0+128),w
  5877  0F2D  3E03               	addlw	3
  5878  0F2E  0084               	movwf	4
  5879  0F2F  1383               	bcf	3,7	;select IRP bank0
  5880  0F30  0800               	movf	0,w
  5881  0F31  00A0               	movwf	??_ADC_Init^(0+128)
  5882  0F32  01A1               	clrf	(??_ADC_Init^(0+128)+1)
  5883                           
  5884                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5885                           ; Switch size 1, requested type "simple"
  5886                           ; Number of cases is 1, Range of values is 0 to 0
  5887                           ; switch strategies available:
  5888                           ; Name         Instructions Cycles
  5889                           ; simple_byte            4     3 (average)
  5890                           ; direct_byte           11     8 (fixed)
  5891                           ; jumptable            260     6 (fixed)
  5892                           ;	Chosen strategy is simple_byte
  5893  0F33  0821               	movf	(??_ADC_Init+1)^(0+128),w
  5894  0F34  3A00               	xorlw	0	; case 0
  5895  0F35  1903               	skipnz
  5896  0F36  2F38               	goto	l3900
  5897  0F37  2F03               	goto	l269
  5898  0F38                     l3900:
  5899                           
  5900                           ; Switch size 1, requested type "simple"
  5901                           ; Number of cases is 7, Range of values is 0 to 6
  5902                           ; switch strategies available:
  5903                           ; Name         Instructions Cycles
  5904                           ; simple_byte           22    12 (average)
  5905                           ; direct_byte           29     8 (fixed)
  5906                           ; jumptable            260     6 (fixed)
  5907                           ;	Chosen strategy is simple_byte
  5908  0F38  0820               	movf	??_ADC_Init^(0+128),w
  5909  0F39  3A00               	xorlw	0	; case 0
  5910  0F3A  1903               	skipnz
  5911  0F3B  2EFC               	goto	l2924
  5912  0F3C  3A01               	xorlw	1	; case 1
  5913  0F3D  1903               	skipnz
  5914  0F3E  2F03               	goto	l269
  5915  0F3F  3A03               	xorlw	3	; case 2
  5916  0F40  1903               	skipnz
  5917  0F41  2F07               	goto	l270
  5918  0F42  3A01               	xorlw	1	; case 3
  5919  0F43  1903               	skipnz
  5920  0F44  2F0B               	goto	l2926
  5921  0F45  3A07               	xorlw	7	; case 4
  5922  0F46  1903               	skipnz
  5923  0F47  2F12               	goto	l2928
  5924  0F48  3A01               	xorlw	1	; case 5
  5925  0F49  1903               	skipnz
  5926  0F4A  2F1C               	goto	l273
  5927  0F4B  3A03               	xorlw	3	; case 6
  5928  0F4C  1903               	skipnz
  5929  0F4D  2F23               	goto	l274
  5930  0F4E  2F03               	goto	l269
  5931  0F4F                     l2934:
  5932                           
  5933                           ;adc.c: 53:     ADCON1 |= ((config->alignment)<<7);
  5934  0F4F  1683               	bsf	3,5	;RP0=1, select bank1
  5935  0F50  1303               	bcf	3,6	;RP1=0, select bank1
  5936  0F51  0822               	movf	ADC_Init@config^(0+128),w
  5937  0F52  3E02               	addlw	2
  5938  0F53  0084               	movwf	4
  5939  0F54  0800               	movf	0,w
  5940  0F55  00A0               	movwf	??_ADC_Init^(0+128)
  5941  0F56  3006               	movlw	6
  5942  0F57                     u2435:
  5943  0F57  1003               	clrc
  5944  0F58  0DA0               	rlf	??_ADC_Init^(0+128),f
  5945  0F59  3EFF               	addlw	-1
  5946  0F5A  1D03               	skipz
  5947  0F5B  2F57               	goto	u2435
  5948  0F5C  1003               	clrc
  5949  0F5D  0D20               	rlf	??_ADC_Init^(0+128),w
  5950  0F5E  00FF               	movwf	btemp+1
  5951  0F5F  087F               	movf	btemp+1,w
  5952  0F60  049F               	iorwf	31,f	;volatile
  5953  0F61                     l2936:
  5954                           
  5955                           ;adc.c: 56:     ADCON1 = (0x80);
  5956  0F61  3080               	movlw	128
  5957  0F62  009F               	movwf	31	;volatile
  5958  0F63                     l2938:
  5959                           
  5960                           ;adc.c: 60:     if(config->mode==INTERRUPT_MODE)
  5961  0F63  0A22               	incf	ADC_Init@config^(0+128),w
  5962  0F64  0084               	movwf	4
  5963  0F65  0300               	decf	0,w
  5964  0F66  1D03               	btfss	3,2
  5965  0F67  2F69               	goto	u2441
  5966  0F68  2F6A               	goto	u2440
  5967  0F69                     u2441:
  5968  0F69  2F72               	goto	l277
  5969  0F6A                     u2440:
  5970  0F6A                     l2940:
  5971                           
  5972                           ;adc.c: 61:     {;adc.c: 62:         ADIF = 0;
  5973  0F6A  1283               	bcf	3,5	;RP0=0, select bank0
  5974  0F6B  1303               	bcf	3,6	;RP1=0, select bank0
  5975  0F6C  130C               	bcf	12,6	;volatile
  5976                           
  5977                           ;adc.c: 63:         ADIE = 1;
  5978  0F6D  1683               	bsf	3,5	;RP0=1, select bank1
  5979  0F6E  1303               	bcf	3,6	;RP1=0, select bank1
  5980  0F6F  170C               	bsf	12,6	;volatile
  5981                           
  5982                           ;adc.c: 64:         PEIE = 1;
  5983  0F70  170B               	bsf	11,6	;volatile
  5984                           
  5985                           ;adc.c: 65:         GIE = 1;
  5986  0F71  178B               	bsf	11,7	;volatile
  5987  0F72                     l277:
  5988  0F72  0008               	return
  5989  0F73                     __end_of_ADC_Init:
  5990                           
  5991                           	psect	text38
  5992  0662                     __ptext38:	
  5993 ;; *************** function _ISR *****************
  5994 ;; Defined at:
  5995 ;;		line 364 in file "EWH.c"
  5996 ;; Parameters:    Size  Location     Type
  5997 ;;		None
  5998 ;; Auto vars:     Size  Location     Type
  5999 ;;		None
  6000 ;; Return value:  Size  Location     Type
  6001 ;;                  1    wreg      void 
  6002 ;; Registers used:
  6003 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6004 ;; Tracked objects:
  6005 ;;		On entry : 0/0
  6006 ;;		On exit  : 0/0
  6007 ;;		Unchanged: 0/0
  6008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6009 ;;      Params:         0       0       0       0       0
  6010 ;;      Locals:         0       0       0       0       0
  6011 ;;      Temps:          0       4       0       0       0
  6012 ;;      Totals:         0       4       0       0       0
  6013 ;;Total ram usage:        4 bytes
  6014 ;; Hardware stack levels used:    1
  6015 ;; Hardware stack levels required when called:    3
  6016 ;; This function calls:
  6017 ;;		_DD_GetState
  6018 ;;		_EWH_TempUpdate
  6019 ;;		i1_EWH_SetEvent
  6020 ;;		i1_EWH_SetMode
  6021 ;; This function is called by:
  6022 ;;		Interrupt level 1
  6023 ;; This function uses a non-reentrant model
  6024 ;;
  6025                           
  6026                           
  6027                           ;psect for function _ISR
  6028  0662                     _ISR:
  6029  0662                     i1l3630:
  6030                           
  6031                           ;EWH.c: 366:     static uint8_t overflow_count =0;;EWH.c: 368:     if(INTF==1)
  6032  0662  1C8B               	btfss	11,1	;volatile
  6033  0663  2E65               	goto	u369_21
  6034  0664  2E66               	goto	u369_20
  6035  0665                     u369_21:
  6036  0665  2E89               	goto	i1l3648
  6037  0666                     u369_20:
  6038  0666                     i1l3632:
  6039                           
  6040                           ;EWH.c: 369:     {;EWH.c: 371:         EWH_SetEvent(0);
  6041  0666  3000               	movlw	0
  6042  0667  160A  118A  27F8  120A  118A  	fcall	i1_EWH_SetEvent
  6043  066C                     i1l3634:
  6044                           
  6045                           ;EWH.c: 374:         if(EWH_State==ON)
  6046  066C  1283               	bcf	3,5	;RP0=0, select bank0
  6047  066D  1303               	bcf	3,6	;RP1=0, select bank0
  6048  066E  0355               	decf	_EWH_State,w
  6049  066F  1D03               	btfss	3,2
  6050  0670  2E72               	goto	u370_21
  6051  0671  2E73               	goto	u370_20
  6052  0672                     u370_21:
  6053  0672  2E7B               	goto	i1l3640
  6054  0673                     u370_20:
  6055  0673                     i1l3636:
  6056                           
  6057                           ;EWH.c: 375:         {;EWH.c: 376:             EWH_State=OFF;
  6058  0673  01D5               	clrf	_EWH_State
  6059  0674                     i1l3638:
  6060                           
  6061                           ;EWH.c: 377:             EWH_SetMode(EWH_SLEEP_MODE);
  6062  0674  3000               	movlw	0
  6063  0675  120A  158A  2007  120A  118A  	fcall	i1_EWH_SetMode
  6064                           
  6065                           ;EWH.c: 378:         }
  6066  067A  2E88               	goto	i1l3646
  6067  067B                     i1l3640:
  6068  067B  0855               	movf	_EWH_State,w
  6069  067C  1D03               	btfss	3,2
  6070  067D  2E7F               	goto	u371_21
  6071  067E  2E80               	goto	u371_20
  6072  067F                     u371_21:
  6073  067F  2E88               	goto	i1l3646
  6074  0680                     u371_20:
  6075  0680                     i1l3642:
  6076                           
  6077                           ;EWH.c: 380:         {;EWH.c: 381:             EWH_State=ON;
  6078  0680  01D5               	clrf	_EWH_State
  6079  0681  0AD5               	incf	_EWH_State,f
  6080  0682                     i1l3644:
  6081                           
  6082                           ;EWH.c: 382:             EWH_SetMode(EWH_WAKE_UP_MODE);
  6083  0682  3001               	movlw	1
  6084  0683  120A  158A  2007  120A  118A  	fcall	i1_EWH_SetMode
  6085  0688                     i1l3646:
  6086                           
  6087                           ;EWH.c: 384:         INTF=0;
  6088  0688  108B               	bcf	11,1	;volatile
  6089  0689                     i1l3648:
  6090                           
  6091                           ;EWH.c: 387:     if (TMR1IF)
  6092  0689  1283               	bcf	3,5	;RP0=0, select bank0
  6093  068A  1303               	bcf	3,6	;RP1=0, select bank0
  6094  068B  1C0C               	btfss	12,0	;volatile
  6095  068C  2E8E               	goto	u372_21
  6096  068D  2E8F               	goto	u372_20
  6097  068E                     u372_21:
  6098  068E  2F01               	goto	i1l576
  6099  068F                     u372_20:
  6100  068F                     i1l3650:
  6101                           
  6102                           ;EWH.c: 388:     {;EWH.c: 389:         overflow_count++;
  6103  068F  3001               	movlw	1
  6104  0690  00FF               	movwf	btemp+1
  6105  0691  087F               	movf	btemp+1,w
  6106  0692  07D2               	addwf	ISR@overflow_count,f
  6107  0693                     i1l3652:
  6108                           
  6109                           ;EWH.c: 390:         if(EWH_Mode==EWH_OPERATING_MODE || EWH_Mode==EWH_SET_TEMP_MODE)
  6110  0693  3003               	movlw	3
  6111  0694  1683               	bsf	3,5	;RP0=1, select bank1
  6112  0695  1303               	bcf	3,6	;RP1=0, select bank1
  6113  0696  0649               	xorwf	_EWH_Mode^(0+128),w
  6114  0697  1903               	btfsc	3,2
  6115  0698  2E9A               	goto	u373_21
  6116  0699  2E9B               	goto	u373_20
  6117  069A                     u373_21:
  6118  069A  2EA1               	goto	i1l3656
  6119  069B                     u373_20:
  6120  069B                     i1l3654:
  6121  069B  3002               	movlw	2
  6122  069C  0649               	xorwf	_EWH_Mode^(0+128),w
  6123  069D  1D03               	btfss	3,2
  6124  069E  2EA0               	goto	u374_21
  6125  069F  2EA1               	goto	u374_20
  6126  06A0                     u374_21:
  6127  06A0  2EA6               	goto	i1l3658
  6128  06A1                     u374_20:
  6129  06A1                     i1l3656:
  6130                           
  6131                           ;EWH.c: 391:         {;EWH.c: 392:             EWH_TempUpdate();
  6132  06A1  120A  158A  2773  120A  118A  	fcall	_EWH_TempUpdate
  6133  06A6                     i1l3658:
  6134                           
  6135                           ;EWH.c: 395:         if(overflow_count==10)
  6136  06A6  300A               	movlw	10
  6137  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  6138  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  6139  06A9  0652               	xorwf	ISR@overflow_count,w
  6140  06AA  1D03               	btfss	3,2
  6141  06AB  2EAD               	goto	u375_21
  6142  06AC  2EAE               	goto	u375_20
  6143  06AD                     u375_21:
  6144  06AD  2EFC               	goto	i1l3686
  6145  06AE                     u375_20:
  6146  06AE                     i1l3660:
  6147                           
  6148                           ;EWH.c: 396:         {;EWH.c: 398:             if(EWH_Mode==EWH_SET_TEMP_MODE)
  6149  06AE  3002               	movlw	2
  6150  06AF  1683               	bsf	3,5	;RP0=1, select bank1
  6151  06B0  1303               	bcf	3,6	;RP1=0, select bank1
  6152  06B1  0649               	xorwf	_EWH_Mode^(0+128),w
  6153  06B2  1D03               	btfss	3,2
  6154  06B3  2EB5               	goto	u376_21
  6155  06B4  2EB6               	goto	u376_20
  6156  06B5                     u376_21:
  6157  06B5  2EC9               	goto	i1l3670
  6158  06B6                     u376_20:
  6159  06B6                     i1l3662:
  6160                           
  6161                           ;EWH.c: 399:             {;EWH.c: 400:                 SSD_Blink_flag = ~SSD_Blink_flag;
  6162  06B6  09C6               	comf	_SSD_Blink_flag^(0+128),f
  6163  06B7                     i1l3664:
  6164                           
  6165                           ;EWH.c: 401:                 NoPress_Sec_count++;
  6166  06B7  3001               	movlw	1
  6167  06B8  00FF               	movwf	btemp+1
  6168  06B9  087F               	movf	btemp+1,w
  6169  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  6170  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  6171  06BC  07D4               	addwf	_NoPress_Sec_count,f
  6172  06BD                     i1l3666:
  6173                           
  6174                           ;EWH.c: 402:                 if(NoPress_Sec_count==5)
  6175  06BD  3005               	movlw	5
  6176  06BE  0654               	xorwf	_NoPress_Sec_count,w
  6177  06BF  1D03               	btfss	3,2
  6178  06C0  2EC2               	goto	u377_21
  6179  06C1  2EC3               	goto	u377_20
  6180  06C2                     u377_21:
  6181  06C2  2EC9               	goto	i1l3670
  6182  06C3                     u377_20:
  6183  06C3                     i1l3668:
  6184                           
  6185                           ;EWH.c: 403:                 {;EWH.c: 404:                     EWH_SetEvent(3);
  6186  06C3  3003               	movlw	3
  6187  06C4  160A  118A  27F8  120A  118A  	fcall	i1_EWH_SetEvent
  6188  06C9                     i1l3670:
  6189                           
  6190                           ;EWH.c: 408:             if(EWH_Mode==EWH_OPERATING_MODE && DD_GetState(HEATER)==ON)
  6191  06C9  3003               	movlw	3
  6192  06CA  1683               	bsf	3,5	;RP0=1, select bank1
  6193  06CB  1303               	bcf	3,6	;RP1=0, select bank1
  6194  06CC  0649               	xorwf	_EWH_Mode^(0+128),w
  6195  06CD  1D03               	btfss	3,2
  6196  06CE  2ED0               	goto	u378_21
  6197  06CF  2ED1               	goto	u378_20
  6198  06D0                     u378_21:
  6199  06D0  2EE3               	goto	i1l3676
  6200  06D1                     u378_20:
  6201  06D1                     i1l3672:
  6202  06D1  3000               	movlw	0
  6203  06D2  120A  158A  22D6  120A  118A  	fcall	_DD_GetState
  6204  06D7  3A01               	xorlw	1
  6205  06D8  1D03               	skipz
  6206  06D9  2EDB               	goto	u379_21
  6207  06DA  2EDC               	goto	u379_20
  6208  06DB                     u379_21:
  6209  06DB  2EE3               	goto	i1l3676
  6210  06DC                     u379_20:
  6211  06DC                     i1l3674:
  6212                           
  6213                           ;EWH.c: 409:             {;EWH.c: 410:                 (PORTB^=(1<<7));
  6214  06DC  3080               	movlw	128
  6215  06DD  00FF               	movwf	btemp+1
  6216  06DE  087F               	movf	btemp+1,w
  6217  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  6218  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  6219  06E1  0686               	xorwf	6,f	;volatile
  6220                           
  6221                           ;EWH.c: 411:             }
  6222  06E2  2EF9               	goto	i1l3684
  6223  06E3                     i1l3676:
  6224  06E3  3003               	movlw	3
  6225  06E4  1683               	bsf	3,5	;RP0=1, select bank1
  6226  06E5  1303               	bcf	3,6	;RP1=0, select bank1
  6227  06E6  0649               	xorwf	_EWH_Mode^(0+128),w
  6228  06E7  1D03               	btfss	3,2
  6229  06E8  2EEA               	goto	u380_21
  6230  06E9  2EEB               	goto	u380_20
  6231  06EA                     u380_21:
  6232  06EA  2EF9               	goto	i1l3684
  6233  06EB                     u380_20:
  6234  06EB                     i1l3678:
  6235                           
  6236                           ;EWH.c: 413:             {;EWH.c: 414:                 (ON)?(PORTB |= (1<<7)) : (PORTB &
      +                          = ~(1<<7));
  6237  06EB  3001               	movlw	1
  6238  06EC  120A  158A  22D6  120A  118A  	fcall	_DD_GetState
  6239  06F1  3A01               	xorlw	1
  6240  06F2  1D03               	skipz
  6241  06F3  2EF5               	goto	u381_21
  6242  06F4  2EF6               	goto	u381_20
  6243  06F5                     u381_21:
  6244  06F5  2EF9               	goto	i1l3684
  6245  06F6                     u381_20:
  6246  06F6                     i1l3680:
  6247  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  6248  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  6249  06F8  1786               	bsf	6,7	;volatile
  6250  06F9                     i1l3684:
  6251                           
  6252                           ;EWH.c: 417:             overflow_count = 0;
  6253  06F9  1283               	bcf	3,5	;RP0=0, select bank0
  6254  06FA  1303               	bcf	3,6	;RP1=0, select bank0
  6255  06FB  01D2               	clrf	ISR@overflow_count
  6256  06FC                     i1l3686:
  6257                           
  6258                           ;EWH.c: 419:     TMR1IF = 0;
  6259  06FC  100C               	bcf	12,0	;volatile
  6260  06FD                     i1l3688:
  6261                           
  6262                           ;EWH.c: 420:     TMR1=40536;
  6263  06FD  309E               	movlw	158
  6264  06FE  008F               	movwf	15	;volatile
  6265  06FF  3058               	movlw	88
  6266  0700  008E               	movwf	14	;volatile
  6267  0701                     i1l576:
  6268  0701  084B               	movf	??_ISR+3,w
  6269  0702  00FF               	movwf	btemp+1
  6270  0703  084A               	movf	??_ISR+2,w
  6271  0704  008A               	movwf	10
  6272  0705  0849               	movf	??_ISR+1,w
  6273  0706  0084               	movwf	4
  6274  0707  0E48               	swapf	??_ISR^0,w
  6275  0708  0083               	movwf	3
  6276  0709  0EFE               	swapf	btemp,f
  6277  070A  0E7E               	swapf	btemp,w
  6278  070B  0009               	retfie
  6279  070C                     __end_of_ISR:
  6280                           
  6281                           	psect	intentry
  6282  0004                     __pintentry:	
  6283                           ;incstack = 0
  6284 ;; hardware stack exceeded
  6285                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6286                           
  6287  0004                     interrupt_function:
  6288  007E                     saved_w	set	btemp
  6289  0004  00FE               	movwf	btemp
  6290  0005  0E03               	swapf	3,w
  6291  0006  1283               	bcf	3,5	;RP0=0, select bank0
  6292  0007  1303               	bcf	3,6	;RP1=0, select bank0
  6293  0008  00C8               	movwf	??_ISR
  6294  0009  0804               	movf	4,w
  6295  000A  00C9               	movwf	??_ISR+1
  6296  000B  080A               	movf	10,w
  6297  000C  00CA               	movwf	??_ISR+2
  6298  000D  087F               	movf	btemp+1,w
  6299  000E  00CB               	movwf	??_ISR+3
  6300  000F  120A  118A  2E62   	ljmp	_ISR
  6301                           
  6302                           	psect	text39
  6303  0807                     __ptext39:	
  6304 ;; *************** function i1_EWH_SetMode *****************
  6305 ;; Defined at:
  6306 ;;		line 288 in file "EWH.c"
  6307 ;; Parameters:    Size  Location     Type
  6308 ;;  new_mode        1    wreg     enum E1032
  6309 ;; Auto vars:     Size  Location     Type
  6310 ;;  new_mode        1    0[COMMON] enum E1032
  6311 ;; Return value:  Size  Location     Type
  6312 ;;                  1    wreg      void 
  6313 ;; Registers used:
  6314 ;;		wreg, btemp+1
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6320 ;;      Params:         0       0       0       0       0
  6321 ;;      Locals:         1       0       0       0       0
  6322 ;;      Temps:          0       0       0       0       0
  6323 ;;      Totals:         1       0       0       0       0
  6324 ;;Total ram usage:        1 bytes
  6325 ;; Hardware stack levels used:    1
  6326 ;; This function calls:
  6327 ;;		Nothing
  6328 ;; This function is called by:
  6329 ;;		_ISR
  6330 ;; This function uses a non-reentrant model
  6331 ;;
  6332                           
  6333                           
  6334                           ;psect for function i1_EWH_SetMode
  6335  0807                     i1_EWH_SetMode:
  6336                           
  6337                           ;incstack = 0
  6338                           ; Regs used in i1_EWH_SetMode: [wreg+btemp+1]
  6339                           ;i1EWH_SetMode@new_mode stored from wreg
  6340  0807  00F0               	movwf	i1EWH_SetMode@new_mode
  6341  0808                     i1l3548:
  6342                           
  6343                           ;EWH.c: 288: void EWH_SetMode(sEWH_Mode new_mode);EWH.c: 289: {;EWH.c: 290:     EWH_Mode
      +                          =new_mode;
  6344  0808  0870               	movf	i1EWH_SetMode@new_mode,w
  6345  0809  00FF               	movwf	btemp+1
  6346  080A  087F               	movf	btemp+1,w
  6347  080B  1683               	bsf	3,5	;RP0=1, select bank1
  6348  080C  1303               	bcf	3,6	;RP1=0, select bank1
  6349  080D  00C9               	movwf	_EWH_Mode^(0+128)
  6350  080E                     i1l516:
  6351  080E  0008               	return
  6352  080F                     __end_ofi1_EWH_SetMode:
  6353                           
  6354                           	psect	text40
  6355  17F8                     __ptext40:	
  6356 ;; *************** function i1_EWH_SetEvent *****************
  6357 ;; Defined at:
  6358 ;;		line 292 in file "EWH.c"
  6359 ;; Parameters:    Size  Location     Type
  6360 ;;  Event_index     1    wreg     unsigned char 
  6361 ;; Auto vars:     Size  Location     Type
  6362 ;;  Event_index     1    0[COMMON] unsigned char 
  6363 ;; Return value:  Size  Location     Type
  6364 ;;                  1    wreg      void 
  6365 ;; Registers used:
  6366 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6367 ;; Tracked objects:
  6368 ;;		On entry : 0/0
  6369 ;;		On exit  : 0/0
  6370 ;;		Unchanged: 0/0
  6371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6372 ;;      Params:         0       0       0       0       0
  6373 ;;      Locals:         1       0       0       0       0
  6374 ;;      Temps:          0       0       0       0       0
  6375 ;;      Totals:         1       0       0       0       0
  6376 ;;Total ram usage:        1 bytes
  6377 ;; Hardware stack levels used:    1
  6378 ;; This function calls:
  6379 ;;		Nothing
  6380 ;; This function is called by:
  6381 ;;		_ISR
  6382 ;; This function uses a non-reentrant model
  6383 ;;
  6384                           
  6385                           
  6386                           ;psect for function i1_EWH_SetEvent
  6387  17F8                     i1_EWH_SetEvent:
  6388                           
  6389                           ;incstack = 0
  6390                           ; Regs used in i1_EWH_SetEvent: [wreg-fsr0h+status,2+status,0]
  6391                           ;i1EWH_SetEvent@Event_index stored from wreg
  6392  17F8  00F0               	movwf	i1EWH_SetEvent@Event_index
  6393  17F9                     i1l3550:
  6394                           
  6395                           ;EWH.c: 292: void EWH_SetEvent(uint8_t Event_index);EWH.c: 293: {;EWH.c: 294:     EWH_Ev
      +                          ents[Event_index]=1;
  6396  17F9  0870               	movf	i1EWH_SetEvent@Event_index,w
  6397  17FA  3EBD               	addlw	(low (_EWH_Events| 0))& (0+255)
  6398  17FB  0084               	movwf	4
  6399  17FC  1383               	bcf	3,7	;select IRP bank1
  6400  17FD  0180               	clrf	0
  6401  17FE  0A80               	incf	0,f
  6402  17FF                     i1l519:
  6403  17FF  0008               	return
  6404  1800                     __end_ofi1_EWH_SetEvent:
  6405                           
  6406                           	psect	text41
  6407  0F73                     __ptext41:	
  6408 ;; *************** function _EWH_TempUpdate *****************
  6409 ;; Defined at:
  6410 ;;		line 345 in file "EWH.c"
  6411 ;; Parameters:    Size  Location     Type
  6412 ;;		None
  6413 ;; Auto vars:     Size  Location     Type
  6414 ;;  Reading         2   38[BANK0 ] unsigned short 
  6415 ;; Return value:  Size  Location     Type
  6416 ;;                  1    wreg      void 
  6417 ;; Registers used:
  6418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6419 ;; Tracked objects:
  6420 ;;		On entry : 0/0
  6421 ;;		On exit  : 0/0
  6422 ;;		Unchanged: 0/0
  6423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6424 ;;      Params:         0       0       0       0       0
  6425 ;;      Locals:         0       2       0       0       0
  6426 ;;      Temps:          0       2       0       0       0
  6427 ;;      Totals:         0       4       0       0       0
  6428 ;;Total ram usage:        4 bytes
  6429 ;; Hardware stack levels used:    1
  6430 ;; Hardware stack levels required when called:    2
  6431 ;; This function calls:
  6432 ;;		_ADC_ReadChannel
  6433 ;;		_EWH_getAvrgTempReading
  6434 ;;		___awmod
  6435 ;;		___flmul
  6436 ;;		___fltol
  6437 ;;		___xxtofl
  6438 ;; This function is called by:
  6439 ;;		_ISR
  6440 ;; This function uses a non-reentrant model
  6441 ;;
  6442                           
  6443                           
  6444                           ;psect for function _EWH_TempUpdate
  6445  0F73                     _EWH_TempUpdate:
  6446  0F73                     i1l3532:	
  6447                           ;incstack = 0
  6448 ;; hardware stack exceeded
  6449                           ; Regs used in _EWH_TempUpdate: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6450                           
  6451                           
  6452                           ;EWH.c: 347:     uint16_t Reading = ADC_ReadChannel(ADC2);
  6453  0F73  3002               	movlw	2
  6454  0F74  120A  158A  2191  120A  158A  	fcall	_ADC_ReadChannel
  6455  0F79  0871               	movf	?_ADC_ReadChannel+1,w
  6456  0F7A  1283               	bcf	3,5	;RP0=0, select bank0
  6457  0F7B  1303               	bcf	3,6	;RP1=0, select bank0
  6458  0F7C  00C7               	movwf	EWH_TempUpdate@Reading+1
  6459  0F7D  0870               	movf	?_ADC_ReadChannel,w
  6460  0F7E  00C6               	movwf	EWH_TempUpdate@Reading
  6461                           
  6462                           ;EWH.c: 348:     current_Temp=Reading*0.488;
  6463  0F7F  0846               	movf	EWH_TempUpdate@Reading,w
  6464  0F80  00F0               	movwf	___xxtofl@val
  6465  0F81  0847               	movf	EWH_TempUpdate@Reading+1,w
  6466  0F82  00F1               	movwf	___xxtofl@val+1
  6467  0F83  01F2               	clrf	___xxtofl@val+2
  6468  0F84  01F3               	clrf	___xxtofl@val+3
  6469  0F85  3000               	movlw	0
  6470  0F86  120A  118A  25A8  120A  158A  	fcall	___xxtofl
  6471  0F8B  0873               	movf	?___xxtofl+3,w
  6472  0F8C  1283               	bcf	3,5	;RP0=0, select bank0
  6473  0F8D  1303               	bcf	3,6	;RP1=0, select bank0
  6474  0F8E  00A7               	movwf	___flmul@a+3
  6475  0F8F  0872               	movf	?___xxtofl+2,w
  6476  0F90  00A6               	movwf	___flmul@a+2
  6477  0F91  0871               	movf	?___xxtofl+1,w
  6478  0F92  00A5               	movwf	___flmul@a+1
  6479  0F93  0870               	movf	?___xxtofl,w
  6480  0F94  00A4               	movwf	___flmul@a
  6481  0F95  303E               	movlw	62
  6482  0F96  00A3               	movwf	___flmul@b+3
  6483  0F97  30F9               	movlw	249
  6484  0F98  00A2               	movwf	___flmul@b+2
  6485  0F99  30DB               	movlw	219
  6486  0F9A  00A1               	movwf	___flmul@b+1
  6487  0F9B  3023               	movlw	35
  6488  0F9C  00A0               	movwf	___flmul@b
  6489  0F9D  120A  118A  2037  120A  158A  	fcall	___flmul
  6490  0FA2  1283               	bcf	3,5	;RP0=0, select bank0
  6491  0FA3  1303               	bcf	3,6	;RP1=0, select bank0
  6492  0FA4  0823               	movf	?___flmul+3,w
  6493  0FA5  00BD               	movwf	___fltol@f1+3
  6494  0FA6  0822               	movf	?___flmul+2,w
  6495  0FA7  00BC               	movwf	___fltol@f1+2
  6496  0FA8  0821               	movf	?___flmul+1,w
  6497  0FA9  00BB               	movwf	___fltol@f1+1
  6498  0FAA  0820               	movf	?___flmul,w
  6499  0FAB  00BA               	movwf	___fltol@f1
  6500  0FAC  120A  158A  2679  120A  158A  	fcall	___fltol
  6501  0FB1  1283               	bcf	3,5	;RP0=0, select bank0
  6502  0FB2  1303               	bcf	3,6	;RP1=0, select bank0
  6503  0FB3  083A               	movf	?___fltol,w
  6504  0FB4  00FF               	movwf	btemp+1
  6505  0FB5  087F               	movf	btemp+1,w
  6506  0FB6  1683               	bsf	3,5	;RP0=1, select bank1
  6507  0FB7  1303               	bcf	3,6	;RP1=0, select bank1
  6508  0FB8  00C7               	movwf	_current_Temp^(0+128)
  6509  0FB9                     i1l3534:
  6510                           
  6511                           ;EWH.c: 349:     ReadingBuffer[TempReading_count]=current_Temp;
  6512  0FB9  0847               	movf	_current_Temp^(0+128),w
  6513  0FBA  00FF               	movwf	btemp+1
  6514  0FBB  1283               	bcf	3,5	;RP0=0, select bank0
  6515  0FBC  1303               	bcf	3,6	;RP1=0, select bank0
  6516  0FBD  0853               	movf	_TempReading_count,w
  6517  0FBE  3E56               	addlw	(low (_ReadingBuffer| 0))& (0+255)
  6518  0FBF  0084               	movwf	4
  6519  0FC0  087F               	movf	btemp+1,w
  6520  0FC1  1383               	bcf	3,7	;select IRP bank0
  6521  0FC2  0080               	movwf	0
  6522  0FC3                     i1l3536:
  6523                           
  6524                           ;EWH.c: 350:     TempReading_count++;
  6525  0FC3  3001               	movlw	1
  6526  0FC4  00FF               	movwf	btemp+1
  6527  0FC5  087F               	movf	btemp+1,w
  6528  0FC6  07D3               	addwf	_TempReading_count,f
  6529  0FC7                     i1l3538:
  6530                           
  6531                           ;EWH.c: 351:     if(TempReading_count==10)
  6532  0FC7  300A               	movlw	10
  6533  0FC8  0653               	xorwf	_TempReading_count,w
  6534  0FC9  1D03               	btfss	3,2
  6535  0FCA  2FCC               	goto	u359_21
  6536  0FCB  2FCD               	goto	u359_20
  6537  0FCC                     u359_21:
  6538  0FCC  2FD1               	goto	i1l3542
  6539  0FCD                     u359_20:
  6540  0FCD                     i1l3540:
  6541                           
  6542                           ;EWH.c: 352:     {;EWH.c: 354:         ReadingBufferFull=TRUE;
  6543  0FCD  1683               	bsf	3,5	;RP0=1, select bank1
  6544  0FCE  1303               	bcf	3,6	;RP1=0, select bank1
  6545  0FCF  01C5               	clrf	_ReadingBufferFull^(0+128)
  6546  0FD0  0AC5               	incf	_ReadingBufferFull^(0+128),f
  6547  0FD1                     i1l3542:
  6548                           
  6549                           ;EWH.c: 356:     if(ReadingBufferFull)
  6550  0FD1  1683               	bsf	3,5	;RP0=1, select bank1
  6551  0FD2  1303               	bcf	3,6	;RP1=0, select bank1
  6552  0FD3  0845               	movf	_ReadingBufferFull^(0+128),w
  6553  0FD4  1903               	btfsc	3,2
  6554  0FD5  2FD7               	goto	u360_21
  6555  0FD6  2FD8               	goto	u360_20
  6556  0FD7                     u360_21:
  6557  0FD7  2FE7               	goto	i1l3546
  6558  0FD8                     u360_20:
  6559  0FD8                     i1l3544:
  6560                           
  6561                           ;EWH.c: 357:     {;EWH.c: 358:         TempavgReading= EWH_getAvrgTempReading(ReadingBuf
      +                          fer,10);
  6562  0FD8  300A               	movlw	10
  6563  0FD9  00FF               	movwf	btemp+1
  6564  0FDA  087F               	movf	btemp+1,w
  6565  0FDB  00F7               	movwf	EWH_getAvrgTempReading@length
  6566  0FDC  3056               	movlw	(low (_ReadingBuffer| 0))& (0+255)
  6567  0FDD  120A  158A  21EF  120A  158A  	fcall	_EWH_getAvrgTempReading
  6568  0FE2  00FF               	movwf	btemp+1
  6569  0FE3  087F               	movf	btemp+1,w
  6570  0FE4  1683               	bsf	3,5	;RP0=1, select bank1
  6571  0FE5  1303               	bcf	3,6	;RP1=0, select bank1
  6572  0FE6  00C4               	movwf	_TempavgReading^(0+128)
  6573  0FE7                     i1l3546:
  6574                           
  6575                           ;EWH.c: 361:     TempReading_count= TempReading_count%10;
  6576  0FE7  300A               	movlw	10
  6577  0FE8  00F0               	movwf	___awmod@divisor
  6578  0FE9  3000               	movlw	0
  6579  0FEA  00F1               	movwf	___awmod@divisor+1
  6580  0FEB  1283               	bcf	3,5	;RP0=0, select bank0
  6581  0FEC  1303               	bcf	3,6	;RP1=0, select bank0
  6582  0FED  0853               	movf	_TempReading_count,w
  6583  0FEE  00C4               	movwf	??_EWH_TempUpdate
  6584  0FEF  01C5               	clrf	??_EWH_TempUpdate+1
  6585  0FF0  0844               	movf	??_EWH_TempUpdate,w
  6586  0FF1  00F2               	movwf	___awmod@dividend
  6587  0FF2  0845               	movf	??_EWH_TempUpdate+1,w
  6588  0FF3  00F3               	movwf	___awmod@dividend+1
  6589  0FF4  120A  158A  242F  120A  158A  	fcall	___awmod
  6590  0FF9  0870               	movf	?___awmod,w
  6591  0FFA  00FF               	movwf	btemp+1
  6592  0FFB  087F               	movf	btemp+1,w
  6593  0FFC  1283               	bcf	3,5	;RP0=0, select bank0
  6594  0FFD  1303               	bcf	3,6	;RP1=0, select bank0
  6595  0FFE  00D3               	movwf	_TempReading_count
  6596  0FFF                     i1l551:
  6597  0FFF  0008               	return
  6598  1000                     __end_of_EWH_TempUpdate:
  6599                           
  6600                           	psect	text42
  6601  05A8                     __ptext42:	
  6602 ;; *************** function ___xxtofl *****************
  6603 ;; Defined at:
  6604 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\xxtofl.c"
  6605 ;; Parameters:    Size  Location     Type
  6606 ;;  sign            1    wreg     unsigned char 
  6607 ;;  val             4    0[COMMON] long 
  6608 ;; Auto vars:     Size  Location     Type
  6609 ;;  sign            1    8[COMMON] unsigned char 
  6610 ;;  arg             4   10[COMMON] unsigned long 
  6611 ;;  exp             1    9[COMMON] unsigned char 
  6612 ;; Return value:  Size  Location     Type
  6613 ;;                  4    0[COMMON] unsigned char 
  6614 ;; Registers used:
  6615 ;;		wreg, status,2, status,0, btemp+1
  6616 ;; Tracked objects:
  6617 ;;		On entry : 0/0
  6618 ;;		On exit  : 0/0
  6619 ;;		Unchanged: 0/0
  6620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6621 ;;      Params:         4       0       0       0       0
  6622 ;;      Locals:         6       0       0       0       0
  6623 ;;      Temps:          4       0       0       0       0
  6624 ;;      Totals:        14       0       0       0       0
  6625 ;;Total ram usage:       14 bytes
  6626 ;; Hardware stack levels used:    1
  6627 ;; This function calls:
  6628 ;;		Nothing
  6629 ;; This function is called by:
  6630 ;;		_EWH_TempUpdate
  6631 ;; This function uses a non-reentrant model
  6632 ;;
  6633                           
  6634                           
  6635                           ;psect for function ___xxtofl
  6636  05A8                     ___xxtofl:
  6637                           
  6638                           ;incstack = 0
  6639 ;; hardware stack exceeded
  6640                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  6641                           ;___xxtofl@sign stored from wreg
  6642  05A8  00F8               	movwf	___xxtofl@sign
  6643  05A9                     i1l3260:
  6644  05A9  0878               	movf	___xxtofl@sign,w
  6645  05AA  1903               	btfsc	3,2
  6646  05AB  2DAD               	goto	u304_21
  6647  05AC  2DAE               	goto	u304_20
  6648  05AD                     u304_21:
  6649  05AD  2DC2               	goto	i1l3266
  6650  05AE                     u304_20:
  6651  05AE                     i1l3262:
  6652  05AE  1FF3               	btfss	___xxtofl@val+3,7
  6653  05AF  2DB1               	goto	u305_21
  6654  05B0  2DB2               	goto	u305_20
  6655  05B1                     u305_21:
  6656  05B1  2DC2               	goto	i1l3266
  6657  05B2                     u305_20:
  6658  05B2                     i1l3264:
  6659  05B2  0970               	comf	___xxtofl@val,w
  6660  05B3  00FA               	movwf	___xxtofl@arg
  6661  05B4  0971               	comf	___xxtofl@val+1,w
  6662  05B5  00FB               	movwf	___xxtofl@arg+1
  6663  05B6  0972               	comf	___xxtofl@val+2,w
  6664  05B7  00FC               	movwf	___xxtofl@arg+2
  6665  05B8  0973               	comf	___xxtofl@val+3,w
  6666  05B9  00FD               	movwf	___xxtofl@arg+3
  6667  05BA  0AFA               	incf	___xxtofl@arg,f
  6668  05BB  1903               	skipnz
  6669  05BC  0AFB               	incf	___xxtofl@arg+1,f
  6670  05BD  1903               	skipnz
  6671  05BE  0AFC               	incf	___xxtofl@arg+2,f
  6672  05BF  1903               	skipnz
  6673  05C0  0AFD               	incf	___xxtofl@arg+3,f
  6674  05C1  2DCA               	goto	i1l1157
  6675  05C2                     i1l3266:
  6676  05C2  0873               	movf	___xxtofl@val+3,w
  6677  05C3  00FD               	movwf	___xxtofl@arg+3
  6678  05C4  0872               	movf	___xxtofl@val+2,w
  6679  05C5  00FC               	movwf	___xxtofl@arg+2
  6680  05C6  0871               	movf	___xxtofl@val+1,w
  6681  05C7  00FB               	movwf	___xxtofl@arg+1
  6682  05C8  0870               	movf	___xxtofl@val,w
  6683  05C9  00FA               	movwf	___xxtofl@arg
  6684  05CA                     i1l1157:
  6685  05CA  0873               	movf	___xxtofl@val+3,w
  6686  05CB  0472               	iorwf	___xxtofl@val+2,w
  6687  05CC  0471               	iorwf	___xxtofl@val+1,w
  6688  05CD  0470               	iorwf	___xxtofl@val,w
  6689  05CE  1D03               	skipz
  6690  05CF  2DD1               	goto	u306_21
  6691  05D0  2DD2               	goto	u306_20
  6692  05D1                     u306_21:
  6693  05D1  2DDB               	goto	i1l3272
  6694  05D2                     u306_20:
  6695  05D2                     i1l3268:
  6696  05D2  3000               	movlw	0
  6697  05D3  00F3               	movwf	?___xxtofl+3
  6698  05D4  3000               	movlw	0
  6699  05D5  00F2               	movwf	?___xxtofl+2
  6700  05D6  3000               	movlw	0
  6701  05D7  00F1               	movwf	?___xxtofl+1
  6702  05D8  3000               	movlw	0
  6703  05D9  00F0               	movwf	?___xxtofl
  6704  05DA  2E61               	goto	i1l1159
  6705  05DB                     i1l3272:
  6706  05DB  3096               	movlw	150
  6707  05DC  00FF               	movwf	btemp+1
  6708  05DD  087F               	movf	btemp+1,w
  6709  05DE  00F9               	movwf	___xxtofl@exp
  6710  05DF  2DED               	goto	i1l3278
  6711  05E0                     i1l3274:
  6712  05E0  3001               	movlw	1
  6713  05E1  00FF               	movwf	btemp+1
  6714  05E2  087F               	movf	btemp+1,w
  6715  05E3  07F9               	addwf	___xxtofl@exp,f
  6716  05E4                     i1l3276:
  6717  05E4  3001               	movlw	1
  6718  05E5                     u307_25:
  6719  05E5  1003               	clrc
  6720  05E6  0CFD               	rrf	___xxtofl@arg+3,f
  6721  05E7  0CFC               	rrf	___xxtofl@arg+2,f
  6722  05E8  0CFB               	rrf	___xxtofl@arg+1,f
  6723  05E9  0CFA               	rrf	___xxtofl@arg,f
  6724  05EA  3EFF               	addlw	-1
  6725  05EB  1D03               	skipz
  6726  05EC  2DE5               	goto	u307_25
  6727  05ED                     i1l3278:
  6728  05ED  30FE               	movlw	254
  6729  05EE  057D               	andwf	___xxtofl@arg+3,w
  6730  05EF  1D03               	btfss	3,2
  6731  05F0  2DF2               	goto	u308_21
  6732  05F1  2DF3               	goto	u308_20
  6733  05F2                     u308_21:
  6734  05F2  2DE0               	goto	i1l3274
  6735  05F3                     u308_20:
  6736  05F3  2E0F               	goto	i1l3286
  6737  05F4                     i1l3280:
  6738  05F4  3001               	movlw	1
  6739  05F5  00FF               	movwf	btemp+1
  6740  05F6  087F               	movf	btemp+1,w
  6741  05F7  07F9               	addwf	___xxtofl@exp,f
  6742  05F8                     i1l3282:
  6743  05F8  3001               	movlw	1
  6744  05F9  07FA               	addwf	___xxtofl@arg,f
  6745  05FA  3000               	movlw	0
  6746  05FB  1803               	skipnc
  6747  05FC  3001               	movlw	1
  6748  05FD  07FB               	addwf	___xxtofl@arg+1,f
  6749  05FE  3000               	movlw	0
  6750  05FF  1803               	skipnc
  6751  0600  3001               	movlw	1
  6752  0601  07FC               	addwf	___xxtofl@arg+2,f
  6753  0602  3000               	movlw	0
  6754  0603  1803               	skipnc
  6755  0604  3001               	movlw	1
  6756  0605  07FD               	addwf	___xxtofl@arg+3,f
  6757  0606                     i1l3284:
  6758  0606  3001               	movlw	1
  6759  0607                     u309_25:
  6760  0607  1003               	clrc
  6761  0608  0CFD               	rrf	___xxtofl@arg+3,f
  6762  0609  0CFC               	rrf	___xxtofl@arg+2,f
  6763  060A  0CFB               	rrf	___xxtofl@arg+1,f
  6764  060B  0CFA               	rrf	___xxtofl@arg,f
  6765  060C  3EFF               	addlw	-1
  6766  060D  1D03               	skipz
  6767  060E  2E07               	goto	u309_25
  6768  060F                     i1l3286:
  6769  060F  30FF               	movlw	255
  6770  0610  057D               	andwf	___xxtofl@arg+3,w
  6771  0611  1D03               	btfss	3,2
  6772  0612  2E14               	goto	u310_21
  6773  0613  2E15               	goto	u310_20
  6774  0614                     u310_21:
  6775  0614  2DF4               	goto	i1l3280
  6776  0615                     u310_20:
  6777  0615  2E21               	goto	i1l3290
  6778  0616                     i1l3288:
  6779  0616  3001               	movlw	1
  6780  0617  02F9               	subwf	___xxtofl@exp,f
  6781  0618  3001               	movlw	1
  6782  0619  00F4               	movwf	??___xxtofl
  6783  061A                     u311_25:
  6784  061A  1003               	clrc
  6785  061B  0DFA               	rlf	___xxtofl@arg,f
  6786  061C  0DFB               	rlf	___xxtofl@arg+1,f
  6787  061D  0DFC               	rlf	___xxtofl@arg+2,f
  6788  061E  0DFD               	rlf	___xxtofl@arg+3,f
  6789  061F  0BF4               	decfsz	??___xxtofl,f
  6790  0620  2E1A               	goto	u311_25
  6791  0621                     i1l3290:
  6792  0621  1BFC               	btfsc	___xxtofl@arg+2,7
  6793  0622  2E24               	goto	u312_21
  6794  0623  2E25               	goto	u312_20
  6795  0624                     u312_21:
  6796  0624  2E2B               	goto	i1l1170
  6797  0625                     u312_20:
  6798  0625                     i1l3292:
  6799  0625  3002               	movlw	2
  6800  0626  0279               	subwf	___xxtofl@exp,w
  6801  0627  1803               	skipnc
  6802  0628  2E2A               	goto	u313_21
  6803  0629  2E2B               	goto	u313_20
  6804  062A                     u313_21:
  6805  062A  2E16               	goto	i1l3288
  6806  062B                     u313_20:
  6807  062B                     i1l1170:
  6808  062B  1879               	btfsc	___xxtofl@exp,0
  6809  062C  2E2E               	goto	u314_21
  6810  062D  2E2F               	goto	u314_20
  6811  062E                     u314_21:
  6812  062E  2E37               	goto	i1l1171
  6813  062F                     u314_20:
  6814  062F                     i1l3294:
  6815  062F  30FF               	movlw	255
  6816  0630  05FA               	andwf	___xxtofl@arg,f
  6817  0631  30FF               	movlw	255
  6818  0632  05FB               	andwf	___xxtofl@arg+1,f
  6819  0633  307F               	movlw	127
  6820  0634  05FC               	andwf	___xxtofl@arg+2,f
  6821  0635  30FF               	movlw	255
  6822  0636  05FD               	andwf	___xxtofl@arg+3,f
  6823  0637                     i1l1171:
  6824  0637  1003               	clrc
  6825  0638  0CF9               	rrf	___xxtofl@exp,f
  6826  0639                     i1l3296:
  6827  0639  0879               	movf	___xxtofl@exp,w
  6828  063A  00F4               	movwf	??___xxtofl
  6829  063B  01F5               	clrf	??___xxtofl+1
  6830  063C  01F6               	clrf	??___xxtofl+2
  6831  063D  01F7               	clrf	??___xxtofl+3
  6832  063E  3018               	movlw	24
  6833  063F                     u315_25:
  6834  063F  1003               	clrc
  6835  0640  0DF4               	rlf	??___xxtofl,f
  6836  0641  0DF5               	rlf	??___xxtofl+1,f
  6837  0642  0DF6               	rlf	??___xxtofl+2,f
  6838  0643  0DF7               	rlf	??___xxtofl+3,f
  6839  0644                     u315_20:
  6840  0644  3EFF               	addlw	-1
  6841  0645  1D03               	skipz
  6842  0646  2E3F               	goto	u315_25
  6843  0647  0874               	movf	??___xxtofl,w
  6844  0648  04FA               	iorwf	___xxtofl@arg,f
  6845  0649  0875               	movf	??___xxtofl+1,w
  6846  064A  04FB               	iorwf	___xxtofl@arg+1,f
  6847  064B  0876               	movf	??___xxtofl+2,w
  6848  064C  04FC               	iorwf	___xxtofl@arg+2,f
  6849  064D  0877               	movf	??___xxtofl+3,w
  6850  064E  04FD               	iorwf	___xxtofl@arg+3,f
  6851  064F                     i1l3298:
  6852  064F  0878               	movf	___xxtofl@sign,w
  6853  0650  1903               	btfsc	3,2
  6854  0651  2E53               	goto	u316_21
  6855  0652  2E54               	goto	u316_20
  6856  0653                     u316_21:
  6857  0653  2E59               	goto	i1l3304
  6858  0654                     u316_20:
  6859  0654                     i1l3300:
  6860  0654  1FF3               	btfss	___xxtofl@val+3,7
  6861  0655  2E57               	goto	u317_21
  6862  0656  2E58               	goto	u317_20
  6863  0657                     u317_21:
  6864  0657  2E59               	goto	i1l3304
  6865  0658                     u317_20:
  6866  0658                     i1l3302:
  6867  0658  17FD               	bsf	___xxtofl@arg+3,7
  6868  0659                     i1l3304:
  6869  0659  087D               	movf	___xxtofl@arg+3,w
  6870  065A  00F3               	movwf	?___xxtofl+3
  6871  065B  087C               	movf	___xxtofl@arg+2,w
  6872  065C  00F2               	movwf	?___xxtofl+2
  6873  065D  087B               	movf	___xxtofl@arg+1,w
  6874  065E  00F1               	movwf	?___xxtofl+1
  6875  065F  087A               	movf	___xxtofl@arg,w
  6876  0660  00F0               	movwf	?___xxtofl
  6877  0661                     i1l1159:
  6878  0661  0008               	return
  6879  0662                     __end_of___xxtofl:
  6880                           
  6881                           	psect	text43
  6882  0E79                     __ptext43:	
  6883 ;; *************** function ___fltol *****************
  6884 ;; Defined at:
  6885 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fltol.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;  f1              4   26[BANK0 ] unsigned char 
  6888 ;; Auto vars:     Size  Location     Type
  6889 ;;  exp1            1   35[BANK0 ] unsigned char 
  6890 ;;  sign1           1   34[BANK0 ] unsigned char 
  6891 ;; Return value:  Size  Location     Type
  6892 ;;                  4   26[BANK0 ] long 
  6893 ;; Registers used:
  6894 ;;		wreg, status,2, status,0, btemp+1
  6895 ;; Tracked objects:
  6896 ;;		On entry : 0/0
  6897 ;;		On exit  : 0/0
  6898 ;;		Unchanged: 0/0
  6899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6900 ;;      Params:         0       4       0       0       0
  6901 ;;      Locals:         0       2       0       0       0
  6902 ;;      Temps:          0       4       0       0       0
  6903 ;;      Totals:         0      10       0       0       0
  6904 ;;Total ram usage:       10 bytes
  6905 ;; Hardware stack levels used:    1
  6906 ;; This function calls:
  6907 ;;		Nothing
  6908 ;; This function is called by:
  6909 ;;		_EWH_TempUpdate
  6910 ;; This function uses a non-reentrant model
  6911 ;;
  6912                           
  6913                           
  6914                           ;psect for function ___fltol
  6915  0E79                     ___fltol:
  6916  0E79                     i1l3080:	
  6917                           ;incstack = 0
  6918 ;; hardware stack exceeded
  6919                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  6920                           
  6921  0E79  1003               	clrc
  6922  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  6923  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  6924  0E7C  0D3C               	rlf	___fltol@f1+2,w
  6925  0E7D  0D3D               	rlf	___fltol@f1+3,w
  6926  0E7E  00FF               	movwf	btemp+1
  6927  0E7F  087F               	movf	btemp+1,w
  6928  0E80  00C3               	movwf	___fltol@exp1
  6929  0E81  0843               	movf	___fltol@exp1,w
  6930  0E82  1D03               	btfss	3,2
  6931  0E83  2E85               	goto	u257_21
  6932  0E84  2E86               	goto	u257_20
  6933  0E85                     u257_21:
  6934  0E85  2E8F               	goto	i1l3086
  6935  0E86                     u257_20:
  6936  0E86                     i1l3082:
  6937  0E86  3000               	movlw	0
  6938  0E87  00BD               	movwf	?___fltol+3
  6939  0E88  3000               	movlw	0
  6940  0E89  00BC               	movwf	?___fltol+2
  6941  0E8A  3000               	movlw	0
  6942  0E8B  00BB               	movwf	?___fltol+1
  6943  0E8C  3000               	movlw	0
  6944  0E8D  00BA               	movwf	?___fltol
  6945  0E8E  2EF4               	goto	i1l910
  6946  0E8F                     i1l3086:
  6947  0E8F  083A               	movf	___fltol@f1,w
  6948  0E90  00BE               	movwf	??___fltol
  6949  0E91  083B               	movf	___fltol@f1+1,w
  6950  0E92  00BF               	movwf	??___fltol+1
  6951  0E93  083C               	movf	___fltol@f1+2,w
  6952  0E94  00C0               	movwf	??___fltol+2
  6953  0E95  083D               	movf	___fltol@f1+3,w
  6954  0E96  00C1               	movwf	??___fltol+3
  6955  0E97  301F               	movlw	31
  6956  0E98                     u258_25:
  6957  0E98  1003               	clrc
  6958  0E99  0CC1               	rrf	??___fltol+3,f
  6959  0E9A  0CC0               	rrf	??___fltol+2,f
  6960  0E9B  0CBF               	rrf	??___fltol+1,f
  6961  0E9C  0CBE               	rrf	??___fltol,f
  6962  0E9D                     u258_20:
  6963  0E9D  3EFF               	addlw	-1
  6964  0E9E  1D03               	skipz
  6965  0E9F  2E98               	goto	u258_25
  6966  0EA0  083E               	movf	??___fltol,w
  6967  0EA1  00FF               	movwf	btemp+1
  6968  0EA2  087F               	movf	btemp+1,w
  6969  0EA3  00C2               	movwf	___fltol@sign1
  6970  0EA4                     i1l3088:
  6971  0EA4  17BC               	bsf	___fltol@f1+2,7
  6972  0EA5                     i1l3090:
  6973  0EA5  30FF               	movlw	255
  6974  0EA6  05BA               	andwf	___fltol@f1,f
  6975  0EA7  30FF               	movlw	255
  6976  0EA8  05BB               	andwf	___fltol@f1+1,f
  6977  0EA9  30FF               	movlw	255
  6978  0EAA  05BC               	andwf	___fltol@f1+2,f
  6979  0EAB  3000               	movlw	0
  6980  0EAC  05BD               	andwf	___fltol@f1+3,f
  6981  0EAD                     i1l3092:
  6982  0EAD  3096               	movlw	150
  6983  0EAE  02C3               	subwf	___fltol@exp1,f
  6984  0EAF                     i1l3094:
  6985  0EAF  1FC3               	btfss	___fltol@exp1,7
  6986  0EB0  2EB2               	goto	u259_21
  6987  0EB1  2EB3               	goto	u259_20
  6988  0EB2                     u259_21:
  6989  0EB2  2ECD               	goto	i1l3106
  6990  0EB3                     u259_20:
  6991  0EB3                     i1l3096:
  6992  0EB3  0843               	movf	___fltol@exp1,w
  6993  0EB4  3A80               	xorlw	128
  6994  0EB5  3E97               	addlw	151
  6995  0EB6  1803               	skipnc
  6996  0EB7  2EB9               	goto	u260_21
  6997  0EB8  2EBA               	goto	u260_20
  6998  0EB9                     u260_21:
  6999  0EB9  2EBB               	goto	i1l3102
  7000  0EBA                     u260_20:
  7001  0EBA  2E86               	goto	i1l3082
  7002  0EBB                     i1l3102:
  7003  0EBB  3001               	movlw	1
  7004  0EBC                     u261_25:
  7005  0EBC  1003               	clrc
  7006  0EBD  0CBD               	rrf	___fltol@f1+3,f
  7007  0EBE  0CBC               	rrf	___fltol@f1+2,f
  7008  0EBF  0CBB               	rrf	___fltol@f1+1,f
  7009  0EC0  0CBA               	rrf	___fltol@f1,f
  7010  0EC1  3EFF               	addlw	-1
  7011  0EC2  1D03               	skipz
  7012  0EC3  2EBC               	goto	u261_25
  7013  0EC4                     i1l3104:
  7014  0EC4  3001               	movlw	1
  7015  0EC5  00FF               	movwf	btemp+1
  7016  0EC6  087F               	movf	btemp+1,w
  7017  0EC7  07C3               	addwf	___fltol@exp1,f
  7018  0EC8  1D03               	btfss	3,2
  7019  0EC9  2ECB               	goto	u262_21
  7020  0ECA  2ECC               	goto	u262_20
  7021  0ECB                     u262_21:
  7022  0ECB  2EBB               	goto	i1l3102
  7023  0ECC                     u262_20:
  7024  0ECC  2EE4               	goto	i1l3114
  7025  0ECD                     i1l3106:
  7026  0ECD  3020               	movlw	32
  7027  0ECE  0243               	subwf	___fltol@exp1,w
  7028  0ECF  1C03               	skipc
  7029  0ED0  2ED2               	goto	u263_21
  7030  0ED1  2ED3               	goto	u263_20
  7031  0ED2                     u263_21:
  7032  0ED2  2EDF               	goto	i1l917
  7033  0ED3                     u263_20:
  7034  0ED3  2E86               	goto	i1l3082
  7035  0ED4                     i1l3112:
  7036  0ED4  3001               	movlw	1
  7037  0ED5  00BE               	movwf	??___fltol
  7038  0ED6                     u264_25:
  7039  0ED6  1003               	clrc
  7040  0ED7  0DBA               	rlf	___fltol@f1,f
  7041  0ED8  0DBB               	rlf	___fltol@f1+1,f
  7042  0ED9  0DBC               	rlf	___fltol@f1+2,f
  7043  0EDA  0DBD               	rlf	___fltol@f1+3,f
  7044  0EDB  0BBE               	decfsz	??___fltol,f
  7045  0EDC  2ED6               	goto	u264_25
  7046  0EDD  3001               	movlw	1
  7047  0EDE  02C3               	subwf	___fltol@exp1,f
  7048  0EDF                     i1l917:
  7049  0EDF  0843               	movf	___fltol@exp1,w
  7050  0EE0  1D03               	btfss	3,2
  7051  0EE1  2EE3               	goto	u265_21
  7052  0EE2  2EE4               	goto	u265_20
  7053  0EE3                     u265_21:
  7054  0EE3  2ED4               	goto	i1l3112
  7055  0EE4                     u265_20:
  7056  0EE4                     i1l3114:
  7057  0EE4  0842               	movf	___fltol@sign1,w
  7058  0EE5  1903               	btfsc	3,2
  7059  0EE6  2EE8               	goto	u266_21
  7060  0EE7  2EE9               	goto	u266_20
  7061  0EE8                     u266_21:
  7062  0EE8  2EF4               	goto	i1l920
  7063  0EE9                     u266_20:
  7064  0EE9                     i1l3116:
  7065  0EE9  09BA               	comf	___fltol@f1,f
  7066  0EEA  09BB               	comf	___fltol@f1+1,f
  7067  0EEB  09BC               	comf	___fltol@f1+2,f
  7068  0EEC  09BD               	comf	___fltol@f1+3,f
  7069  0EED  0ABA               	incf	___fltol@f1,f
  7070  0EEE  1903               	skipnz
  7071  0EEF  0ABB               	incf	___fltol@f1+1,f
  7072  0EF0  1903               	skipnz
  7073  0EF1  0ABC               	incf	___fltol@f1+2,f
  7074  0EF2  1903               	skipnz
  7075  0EF3  0ABD               	incf	___fltol@f1+3,f
  7076  0EF4                     i1l920:
  7077  0EF4                     i1l910:
  7078  0EF4  0008               	return
  7079  0EF5                     __end_of___fltol:
  7080                           
  7081                           	psect	text44
  7082  0037                     __ptext44:	
  7083 ;; *************** function ___flmul *****************
  7084 ;; Defined at:
  7085 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcmul.c"
  7086 ;; Parameters:    Size  Location     Type
  7087 ;;  b               4    0[BANK0 ] long 
  7088 ;;  a               4    4[BANK0 ] long 
  7089 ;; Auto vars:     Size  Location     Type
  7090 ;;  prod            4   20[BANK0 ] struct .
  7091 ;;  grs             4   14[BANK0 ] unsigned long 
  7092 ;;  temp            2   24[BANK0 ] struct .
  7093 ;;  bexp            1   19[BANK0 ] unsigned char 
  7094 ;;  aexp            1   18[BANK0 ] unsigned char 
  7095 ;;  sign            1   13[BANK0 ] unsigned char 
  7096 ;; Return value:  Size  Location     Type
  7097 ;;                  4    0[BANK0 ] unsigned char 
  7098 ;; Registers used:
  7099 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7100 ;; Tracked objects:
  7101 ;;		On entry : 0/0
  7102 ;;		On exit  : 0/0
  7103 ;;		Unchanged: 0/0
  7104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7105 ;;      Params:         0       8       0       0       0
  7106 ;;      Locals:         0      13       0       0       0
  7107 ;;      Temps:          0       5       0       0       0
  7108 ;;      Totals:         0      26       0       0       0
  7109 ;;Total ram usage:       26 bytes
  7110 ;; Hardware stack levels used:    1
  7111 ;; Hardware stack levels required when called:    1
  7112 ;; This function calls:
  7113 ;;		__Umul8_16
  7114 ;; This function is called by:
  7115 ;;		_EWH_TempUpdate
  7116 ;; This function uses a non-reentrant model
  7117 ;;
  7118                           
  7119                           
  7120                           ;psect for function ___flmul
  7121  0037                     ___flmul:
  7122  0037                     i1l3118:	
  7123                           ;incstack = 0
  7124 ;; hardware stack exceeded
  7125                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7126                           
  7127  0037  1283               	bcf	3,5	;RP0=0, select bank0
  7128  0038  1303               	bcf	3,6	;RP1=0, select bank0
  7129  0039  0823               	movf	___flmul@b+3,w
  7130  003A  3980               	andlw	128
  7131  003B  00FF               	movwf	btemp+1
  7132  003C  087F               	movf	btemp+1,w
  7133  003D  00AD               	movwf	___flmul@sign
  7134  003E                     i1l3120:
  7135  003E  0823               	movf	___flmul@b+3,w
  7136  003F  00A8               	movwf	??___flmul
  7137  0040  0728               	addwf	??___flmul,w
  7138  0041  00FF               	movwf	btemp+1
  7139  0042  087F               	movf	btemp+1,w
  7140  0043  00B3               	movwf	___flmul@bexp
  7141  0044                     i1l3122:
  7142  0044  1FA2               	btfss	___flmul@b+2,7
  7143  0045  2847               	goto	u267_21
  7144  0046  2848               	goto	u267_20
  7145  0047                     u267_21:
  7146  0047  2849               	goto	i1l3126
  7147  0048                     u267_20:
  7148  0048                     i1l3124:
  7149  0048  1433               	bsf	___flmul@bexp,0
  7150  0049                     i1l3126:
  7151  0049  0833               	movf	___flmul@bexp,w
  7152  004A  1903               	btfsc	3,2
  7153  004B  284D               	goto	u268_21
  7154  004C  284E               	goto	u268_20
  7155  004D                     u268_21:
  7156  004D  285D               	goto	i1l3134
  7157  004E                     u268_20:
  7158  004E                     i1l3128:
  7159  004E  0A33               	incf	___flmul@bexp,w
  7160  004F  1D03               	btfss	3,2
  7161  0050  2852               	goto	u269_21
  7162  0051  2853               	goto	u269_20
  7163  0052                     u269_21:
  7164  0052  285B               	goto	i1l3132
  7165  0053                     u269_20:
  7166  0053                     i1l3130:
  7167  0053  3000               	movlw	0
  7168  0054  00A3               	movwf	___flmul@b+3
  7169  0055  3000               	movlw	0
  7170  0056  00A2               	movwf	___flmul@b+2
  7171  0057  3000               	movlw	0
  7172  0058  00A1               	movwf	___flmul@b+1
  7173  0059  3000               	movlw	0
  7174  005A  00A0               	movwf	___flmul@b
  7175  005B                     i1l3132:
  7176  005B  17A2               	bsf	___flmul@b+2,7
  7177  005C  2865               	goto	i1l3136
  7178  005D                     i1l3134:
  7179  005D  3000               	movlw	0
  7180  005E  00A3               	movwf	___flmul@b+3
  7181  005F  3000               	movlw	0
  7182  0060  00A2               	movwf	___flmul@b+2
  7183  0061  3000               	movlw	0
  7184  0062  00A1               	movwf	___flmul@b+1
  7185  0063  3000               	movlw	0
  7186  0064  00A0               	movwf	___flmul@b
  7187  0065                     i1l3136:
  7188  0065  0827               	movf	___flmul@a+3,w
  7189  0066  3980               	andlw	128
  7190  0067  00FF               	movwf	btemp+1
  7191  0068  087F               	movf	btemp+1,w
  7192  0069  06AD               	xorwf	___flmul@sign,f
  7193  006A                     i1l3138:
  7194  006A  0827               	movf	___flmul@a+3,w
  7195  006B  00A8               	movwf	??___flmul
  7196  006C  0728               	addwf	??___flmul,w
  7197  006D  00FF               	movwf	btemp+1
  7198  006E  087F               	movf	btemp+1,w
  7199  006F  00B2               	movwf	___flmul@aexp
  7200  0070                     i1l3140:
  7201  0070  1FA6               	btfss	___flmul@a+2,7
  7202  0071  2873               	goto	u270_21
  7203  0072  2874               	goto	u270_20
  7204  0073                     u270_21:
  7205  0073  2875               	goto	i1l3144
  7206  0074                     u270_20:
  7207  0074                     i1l3142:
  7208  0074  1432               	bsf	___flmul@aexp,0
  7209  0075                     i1l3144:
  7210  0075  0832               	movf	___flmul@aexp,w
  7211  0076  1903               	btfsc	3,2
  7212  0077  2879               	goto	u271_21
  7213  0078  287A               	goto	u271_20
  7214  0079                     u271_21:
  7215  0079  2889               	goto	i1l3152
  7216  007A                     u271_20:
  7217  007A                     i1l3146:
  7218  007A  0A32               	incf	___flmul@aexp,w
  7219  007B  1D03               	btfss	3,2
  7220  007C  287E               	goto	u272_21
  7221  007D  287F               	goto	u272_20
  7222  007E                     u272_21:
  7223  007E  2887               	goto	i1l3150
  7224  007F                     u272_20:
  7225  007F                     i1l3148:
  7226  007F  3000               	movlw	0
  7227  0080  00A7               	movwf	___flmul@a+3
  7228  0081  3000               	movlw	0
  7229  0082  00A6               	movwf	___flmul@a+2
  7230  0083  3000               	movlw	0
  7231  0084  00A5               	movwf	___flmul@a+1
  7232  0085  3000               	movlw	0
  7233  0086  00A4               	movwf	___flmul@a
  7234  0087                     i1l3150:
  7235  0087  17A6               	bsf	___flmul@a+2,7
  7236  0088  2891               	goto	i1l3154
  7237  0089                     i1l3152:
  7238  0089  3000               	movlw	0
  7239  008A  00A7               	movwf	___flmul@a+3
  7240  008B  3000               	movlw	0
  7241  008C  00A6               	movwf	___flmul@a+2
  7242  008D  3000               	movlw	0
  7243  008E  00A5               	movwf	___flmul@a+1
  7244  008F  3000               	movlw	0
  7245  0090  00A4               	movwf	___flmul@a
  7246  0091                     i1l3154:
  7247  0091  0832               	movf	___flmul@aexp,w
  7248  0092  1903               	btfsc	3,2
  7249  0093  2895               	goto	u273_21
  7250  0094  2896               	goto	u273_20
  7251  0095                     u273_21:
  7252  0095  289B               	goto	i1l3158
  7253  0096                     u273_20:
  7254  0096                     i1l3156:
  7255  0096  0833               	movf	___flmul@bexp,w
  7256  0097  1D03               	btfss	3,2
  7257  0098  289A               	goto	u274_21
  7258  0099  289B               	goto	u274_20
  7259  009A                     u274_21:
  7260  009A  28A4               	goto	i1l3162
  7261  009B                     u274_20:
  7262  009B                     i1l3158:
  7263  009B  3000               	movlw	0
  7264  009C  00A3               	movwf	?___flmul+3
  7265  009D  3000               	movlw	0
  7266  009E  00A2               	movwf	?___flmul+2
  7267  009F  3000               	movlw	0
  7268  00A0  00A1               	movwf	?___flmul+1
  7269  00A1  3000               	movlw	0
  7270  00A2  00A0               	movwf	?___flmul
  7271  00A3  2B97               	goto	i1l1113
  7272  00A4                     i1l3162:
  7273  00A4  0820               	movf	___flmul@b,w
  7274  00A5  00FF               	movwf	btemp+1
  7275  00A6  087F               	movf	btemp+1,w
  7276  00A7  00F0               	movwf	__Umul8_16@multiplicand
  7277  00A8  0826               	movf	___flmul@a+2,w
  7278  00A9  120A  158A  2141  120A  118A  	fcall	__Umul8_16
  7279  00AE  0871               	movf	?__Umul8_16+1,w
  7280  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  7281  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  7282  00B1  00B9               	movwf	___flmul@temp+1
  7283  00B2  0870               	movf	?__Umul8_16,w
  7284  00B3  00B8               	movwf	___flmul@temp
  7285  00B4                     i1l3164:
  7286  00B4  0838               	movf	___flmul@temp,w
  7287  00B5  00A8               	movwf	??___flmul
  7288  00B6  01A9               	clrf	??___flmul+1
  7289  00B7  01AA               	clrf	??___flmul+2
  7290  00B8  01AB               	clrf	??___flmul+3
  7291  00B9  082B               	movf	??___flmul+3,w
  7292  00BA  00B1               	movwf	___flmul@grs+3
  7293  00BB  082A               	movf	??___flmul+2,w
  7294  00BC  00B0               	movwf	___flmul@grs+2
  7295  00BD  0829               	movf	??___flmul+1,w
  7296  00BE  00AF               	movwf	___flmul@grs+1
  7297  00BF  0828               	movf	??___flmul,w
  7298  00C0  00AE               	movwf	___flmul@grs
  7299  00C1                     i1l3166:
  7300  00C1  0839               	movf	___flmul@temp+1,w
  7301  00C2  00A8               	movwf	??___flmul
  7302  00C3  01A9               	clrf	??___flmul+1
  7303  00C4  01AA               	clrf	??___flmul+2
  7304  00C5  01AB               	clrf	??___flmul+3
  7305  00C6  082B               	movf	??___flmul+3,w
  7306  00C7  00B7               	movwf	___flmul@prod+3
  7307  00C8  082A               	movf	??___flmul+2,w
  7308  00C9  00B6               	movwf	___flmul@prod+2
  7309  00CA  0829               	movf	??___flmul+1,w
  7310  00CB  00B5               	movwf	___flmul@prod+1
  7311  00CC  0828               	movf	??___flmul,w
  7312  00CD  00B4               	movwf	___flmul@prod
  7313  00CE  0821               	movf	___flmul@b+1,w
  7314  00CF  00FF               	movwf	btemp+1
  7315  00D0  087F               	movf	btemp+1,w
  7316  00D1  00F0               	movwf	__Umul8_16@multiplicand
  7317  00D2  0825               	movf	___flmul@a+1,w
  7318  00D3  120A  158A  2141  120A  118A  	fcall	__Umul8_16
  7319  00D8  0871               	movf	?__Umul8_16+1,w
  7320  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  7321  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  7322  00DB  00B9               	movwf	___flmul@temp+1
  7323  00DC  0870               	movf	?__Umul8_16,w
  7324  00DD  00B8               	movwf	___flmul@temp
  7325  00DE                     i1l3168:
  7326  00DE  0838               	movf	___flmul@temp,w
  7327  00DF  00A8               	movwf	??___flmul
  7328  00E0  01A9               	clrf	??___flmul+1
  7329  00E1  01AA               	clrf	??___flmul+2
  7330  00E2  01AB               	clrf	??___flmul+3
  7331  00E3  0828               	movf	??___flmul,w
  7332  00E4  07AE               	addwf	___flmul@grs,f
  7333  00E5  0829               	movf	??___flmul+1,w
  7334  00E6  1103               	clrz
  7335  00E7  1803               	skipnc
  7336  00E8  3E01               	addlw	1
  7337  00E9  1903               	skipnz
  7338  00EA  28EC               	goto	u275_21
  7339  00EB  07AF               	addwf	___flmul@grs+1,f
  7340  00EC                     u275_21:
  7341  00EC  082A               	movf	??___flmul+2,w
  7342  00ED  1103               	clrz
  7343  00EE  1803               	skipnc
  7344  00EF  3E01               	addlw	1
  7345  00F0  1903               	skipnz
  7346  00F1  28F3               	goto	u275_22
  7347  00F2  07B0               	addwf	___flmul@grs+2,f
  7348  00F3                     u275_22:
  7349  00F3  082B               	movf	??___flmul+3,w
  7350  00F4  1103               	clrz
  7351  00F5  1803               	skipnc
  7352  00F6  3E01               	addlw	1
  7353  00F7  1903               	skipnz
  7354  00F8  28FA               	goto	u275_23
  7355  00F9  07B1               	addwf	___flmul@grs+3,f
  7356  00FA                     u275_23:
  7357  00FA                     i1l3170:
  7358  00FA  0839               	movf	___flmul@temp+1,w
  7359  00FB  00A8               	movwf	??___flmul
  7360  00FC  01A9               	clrf	??___flmul+1
  7361  00FD  01AA               	clrf	??___flmul+2
  7362  00FE  01AB               	clrf	??___flmul+3
  7363  00FF  0828               	movf	??___flmul,w
  7364  0100  07B4               	addwf	___flmul@prod,f
  7365  0101  0829               	movf	??___flmul+1,w
  7366  0102  1103               	clrz
  7367  0103  1803               	skipnc
  7368  0104  3E01               	addlw	1
  7369  0105  1903               	skipnz
  7370  0106  2908               	goto	u276_21
  7371  0107  07B5               	addwf	___flmul@prod+1,f
  7372  0108                     u276_21:
  7373  0108  082A               	movf	??___flmul+2,w
  7374  0109  1103               	clrz
  7375  010A  1803               	skipnc
  7376  010B  3E01               	addlw	1
  7377  010C  1903               	skipnz
  7378  010D  290F               	goto	u276_22
  7379  010E  07B6               	addwf	___flmul@prod+2,f
  7380  010F                     u276_22:
  7381  010F  082B               	movf	??___flmul+3,w
  7382  0110  1103               	clrz
  7383  0111  1803               	skipnc
  7384  0112  3E01               	addlw	1
  7385  0113  1903               	skipnz
  7386  0114  2916               	goto	u276_23
  7387  0115  07B7               	addwf	___flmul@prod+3,f
  7388  0116                     u276_23:
  7389  0116  0822               	movf	___flmul@b+2,w
  7390  0117  00FF               	movwf	btemp+1
  7391  0118  087F               	movf	btemp+1,w
  7392  0119  00F0               	movwf	__Umul8_16@multiplicand
  7393  011A  0824               	movf	___flmul@a,w
  7394  011B  120A  158A  2141  120A  118A  	fcall	__Umul8_16
  7395  0120  0871               	movf	?__Umul8_16+1,w
  7396  0121  1283               	bcf	3,5	;RP0=0, select bank0
  7397  0122  1303               	bcf	3,6	;RP1=0, select bank0
  7398  0123  00B9               	movwf	___flmul@temp+1
  7399  0124  0870               	movf	?__Umul8_16,w
  7400  0125  00B8               	movwf	___flmul@temp
  7401  0126                     i1l3172:
  7402  0126  0838               	movf	___flmul@temp,w
  7403  0127  00A8               	movwf	??___flmul
  7404  0128  01A9               	clrf	??___flmul+1
  7405  0129  01AA               	clrf	??___flmul+2
  7406  012A  01AB               	clrf	??___flmul+3
  7407  012B  0828               	movf	??___flmul,w
  7408  012C  07AE               	addwf	___flmul@grs,f
  7409  012D  0829               	movf	??___flmul+1,w
  7410  012E  1103               	clrz
  7411  012F  1803               	skipnc
  7412  0130  3E01               	addlw	1
  7413  0131  1903               	skipnz
  7414  0132  2934               	goto	u277_21
  7415  0133  07AF               	addwf	___flmul@grs+1,f
  7416  0134                     u277_21:
  7417  0134  082A               	movf	??___flmul+2,w
  7418  0135  1103               	clrz
  7419  0136  1803               	skipnc
  7420  0137  3E01               	addlw	1
  7421  0138  1903               	skipnz
  7422  0139  293B               	goto	u277_22
  7423  013A  07B0               	addwf	___flmul@grs+2,f
  7424  013B                     u277_22:
  7425  013B  082B               	movf	??___flmul+3,w
  7426  013C  1103               	clrz
  7427  013D  1803               	skipnc
  7428  013E  3E01               	addlw	1
  7429  013F  1903               	skipnz
  7430  0140  2942               	goto	u277_23
  7431  0141  07B1               	addwf	___flmul@grs+3,f
  7432  0142                     u277_23:
  7433  0142                     i1l3174:
  7434  0142  0839               	movf	___flmul@temp+1,w
  7435  0143  00A8               	movwf	??___flmul
  7436  0144  01A9               	clrf	??___flmul+1
  7437  0145  01AA               	clrf	??___flmul+2
  7438  0146  01AB               	clrf	??___flmul+3
  7439  0147  0828               	movf	??___flmul,w
  7440  0148  07B4               	addwf	___flmul@prod,f
  7441  0149  0829               	movf	??___flmul+1,w
  7442  014A  1103               	clrz
  7443  014B  1803               	skipnc
  7444  014C  3E01               	addlw	1
  7445  014D  1903               	skipnz
  7446  014E  2950               	goto	u278_21
  7447  014F  07B5               	addwf	___flmul@prod+1,f
  7448  0150                     u278_21:
  7449  0150  082A               	movf	??___flmul+2,w
  7450  0151  1103               	clrz
  7451  0152  1803               	skipnc
  7452  0153  3E01               	addlw	1
  7453  0154  1903               	skipnz
  7454  0155  2957               	goto	u278_22
  7455  0156  07B6               	addwf	___flmul@prod+2,f
  7456  0157                     u278_22:
  7457  0157  082B               	movf	??___flmul+3,w
  7458  0158  1103               	clrz
  7459  0159  1803               	skipnc
  7460  015A  3E01               	addlw	1
  7461  015B  1903               	skipnz
  7462  015C  295E               	goto	u278_23
  7463  015D  07B7               	addwf	___flmul@prod+3,f
  7464  015E                     u278_23:
  7465  015E                     i1l3176:
  7466  015E  3008               	movlw	8
  7467  015F  00A8               	movwf	??___flmul
  7468  0160                     u279_25:
  7469  0160  1003               	clrc
  7470  0161  0DAE               	rlf	___flmul@grs,f
  7471  0162  0DAF               	rlf	___flmul@grs+1,f
  7472  0163  0DB0               	rlf	___flmul@grs+2,f
  7473  0164  0DB1               	rlf	___flmul@grs+3,f
  7474  0165  0BA8               	decfsz	??___flmul,f
  7475  0166  2960               	goto	u279_25
  7476  0167                     i1l3178:
  7477  0167  0821               	movf	___flmul@b+1,w
  7478  0168  00FF               	movwf	btemp+1
  7479  0169  087F               	movf	btemp+1,w
  7480  016A  00F0               	movwf	__Umul8_16@multiplicand
  7481  016B  0824               	movf	___flmul@a,w
  7482  016C  120A  158A  2141  120A  118A  	fcall	__Umul8_16
  7483  0171  0871               	movf	?__Umul8_16+1,w
  7484  0172  1283               	bcf	3,5	;RP0=0, select bank0
  7485  0173  1303               	bcf	3,6	;RP1=0, select bank0
  7486  0174  00B9               	movwf	___flmul@temp+1
  7487  0175  0870               	movf	?__Umul8_16,w
  7488  0176  00B8               	movwf	___flmul@temp
  7489  0177                     i1l3180:
  7490  0177  0838               	movf	___flmul@temp,w
  7491  0178  00A8               	movwf	??___flmul
  7492  0179  0839               	movf	___flmul@temp+1,w
  7493  017A  00A9               	movwf	??___flmul+1
  7494  017B  01AA               	clrf	??___flmul+2
  7495  017C  01AB               	clrf	??___flmul+3
  7496  017D  0828               	movf	??___flmul,w
  7497  017E  07AE               	addwf	___flmul@grs,f
  7498  017F  0829               	movf	??___flmul+1,w
  7499  0180  1103               	clrz
  7500  0181  1803               	skipnc
  7501  0182  3E01               	addlw	1
  7502  0183  1903               	skipnz
  7503  0184  2986               	goto	u280_21
  7504  0185  07AF               	addwf	___flmul@grs+1,f
  7505  0186                     u280_21:
  7506  0186  082A               	movf	??___flmul+2,w
  7507  0187  1103               	clrz
  7508  0188  1803               	skipnc
  7509  0189  3E01               	addlw	1
  7510  018A  1903               	skipnz
  7511  018B  298D               	goto	u280_22
  7512  018C  07B0               	addwf	___flmul@grs+2,f
  7513  018D                     u280_22:
  7514  018D  082B               	movf	??___flmul+3,w
  7515  018E  1103               	clrz
  7516  018F  1803               	skipnc
  7517  0190  3E01               	addlw	1
  7518  0191  1903               	skipnz
  7519  0192  2994               	goto	u280_23
  7520  0193  07B1               	addwf	___flmul@grs+3,f
  7521  0194                     u280_23:
  7522  0194                     i1l3182:
  7523  0194  0820               	movf	___flmul@b,w
  7524  0195  00FF               	movwf	btemp+1
  7525  0196  087F               	movf	btemp+1,w
  7526  0197  00F0               	movwf	__Umul8_16@multiplicand
  7527  0198  0825               	movf	___flmul@a+1,w
  7528  0199  120A  158A  2141  120A  118A  	fcall	__Umul8_16
  7529  019E  0871               	movf	?__Umul8_16+1,w
  7530  019F  1283               	bcf	3,5	;RP0=0, select bank0
  7531  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  7532  01A1  00B9               	movwf	___flmul@temp+1
  7533  01A2  0870               	movf	?__Umul8_16,w
  7534  01A3  00B8               	movwf	___flmul@temp
  7535  01A4                     i1l3184:
  7536  01A4  0838               	movf	___flmul@temp,w
  7537  01A5  00A8               	movwf	??___flmul
  7538  01A6  0839               	movf	___flmul@temp+1,w
  7539  01A7  00A9               	movwf	??___flmul+1
  7540  01A8  01AA               	clrf	??___flmul+2
  7541  01A9  01AB               	clrf	??___flmul+3
  7542  01AA  0828               	movf	??___flmul,w
  7543  01AB  07AE               	addwf	___flmul@grs,f
  7544  01AC  0829               	movf	??___flmul+1,w
  7545  01AD  1103               	clrz
  7546  01AE  1803               	skipnc
  7547  01AF  3E01               	addlw	1
  7548  01B0  1903               	skipnz
  7549  01B1  29B3               	goto	u281_21
  7550  01B2  07AF               	addwf	___flmul@grs+1,f
  7551  01B3                     u281_21:
  7552  01B3  082A               	movf	??___flmul+2,w
  7553  01B4  1103               	clrz
  7554  01B5  1803               	skipnc
  7555  01B6  3E01               	addlw	1
  7556  01B7  1903               	skipnz
  7557  01B8  29BA               	goto	u281_22
  7558  01B9  07B0               	addwf	___flmul@grs+2,f
  7559  01BA                     u281_22:
  7560  01BA  082B               	movf	??___flmul+3,w
  7561  01BB  1103               	clrz
  7562  01BC  1803               	skipnc
  7563  01BD  3E01               	addlw	1
  7564  01BE  1903               	skipnz
  7565  01BF  29C1               	goto	u281_23
  7566  01C0  07B1               	addwf	___flmul@grs+3,f
  7567  01C1                     u281_23:
  7568  01C1                     i1l3186:
  7569  01C1  3008               	movlw	8
  7570  01C2  00A8               	movwf	??___flmul
  7571  01C3                     u282_25:
  7572  01C3  1003               	clrc
  7573  01C4  0DAE               	rlf	___flmul@grs,f
  7574  01C5  0DAF               	rlf	___flmul@grs+1,f
  7575  01C6  0DB0               	rlf	___flmul@grs+2,f
  7576  01C7  0DB1               	rlf	___flmul@grs+3,f
  7577  01C8  0BA8               	decfsz	??___flmul,f
  7578  01C9  29C3               	goto	u282_25
  7579  01CA  0820               	movf	___flmul@b,w
  7580  01CB  00FF               	movwf	btemp+1
  7581  01CC  087F               	movf	btemp+1,w
  7582  01CD  00F0               	movwf	__Umul8_16@multiplicand
  7583  01CE  0824               	movf	___flmul@a,w
  7584  01CF  120A  158A  2141  120A  118A  	fcall	__Umul8_16
  7585  01D4  0871               	movf	?__Umul8_16+1,w
  7586  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  7587  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  7588  01D7  00B9               	movwf	___flmul@temp+1
  7589  01D8  0870               	movf	?__Umul8_16,w
  7590  01D9  00B8               	movwf	___flmul@temp
  7591  01DA                     i1l3188:
  7592  01DA  0838               	movf	___flmul@temp,w
  7593  01DB  00A8               	movwf	??___flmul
  7594  01DC  0839               	movf	___flmul@temp+1,w
  7595  01DD  00A9               	movwf	??___flmul+1
  7596  01DE  01AA               	clrf	??___flmul+2
  7597  01DF  01AB               	clrf	??___flmul+3
  7598  01E0  0828               	movf	??___flmul,w
  7599  01E1  07AE               	addwf	___flmul@grs,f
  7600  01E2  0829               	movf	??___flmul+1,w
  7601  01E3  1103               	clrz
  7602  01E4  1803               	skipnc
  7603  01E5  3E01               	addlw	1
  7604  01E6  1903               	skipnz
  7605  01E7  29E9               	goto	u283_21
  7606  01E8  07AF               	addwf	___flmul@grs+1,f
  7607  01E9                     u283_21:
  7608  01E9  082A               	movf	??___flmul+2,w
  7609  01EA  1103               	clrz
  7610  01EB  1803               	skipnc
  7611  01EC  3E01               	addlw	1
  7612  01ED  1903               	skipnz
  7613  01EE  29F0               	goto	u283_22
  7614  01EF  07B0               	addwf	___flmul@grs+2,f
  7615  01F0                     u283_22:
  7616  01F0  082B               	movf	??___flmul+3,w
  7617  01F1  1103               	clrz
  7618  01F2  1803               	skipnc
  7619  01F3  3E01               	addlw	1
  7620  01F4  1903               	skipnz
  7621  01F5  29F7               	goto	u283_23
  7622  01F6  07B1               	addwf	___flmul@grs+3,f
  7623  01F7                     u283_23:
  7624  01F7                     i1l3190:
  7625  01F7  0821               	movf	___flmul@b+1,w
  7626  01F8  00FF               	movwf	btemp+1
  7627  01F9  087F               	movf	btemp+1,w
  7628  01FA  00F0               	movwf	__Umul8_16@multiplicand
  7629  01FB  0826               	movf	___flmul@a+2,w
  7630  01FC  120A  158A  2141  120A  118A  	fcall	__Umul8_16
  7631  0201  0871               	movf	?__Umul8_16+1,w
  7632  0202  1283               	bcf	3,5	;RP0=0, select bank0
  7633  0203  1303               	bcf	3,6	;RP1=0, select bank0
  7634  0204  00B9               	movwf	___flmul@temp+1
  7635  0205  0870               	movf	?__Umul8_16,w
  7636  0206  00B8               	movwf	___flmul@temp
  7637  0207  0838               	movf	___flmul@temp,w
  7638  0208  00A8               	movwf	??___flmul
  7639  0209  0839               	movf	___flmul@temp+1,w
  7640  020A  00A9               	movwf	??___flmul+1
  7641  020B  01AA               	clrf	??___flmul+2
  7642  020C  01AB               	clrf	??___flmul+3
  7643  020D  0828               	movf	??___flmul,w
  7644  020E  07B4               	addwf	___flmul@prod,f
  7645  020F  0829               	movf	??___flmul+1,w
  7646  0210  1103               	clrz
  7647  0211  1803               	skipnc
  7648  0212  3E01               	addlw	1
  7649  0213  1903               	skipnz
  7650  0214  2A16               	goto	u284_21
  7651  0215  07B5               	addwf	___flmul@prod+1,f
  7652  0216                     u284_21:
  7653  0216  082A               	movf	??___flmul+2,w
  7654  0217  1103               	clrz
  7655  0218  1803               	skipnc
  7656  0219  3E01               	addlw	1
  7657  021A  1903               	skipnz
  7658  021B  2A1D               	goto	u284_22
  7659  021C  07B6               	addwf	___flmul@prod+2,f
  7660  021D                     u284_22:
  7661  021D  082B               	movf	??___flmul+3,w
  7662  021E  1103               	clrz
  7663  021F  1803               	skipnc
  7664  0220  3E01               	addlw	1
  7665  0221  1903               	skipnz
  7666  0222  2A24               	goto	u284_23
  7667  0223  07B7               	addwf	___flmul@prod+3,f
  7668  0224                     u284_23:
  7669  0224                     i1l3192:
  7670  0224  0822               	movf	___flmul@b+2,w
  7671  0225  00FF               	movwf	btemp+1
  7672  0226  087F               	movf	btemp+1,w
  7673  0227  00F0               	movwf	__Umul8_16@multiplicand
  7674  0228  0825               	movf	___flmul@a+1,w
  7675  0229  120A  158A  2141  120A  118A  	fcall	__Umul8_16
  7676  022E  0871               	movf	?__Umul8_16+1,w
  7677  022F  1283               	bcf	3,5	;RP0=0, select bank0
  7678  0230  1303               	bcf	3,6	;RP1=0, select bank0
  7679  0231  00B9               	movwf	___flmul@temp+1
  7680  0232  0870               	movf	?__Umul8_16,w
  7681  0233  00B8               	movwf	___flmul@temp
  7682  0234                     i1l3194:
  7683  0234  0838               	movf	___flmul@temp,w
  7684  0235  00A8               	movwf	??___flmul
  7685  0236  0839               	movf	___flmul@temp+1,w
  7686  0237  00A9               	movwf	??___flmul+1
  7687  0238  01AA               	clrf	??___flmul+2
  7688  0239  01AB               	clrf	??___flmul+3
  7689  023A  0828               	movf	??___flmul,w
  7690  023B  07B4               	addwf	___flmul@prod,f
  7691  023C  0829               	movf	??___flmul+1,w
  7692  023D  1103               	clrz
  7693  023E  1803               	skipnc
  7694  023F  3E01               	addlw	1
  7695  0240  1903               	skipnz
  7696  0241  2A43               	goto	u285_21
  7697  0242  07B5               	addwf	___flmul@prod+1,f
  7698  0243                     u285_21:
  7699  0243  082A               	movf	??___flmul+2,w
  7700  0244  1103               	clrz
  7701  0245  1803               	skipnc
  7702  0246  3E01               	addlw	1
  7703  0247  1903               	skipnz
  7704  0248  2A4A               	goto	u285_22
  7705  0249  07B6               	addwf	___flmul@prod+2,f
  7706  024A                     u285_22:
  7707  024A  082B               	movf	??___flmul+3,w
  7708  024B  1103               	clrz
  7709  024C  1803               	skipnc
  7710  024D  3E01               	addlw	1
  7711  024E  1903               	skipnz
  7712  024F  2A51               	goto	u285_23
  7713  0250  07B7               	addwf	___flmul@prod+3,f
  7714  0251                     u285_23:
  7715  0251  0822               	movf	___flmul@b+2,w
  7716  0252  00FF               	movwf	btemp+1
  7717  0253  087F               	movf	btemp+1,w
  7718  0254  00F0               	movwf	__Umul8_16@multiplicand
  7719  0255  0826               	movf	___flmul@a+2,w
  7720  0256  120A  158A  2141  120A  118A  	fcall	__Umul8_16
  7721  025B  0871               	movf	?__Umul8_16+1,w
  7722  025C  1283               	bcf	3,5	;RP0=0, select bank0
  7723  025D  1303               	bcf	3,6	;RP1=0, select bank0
  7724  025E  00B9               	movwf	___flmul@temp+1
  7725  025F  0870               	movf	?__Umul8_16,w
  7726  0260  00B8               	movwf	___flmul@temp
  7727  0261                     i1l3196:
  7728  0261  0838               	movf	___flmul@temp,w
  7729  0262  00A8               	movwf	??___flmul
  7730  0263  0839               	movf	___flmul@temp+1,w
  7731  0264  00A9               	movwf	??___flmul+1
  7732  0265  01AA               	clrf	??___flmul+2
  7733  0266  01AB               	clrf	??___flmul+3
  7734  0267  3008               	movlw	8
  7735  0268                     u286_25:
  7736  0268  1003               	clrc
  7737  0269  0DA8               	rlf	??___flmul,f
  7738  026A  0DA9               	rlf	??___flmul+1,f
  7739  026B  0DAA               	rlf	??___flmul+2,f
  7740  026C  0DAB               	rlf	??___flmul+3,f
  7741  026D                     u286_20:
  7742  026D  3EFF               	addlw	-1
  7743  026E  1D03               	skipz
  7744  026F  2A68               	goto	u286_25
  7745  0270  0828               	movf	??___flmul,w
  7746  0271  07B4               	addwf	___flmul@prod,f
  7747  0272  0829               	movf	??___flmul+1,w
  7748  0273  1103               	clrz
  7749  0274  1803               	skipnc
  7750  0275  3E01               	addlw	1
  7751  0276  1903               	skipnz
  7752  0277  2A79               	goto	u287_21
  7753  0278  07B5               	addwf	___flmul@prod+1,f
  7754  0279                     u287_21:
  7755  0279  082A               	movf	??___flmul+2,w
  7756  027A  1103               	clrz
  7757  027B  1803               	skipnc
  7758  027C  3E01               	addlw	1
  7759  027D  1903               	skipnz
  7760  027E  2A80               	goto	u287_22
  7761  027F  07B6               	addwf	___flmul@prod+2,f
  7762  0280                     u287_22:
  7763  0280  082B               	movf	??___flmul+3,w
  7764  0281  1103               	clrz
  7765  0282  1803               	skipnc
  7766  0283  3E01               	addlw	1
  7767  0284  1903               	skipnz
  7768  0285  2A87               	goto	u287_23
  7769  0286  07B7               	addwf	___flmul@prod+3,f
  7770  0287                     u287_23:
  7771  0287                     i1l3198:
  7772  0287  082E               	movf	___flmul@grs,w
  7773  0288  00A8               	movwf	??___flmul
  7774  0289  082F               	movf	___flmul@grs+1,w
  7775  028A  00A9               	movwf	??___flmul+1
  7776  028B  0830               	movf	___flmul@grs+2,w
  7777  028C  00AA               	movwf	??___flmul+2
  7778  028D  0831               	movf	___flmul@grs+3,w
  7779  028E  00AB               	movwf	??___flmul+3
  7780  028F  3018               	movlw	24
  7781  0290                     u288_25:
  7782  0290  1003               	clrc
  7783  0291  0CAB               	rrf	??___flmul+3,f
  7784  0292  0CAA               	rrf	??___flmul+2,f
  7785  0293  0CA9               	rrf	??___flmul+1,f
  7786  0294  0CA8               	rrf	??___flmul,f
  7787  0295                     u288_20:
  7788  0295  3EFF               	addlw	-1
  7789  0296  1D03               	skipz
  7790  0297  2A90               	goto	u288_25
  7791  0298  0828               	movf	??___flmul,w
  7792  0299  07B4               	addwf	___flmul@prod,f
  7793  029A  0829               	movf	??___flmul+1,w
  7794  029B  1103               	clrz
  7795  029C  1803               	skipnc
  7796  029D  3E01               	addlw	1
  7797  029E  1903               	skipnz
  7798  029F  2AA1               	goto	u289_21
  7799  02A0  07B5               	addwf	___flmul@prod+1,f
  7800  02A1                     u289_21:
  7801  02A1  082A               	movf	??___flmul+2,w
  7802  02A2  1103               	clrz
  7803  02A3  1803               	skipnc
  7804  02A4  3E01               	addlw	1
  7805  02A5  1903               	skipnz
  7806  02A6  2AA8               	goto	u289_22
  7807  02A7  07B6               	addwf	___flmul@prod+2,f
  7808  02A8                     u289_22:
  7809  02A8  082B               	movf	??___flmul+3,w
  7810  02A9  1103               	clrz
  7811  02AA  1803               	skipnc
  7812  02AB  3E01               	addlw	1
  7813  02AC  1903               	skipnz
  7814  02AD  2AAF               	goto	u289_23
  7815  02AE  07B7               	addwf	___flmul@prod+3,f
  7816  02AF                     u289_23:
  7817  02AF                     i1l3200:
  7818  02AF  3008               	movlw	8
  7819  02B0  00A8               	movwf	??___flmul
  7820  02B1                     u290_25:
  7821  02B1  1003               	clrc
  7822  02B2  0DAE               	rlf	___flmul@grs,f
  7823  02B3  0DAF               	rlf	___flmul@grs+1,f
  7824  02B4  0DB0               	rlf	___flmul@grs+2,f
  7825  02B5  0DB1               	rlf	___flmul@grs+3,f
  7826  02B6  0BA8               	decfsz	??___flmul,f
  7827  02B7  2AB1               	goto	u290_25
  7828  02B8                     i1l3202:
  7829  02B8  0833               	movf	___flmul@bexp,w
  7830  02B9  0732               	addwf	___flmul@aexp,w
  7831  02BA  00A8               	movwf	??___flmul
  7832  02BB  01A9               	clrf	??___flmul+1
  7833  02BC  0DA9               	rlf	??___flmul+1,f
  7834  02BD  0828               	movf	??___flmul,w
  7835  02BE  3E82               	addlw	130
  7836  02BF  00B8               	movwf	___flmul@temp
  7837  02C0  0829               	movf	??___flmul+1,w
  7838  02C1  1803               	skipnc
  7839  02C2  3E01               	addlw	1
  7840  02C3  3EFF               	addlw	255
  7841  02C4  00B9               	movwf	___flmul@temp+1
  7842  02C5  2AE3               	goto	i1l3214
  7843  02C6                     i1l3204:
  7844  02C6  3001               	movlw	1
  7845  02C7  00A8               	movwf	??___flmul
  7846  02C8                     u291_25:
  7847  02C8  1003               	clrc
  7848  02C9  0DB4               	rlf	___flmul@prod,f
  7849  02CA  0DB5               	rlf	___flmul@prod+1,f
  7850  02CB  0DB6               	rlf	___flmul@prod+2,f
  7851  02CC  0DB7               	rlf	___flmul@prod+3,f
  7852  02CD  0BA8               	decfsz	??___flmul,f
  7853  02CE  2AC8               	goto	u291_25
  7854  02CF                     i1l3206:
  7855  02CF  1FB1               	btfss	___flmul@grs+3,7
  7856  02D0  2AD2               	goto	u292_21
  7857  02D1  2AD3               	goto	u292_20
  7858  02D2                     u292_21:
  7859  02D2  2AD4               	goto	i1l3210
  7860  02D3                     u292_20:
  7861  02D3                     i1l3208:
  7862  02D3  1434               	bsf	___flmul@prod,0
  7863  02D4                     i1l3210:
  7864  02D4  3001               	movlw	1
  7865  02D5  00A8               	movwf	??___flmul
  7866  02D6                     u293_25:
  7867  02D6  1003               	clrc
  7868  02D7  0DAE               	rlf	___flmul@grs,f
  7869  02D8  0DAF               	rlf	___flmul@grs+1,f
  7870  02D9  0DB0               	rlf	___flmul@grs+2,f
  7871  02DA  0DB1               	rlf	___flmul@grs+3,f
  7872  02DB  0BA8               	decfsz	??___flmul,f
  7873  02DC  2AD6               	goto	u293_25
  7874  02DD                     i1l3212:
  7875  02DD  30FF               	movlw	255
  7876  02DE  07B8               	addwf	___flmul@temp,f
  7877  02DF  1803               	skipnc
  7878  02E0  0AB9               	incf	___flmul@temp+1,f
  7879  02E1  30FF               	movlw	255
  7880  02E2  07B9               	addwf	___flmul@temp+1,f
  7881  02E3                     i1l3214:
  7882  02E3  1FB6               	btfss	___flmul@prod+2,7
  7883  02E4  2AE6               	goto	u294_21
  7884  02E5  2AE7               	goto	u294_20
  7885  02E6                     u294_21:
  7886  02E6  2AC6               	goto	i1l3204
  7887  02E7                     u294_20:
  7888  02E7                     i1l3216:
  7889  02E7  01B2               	clrf	___flmul@aexp
  7890  02E8                     i1l3218:
  7891  02E8  1FB1               	btfss	___flmul@grs+3,7
  7892  02E9  2AEB               	goto	u295_21
  7893  02EA  2AEC               	goto	u295_20
  7894  02EB                     u295_21:
  7895  02EB  2B08               	goto	i1l3226
  7896  02EC                     u295_20:
  7897  02EC                     i1l3220:
  7898  02EC  30FF               	movlw	255
  7899  02ED  052E               	andwf	___flmul@grs,w
  7900  02EE  00A8               	movwf	??___flmul
  7901  02EF  30FF               	movlw	255
  7902  02F0  052F               	andwf	___flmul@grs+1,w
  7903  02F1  00A9               	movwf	??___flmul+1
  7904  02F2  30FF               	movlw	255
  7905  02F3  0530               	andwf	___flmul@grs+2,w
  7906  02F4  00AA               	movwf	??___flmul+2
  7907  02F5  307F               	movlw	127
  7908  02F6  0531               	andwf	___flmul@grs+3,w
  7909  02F7  00AB               	movwf	??___flmul+3
  7910  02F8  082B               	movf	??___flmul+3,w
  7911  02F9  042A               	iorwf	??___flmul+2,w
  7912  02FA  0429               	iorwf	??___flmul+1,w
  7913  02FB  0428               	iorwf	??___flmul,w
  7914  02FC  1903               	skipnz
  7915  02FD  2AFF               	goto	u296_21
  7916  02FE  2B00               	goto	u296_20
  7917  02FF                     u296_21:
  7918  02FF  2B03               	goto	i1l1119
  7919  0300                     u296_20:
  7920  0300                     i1l3222:
  7921  0300  01B2               	clrf	___flmul@aexp
  7922  0301  0AB2               	incf	___flmul@aexp,f
  7923  0302  2B08               	goto	i1l3226
  7924  0303                     i1l1119:
  7925  0303  1C34               	btfss	___flmul@prod,0
  7926  0304  2B06               	goto	u297_21
  7927  0305  2B07               	goto	u297_20
  7928  0306                     u297_21:
  7929  0306  2B08               	goto	i1l3226
  7930  0307                     u297_20:
  7931  0307  2B00               	goto	i1l3222
  7932  0308                     i1l3226:
  7933  0308  0832               	movf	___flmul@aexp,w
  7934  0309  1903               	btfsc	3,2
  7935  030A  2B0C               	goto	u298_21
  7936  030B  2B0D               	goto	u298_20
  7937  030C                     u298_21:
  7938  030C  2B3E               	goto	i1l3236
  7939  030D                     u298_20:
  7940  030D                     i1l3228:
  7941  030D  3001               	movlw	1
  7942  030E  07B4               	addwf	___flmul@prod,f
  7943  030F  3000               	movlw	0
  7944  0310  1803               	skipnc
  7945  0311  3001               	movlw	1
  7946  0312  07B5               	addwf	___flmul@prod+1,f
  7947  0313  3000               	movlw	0
  7948  0314  1803               	skipnc
  7949  0315  3001               	movlw	1
  7950  0316  07B6               	addwf	___flmul@prod+2,f
  7951  0317  3000               	movlw	0
  7952  0318  1803               	skipnc
  7953  0319  3001               	movlw	1
  7954  031A  07B7               	addwf	___flmul@prod+3,f
  7955  031B                     i1l3230:
  7956  031B  1C37               	btfss	___flmul@prod+3,0
  7957  031C  2B1E               	goto	u299_21
  7958  031D  2B1F               	goto	u299_20
  7959  031E                     u299_21:
  7960  031E  2B3E               	goto	i1l3236
  7961  031F                     u299_20:
  7962  031F                     i1l3232:
  7963  031F  0834               	movf	___flmul@prod,w
  7964  0320  00A8               	movwf	??___flmul
  7965  0321  0835               	movf	___flmul@prod+1,w
  7966  0322  00A9               	movwf	??___flmul+1
  7967  0323  0836               	movf	___flmul@prod+2,w
  7968  0324  00AA               	movwf	??___flmul+2
  7969  0325  0837               	movf	___flmul@prod+3,w
  7970  0326  00AB               	movwf	??___flmul+3
  7971  0327  3001               	movlw	1
  7972  0328  00AC               	movwf	??___flmul+4
  7973  0329                     u300_25:
  7974  0329  0D2B               	rlf	??___flmul+3,w
  7975  032A  0CAB               	rrf	??___flmul+3,f
  7976  032B  0CAA               	rrf	??___flmul+2,f
  7977  032C  0CA9               	rrf	??___flmul+1,f
  7978  032D  0CA8               	rrf	??___flmul,f
  7979  032E                     u300_20:
  7980  032E  0BAC               	decfsz	??___flmul+4,f
  7981  032F  2B29               	goto	u300_25
  7982  0330  082B               	movf	??___flmul+3,w
  7983  0331  00B7               	movwf	___flmul@prod+3
  7984  0332  082A               	movf	??___flmul+2,w
  7985  0333  00B6               	movwf	___flmul@prod+2
  7986  0334  0829               	movf	??___flmul+1,w
  7987  0335  00B5               	movwf	___flmul@prod+1
  7988  0336  0828               	movf	??___flmul,w
  7989  0337  00B4               	movwf	___flmul@prod
  7990  0338                     i1l3234:
  7991  0338  3001               	movlw	1
  7992  0339  07B8               	addwf	___flmul@temp,f
  7993  033A  1803               	skipnc
  7994  033B  0AB9               	incf	___flmul@temp+1,f
  7995  033C  3000               	movlw	0
  7996  033D  07B9               	addwf	___flmul@temp+1,f
  7997  033E                     i1l3236:
  7998  033E  0839               	movf	___flmul@temp+1,w
  7999  033F  3A80               	xorlw	128
  8000  0340  00FF               	movwf	btemp+1
  8001  0341  3080               	movlw	128
  8002  0342  027F               	subwf	btemp+1,w
  8003  0343  1D03               	skipz
  8004  0344  2B47               	goto	u301_25
  8005  0345  30FF               	movlw	255
  8006  0346  0238               	subwf	___flmul@temp,w
  8007  0347                     u301_25:
  8008  0347  1C03               	skipc
  8009  0348  2B4A               	goto	u301_21
  8010  0349  2B4B               	goto	u301_20
  8011  034A                     u301_21:
  8012  034A  2B56               	goto	i1l3240
  8013  034B                     u301_20:
  8014  034B                     i1l3238:
  8015  034B  307F               	movlw	127
  8016  034C  1283               	bcf	3,5	;RP0=0, select bank0
  8017  034D  1303               	bcf	3,6	;RP1=0, select bank0
  8018  034E  00B7               	movwf	___flmul@prod+3
  8019  034F  3080               	movlw	128
  8020  0350  00B6               	movwf	___flmul@prod+2
  8021  0351  3000               	movlw	0
  8022  0352  00B5               	movwf	___flmul@prod+1
  8023  0353  3000               	movlw	0
  8024  0354  00B4               	movwf	___flmul@prod
  8025  0355  2B8B               	goto	i1l1125
  8026  0356                     i1l3240:
  8027  0356  1283               	bcf	3,5	;RP0=0, select bank0
  8028  0357  1303               	bcf	3,6	;RP1=0, select bank0
  8029  0358  0839               	movf	___flmul@temp+1,w
  8030  0359  3A80               	xorlw	128
  8031  035A  00FF               	movwf	btemp+1
  8032  035B  3080               	movlw	128
  8033  035C  027F               	subwf	btemp+1,w
  8034  035D  1D03               	skipz
  8035  035E  2B61               	goto	u302_25
  8036  035F  3001               	movlw	1
  8037  0360  0238               	subwf	___flmul@temp,w
  8038  0361                     u302_25:
  8039  0361  1803               	skipnc
  8040  0362  2B64               	goto	u302_21
  8041  0363  2B65               	goto	u302_20
  8042  0364                     u302_21:
  8043  0364  2B71               	goto	i1l3246
  8044  0365                     u302_20:
  8045  0365                     i1l3242:
  8046  0365  3000               	movlw	0
  8047  0366  1283               	bcf	3,5	;RP0=0, select bank0
  8048  0367  1303               	bcf	3,6	;RP1=0, select bank0
  8049  0368  00B7               	movwf	___flmul@prod+3
  8050  0369  3000               	movlw	0
  8051  036A  00B6               	movwf	___flmul@prod+2
  8052  036B  3000               	movlw	0
  8053  036C  00B5               	movwf	___flmul@prod+1
  8054  036D  3000               	movlw	0
  8055  036E  00B4               	movwf	___flmul@prod
  8056  036F                     i1l3244:
  8057  036F  01AD               	clrf	___flmul@sign
  8058  0370  2B8B               	goto	i1l1125
  8059  0371                     i1l3246:
  8060  0371  1283               	bcf	3,5	;RP0=0, select bank0
  8061  0372  1303               	bcf	3,6	;RP1=0, select bank0
  8062  0373  0838               	movf	___flmul@temp,w
  8063  0374  00FF               	movwf	btemp+1
  8064  0375  087F               	movf	btemp+1,w
  8065  0376  00B3               	movwf	___flmul@bexp
  8066  0377                     i1l3248:
  8067  0377  30FF               	movlw	255
  8068  0378  05B4               	andwf	___flmul@prod,f
  8069  0379  30FF               	movlw	255
  8070  037A  05B5               	andwf	___flmul@prod+1,f
  8071  037B  307F               	movlw	127
  8072  037C  05B6               	andwf	___flmul@prod+2,f
  8073  037D  3000               	movlw	0
  8074  037E  05B7               	andwf	___flmul@prod+3,f
  8075  037F                     i1l3250:
  8076  037F  1C33               	btfss	___flmul@bexp,0
  8077  0380  2B82               	goto	u303_21
  8078  0381  2B83               	goto	u303_20
  8079  0382                     u303_21:
  8080  0382  2B84               	goto	i1l3254
  8081  0383                     u303_20:
  8082  0383                     i1l3252:
  8083  0383  17B6               	bsf	___flmul@prod+2,7
  8084  0384                     i1l3254:
  8085  0384  0833               	movf	___flmul@bexp,w
  8086  0385  00A8               	movwf	??___flmul
  8087  0386  1003               	clrc
  8088  0387  0C28               	rrf	??___flmul,w
  8089  0388  00FF               	movwf	btemp+1
  8090  0389  087F               	movf	btemp+1,w
  8091  038A  00B7               	movwf	___flmul@prod+3
  8092  038B                     i1l1125:
  8093  038B  082D               	movf	___flmul@sign,w
  8094  038C  00FF               	movwf	btemp+1
  8095  038D  087F               	movf	btemp+1,w
  8096  038E  04B7               	iorwf	___flmul@prod+3,f
  8097  038F                     i1l3256:
  8098  038F  0837               	movf	___flmul@prod+3,w
  8099  0390  00A3               	movwf	?___flmul+3
  8100  0391  0836               	movf	___flmul@prod+2,w
  8101  0392  00A2               	movwf	?___flmul+2
  8102  0393  0835               	movf	___flmul@prod+1,w
  8103  0394  00A1               	movwf	?___flmul+1
  8104  0395  0834               	movf	___flmul@prod,w
  8105  0396  00A0               	movwf	?___flmul
  8106  0397                     i1l1113:
  8107  0397  0008               	return
  8108  0398                     __end_of___flmul:
  8109                           
  8110                           	psect	text45
  8111  0941                     __ptext45:	
  8112 ;; *************** function __Umul8_16 *****************
  8113 ;; Defined at:
  8114 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8_16.c"
  8115 ;; Parameters:    Size  Location     Type
  8116 ;;  multiplier      1    wreg     unsigned char 
  8117 ;;  multiplicand    1    0[COMMON] unsigned char 
  8118 ;; Auto vars:     Size  Location     Type
  8119 ;;  multiplier      1    8[COMMON] unsigned char 
  8120 ;;  word_mpld       2    6[COMMON] unsigned int 
  8121 ;;  product         2    4[COMMON] unsigned int 
  8122 ;; Return value:  Size  Location     Type
  8123 ;;                  2    0[COMMON] unsigned int 
  8124 ;; Registers used:
  8125 ;;		wreg, status,2, status,0
  8126 ;; Tracked objects:
  8127 ;;		On entry : 0/0
  8128 ;;		On exit  : 0/0
  8129 ;;		Unchanged: 0/0
  8130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8131 ;;      Params:         2       0       0       0       0
  8132 ;;      Locals:         5       0       0       0       0
  8133 ;;      Temps:          2       0       0       0       0
  8134 ;;      Totals:         9       0       0       0       0
  8135 ;;Total ram usage:        9 bytes
  8136 ;; Hardware stack levels used:    1
  8137 ;; This function calls:
  8138 ;;		Nothing
  8139 ;; This function is called by:
  8140 ;;		___flmul
  8141 ;; This function uses a non-reentrant model
  8142 ;;
  8143                           
  8144                           
  8145                           ;psect for function __Umul8_16
  8146  0941                     __Umul8_16:
  8147                           
  8148                           ;incstack = 0
  8149 ;; hardware stack exceeded
  8150                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8151                           ;__Umul8_16@multiplier stored from wreg
  8152  0941  00F8               	movwf	__Umul8_16@multiplier
  8153  0942                     i1l2824:
  8154  0942  01F4               	clrf	__Umul8_16@product
  8155  0943  01F5               	clrf	__Umul8_16@product+1
  8156  0944                     i1l2826:
  8157  0944  0870               	movf	__Umul8_16@multiplicand,w
  8158  0945  00F2               	movwf	??__Umul8_16
  8159  0946  01F3               	clrf	??__Umul8_16+1
  8160  0947  0872               	movf	??__Umul8_16,w
  8161  0948  00F6               	movwf	__Umul8_16@word_mpld
  8162  0949  0873               	movf	??__Umul8_16+1,w
  8163  094A  00F7               	movwf	__Umul8_16@word_mpld+1
  8164  094B                     i1l2828:
  8165  094B  1C78               	btfss	__Umul8_16@multiplier,0
  8166  094C  294E               	goto	u236_21
  8167  094D  294F               	goto	u236_20
  8168  094E                     u236_21:
  8169  094E  2955               	goto	i1l1132
  8170  094F                     u236_20:
  8171  094F                     i1l2830:
  8172  094F  0876               	movf	__Umul8_16@word_mpld,w
  8173  0950  07F4               	addwf	__Umul8_16@product,f
  8174  0951  1803               	skipnc
  8175  0952  0AF5               	incf	__Umul8_16@product+1,f
  8176  0953  0877               	movf	__Umul8_16@word_mpld+1,w
  8177  0954  07F5               	addwf	__Umul8_16@product+1,f
  8178  0955                     i1l1132:
  8179  0955  3001               	movlw	1
  8180  0956                     u237_25:
  8181  0956  1003               	clrc
  8182  0957  0DF6               	rlf	__Umul8_16@word_mpld,f
  8183  0958  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  8184  0959  3EFF               	addlw	-1
  8185  095A  1D03               	skipz
  8186  095B  2956               	goto	u237_25
  8187  095C  1003               	clrc
  8188  095D  0CF8               	rrf	__Umul8_16@multiplier,f
  8189  095E                     i1l2832:
  8190  095E  0878               	movf	__Umul8_16@multiplier,w
  8191  095F  1D03               	btfss	3,2
  8192  0960  2962               	goto	u238_21
  8193  0961  2963               	goto	u238_20
  8194  0962                     u238_21:
  8195  0962  294B               	goto	i1l2828
  8196  0963                     u238_20:
  8197  0963                     i1l2834:
  8198  0963  0875               	movf	__Umul8_16@product+1,w
  8199  0964  00F1               	movwf	?__Umul8_16+1
  8200  0965  0874               	movf	__Umul8_16@product,w
  8201  0966  00F0               	movwf	?__Umul8_16
  8202  0967                     i1l1134:
  8203  0967  0008               	return
  8204  0968                     __end_of__Umul8_16:
  8205                           
  8206                           	psect	text46
  8207  0C2F                     __ptext46:	
  8208 ;; *************** function ___awmod *****************
  8209 ;; Defined at:
  8210 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  8211 ;; Parameters:    Size  Location     Type
  8212 ;;  divisor         2    0[COMMON] int 
  8213 ;;  dividend        2    2[COMMON] int 
  8214 ;; Auto vars:     Size  Location     Type
  8215 ;;  sign            1    5[COMMON] unsigned char 
  8216 ;;  counter         1    4[COMMON] unsigned char 
  8217 ;; Return value:  Size  Location     Type
  8218 ;;                  2    0[COMMON] int 
  8219 ;; Registers used:
  8220 ;;		wreg, status,2, status,0, btemp+1
  8221 ;; Tracked objects:
  8222 ;;		On entry : 0/0
  8223 ;;		On exit  : 0/0
  8224 ;;		Unchanged: 0/0
  8225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8226 ;;      Params:         4       0       0       0       0
  8227 ;;      Locals:         2       0       0       0       0
  8228 ;;      Temps:          0       0       0       0       0
  8229 ;;      Totals:         6       0       0       0       0
  8230 ;;Total ram usage:        6 bytes
  8231 ;; Hardware stack levels used:    1
  8232 ;; This function calls:
  8233 ;;		Nothing
  8234 ;; This function is called by:
  8235 ;;		_EWH_TempUpdate
  8236 ;; This function uses a non-reentrant model
  8237 ;;
  8238                           
  8239                           
  8240                           ;psect for function ___awmod
  8241  0C2F                     ___awmod:
  8242  0C2F                     i1l3042:	
  8243                           ;incstack = 0
  8244 ;; hardware stack exceeded
  8245                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  8246                           
  8247  0C2F  01F5               	clrf	___awmod@sign
  8248  0C30                     i1l3044:
  8249  0C30  1FF3               	btfss	___awmod@dividend+1,7
  8250  0C31  2C33               	goto	u248_21
  8251  0C32  2C34               	goto	u248_20
  8252  0C33                     u248_21:
  8253  0C33  2C3B               	goto	i1l3050
  8254  0C34                     u248_20:
  8255  0C34                     i1l3046:
  8256  0C34  09F2               	comf	___awmod@dividend,f
  8257  0C35  09F3               	comf	___awmod@dividend+1,f
  8258  0C36  0AF2               	incf	___awmod@dividend,f
  8259  0C37  1903               	skipnz
  8260  0C38  0AF3               	incf	___awmod@dividend+1,f
  8261  0C39                     i1l3048:
  8262  0C39  01F5               	clrf	___awmod@sign
  8263  0C3A  0AF5               	incf	___awmod@sign,f
  8264  0C3B                     i1l3050:
  8265  0C3B  1FF1               	btfss	___awmod@divisor+1,7
  8266  0C3C  2C3E               	goto	u249_21
  8267  0C3D  2C3F               	goto	u249_20
  8268  0C3E                     u249_21:
  8269  0C3E  2C44               	goto	i1l3054
  8270  0C3F                     u249_20:
  8271  0C3F                     i1l3052:
  8272  0C3F  09F0               	comf	___awmod@divisor,f
  8273  0C40  09F1               	comf	___awmod@divisor+1,f
  8274  0C41  0AF0               	incf	___awmod@divisor,f
  8275  0C42  1903               	skipnz
  8276  0C43  0AF1               	incf	___awmod@divisor+1,f
  8277  0C44                     i1l3054:
  8278  0C44  0870               	movf	___awmod@divisor,w
  8279  0C45  0471               	iorwf	___awmod@divisor+1,w
  8280  0C46  1903               	btfsc	3,2
  8281  0C47  2C49               	goto	u250_21
  8282  0C48  2C4A               	goto	u250_20
  8283  0C49                     u250_21:
  8284  0C49  2C79               	goto	i1l3072
  8285  0C4A                     u250_20:
  8286  0C4A                     i1l3056:
  8287  0C4A  01F4               	clrf	___awmod@counter
  8288  0C4B  0AF4               	incf	___awmod@counter,f
  8289  0C4C  2C58               	goto	i1l3062
  8290  0C4D                     i1l3058:
  8291  0C4D  3001               	movlw	1
  8292  0C4E                     u251_25:
  8293  0C4E  1003               	clrc
  8294  0C4F  0DF0               	rlf	___awmod@divisor,f
  8295  0C50  0DF1               	rlf	___awmod@divisor+1,f
  8296  0C51  3EFF               	addlw	-1
  8297  0C52  1D03               	skipz
  8298  0C53  2C4E               	goto	u251_25
  8299  0C54                     i1l3060:
  8300  0C54  3001               	movlw	1
  8301  0C55  00FF               	movwf	btemp+1
  8302  0C56  087F               	movf	btemp+1,w
  8303  0C57  07F4               	addwf	___awmod@counter,f
  8304  0C58                     i1l3062:
  8305  0C58  1FF1               	btfss	___awmod@divisor+1,7
  8306  0C59  2C5B               	goto	u252_21
  8307  0C5A  2C5C               	goto	u252_20
  8308  0C5B                     u252_21:
  8309  0C5B  2C4D               	goto	i1l3058
  8310  0C5C                     u252_20:
  8311  0C5C                     i1l3064:
  8312  0C5C  0871               	movf	___awmod@divisor+1,w
  8313  0C5D  0273               	subwf	___awmod@dividend+1,w
  8314  0C5E  1D03               	skipz
  8315  0C5F  2C62               	goto	u253_25
  8316  0C60  0870               	movf	___awmod@divisor,w
  8317  0C61  0272               	subwf	___awmod@dividend,w
  8318  0C62                     u253_25:
  8319  0C62  1C03               	skipc
  8320  0C63  2C65               	goto	u253_21
  8321  0C64  2C66               	goto	u253_20
  8322  0C65                     u253_21:
  8323  0C65  2C6C               	goto	i1l3068
  8324  0C66                     u253_20:
  8325  0C66                     i1l3066:
  8326  0C66  0870               	movf	___awmod@divisor,w
  8327  0C67  02F2               	subwf	___awmod@dividend,f
  8328  0C68  0871               	movf	___awmod@divisor+1,w
  8329  0C69  1C03               	skipc
  8330  0C6A  03F3               	decf	___awmod@dividend+1,f
  8331  0C6B  02F3               	subwf	___awmod@dividend+1,f
  8332  0C6C                     i1l3068:
  8333  0C6C  3001               	movlw	1
  8334  0C6D                     u254_25:
  8335  0C6D  1003               	clrc
  8336  0C6E  0CF1               	rrf	___awmod@divisor+1,f
  8337  0C6F  0CF0               	rrf	___awmod@divisor,f
  8338  0C70  3EFF               	addlw	-1
  8339  0C71  1D03               	skipz
  8340  0C72  2C6D               	goto	u254_25
  8341  0C73                     i1l3070:
  8342  0C73  3001               	movlw	1
  8343  0C74  02F4               	subwf	___awmod@counter,f
  8344  0C75  1D03               	btfss	3,2
  8345  0C76  2C78               	goto	u255_21
  8346  0C77  2C79               	goto	u255_20
  8347  0C78                     u255_21:
  8348  0C78  2C5C               	goto	i1l3064
  8349  0C79                     u255_20:
  8350  0C79                     i1l3072:
  8351  0C79  0875               	movf	___awmod@sign,w
  8352  0C7A  1903               	btfsc	3,2
  8353  0C7B  2C7D               	goto	u256_21
  8354  0C7C  2C7E               	goto	u256_20
  8355  0C7D                     u256_21:
  8356  0C7D  2C83               	goto	i1l3076
  8357  0C7E                     u256_20:
  8358  0C7E                     i1l3074:
  8359  0C7E  09F2               	comf	___awmod@dividend,f
  8360  0C7F  09F3               	comf	___awmod@dividend+1,f
  8361  0C80  0AF2               	incf	___awmod@dividend,f
  8362  0C81  1903               	skipnz
  8363  0C82  0AF3               	incf	___awmod@dividend+1,f
  8364  0C83                     i1l3076:
  8365  0C83  0873               	movf	___awmod@dividend+1,w
  8366  0C84  00F1               	movwf	?___awmod+1
  8367  0C85  0872               	movf	___awmod@dividend,w
  8368  0C86  00F0               	movwf	?___awmod
  8369  0C87                     i1l890:
  8370  0C87  0008               	return
  8371  0C88                     __end_of___awmod:
  8372                           
  8373                           	psect	text47
  8374  09EF                     __ptext47:	
  8375 ;; *************** function _EWH_getAvrgTempReading *****************
  8376 ;; Defined at:
  8377 ;;		line 334 in file "EWH.c"
  8378 ;; Parameters:    Size  Location     Type
  8379 ;;  buffer          1    wreg     PTR unsigned char 
  8380 ;;		 -> ReadingBuffer(10), 
  8381 ;;  length          1    7[COMMON] unsigned char 
  8382 ;; Auto vars:     Size  Location     Type
  8383 ;;  buffer          1    3[BANK0 ] PTR unsigned char 
  8384 ;;		 -> ReadingBuffer(10), 
  8385 ;;  i               1    4[BANK0 ] unsigned char 
  8386 ;;  sumOfReading    2    0[BANK0 ] unsigned short 
  8387 ;;  averageReadi    1    2[BANK0 ] unsigned char 
  8388 ;; Return value:  Size  Location     Type
  8389 ;;                  1    wreg      unsigned char 
  8390 ;; Registers used:
  8391 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8392 ;; Tracked objects:
  8393 ;;		On entry : 0/0
  8394 ;;		On exit  : 0/0
  8395 ;;		Unchanged: 0/0
  8396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8397 ;;      Params:         1       0       0       0       0
  8398 ;;      Locals:         0       5       0       0       0
  8399 ;;      Temps:          3       0       0       0       0
  8400 ;;      Totals:         4       5       0       0       0
  8401 ;;Total ram usage:        9 bytes
  8402 ;; Hardware stack levels used:    1
  8403 ;; Hardware stack levels required when called:    1
  8404 ;; This function calls:
  8405 ;;		___lwdiv
  8406 ;; This function is called by:
  8407 ;;		_EWH_TempUpdate
  8408 ;; This function uses a non-reentrant model
  8409 ;;
  8410                           
  8411                           
  8412                           ;psect for function _EWH_getAvrgTempReading
  8413  09EF                     _EWH_getAvrgTempReading:
  8414                           
  8415                           ;incstack = 0
  8416 ;; hardware stack exceeded
  8417                           ; Regs used in _EWH_getAvrgTempReading: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  8418                           ;EWH_getAvrgTempReading@buffer stored from wreg
  8419  09EF  1283               	bcf	3,5	;RP0=0, select bank0
  8420  09F0  1303               	bcf	3,6	;RP1=0, select bank0
  8421  09F1  00A3               	movwf	EWH_getAvrgTempReading@buffer
  8422  09F2                     i1l3028:
  8423                           
  8424                           ;EWH.c: 334: uint8_t EWH_getAvrgTempReading(uint8_t *buffer, uint8_t length);EWH.c: 335:
      +                           {;EWH.c: 336:     uint16_t sumOfReadings=0;
  8425  09F2  01A0               	clrf	EWH_getAvrgTempReading@sumOfReadings
  8426  09F3  01A1               	clrf	EWH_getAvrgTempReading@sumOfReadings+1
  8427                           
  8428                           ;EWH.c: 337:     for(uint8_t i=0 ; i<length ; i++)
  8429  09F4  01A4               	clrf	EWH_getAvrgTempReading@i
  8430  09F5  2A09               	goto	i1l3034
  8431  09F6                     i1l3030:
  8432                           
  8433                           ;EWH.c: 338:     {;EWH.c: 339:         sumOfReadings += buffer[i];
  8434  09F6  0824               	movf	EWH_getAvrgTempReading@i,w
  8435  09F7  0723               	addwf	EWH_getAvrgTempReading@buffer,w
  8436  09F8  00F8               	movwf	??_EWH_getAvrgTempReading
  8437  09F9  0878               	movf	??_EWH_getAvrgTempReading,w
  8438  09FA  0084               	movwf	4
  8439  09FB  1383               	bcf	3,7	;select IRP bank0
  8440  09FC  0800               	movf	0,w
  8441  09FD  00F9               	movwf	??_EWH_getAvrgTempReading+1
  8442  09FE  01FA               	clrf	??_EWH_getAvrgTempReading+2
  8443  09FF  0879               	movf	??_EWH_getAvrgTempReading+1,w
  8444  0A00  07A0               	addwf	EWH_getAvrgTempReading@sumOfReadings,f
  8445  0A01  1803               	skipnc
  8446  0A02  0AA1               	incf	EWH_getAvrgTempReading@sumOfReadings+1,f
  8447  0A03  087A               	movf	??_EWH_getAvrgTempReading+2,w
  8448  0A04  07A1               	addwf	EWH_getAvrgTempReading@sumOfReadings+1,f
  8449  0A05                     i1l3032:
  8450                           
  8451                           ;EWH.c: 340:     }
  8452  0A05  3001               	movlw	1
  8453  0A06  00FF               	movwf	btemp+1
  8454  0A07  087F               	movf	btemp+1,w
  8455  0A08  07A4               	addwf	EWH_getAvrgTempReading@i,f
  8456  0A09                     i1l3034:
  8457  0A09  0877               	movf	EWH_getAvrgTempReading@length,w
  8458  0A0A  0224               	subwf	EWH_getAvrgTempReading@i,w
  8459  0A0B  1C03               	skipc
  8460  0A0C  2A0E               	goto	u247_21
  8461  0A0D  2A0F               	goto	u247_20
  8462  0A0E                     u247_21:
  8463  0A0E  29F6               	goto	i1l3030
  8464  0A0F                     u247_20:
  8465  0A0F                     i1l3036:
  8466                           
  8467                           ;EWH.c: 341:     uint8_t averageReading= sumOfReadings/length;
  8468  0A0F  0877               	movf	EWH_getAvrgTempReading@length,w
  8469  0A10  00F8               	movwf	??_EWH_getAvrgTempReading
  8470  0A11  01F9               	clrf	??_EWH_getAvrgTempReading+1
  8471  0A12  0878               	movf	??_EWH_getAvrgTempReading,w
  8472  0A13  00F0               	movwf	___lwdiv@divisor
  8473  0A14  0879               	movf	??_EWH_getAvrgTempReading+1,w
  8474  0A15  00F1               	movwf	___lwdiv@divisor+1
  8475  0A16  0821               	movf	EWH_getAvrgTempReading@sumOfReadings+1,w
  8476  0A17  00F3               	movwf	___lwdiv@dividend+1
  8477  0A18  0820               	movf	EWH_getAvrgTempReading@sumOfReadings,w
  8478  0A19  00F2               	movwf	___lwdiv@dividend
  8479  0A1A  120A  158A  2313  120A  158A  	fcall	___lwdiv
  8480  0A1F  0870               	movf	?___lwdiv,w
  8481  0A20  00FF               	movwf	btemp+1
  8482  0A21  087F               	movf	btemp+1,w
  8483  0A22  1283               	bcf	3,5	;RP0=0, select bank0
  8484  0A23  1303               	bcf	3,6	;RP1=0, select bank0
  8485  0A24  00A2               	movwf	EWH_getAvrgTempReading@averageReading
  8486  0A25                     i1l3038:
  8487                           
  8488                           ;EWH.c: 342:     return averageReading;
  8489  0A25  0822               	movf	EWH_getAvrgTempReading@averageReading,w
  8490  0A26                     i1l546:
  8491  0A26  0008               	return
  8492  0A27                     __end_of_EWH_getAvrgTempReading:
  8493                           
  8494                           	psect	text48
  8495  0B13                     __ptext48:	
  8496 ;; *************** function ___lwdiv *****************
  8497 ;; Defined at:
  8498 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  8499 ;; Parameters:    Size  Location     Type
  8500 ;;  divisor         2    0[COMMON] unsigned int 
  8501 ;;  dividend        2    2[COMMON] unsigned int 
  8502 ;; Auto vars:     Size  Location     Type
  8503 ;;  quotient        2    4[COMMON] unsigned int 
  8504 ;;  counter         1    6[COMMON] unsigned char 
  8505 ;; Return value:  Size  Location     Type
  8506 ;;                  2    0[COMMON] unsigned int 
  8507 ;; Registers used:
  8508 ;;		wreg, status,2, status,0, btemp+1
  8509 ;; Tracked objects:
  8510 ;;		On entry : 0/0
  8511 ;;		On exit  : 0/0
  8512 ;;		Unchanged: 0/0
  8513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8514 ;;      Params:         4       0       0       0       0
  8515 ;;      Locals:         3       0       0       0       0
  8516 ;;      Temps:          0       0       0       0       0
  8517 ;;      Totals:         7       0       0       0       0
  8518 ;;Total ram usage:        7 bytes
  8519 ;; Hardware stack levels used:    1
  8520 ;; This function calls:
  8521 ;;		Nothing
  8522 ;; This function is called by:
  8523 ;;		_EWH_getAvrgTempReading
  8524 ;; This function uses a non-reentrant model
  8525 ;;
  8526                           
  8527                           
  8528                           ;psect for function ___lwdiv
  8529  0B13                     ___lwdiv:
  8530  0B13                     i1l2776:	
  8531                           ;incstack = 0
  8532 ;; hardware stack exceeded
  8533                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  8534                           
  8535  0B13  01F4               	clrf	___lwdiv@quotient
  8536  0B14  01F5               	clrf	___lwdiv@quotient+1
  8537  0B15                     i1l2778:
  8538  0B15  0870               	movf	___lwdiv@divisor,w
  8539  0B16  0471               	iorwf	___lwdiv@divisor+1,w
  8540  0B17  1903               	btfsc	3,2
  8541  0B18  2B1A               	goto	u223_21
  8542  0B19  2B1B               	goto	u223_20
  8543  0B1A                     u223_21:
  8544  0B1A  2B52               	goto	i1l2798
  8545  0B1B                     u223_20:
  8546  0B1B                     i1l2780:
  8547  0B1B  01F6               	clrf	___lwdiv@counter
  8548  0B1C  0AF6               	incf	___lwdiv@counter,f
  8549  0B1D  2B29               	goto	i1l2786
  8550  0B1E                     i1l2782:
  8551  0B1E  3001               	movlw	1
  8552  0B1F                     u224_25:
  8553  0B1F  1003               	clrc
  8554  0B20  0DF0               	rlf	___lwdiv@divisor,f
  8555  0B21  0DF1               	rlf	___lwdiv@divisor+1,f
  8556  0B22  3EFF               	addlw	-1
  8557  0B23  1D03               	skipz
  8558  0B24  2B1F               	goto	u224_25
  8559  0B25                     i1l2784:
  8560  0B25  3001               	movlw	1
  8561  0B26  00FF               	movwf	btemp+1
  8562  0B27  087F               	movf	btemp+1,w
  8563  0B28  07F6               	addwf	___lwdiv@counter,f
  8564  0B29                     i1l2786:
  8565  0B29  1FF1               	btfss	___lwdiv@divisor+1,7
  8566  0B2A  2B2C               	goto	u225_21
  8567  0B2B  2B2D               	goto	u225_20
  8568  0B2C                     u225_21:
  8569  0B2C  2B1E               	goto	i1l2782
  8570  0B2D                     u225_20:
  8571  0B2D                     i1l2788:
  8572  0B2D  3001               	movlw	1
  8573  0B2E                     u226_25:
  8574  0B2E  1003               	clrc
  8575  0B2F  0DF4               	rlf	___lwdiv@quotient,f
  8576  0B30  0DF5               	rlf	___lwdiv@quotient+1,f
  8577  0B31  3EFF               	addlw	-1
  8578  0B32  1D03               	skipz
  8579  0B33  2B2E               	goto	u226_25
  8580  0B34  0871               	movf	___lwdiv@divisor+1,w
  8581  0B35  0273               	subwf	___lwdiv@dividend+1,w
  8582  0B36  1D03               	skipz
  8583  0B37  2B3A               	goto	u227_25
  8584  0B38  0870               	movf	___lwdiv@divisor,w
  8585  0B39  0272               	subwf	___lwdiv@dividend,w
  8586  0B3A                     u227_25:
  8587  0B3A  1C03               	skipc
  8588  0B3B  2B3D               	goto	u227_21
  8589  0B3C  2B3E               	goto	u227_20
  8590  0B3D                     u227_21:
  8591  0B3D  2B45               	goto	i1l2794
  8592  0B3E                     u227_20:
  8593  0B3E                     i1l2790:
  8594  0B3E  0870               	movf	___lwdiv@divisor,w
  8595  0B3F  02F2               	subwf	___lwdiv@dividend,f
  8596  0B40  0871               	movf	___lwdiv@divisor+1,w
  8597  0B41  1C03               	skipc
  8598  0B42  03F3               	decf	___lwdiv@dividend+1,f
  8599  0B43  02F3               	subwf	___lwdiv@dividend+1,f
  8600  0B44                     i1l2792:
  8601  0B44  1474               	bsf	___lwdiv@quotient,0
  8602  0B45                     i1l2794:
  8603  0B45  3001               	movlw	1
  8604  0B46                     u228_25:
  8605  0B46  1003               	clrc
  8606  0B47  0CF1               	rrf	___lwdiv@divisor+1,f
  8607  0B48  0CF0               	rrf	___lwdiv@divisor,f
  8608  0B49  3EFF               	addlw	-1
  8609  0B4A  1D03               	skipz
  8610  0B4B  2B46               	goto	u228_25
  8611  0B4C                     i1l2796:
  8612  0B4C  3001               	movlw	1
  8613  0B4D  02F6               	subwf	___lwdiv@counter,f
  8614  0B4E  1D03               	btfss	3,2
  8615  0B4F  2B51               	goto	u229_21
  8616  0B50  2B52               	goto	u229_20
  8617  0B51                     u229_21:
  8618  0B51  2B2D               	goto	i1l2788
  8619  0B52                     u229_20:
  8620  0B52                     i1l2798:
  8621  0B52  0875               	movf	___lwdiv@quotient+1,w
  8622  0B53  00F1               	movwf	?___lwdiv+1
  8623  0B54  0874               	movf	___lwdiv@quotient,w
  8624  0B55  00F0               	movwf	?___lwdiv
  8625  0B56                     i1l996:
  8626  0B56  0008               	return
  8627  0B57                     __end_of___lwdiv:
  8628                           
  8629                           	psect	text49
  8630  0991                     __ptext49:	
  8631 ;; *************** function _ADC_ReadChannel *****************
  8632 ;; Defined at:
  8633 ;;		line 69 in file "adc.c"
  8634 ;; Parameters:    Size  Location     Type
  8635 ;;  channel         1    wreg     enum E869
  8636 ;; Auto vars:     Size  Location     Type
  8637 ;;  channel         1    5[COMMON] enum E869
  8638 ;;  result          2    3[COMMON] unsigned short 
  8639 ;; Return value:  Size  Location     Type
  8640 ;;                  2    0[COMMON] unsigned short 
  8641 ;; Registers used:
  8642 ;;		wreg, status,2, status,0, btemp+1
  8643 ;; Tracked objects:
  8644 ;;		On entry : 0/0
  8645 ;;		On exit  : 0/0
  8646 ;;		Unchanged: 0/0
  8647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8648 ;;      Params:         2       0       0       0       0
  8649 ;;      Locals:         3       0       0       0       0
  8650 ;;      Temps:          1       0       0       0       0
  8651 ;;      Totals:         6       0       0       0       0
  8652 ;;Total ram usage:        6 bytes
  8653 ;; Hardware stack levels used:    1
  8654 ;; This function calls:
  8655 ;;		Nothing
  8656 ;; This function is called by:
  8657 ;;		_EWH_TempUpdate
  8658 ;; This function uses a non-reentrant model
  8659 ;;
  8660                           
  8661                           
  8662                           ;psect for function _ADC_ReadChannel
  8663  0991                     _ADC_ReadChannel:
  8664                           
  8665                           ;incstack = 0
  8666 ;; hardware stack exceeded
  8667                           ; Regs used in _ADC_ReadChannel: [wreg+status,2+status,0+btemp+1]
  8668                           ;ADC_ReadChannel@channel stored from wreg
  8669  0991  00F5               	movwf	ADC_ReadChannel@channel
  8670  0992                     i1l2948:
  8671                           
  8672                           ;adc.c: 69: uint16_t ADC_ReadChannel(tADC_Channel_Select channel);adc.c: 70: {;adc.c: 72
      +                          :     ADCON0 &= ~(7<<3);
  8673  0992  30C7               	movlw	199
  8674  0993  00FF               	movwf	btemp+1
  8675  0994  087F               	movf	btemp+1,w
  8676  0995  1283               	bcf	3,5	;RP0=0, select bank0
  8677  0996  1303               	bcf	3,6	;RP1=0, select bank0
  8678  0997  059F               	andwf	31,f	;volatile
  8679                           
  8680                           ;adc.c: 75:     ADCON0 |= ((channel)<<3);
  8681  0998  0875               	movf	ADC_ReadChannel@channel,w	;volatile
  8682  0999  00F2               	movwf	??_ADC_ReadChannel
  8683  099A  3002               	movlw	2
  8684  099B                     u245_25:
  8685  099B  1003               	clrc
  8686  099C  0DF2               	rlf	??_ADC_ReadChannel,f
  8687  099D  3EFF               	addlw	-1
  8688  099E  1D03               	skipz
  8689  099F  299B               	goto	u245_25
  8690  09A0  1003               	clrc
  8691  09A1  0D72               	rlf	??_ADC_ReadChannel,w
  8692  09A2  00FF               	movwf	btemp+1
  8693  09A3  087F               	movf	btemp+1,w
  8694  09A4  049F               	iorwf	31,f	;volatile
  8695  09A5                     i1l2950:
  8696                           
  8697                           ;adc.c: 78:     _delay((unsigned long)((30)*(4000000/4000000.0)));
  8698  09A5  3009               	movlw	9
  8699  09A6  00F2               	movwf	??_ADC_ReadChannel
  8700  09A7                     u390_27:
  8701  09A7  0BF2               	decfsz	??_ADC_ReadChannel,f
  8702  09A8  29A7               	goto	u390_27
  8703  09A9  29AA               	nop2
  8704  09AA                     i1l2952:
  8705                           
  8706                           ;adc.c: 81:     (ADCON0|=(1<<2));
  8707  09AA  1283               	bcf	3,5	;RP0=0, select bank0
  8708  09AB  1303               	bcf	3,6	;RP1=0, select bank0
  8709  09AC  151F               	bsf	31,2	;volatile
  8710  09AD                     i1l280:	
  8711                           ;adc.c: 84:     while((ADCON0 & (1<<2)));
  8712                           
  8713  09AD  191F               	btfsc	31,2	;volatile
  8714  09AE  29B0               	goto	u246_21
  8715  09AF  29B1               	goto	u246_20
  8716  09B0                     u246_21:
  8717  09B0  29AD               	goto	i1l280
  8718  09B1                     u246_20:
  8719  09B1                     i1l2954:
  8720                           
  8721                           ;adc.c: 87:     uint16_t result =((ADRESH<<8) + ADRESL) ;
  8722  09B1  081E               	movf	30,w	;volatile
  8723  09B2  00F4               	movwf	ADC_ReadChannel@result+1
  8724  09B3  1683               	bsf	3,5	;RP0=1, select bank1
  8725  09B4  1303               	bcf	3,6	;RP1=0, select bank1
  8726  09B5  081E               	movf	30,w	;volatile
  8727  09B6  00F3               	movwf	ADC_ReadChannel@result
  8728                           
  8729                           ;adc.c: 89:     return result;
  8730  09B7  0874               	movf	ADC_ReadChannel@result+1,w
  8731  09B8  00F1               	movwf	?_ADC_ReadChannel+1
  8732  09B9  0873               	movf	ADC_ReadChannel@result,w
  8733  09BA  00F0               	movwf	?_ADC_ReadChannel
  8734  09BB                     i1l283:
  8735  09BB  0008               	return
  8736  09BC                     __end_of_ADC_ReadChannel:
  8737                           
  8738                           	psect	text50
  8739  0AD6                     __ptext50:	
  8740 ;; *************** function _DD_GetState *****************
  8741 ;; Defined at:
  8742 ;;		line 50 in file "DD.c"
  8743 ;; Parameters:    Size  Location     Type
  8744 ;;  device          1    wreg     enum E882
  8745 ;; Auto vars:     Size  Location     Type
  8746 ;;  device          1    2[COMMON] enum E882
  8747 ;; Return value:  Size  Location     Type
  8748 ;;                  1    wreg      enum E13
  8749 ;; Registers used:
  8750 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8751 ;; Tracked objects:
  8752 ;;		On entry : 0/0
  8753 ;;		On exit  : 0/0
  8754 ;;		Unchanged: 0/0
  8755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8756 ;;      Params:         0       0       0       0       0
  8757 ;;      Locals:         1       0       0       0       0
  8758 ;;      Temps:          2       0       0       0       0
  8759 ;;      Totals:         3       0       0       0       0
  8760 ;;Total ram usage:        3 bytes
  8761 ;; Hardware stack levels used:    1
  8762 ;; This function calls:
  8763 ;;		Nothing
  8764 ;; This function is called by:
  8765 ;;		_ISR
  8766 ;; This function uses a non-reentrant model
  8767 ;;
  8768                           
  8769                           
  8770                           ;psect for function _DD_GetState
  8771  0AD6                     _DD_GetState:
  8772                           
  8773                           ;incstack = 0
  8774                           ; Regs used in _DD_GetState: [wreg-fsr0h+status,2+status,0]
  8775                           ;DD_GetState@device stored from wreg
  8776  0AD6  00F2               	movwf	DD_GetState@device
  8777  0AD7                     i1l3504:
  8778                           
  8779                           ;DD.c: 50: tState DD_GetState(tDD device);DD.c: 51: {;DD.c: 52:     switch(device)
  8780  0AD7  2AFF               	goto	i1l3526
  8781  0AD8                     i1l3506:
  8782                           
  8783                           ;DD.c: 55:             return ((PORTC & (1<<5)) >> 5);
  8784  0AD8  1283               	bcf	3,5	;RP0=0, select bank0
  8785  0AD9  1303               	bcf	3,6	;RP1=0, select bank0
  8786  0ADA  0807               	movf	7,w	;volatile
  8787  0ADB  00F0               	movwf	??_DD_GetState
  8788  0ADC  3005               	movlw	5
  8789  0ADD                     u356_25:
  8790  0ADD  1003               	clrc
  8791  0ADE  0CF0               	rrf	??_DD_GetState,f
  8792  0ADF  3EFF               	addlw	-1
  8793  0AE0  1D03               	skipz
  8794  0AE1  2ADD               	goto	u356_25
  8795  0AE2  0870               	movf	??_DD_GetState,w
  8796  0AE3  3901               	andlw	1
  8797  0AE4  2B12               	goto	i1l239
  8798  0AE5                     i1l3512:
  8799                           
  8800                           ;DD.c: 58:             return ((PORTC & (1<<2)) >> 2);
  8801  0AE5  1283               	bcf	3,5	;RP0=0, select bank0
  8802  0AE6  1303               	bcf	3,6	;RP1=0, select bank0
  8803  0AE7  0807               	movf	7,w	;volatile
  8804  0AE8  00F0               	movwf	??_DD_GetState
  8805  0AE9  3002               	movlw	2
  8806  0AEA                     u357_25:
  8807  0AEA  1003               	clrc
  8808  0AEB  0CF0               	rrf	??_DD_GetState,f
  8809  0AEC  3EFF               	addlw	-1
  8810  0AED  1D03               	skipz
  8811  0AEE  2AEA               	goto	u357_25
  8812  0AEF  0870               	movf	??_DD_GetState,w
  8813  0AF0  3901               	andlw	1
  8814  0AF1  2B12               	goto	i1l239
  8815  0AF2                     i1l3518:
  8816                           
  8817                           ;DD.c: 61:             return ((PORTB & (1<<7)) >> 7);
  8818  0AF2  1283               	bcf	3,5	;RP0=0, select bank0
  8819  0AF3  1303               	bcf	3,6	;RP1=0, select bank0
  8820  0AF4  0806               	movf	6,w	;volatile
  8821  0AF5  00F0               	movwf	??_DD_GetState
  8822  0AF6  3007               	movlw	7
  8823  0AF7                     u358_25:
  8824  0AF7  1003               	clrc
  8825  0AF8  0CF0               	rrf	??_DD_GetState,f
  8826  0AF9  3EFF               	addlw	-1
  8827  0AFA  1D03               	skipz
  8828  0AFB  2AF7               	goto	u358_25
  8829  0AFC  0870               	movf	??_DD_GetState,w
  8830  0AFD  3901               	andlw	1
  8831  0AFE  2B12               	goto	i1l239
  8832  0AFF                     i1l3526:
  8833  0AFF  0872               	movf	DD_GetState@device,w
  8834  0B00  00F0               	movwf	??_DD_GetState
  8835  0B01  01F1               	clrf	??_DD_GetState+1
  8836                           
  8837                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8838                           ; Switch size 1, requested type "simple"
  8839                           ; Number of cases is 1, Range of values is 0 to 0
  8840                           ; switch strategies available:
  8841                           ; Name         Instructions Cycles
  8842                           ; simple_byte            4     3 (average)
  8843                           ; direct_byte           11     8 (fixed)
  8844                           ; jumptable            260     6 (fixed)
  8845                           ;	Chosen strategy is simple_byte
  8846  0B02  0871               	movf	??_DD_GetState+1,w
  8847  0B03  3A00               	xorlw	0	; case 0
  8848  0B04  1903               	skipnz
  8849  0B05  2B07               	goto	i1l3902
  8850  0B06  2B12               	goto	i1l239
  8851  0B07                     i1l3902:
  8852                           
  8853                           ; Switch size 1, requested type "simple"
  8854                           ; Number of cases is 3, Range of values is 0 to 2
  8855                           ; switch strategies available:
  8856                           ; Name         Instructions Cycles
  8857                           ; simple_byte           10     6 (average)
  8858                           ; direct_byte           17     8 (fixed)
  8859                           ; jumptable            260     6 (fixed)
  8860                           ;	Chosen strategy is simple_byte
  8861  0B07  0870               	movf	??_DD_GetState,w
  8862  0B08  3A00               	xorlw	0	; case 0
  8863  0B09  1903               	skipnz
  8864  0B0A  2AD8               	goto	i1l3506
  8865  0B0B  3A01               	xorlw	1	; case 1
  8866  0B0C  1903               	skipnz
  8867  0B0D  2AE5               	goto	i1l3512
  8868  0B0E  3A03               	xorlw	3	; case 2
  8869  0B0F  1903               	skipnz
  8870  0B10  2AF2               	goto	i1l3518
  8871  0B11  2B12               	goto	i1l239
  8872  0B12                     i1l239:
  8873  0B12  0008               	return
  8874  0B13                     __end_of_DD_GetState:
  8875  007E                     btemp	set	126	;btemp
  8876  007E                     wtemp0	set	126
  8877                           
  8878                           	psect	config
  8879                           
  8880                           ;Config register CONFIG @ 0x2007
  8881                           ;	Oscillator Selection bits
  8882                           ;	FOSC = XT, XT oscillator
  8883                           ;	Watchdog Timer Enable bit
  8884                           ;	WDTE = OFF, WDT disabled
  8885                           ;	Power-up Timer Enable bit
  8886                           ;	PWRTE = ON, PWRT enabled
  8887                           ;	Brown-out Reset Enable bit
  8888                           ;	BOREN = ON, BOR enabled
  8889                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  8890                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  8891                           ;	Data EEPROM Memory Code Protection bit
  8892                           ;	CPD = OFF, Data EEPROM code protection off
  8893                           ;	Flash Program Memory Write Enable bits
  8894                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  8895                           ;	In-Circuit Debugger Mode bit
  8896                           ;	DEBUG = 0x1, unprogrammed default
  8897                           ;	Flash Program Memory Code Protection bit
  8898                           ;	CP = OFF, Code protection off
  8899  2007                     	org	8199
  8900  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     44      64
    BANK1            80     29      52
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    EWH_getAvrgTempReading@buffer	PTR unsigned char  size(1) Largest target is 10
		 -> ReadingBuffer(BANK0[10]), 

    TMR1_Init@config	PTR struct . size(1) Largest target is 2
		 -> EWH_Init@TMR1_cfg(BANK1[2]), 

    ADC_Init@config	PTR struct . size(1) Largest target is 4
		 -> EWH_Init@adc_config(BANK1[4]), 

    I2C_Init@i2c_config	PTR struct . size(1) Largest target is 6
		 -> EWH_Init@i2c_config(BANK1[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _EWH_TempUpdate->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    _EWH_getAvrgTempReading->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_EWH_TempUpdate
    _EWH_TempUpdate->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    _main->_EWH_Init
    _EWH_WakeUP_Mode->_EWH_SSD_Update
    _EWH_EEPROM_Read->_EEPROM_ReadByte
    _EEPROM_ReadByte->_I2C_Master_ReadByte
    _EWH_SetTemp_Mode->_EWH_SSD_Update
    _EWH_SSD_OFF->_SSD_OFF
    _EWH_EEPROM_Update->_EEPROM_WriteByte
    _EWH_Operating_Mode->_EWH_SSD_Update
    _EWH_SSD_Update->_SSD_Write
    _SSD_Write->___awdiv
    _SSD_OFF->_SSD_config
    _EWH_Init->_I2C_Init
    _I2C_Init->___lldiv
    _EWH_EEPROM_Init->_EEPROM_WriteByte
    _EEPROM_WriteByte->_I2C_Master_WriteByte

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   11773
                                             27 BANK1      2     2      0
                           _EWH_Init
                 _EWH_Operating_Mode
                   _EWH_SetTemp_Mode
                     _EWH_Sleep_Mode
                    _EWH_WakeUP_Mode
 ---------------------------------------------------------------------------------
 (1) _EWH_WakeUP_Mode                                      2     2      0    2357
                                             14 BANK1      2     2      0
                     _EWH_ClearEvent
                    _EWH_EEPROM_Read
                     _EWH_SSD_Update
                        _EWH_SetMode
 ---------------------------------------------------------------------------------
 (2) _EWH_EEPROM_Read                                      0     0      0     210
                    _EEPROM_ReadByte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_ReadByte                                      5     3      2     210
                                              2 BANK1      5     3      2
                _I2C_Master_ReadByte
      _I2C_Master_Send_RepeatedStart
              _I2C_Master_Send_Start
               _I2C_Master_Send_Stop
               _I2C_Master_WriteByte
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_ReadByte                                  2     2      0      23
                                              0 BANK1      2     2      0
                _I2C_Master_Send_ACK
               _I2C_Master_Send_NACK
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Send_NACK                                 0     0      0       0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Send_ACK                                  0     0      0       0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (1) _EWH_Sleep_Mode                                       0     0      0    1296
                        _DD_SetState
                     _EWH_ClearEvent
                        _EWH_SSD_OFF
                          _TMR1_Stop
 ---------------------------------------------------------------------------------
 (1) _EWH_SetTemp_Mode                                     2     2      0    3835
                                             14 BANK1      2     2      0
                        _DD_SetState
                     _EWH_ClearEvent
                  _EWH_EEPROM_Update
                        _EWH_SSD_OFF
                     _EWH_SSD_Update
                        _EWH_SetMode
                         _TMR1_Start
 ---------------------------------------------------------------------------------
 (2) _EWH_SSD_OFF                                          0     0      0     360
                            _SSD_OFF
 ---------------------------------------------------------------------------------
 (2) _EWH_EEPROM_Update                                    1     1      0     414
                                              6 BANK1      1     1      0
                   _EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (1) _EWH_Operating_Mode                                   3     3      0    3083
                                             14 BANK1      3     3      0
                        _DD_SetState
                     _EWH_ClearEvent
                     _EWH_SSD_Update
                       _EWH_SetEvent
                        _EWH_SetMode
                         _TMR1_Start
                          _TMR1_Stop
 ---------------------------------------------------------------------------------
 (2) _TMR1_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EWH_SetMode                                          1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EWH_SetEvent                                         1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EWH_SSD_Update                                       4     2      2    2103
                                             10 BANK1      4     2      2
                            _SSD_OFF
                          _SSD_Write
                            ___awdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     311
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (3) _SSD_Write                                            2     1      1     556
                                              8 BANK1      2     1      1
                         _SSD_config
                            ___awdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _SSD_OFF                                              1     1      0     360
                                              4 BANK1      1     1      0
                         _SSD_config
 ---------------------------------------------------------------------------------
 (4) _SSD_config                                           4     3      1     338
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (2) _EWH_ClearEvent                                       1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _DD_SetState                                          4     3      1     914
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (1) _EWH_Init                                            12    12      0    1202
                                             15 BANK1     12    12      0
                           _ADC_Init
                            _DD_Init
                    _EWH_EEPROM_Init
                           _I2C_Init
                            _SW_Init
                          _TMR1_Init
 ---------------------------------------------------------------------------------
 (2) _TMR1_Init                                            3     3      0      77
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _SW_Init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             1     1      0     413
                                             14 BANK1      1     1      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (2) _EWH_EEPROM_Init                                      0     0      0     392
                   _EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_WriteByte                                     5     2      3     392
                                              1 BANK1      5     2      3
      _I2C_Master_Send_RepeatedStart
              _I2C_Master_Send_Start
               _I2C_Master_Send_Stop
               _I2C_Master_WriteByte
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_WriteByte                                 1     1      0      22
                                              0 BANK1      1     1      0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Send_Stop                                 0     0      0       0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Send_Start                                0     0      0       0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Send_RepeatedStart                        0     0      0       0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (5) _I2C_Wait_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DD_Init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             3     3      0      99
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  4     4      0    4284
                                             40 BANK0      4     4      0
                        _DD_GetState
                     _EWH_TempUpdate
                     i1_EWH_SetEvent
                      i1_EWH_SetMode
 ---------------------------------------------------------------------------------
 (8) i1_EWH_SetMode                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) i1_EWH_SetEvent                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _EWH_TempUpdate                                       4     4      0    4218
                                             36 BANK0      4     4      0
                    _ADC_ReadChannel
             _EWH_getAvrgTempReading
                            ___awmod
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (9) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (9) ___fltol                                             10     6      4     305
                                             26 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (9) ___flmul                                             26    18      8    2417
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (10) __Umul8_16                                           9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     448
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) _EWH_getAvrgTempReading                               9     8      1     582
                                              7 COMMON     4     3      1
                                              0 BANK0      5     5      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (10) ___lwdiv                                             7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (9) _ADC_ReadChannel                                      6     4      2      45
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (8) _DD_GetState                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EWH_Init
     _ADC_Init
     _DD_Init
     _EWH_EEPROM_Init
       _EEPROM_WriteByte
         _I2C_Master_Send_RepeatedStart
           _I2C_Wait_IDLE
         _I2C_Master_Send_Start
           _I2C_Wait_IDLE
         _I2C_Master_Send_Stop
           _I2C_Wait_IDLE
         _I2C_Master_WriteByte
           _I2C_Wait_IDLE
     _I2C_Init
       ___lldiv
     _SW_Init
     _TMR1_Init
   _EWH_Operating_Mode
     _DD_SetState
     _EWH_ClearEvent
     _EWH_SSD_Update
       _SSD_OFF
         _SSD_config
       _SSD_Write
         _SSD_config
         ___awdiv (ARG)
         ___lwmod (ARG)
       ___awdiv
       ___lwmod
     _EWH_SetEvent
     _EWH_SetMode
     _TMR1_Start
     _TMR1_Stop
   _EWH_SetTemp_Mode
     _DD_SetState
     _EWH_ClearEvent
     _EWH_EEPROM_Update
       _EEPROM_WriteByte
         _I2C_Master_Send_RepeatedStart
           _I2C_Wait_IDLE
         _I2C_Master_Send_Start
           _I2C_Wait_IDLE
         _I2C_Master_Send_Stop
           _I2C_Wait_IDLE
         _I2C_Master_WriteByte
           _I2C_Wait_IDLE
     _EWH_SSD_OFF
       _SSD_OFF
         _SSD_config
     _EWH_SSD_Update
       _SSD_OFF
         _SSD_config
       _SSD_Write
         _SSD_config
         ___awdiv (ARG)
         ___lwmod (ARG)
       ___awdiv
       ___lwmod
     _EWH_SetMode
     _TMR1_Start
   _EWH_Sleep_Mode
     _DD_SetState
     _EWH_ClearEvent
     _EWH_SSD_OFF
       _SSD_OFF
         _SSD_config
     _TMR1_Stop
   _EWH_WakeUP_Mode
     _EWH_ClearEvent
     _EWH_EEPROM_Read
       _EEPROM_ReadByte
         _I2C_Master_ReadByte
           _I2C_Master_Send_ACK
             _I2C_Wait_IDLE
           _I2C_Master_Send_NACK
             _I2C_Wait_IDLE
           _I2C_Wait_IDLE
         _I2C_Master_Send_RepeatedStart
           _I2C_Wait_IDLE
         _I2C_Master_Send_Start
           _I2C_Wait_IDLE
         _I2C_Master_Send_Stop
           _I2C_Wait_IDLE
         _I2C_Master_WriteByte
           _I2C_Wait_IDLE
     _EWH_SSD_Update
       _SSD_OFF
         _SSD_config
       _SSD_Write
         _SSD_config
         ___awdiv (ARG)
         ___lwmod (ARG)
       ___awdiv
       ___lwmod
     _EWH_SetMode

 _ISR (ROOT)
   _DD_GetState
   _EWH_TempUpdate
     _ADC_ReadChannel
     _EWH_getAvrgTempReading
       ___lwdiv
     ___awmod
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   i1_EWH_SetEvent
   i1_EWH_SetMode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1D      34       7       65.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2C      40       5       80.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      82      12        0.0%
ABS                  0      0      82       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Jul 13 03:31:57 2020

                          ?_DD_SetState 00A0                                       pc 0002  
                                    l13 0A6A                                      l31 0D3C  
                                    l16 0A99            __size_of_I2C_Master_ReadByte 0029  
                                    l28 0CED                                      l91 088B  
                                    l94 0897                                      l88 0BE4  
                                    l97 0830                            ___awdiv@sign 00A5  
                                    fsr 0004                              _SSD_config 0E0E  
          __size_of_I2C_Master_Send_ACK 000A                     __Umul8_16@word_mpld 0076  
                 _I2C_Master_Send_Start 0828                                     l100 0839  
                                   l103 0827                                     l112 0931  
                                   l120 0990                                     l114 0935  
                                   l106 085F                                     l115 0940  
                                   l213 0905                                     l109 0869  
                                   l311 0BE9                                     l320 0C2E  
                                   l313 0BEE                                     l314 0BF3  
                                   l234 0CE1                                     l315 0BF8  
                                   l323 08C4                                     l317 0C16  
                                   l270 0F07                                     l326 0806  
                                   l510 04B6                                     l319 0C18  
                                   l273 0F1C                                     l513 0B9A  
                                   l274 0F23                                     l522 084B  
                                   l531 088A                                     l540 07FF  
                                   l516 0816                                     l277 0F72  
                                   l269 0F03                                     l525 08B4  
                                   l357 0842                                     l631 0922  
                                   l519 0855                                     l528 08D5  
                                   l480 07A3                                     l537 08A4  
                                   l627 0E78                                     l635 087E  
                                   l467 09EE                                     l495 05A7  
                                   l760 0DA4                                     l877 0E0D  
                                   _GIE 005F                                     _PEN 048A  
                                   _ISR 0662                                     _SEN 0488  
                                   fsr0 0004                                     indf 0000  
                          ___awmod@sign 0075                         TMR1_Init@config 00A2  
            __size_of_EWH_EEPROM_Update 0011                      I2C_Init@i2c_config 00AE  
                          ___flmul@aexp 0032                            ___flmul@bexp 0033  
                          ___flmul@sign 002D                            ___flmul@temp 0038  
                          ___flmul@prod 0034           __size_of_I2C_Master_Send_NACK 000A  
                       __end_of_DD_Init 0906                                    ?_ISR 0070  
                          ___fltol@exp1 0043                                    l1006 0AD5  
                                  l3000 0841                                    l3002 0846  
                                  l3010 07A4                                    l3012 07C5  
                                  l3020 0812                                    l3004 0898  
                                  l3014 07D0                                    l3022 08C8  
                                  l3006 087F                                    l3016 07D6  
                                  l3024 084F                                    l3026 08A5  
                                  l3018 07F4                                    l3310 0B5D  
                                  l2600 0831                                    l3320 0B6F  
                                  l3312 0B5F                                    l3400 0411  
                                  l2602 0836                                    l3330 0B8B  
                                  l3322 0B70                                    l3314 0B65  
                                  l3410 043C                                    l3402 0416  
                                  l2610 097B                                    l3332 0B90  
                                  l3324 0B76                                    l3316 0B69  
                                  l3308 0B57                                    l2620 0E11  
                                  l2700 091A                                    l3420 0461  
                                  l3412 0442                                    l3404 0421  
                                  l3500 059E                                    l3340 09C7  
                                  l2612 0982                                    l2604 096B  
                                  l2710 0D52                                    l3334 0B95  
                                  l3326 0B80                                    l3318 0B6D  
                                  l2630 0E1F                                    l3430 048D  
                                  l3422 046C                                    l3414 0445  
                                  l3406 0431                                    l3502 05A1  
                                  l3342 09D0                                    l2614 0988  
                                  l2606 0970                                    l2720 0D7E  
                                  l2712 0D5B                                    l3328 0B85  
                                  l2640 0E33                                    l2624 0E12  
                                  l3440 04A9                                    l3432 0490  
                                  l3424 047C                                    l3408 0437  
                                  l3416 044C                                    l3344 09D9  
                                  l3336 09BC                                    l2616 098D  
                                  l2608 0978                                    l3360 0738  
                                  l3352 070C                                    l2722 0D8C  
                                  l2714 0D5F                                    l2706 0D3D  
                                  l2650 0E47                                    l2634 0E26  
                                  l2626 0E16                                    l2810 0AB0  
                                  l2802 0A9A                                    l3426 0482  
                                  l3418 045C                                    l3434 0497  
                                  l3450 04D1                                    l3442 04B7  
                                  l3346 09E2                                    l3338 09C2  
                                  l2570 0856                                    l3370 076D  
                                  l3362 0743                                    l3354 0712  
                                  l2724 0D8D                                    l2716 0D63  
                                  l2708 0D4F                                    l2900 0CAB  
                                  l2660 0E5B                                    l2644 0E3A  
                                  l2636 0E2A                                    l2628 0E1B  
                                  l2740 0DB3                                    l2732 0DA5  
                                  l2812 0AB4                                    l2804 0AA2  
                                  l2820 0AD1                                    l3436 049C  
                                  l3428 0487                                    l3460 0509  
                                  l3452 04DA                                    l3444 04BC  
                                  l3348 09E7                                    l2572 085B  
                                  l2580 0868                                    l3380 0797  
                                  l3372 0778                                    l3364 0753  
                                  l3356 071C                                    l2566 088B  
                                  l2582 0828                                    l2590 0926  
                                  l2726 0D96                                    l2718 0D6C  
                                  l2910 0CC7                                    l2902 0CB1  
                                  l2654 0E4E                                    l2646 0E3E  
                                  l2638 0E2F                                    l2750 0DC8  
                                  l2742 0DB7                                    l2734 0DA8  
                                  l2814 0ABE                                    l2806 0AA5  
                                  l3438 04A2                                    l3390 03B2  
                                  l3470 0537                                    l3462 0519  
                                  l3454 04E8                                    l3446 04BF  
                                  l2574 085E                                    l3382 079D  
                                  l3374 0788                                    l3366 0756  
                                  l3358 0728                                    l2568 0891  
                                  l2584 082D                                    l2592 092B  
                                  l2672 0A5F                                    l2728 0D9C  
                                  l2840 0BA0                                    l2904 0CB8  
                                  l2656 0E52                                    l2648 0E43  
                                  l2664 0E62                                    l2760 0DEB  
                                  l2752 0DCB                                    l2744 0DBC  
                                  l2736 0DAC                                    l2816 0AC4  
                                  l2808 0AAC                                    l3392 03C4  
                                  l3384 0398                                    l3480 055C  
                                  l3472 0542                                    l3464 051D  
                                  l3456 04F8                                    l3448 04C8  
                                  l2576 0860                                    l2680 0CE8  
                                  l3376 078B                                    l3368 075D  
                                  l2930 0F18                                    l2922 0EF8  
                                  l2586 081F                                    l2594 0936  
                                  l2674 0A65                                    l2842 0BA9  
                                  l2906 0CBD                                    l2914 0CCE  
                                  l2658 0E57                                    l2770 0E04  
                                  l2762 0DF1                                    l2754 0DD2  
                                  l2746 0DC0                                    l2738 0DB1  
                                  l2818 0ACB                                    l3394 03D8  
                                  l3386 039D                                    l3490 0581  
                                  l3482 0569                                    l3474 0552  
                                  l3458 04FE                                    l3466 0521  
                                  l2578 0865                                    l2682 0D07  
                                  l3378 0792                                    l2940 0F6A  
                                  l3900 0F38                                    l2924 0EFC  
                                  l2932 0F2A                                    l2860 08E9  
                                  l2588 0824                                    l2596 093B  
                                  l2676 0A84                                    l2852 0BD2  
                                  l2844 0BCA                                    l2908 0CC1  
                                  l2692 0877                                    l2772 0E09  
                                  l2764 0DF2                                    l2756 0DD6  
                                  l2748 0DC2                                    l3396 03EE  
                                  l3388 03AB                                    l3492 0588  
                                  l3484 056E                                    l3468 0531  
                                  l2684 0D29                                    l2926 0F0B  
                                  l2934 0F4F                                    l2846 0BCD  
                                  l2838 0B9E                                    l2694 0909  
                                  l2766 0DF9                                    l2758 0DDA  
                                  l3398 0401                                    l3494 058D  
                                  l3486 0575                                    l3478 0555  
                                  l2686 0D34                                    l2678 0CE2  
                                  l3590 0A33                                    l2936 0F61  
                                  l2928 0F12                                    l2880 08FD  
                                  l2872 08F3                                    l2864 08E9  
                                  l2856 0BD3                                    l2848 0BD1  
                                  l2696 0911                                    l2768 0DFF  
                                  l3496 0592                                    l3488 057B  
                                  l2688 0D39                                    l3592 0A39  
                                  l2938 0F63                                    l2858 0BDC  
                                  l2962 0BFD                                    l2890 0C91  
                                  l2698 0914                                    l3498 0598  
                                  l3594 0A3F                                    l3586 0A27  
                                  l2884 0901                                    l2876 08F7  
                                  l2868 08EF                                    l2892 0C95  
                                  l2980 08B5                                    l3588 0A2D  
                                  l2966 0C1A                                    l2958 0BE8  
                                  l2894 0C9B                                    l2886 0C8B  
                                  l2982 0803                                    l3598 0A44  
                                  l2992 083E                                    l2984 083A  
                                  l2896 0CA2                                    l2888 0C8C  
                                  l2898 0CA7                                    l3890 0A4E  
                                  l2996 083F                                    l2988 083D  
                                  l3892 0E6A                                    l2998 0840  
                                  l3894 0CD6                                    _ADIE 0466  
                                  l3896 0C08                                    _ADIF 0066  
                                  l3898 0C26                                    _ADON 00F8  
         __size_of_I2C_Master_Send_Stop 0009                                    _T0CS 040D  
                                  u2010 0A84                                    u2011 0A83  
                                  u2100 0D7E                                    u2005 0A71  
                                  u2101 0D7D                                    u2030 0D07  
                                  u2031 0D06                                    u2120 0D9C  
                                  u2121 0D9B                                    u2105 0D7A  
                                  u2025 0CF4                                    u2050 091A  
                                  u2210 0DFF                                    u2130 0DAC  
                                  u2115 0D8E                                    u2051 0919  
                                  u2211 0DFE                                    u2131 0DAB  
                                  u2060 0D4F                                    u2220 0E04  
                                  u2140 0DB7                                    u2300 0AA2  
                                  u2061 0D4E                                    u2221 0E03  
                                  u2205 0DF3                                    u2141 0DB6  
                                  u2301 0AA1                                    u2045 0D1B  
                                  u2150 0DC8                                    u2151 0DC7  
                                  u2080 0D63                                    u2400 0C91  
                                  u2320 0AB4                                    u3200 0738  
                                  u2081 0D62                                    u2401 0C90  
                                  u2321 0AB3                                    u3201 0737  
                                  u2410 0CA7                                    u2170 0DDA  
                                  u2330 0ABE                                    u2075 0D54  
                                  u2411 0CA6                                    u2171 0DD9  
                                  u2331 0ABD                                    u2315 0AA6  
                                  u2420 0CBD                                    u3300 03EE  
                                  u3220 0753                                    u2421 0CBC  
                                  u2165 0DCC                                    u3301 03ED  
                                  u3221 0752                                    u2190 0DEB  
                                  u2350 0AD1                                    u2095 0D65  
                                  u2191 0DEA                                    u2351 0AD0  
                                  u2335 0ABA                                    u3215 074A  
                                  u2440 0F6A                                    u3400 047C  
                                  u3320 0411                                    u3240 076D  
                                  u2441 0F69                                    u2185 0DDB  
                                  u2345 0AC5                                    u3401 047B  
                                  u3321 0410                                    u3305 03EA  
                                  u3241 076C                                    u3410 049C  
                                  u3330 0416                                    u2435 0F57  
                                  u2195 0DE7                                    u3411 049B  
                                  u3331 0415                                    u3315 0408  
                                  u3235 0764                                    u3180 09EE  
                                  u3260 0788                                    u3181 09ED  
                                  u3261 0787                                    u2390 0BDC  
                                  u3350 0431                                    u3510 0552  
                                  u3430 04F8                                    u3270 0797  
                                  u2391 0BDB                                    u3351 0430  
                                  u3511 0551                                    u3431 04F7  
                                  u3271 0796                                    u3255 077F  
                                  u1920 0891                                    u3280 03B2  
                                  u3520 055C                                    u3440 04FE  
                                  u1921 0890                                    u3345 0428  
                                  u3281 03B1                                    u3521 055B  
                                  u3505 0549                                    u3441 04FD  
                                  u3425 04EF                                    u1930 0897  
                                  u3370 045C                                    u3290 03C4  
                                  u3530 0575                                    u1931 0896  
                                  u3371 045B                                    u3291 03C3  
                                  u3531 0574                                    u3195 072F  
                                  u1940 0935                                    u3380 0461  
                                  u3540 058D                                    u3460 0519  
                                  u1941 0934                                    u3381 0460  
                                  u3365 0453                                    u3541 058C  
                                  u3461 0518                                    u3550 0592  
                                  u1950 0982                                    u3295 03C0  
                                  u3551 0591                                    u3455 0510  
                                  u1951 0981                                    u1960 0E1B  
                                  u3480 0531                                    u1961 0E1A  
                                  u3481 0530                                    u1970 0E2F  
                                  u3490 0537                                    u1971 0E2E  
                                  u3395 0473                                    u3491 0536  
                                  u3475 0528                                    _PEIE 005E  
                                  u1980 0E43                                    u1981 0E42  
                                  _INTE 005C                                    u1990 0E57  
                                  _INTF 0059                                    u1991 0E56  
                                  u3827 073E                                    _RCEN 048B  
                                  u3837 0773                                    u3847 0504  
                                  u3857 053D                                    u3867 041C  
                                  u3877 0467                                    u3887 07CB  
                                  u3897 07FA                                    _TMR1 000E  
                                  _RSEN 0489                                    _main 0A27  
                       __end_of_SSD_OFF 087F                        __end_of_I2C_Init 0BE5  
                                  btemp 007E                    EEPROM_WriteByte@data 00A3  
                      __end_of_ADC_Init 0F73                  _EWH_getAvrgTempReading 09EF  
                                  start 0012                __size_of_EEPROM_ReadByte 005B  
              __size_of_EWH_EEPROM_Init 0010                __size_of_EWH_EEPROM_Read 000C  
                       __end_of_SW_Init 0843                            ?_EWH_SSD_OFF 0070  
             EWH_ClearEvent@Event_index 00A0                         _ADC_ReadChannel 0991  
                                 ??_ISR 0048                           ___fltol@sign1 0042  
                                 ?_main 0070                                   _ACKEN 048C  
                                 _ACKDT 048D                         __end_of___awdiv 0E0E  
                       __end_of___awmod 0C88                        __end_of_EWH_Init 0B9B  
                       __end_of___flmul 0398                         __end_of___fltol 0EF5  
                          ?_EWH_SetMode 0070                         __end_of___lldiv 0DA5  
                       ___awdiv@divisor 00A0                         __end_of___lwdiv 0B57  
                                 i1l239 0B12                                   i1l280 09AD  
                       __end_of___lwmod 0AD6                                   i1l283 09BB  
                                 i1l516 080E                                   i1l551 0FFF  
                                 i1l519 17FF                                   i1l546 0A26  
                                 i1l910 0EF4                                   i1l920 0EF4  
                                 i1l576 0701                                   i1l917 0EDF  
                                 i1l890 0C87                                   i1l996 0B56  
                       ___awdiv@counter 00A4           __size_of_I2C_Master_WriteByte 001E  
                                 _PORTA 0005                                   _PORTB 0006  
                                 _PORTC 0007                                   _PORTD 0008  
                                 _TRISA 0085                                   _TRISB 0086  
                                 _TRISC 0087                                   _TRISD 0088  
                                 _SSPIE 0463                                   _SSPEN 00A5  
                                 _SSPIF 0063                        ??i1_EWH_SetEvent 0070  
                    __size_of_TMR1_Init 004A                             ?_TMR1_Start 0070  
                    __size_of_TMR1_Stop 0004                                   pclath 000A  
                                 status 0003                                   wtemp0 007E  
                    __size_of_SSD_Write 001D                  __size_of_I2C_Wait_IDLE 000D  
                       __initialization 0015               __size_of_EWH_SetTemp_Mode 00F1  
                          __end_of_main 0A5F                  ?_I2C_Master_Send_Start 0070  
                           ?_SSD_config 00A0                                  ??_main 00BB  
                             ??_DD_Init 00A0                         _EWH_WakeUP_Mode 070C  
                                _ADCON0 001F                                  _ADCON1 009F  
                             ??_SSD_OFF 00A4                                  _ADRESH 001E  
                                _ADRESL 009E                        ___awdiv@dividend 00A2  
                         ?_EWH_SetEvent 0070                                  i1l1113 0397  
                                i1l1132 0955                                  i1l1125 038B  
                                i1l1134 0967                                  i1l1119 0303  
                                i1l1170 062B                                  i1l1171 0637  
                                i1l1157 05CA                                  i1l3030 09F6  
                                i1l3102 0EBB                                  i1l1159 0661  
                                i1l3032 0A05                                  i1l3200 02AF  
                                i1l3120 003E                                  i1l3112 0ED4  
                                i1l3104 0EC4                                  i1l3034 0A09  
                                i1l3050 0C3B                                  i1l3042 0C2F  
                                i1l3210 02D4                                  i1l3202 02B8  
                                i1l3130 0053                                  i1l3122 0044  
                                i1l3114 0EE4                                  i1l3106 0ECD  
                                i1l3036 0A0F                                  i1l3028 09F2  
                                i1l3060 0C54                                  i1l3052 0C3F  
                                i1l3044 0C30                                  i1l3220 02EC  
                                i1l3212 02DD                                  i1l3204 02C6  
                                i1l3140 0070                                  i1l3132 005B  
                                i1l3124 0048                                  i1l3116 0EE9  
                                i1l3300 0654                                  i1l3038 0A25  
                                i1l3070 0C73                                  i1l3062 0C58  
                                i1l3054 0C44                                  i1l3046 0C34  
                                i1l3230 031B                                  i1l3222 0300  
                                i1l3206 02CF                                  i1l3214 02E3  
                                i1l3150 0087                                  i1l3142 0074  
                                i1l3134 005D                                  i1l3126 0049  
                                i1l3118 0037                                  i1l3302 0658  
                                i1l3064 0C5C                                  i1l3056 0C4A  
                                i1l3072 0C79                                  i1l3048 0C39  
                                i1l3240 0356                                  i1l3232 031F  
                                i1l3216 02E7                                  i1l3208 02D3  
                                i1l3152 0089                                  i1l3144 0075  
                                i1l3136 0065                                  i1l3128 004E  
                                i1l3080 0E79                                  i1l3304 0659  
                                i1l3074 0C7E                                  i1l3066 0C66  
                                i1l3058 0C4D                                  i1l3250 037F  
                                i1l3242 0365                                  i1l3234 0338  
                                i1l3226 0308                                  i1l3218 02E8  
                                i1l3170 00FA                                  i1l3162 00A4  
                                i1l3154 0091                                  i1l3146 007A  
                                i1l3138 006A                                  i1l3090 0EA5  
                                i1l3082 0E86                                  i1l3076 0C83  
                                i1l3068 0C6C                                  i1l3252 0383  
                                i1l3244 036F                                  i1l3228 030D  
                                i1l3236 033E                                  i1l3180 0177  
                                i1l3172 0126                                  i1l3164 00B4  
                                i1l3156 0096                                  i1l3148 007F  
                                i1l3092 0EAD                                  i1l3260 05A9  
                                i1l3254 0384                                  i1l3246 0371  
                                i1l3238 034B                                  i1l3190 01F7  
                                i1l3182 0194                                  i1l3174 0142  
                                i1l3166 00C1                                  i1l3158 009B  
                                i1l3094 0EAF                                  i1l3086 0E8F  
                                i1l3262 05AE                                  i1l3512 0AE5  
                                i1l3504 0AD7                                  i1l3256 038F  
                                i1l3248 0377                                  i1l3192 0224  
                                i1l3184 01A4                                  i1l3176 015E  
                                i1l3168 00DE                                  i1l3096 0EB3  
                                i1l3088 0EA4                                  i1l3280 05F4  
                                i1l3272 05DB                                  i1l3264 05B2  
                                i1l3506 0AD8                                  i1l3194 0234  
                                i1l3186 01C1                                  i1l3178 0167  
                                i1l3290 0621                                  i1l3282 05F8  
                                i1l3274 05E0                                  i1l3266 05C2  
                                i1l3196 0261                                  i1l3188 01DA  
                                i1l3292 0625                                  i1l3284 0606  
                                i1l3276 05E4                                  i1l3268 05D2  
                                i1l3540 0FCD                                  i1l3532 0F73  
                                i1l3518 0AF2                                  i1l3526 0AFF  
                                i1l2830 094F                                  i1l3198 0287  
                                i1l3294 062F                                  i1l3286 060F  
                                i1l3278 05ED                                  i1l3542 0FD1  
                                i1l3534 0FB9                                  i1l3550 17F9  
                                i1l3630 0662                                  i1l2832 095E  
                                i1l2824 0942                                  i1l3296 0639  
                                i1l3288 0616                                  i1l3544 0FD8  
                                i1l3536 0FC3                                  i1l3640 067B  
                                i1l3632 0666                                  i1l2834 0963  
                                i1l2826 0944                                  i1l3298 064F  
                                i1l3546 0FE7                                  i1l3538 0FC7  
                                i1l3650 068F                                  i1l3642 0680  
                                i1l3634 066C                                  i1l2780 0B1B  
                                i1l2828 094B                                  i1l3548 0808  
                                i1l3660 06AE                                  i1l3652 0693  
                                i1l3644 0682                                  i1l3636 0673  
                                i1l3902 0B07                                  i1l2950 09A5  
                                i1l2790 0B3E                                  i1l2782 0B1E  
                                i1l3662 06B6                                  i1l3670 06C9  
                                i1l3654 069B                                  i1l3646 0688  
                                i1l3638 0674                                  i1l2952 09AA  
                                i1l2792 0B44                                  i1l2784 0B25  
                                i1l2776 0B13                                  u300_20 032E  
                                i1l3680 06F6                                  i1l3672 06D1  
                                i1l3664 06B7                                  i1l3656 06A1  
                                i1l3648 0689                                  i1l2954 09B1  
                                i1l2794 0B45                                  i1l2786 0B29  
                                i1l2778 0B15                                  i1l3674 06DC  
                                i1l3666 06BD                                  i1l3658 06A6  
                                i1l2948 0992                                  i1l2796 0B4C  
                                i1l2788 0B2D                                  i1l3684 06F9  
                                i1l3676 06E3                                  i1l3668 06C3  
                                u300_25 0329                                  i1l2798 0B52  
                                i1l3678 06EB                                  i1l3686 06FC  
                                u301_20 034B                                  i1l3688 06FD  
                                u301_21 034A                                  u301_25 0347  
                                u302_20 0365                                  u310_20 0615  
                                u302_21 0364                                  u310_21 0614  
                                _INTEDG 040E                                  u302_25 0361  
                                u223_20 0B1B                                  u303_20 0383  
                                u223_21 0B1A                                  u303_21 0382  
                                u311_25 061A                                  u312_20 0625  
                                u304_20 05AE                                  u312_21 0624  
                                u304_21 05AD                                  u224_25 0B1F  
                                u225_20 0B2D                                  u313_20 062B  
                                u305_20 05B2                                  u225_21 0B2C  
                                u313_21 062A                                  u305_21 05B1  
                                u250_20 0C4A                                  u314_20 062F  
                                u306_20 05D2                                  u250_21 0C49  
                                u314_21 062E                                  u306_21 05D1  
                                u226_25 0B2E                                  u227_20 0B3E  
                                u315_20 0644                                  u227_21 0B3D  
                                u227_25 0B3A                                  u251_25 0C4E  
                                u315_25 063F                                  u307_25 05E5  
                                u252_20 0C5C                                  u236_20 094F  
                                u260_20 0EBA                                  u316_20 0654  
                                u308_20 05F3                                  u252_21 0C5B  
                                u236_21 094E                                  u260_21 0EB9  
                                u316_21 0653                                  u308_21 05F2  
                                u228_25 0B46                                  u229_20 0B52  
                                u253_20 0C66                                  u317_20 0658  
                                u229_21 0B51                                  u253_21 0C65  
                                u317_21 0657                                  u245_25 099B  
                                u253_25 0C62                                  u237_25 0956  
                                u261_25 0EBC                                  u309_25 0607  
                                u246_20 09B1                                  u238_20 0963  
                                u270_20 0074                                  u262_20 0ECC  
                                u246_21 09B0                                  u238_21 0962  
                                u270_21 0073                                  u262_21 0ECB  
                                u254_25 0C6D                                  u247_20 0A0F  
                                u255_20 0C79                                  u271_20 007A  
                                u263_20 0ED3                                  u247_21 0A0E  
                                u255_21 0C78                                  u271_21 0079  
                                u263_21 0ED2                                  u256_20 0C7E  
                                u248_20 0C34                                  u272_20 007F  
                                u360_20 0FD8                                  u256_21 0C7D  
                                u248_21 0C33                                  u280_21 0186  
                                u272_21 007E                                  u360_21 0FD7  
                                u280_22 018D                                  u280_23 0194  
                                u264_25 0ED6                                  u249_20 0C3F  
                                u273_20 0096                                  u265_20 0EE4  
                                u257_20 0E86                                  u249_21 0C3E  
                                u281_21 01B3                                  u273_21 0095  
                                u265_21 0EE3                                  u257_21 0E85  
                                u281_22 01BA                                  u281_23 01C1  
                                u274_20 009B                                  u266_20 0EE9  
                                u258_20 0E9D                                  u370_20 0673  
                                u274_21 009A                                  u266_21 0EE8  
                                u370_21 0672                                  u290_25 02B1  
                                u282_25 01C3                                  u258_25 0E98  
                                u267_20 0048                                  u259_20 0EB3  
                                u371_20 0680                                  u283_21 01E9  
                                u275_21 00EC                                  u267_21 0047  
                                u259_21 0EB2                                  u371_21 067F  
                                u283_22 01F0                                  u275_22 00F3  
                                u283_23 01F7                                  u275_23 00FA  
                                u291_25 02C8                                  u292_20 02D3  
                                u268_20 004E                                  u380_20 06EB  
                                u372_20 068F                                  u292_21 02D2  
                                u284_21 0216                                  u276_21 0108  
                                u268_21 004D                                  u380_21 06EA  
                                u372_21 068E                                  u284_22 021D  
                                u276_22 010F                                  u284_23 0224  
                                u276_23 0116                                  u356_25 0ADD  
                                u269_20 0053                                  u381_20 06F6  
                                u373_20 069B                                  u285_21 0243  
                                u277_21 0134                                  u269_21 0052  
                                u381_21 06F5                                  u373_21 069A  
                                u285_22 024A                                  u277_22 013B  
                                u285_23 0251                                  u277_23 0142  
                                u357_25 0AEA                                  u293_25 02D6  
                                u294_20 02E7                                  u286_20 026D  
                                u374_20 06A1                                  u294_21 02E6  
                                u278_21 0150                                  u374_21 06A0  
                                u278_22 0157                                  u278_23 015E  
                                u358_25 0AF7                                  u286_25 0268  
                                u390_27 09A7                                  u295_20 02EC  
                                u359_20 0FCD                                  u375_20 06AE  
                                u295_21 02EB                                  u287_21 0279  
                                u359_21 0FCC                                  u375_21 06AD  
                                u287_22 0280                                  u287_23 0287  
                                u279_25 0160                                  u296_20 0300  
                                u288_20 0295                                  u376_20 06B6  
                                u296_21 02FF                                  u376_21 06B5  
                                u288_25 0290                                  u297_20 0307  
                                u377_20 06C3                                  u369_20 0666  
                                u297_21 0306                                  u289_21 02A1  
                                u377_21 06C2                                  u369_21 0665  
                                u289_22 02A8                                  u289_23 02AF  
                                u298_20 030D                                  u378_20 06D1  
                                u298_21 030C                                  u378_21 06D0  
                                u299_20 031F                                  u379_20 06DC  
                                u299_21 031E                                  u379_21 06DB  
                             ??_SW_Init 00A0                                  _TMR1IE 0460  
                                _TMR1IF 0060                                  _TMR1ON 0080  
                                _SSPADD 0093                                  _SSPCON 0014  
                                _SSPBUF 0013                 __end_of_ADC_ReadChannel 09BC  
                      __end_of___xxtofl 0662                    __size_of_DD_GetState 003D  
                         _ReadingBuffer 0056                       __end_of_TMR1_Init 0C2F  
                     __end_of_TMR1_Stop 0807                               ??___awdiv 00A4  
                             ??___awmod 0074                               ??___flmul 0028  
                             ??___fltol 003E                               ??___lldiv 00A8  
                   __size_of_TMR1_Start 0010                               ??___lwdiv 0074  
                             ??___lwmod 00A4                 __size_of_EWH_SSD_Update 005C  
                     ??_EEPROM_ReadByte 00A4                       ??_EWH_EEPROM_Init 00A6  
                     ??_EWH_EEPROM_Read 00A7                   ADC_ReadChannel@result 0073  
                  __size_of_DD_SetState 005A                        ___awdiv@quotient 00A6  
                       ___awmod@divisor 0070                         ___awmod@counter 0074  
              __end_of_EEPROM_WriteByte 0A9A                     EWH_SetMode@new_mode 00A0  
                     __end_of_SSD_Write 0923                               ?_I2C_Init 0070  
                    __size_of__Umul8_16 0027                           _I2C_Wait_IDLE 088B  
                             ?_ADC_Init 0070                                  saved_w 007E  
                        ??_EWH_SetEvent 00A0                     _I2C_Master_ReadByte 0968  
                          ___xxtofl@arg 007A                            ___xxtofl@exp 0079  
                          ___xxtofl@val 0070                 __end_of__initialization 0033  
                   _I2C_Master_Send_ACK 0856                     __size_of_SSD_config 006B  
            __end_of_EWH_Operating_Mode 04B7                              ___fltol@f1 003A  
                          SSD_config@ID 00A3                               ?_EWH_Init 0070  
                __size_ofi1_EWH_SetMode 0008                       _ReadingBufferFull 00C5  
                        _TempavgReading 00C4                 __size_of_EWH_ClearEvent 0009  
                        __pcstackCOMMON 0070                            __pidataBANK1 086A  
                  __size_of_EWH_SSD_OFF 000D                    ?_I2C_Master_ReadByte 0070  
               __end_of_EWH_WakeUP_Mode 07A4                        EWH_Init@TMR1_cfg 00AF  
                  ?_I2C_Master_Send_ACK 0070                      EWH_Init@i2c_config 00B1  
                        ?_I2C_Wait_IDLE 0070                              ??_I2C_Init 00AE  
                            ??_ADC_Init 00A0                    __size_of_EWH_SetMode 0008  
   EWH_getAvrgTempReading@sumOfReadings 0020                              __pbssBANK0 004C  
                            __pbssBANK1 00BD                 ?_EWH_getAvrgTempReading 0077  
                      ?_ADC_ReadChannel 0070                              ??_EWH_Init 00AF  
                   SSD_config@SSD_state 00A0                       __end_of__Umul8_16 0968  
                            __pmaintext 0A27            __end_of_I2C_Master_Send_NACK 086A  
                      _EWH_SetTemp_Mode 04B7            __end_of_I2C_Master_Send_Stop 083A  
                 ??_I2C_Master_ReadByte 00A0                              __pintentry 0004  
                               _ACKSTAT 048E                   ??_I2C_Master_Send_ACK 00A0  
                               _T1CKPS0 0084                                 _T1CKPS1 0085  
                               _DD_Init 08E9                           i1_EWH_SetMode 0807  
                             ?___xxtofl 0070                            ??_TMR1_Start 00A0  
        __end_of_EWH_getAvrgTempReading 0A27                                 _SSPCON2 0091  
                               _SSD_OFF 0874                                 _SSPSTAT 0094  
                             SSD_OFF@ID 00A4                                 _SW_Init 083A  
          __end_of_I2C_Master_WriteByte 0941                 __size_of_EWH_Sleep_Mode 0033  
               __size_of_EWH_TempUpdate 008D                 ??_I2C_Master_Send_Start 00A0  
                               ___awdiv 0DA5                                 ___awmod 0C2F  
                               ___flmul 0037                                 ___fltol 0E79  
                               ___lldiv 0D3D                    __end_of_EWH_SetEvent 0856  
                ADC_ReadChannel@channel 0075                                 ___lwdiv 0B13  
                        _EWH_SSD_Update 07A4                                 ___lwmod 0A9A  
                    __end_of_TMR1_Start 08C5                        ?_EWH_WakeUP_Mode 0070  
                          ??_SSD_config 00A1                         ??_I2C_Wait_IDLE 00A0  
                               __ptext1 070C                                 __ptext2 087F  
                               __ptext3 0CE2                                 __ptext4 0968  
                               __ptext5 0860                                 __ptext6 0856  
                               __ptext7 09BC                                 __ptext8 04B7  
                               __ptext9 0898                          ?i1_EWH_SetMode 0070  
                          __size_of_ISR 00AA                  EEPROM_ReadByte@address 00A2  
                            ??___xxtofl 0074                      EWH_Init@adc_config 00B7  
                      ___awmod@dividend 0072                 EEPROM_WriteByte@address 00A1  
                               clrloop0 0818                    end_of_initialization 0033  
                    __end_of_SSD_config 0E79                               _EWH_State 0055  
                       _EEPROM_ReadByte 0CE2                         _EWH_EEPROM_Init 08A5  
                       _EWH_EEPROM_Read 087F                          _EWH_ClearEvent 0843  
                       ___lldiv@divisor 00A0                         ___lldiv@counter 00AD  
                __end_of_EWH_SSD_Update 0800                   EWH_TempUpdate@Reading 0046  
                      DD_SetState@state 00A0                               _TMR1_Init 0BE5  
                             _TMR1_Stop 0803                       ?_EEPROM_WriteByte 00A1  
                    ??_EEPROM_WriteByte 00A4                           ___xxtofl@sign 0078  
                     __size_of_I2C_Init 004A                    _I2C_Master_Send_NACK 0860  
                             _SSD_Write 0906                       __size_of_ADC_Init 007E  
                  _I2C_Master_Send_Stop 0831                           ??_DD_GetState 0070  
                           ___flmul@grs 002E                  __end_of_EWH_ClearEvent 084C  
               __size_ofi1_EWH_SetEvent 0008                         ?_EWH_SSD_Update 00AA  
                     __size_of_EWH_Init 0044                           ??_DD_SetState 00A1  
                       ??i1_EWH_SetMode 0070                              ?_TMR1_Init 0070  
                    _EWH_Operating_Mode 0398                              ?_TMR1_Stop 0070  
                  _I2C_Master_WriteByte 0923                     start_initialization 0015  
                           __end_of_ISR 070C                     ?_EWH_Operating_Mode 0070  
                 ?_I2C_Master_Send_NACK 0070                __end_of_EWH_SetTemp_Mode 05A8  
                            ?_SSD_Write 00A8                   ?_I2C_Master_Send_Stop 0070  
               __end_of_EEPROM_ReadByte 0D3D                 __end_of_EWH_EEPROM_Init 08B5  
               __end_of_EWH_EEPROM_Read 088B            EWH_getAvrgTempReading@buffer 0023  
  EWH_getAvrgTempReading@averageReading 0022            EWH_getAvrgTempReading@length 0077  
                       ?_EWH_ClearEvent 0070         ??_I2C_Master_Send_RepeatedStart 00A0  
                     _TempReading_count 0053                   __size_of_EWH_SetEvent 000A  
                         ??_EWH_SSD_OFF 00A5                     __end_of_DD_GetState 0B13  
                        _EWH_Sleep_Mode 09BC                          _EWH_TempUpdate 0F73  
                  ??_EWH_Operating_Mode 00AE                          ADC_Init@config 00A2  
                           SSD_Write@ID 00A9                              init_fetch0 08D6  
                             __Umul8_16 0941                             __pdataBANK1 00CA  
               EWH_SetEvent@Event_index 00A0                           ??_EWH_SetMode 00A0  
                   __end_of_DD_SetState 0CE2                   ?_I2C_Master_WriteByte 0070  
                              ?_DD_Init 0070                               ___flmul@a 0024  
                             ___flmul@b 0020                           _Devices_State 00C1  
                             ___latbits 0002                           __pcstackBANK0 0020  
                         __pcstackBANK1 00A0                       __size_of___xxtofl 00BA  
                              ?_SSD_OFF 0070                         _SW_StateControl 004F  
             i1EWH_SetEvent@Event_index 0070                            _EWH_SetEvent 084C  
                              ?_SW_Init 0070                            _current_Temp 00C7  
                __end_of_EWH_Sleep_Mode 09EF                  __end_of_EWH_TempUpdate 1000  
           __end_of_I2C_Master_ReadByte 0991                        ___lwdiv@dividend 0072  
           __end_of_I2C_Master_Send_ACK 0860                                ?___awdiv 00A0  
                              ?___awmod 0070                                ?___flmul 0020  
                              ?___fltol 003A                                ?___lldiv 00A0  
                            ?__Umul8_16 0070                __size_of_ADC_ReadChannel 002B  
                              ?___lwdiv 0070                                ?___lwmod 00A0  
        __size_of_I2C_Master_Send_Start 0009           __end_of_I2C_Master_Send_Start 0831  
                   __end_of_EWH_SSD_OFF 08A5                             ??_TMR1_Init 00A0  
                           ??_TMR1_Stop 00A0                   i1EWH_SetMode@new_mode 0070  
                              _I2C_Init 0B9B                                _ADC_Init 0EF5  
                ??_I2C_Master_Send_NACK 00A0                  ??_I2C_Master_Send_Stop 00A0  
                     DD_GetState@device 0072                             ??_SSD_Write 00A9  
                   __end_of_EWH_SetMode 0817                        ___lwdiv@quotient 0074  
                      ?_EEPROM_ReadByte 00A2                        ?_EWH_EEPROM_Init 0070  
                      ?_EWH_EEPROM_Read 0070                             _DD_GetState 0AD6  
                       SSD_Write@Number 00A8                       interrupt_function 0004  
                        i1_EWH_SetEvent 17F8                               clear_ram0 0817  
                       ?_EWH_Sleep_Mode 0070                         ?_EWH_TempUpdate 0070  
                              _EWH_Init 0B57                                _EWH_Mode 00C9  
 __end_of_I2C_Master_Send_RepeatedStart 0828  __size_of_I2C_Master_Send_RepeatedStart 0009  
         _I2C_Master_Send_RepeatedStart 081F                             _DD_SetState 0C88  
         I2C_Master_ReadByte@Read_State 00A1                  ??_I2C_Master_WriteByte 00A0  
                              _SSD_code 00CA                      EWH_SSD_Update@temp 00AA  
                 __end_of_I2C_Wait_IDLE 0898                        __size_of_DD_Init 001D  
              __size_of_EWH_WakeUP_Mode 0098                                _SW_State 004C  
                __end_ofi1_EWH_SetEvent 1800                        __size_of_SSD_OFF 000B  
             __size_of_EEPROM_WriteByte 003B                        ??_EWH_SSD_Update 00AC  
                      __size_of_SW_Init 0009                 EWH_getAvrgTempReading@i 0024  
                           _EWH_SSD_OFF 0898                             ??__Umul8_16 0072  
                      __size_of___awdiv 0069                        __size_of___awmod 0059  
                      __size_of___flmul 0361                        __size_of___fltol 007C  
                      __size_of___lldiv 0068                        __size_of___lwdiv 0044  
                      __size_of___lwmod 003C             EWH_EEPROM_Update@newSetTemp 00A6  
                           _EWH_SetMode 080F                ??_EWH_getAvrgTempReading 0078  
                     ??_ADC_ReadChannel 0072                                ___xxtofl 05A8  
                     _NoPress_Sec_count 0054                         ___lwdiv@divisor 0070  
                       ___lwdiv@counter 0076                        ??_EWH_ClearEvent 00A0  
                              __ptext10 08C5                                __ptext11 0398  
                              __ptext20 0874                                __ptext12 0803  
                              __ptext21 0E0E                                __ptext13 08B5  
                              __ptext30 0A5F                                __ptext22 0843  
                              __ptext14 080F                                __ptext31 0923  
                              __ptext23 0C88                                __ptext15 084C  
                              __ptext40 17F8                                __ptext32 0831  
                              __ptext24 0B57                                __ptext16 07A4  
                              __ptext41 0F73                                __ptext33 0828  
                              __ptext25 0BE5                                __ptext17 0A9A  
                              __ptext50 0AD6                                __ptext42 05A8  
                              __ptext34 081F                                __ptext26 083A  
                              __ptext18 0DA5                                __ptext43 0E79  
                              __ptext35 088B                                __ptext27 0B9B  
                              __ptext19 0906                                __ptext44 0037  
                              __ptext36 08E9                                __ptext28 0D3D  
                              __ptext45 0941                                __ptext37 0EF5  
                              __ptext29 08A5                                __ptext46 0C2F  
                              __ptext38 0662                                __ptext47 09EF  
                              __ptext39 0807                                __ptext48 0B13  
                              __ptext49 0991                       _EWH_EEPROM_Update 08C5  
                     ?_EWH_SetTemp_Mode 0070                         ?i1_EWH_SetEvent 0070  
                    ?_EWH_EEPROM_Update 0070                      ??_EWH_SetTemp_Mode 00AE  
                         __size_of_main 0038                     ??_EWH_EEPROM_Update 00A6  
                              _set_Temp 00C8          ?_I2C_Master_Send_RepeatedStart 0070  
                 __end_ofi1_EWH_SetMode 080F               __end_of_EWH_EEPROM_Update 08D6  
                              init_ram0 08DA                              _EWH_Events 00BD  
                              intlevel1 0000                        ___lwmod@dividend 00A2  
                     ??_EWH_WakeUP_Mode 00AE                        ___lldiv@dividend 00A4  
                   EEPROM_ReadByte@data 00A6             __size_of_EWH_Operating_Mode 011F  
                     DD_SetState@device 00A3                  __Umul8_16@multiplicand 0070  
       __size_of_EWH_getAvrgTempReading 0038                        ___lldiv@quotient 00A9  
                       ___lwmod@divisor 00A0                         ___lwmod@counter 00A4  
                        _SSD_Blink_flag 00C6                              _TMR1_Start 08B5  
              I2C_Master_WriteByte@Data 00A0                        ??_EWH_Sleep_Mode 00A5  
                      ??_EWH_TempUpdate 0044                            ?_DD_GetState 0070  
                      _EEPROM_WriteByte 0A5F                    __Umul8_16@multiplier 0078  
                     __Umul8_16@product 0074                       ISR@overflow_count 0052  
