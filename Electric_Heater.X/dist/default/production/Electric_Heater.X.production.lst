

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Jul 10 09:19:34 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	intentry,global,class=CODE,delta=2
    54                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text43,local,class=CODE,merge=1,delta=2
    59                           	psect	text44,local,class=CODE,merge=1,delta=2
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    61                           	dabs	1,0x7E,2
    62  0000                     
    63                           ; Version 2.20
    64                           ; Generated 12/02/2020 GMT
    65                           ; 
    66                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC16F877A Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     	;# 
    98  0001                     	;# 
    99  0002                     	;# 
   100  0003                     	;# 
   101  0004                     	;# 
   102  0005                     	;# 
   103  0006                     	;# 
   104  0007                     	;# 
   105  0008                     	;# 
   106  0009                     	;# 
   107  000A                     	;# 
   108  000B                     	;# 
   109  000C                     	;# 
   110  000D                     	;# 
   111  000E                     	;# 
   112  000E                     	;# 
   113  000F                     	;# 
   114  0010                     	;# 
   115  0011                     	;# 
   116  0012                     	;# 
   117  0013                     	;# 
   118  0014                     	;# 
   119  0015                     	;# 
   120  0015                     	;# 
   121  0016                     	;# 
   122  0017                     	;# 
   123  0018                     	;# 
   124  0019                     	;# 
   125  001A                     	;# 
   126  001B                     	;# 
   127  001B                     	;# 
   128  001C                     	;# 
   129  001D                     	;# 
   130  001E                     	;# 
   131  001F                     	;# 
   132  0081                     	;# 
   133  0085                     	;# 
   134  0086                     	;# 
   135  0087                     	;# 
   136  0088                     	;# 
   137  0089                     	;# 
   138  008C                     	;# 
   139  008D                     	;# 
   140  008E                     	;# 
   141  0091                     	;# 
   142  0092                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0098                     	;# 
   146  0099                     	;# 
   147  009C                     	;# 
   148  009D                     	;# 
   149  009E                     	;# 
   150  009F                     	;# 
   151  010C                     	;# 
   152  010D                     	;# 
   153  010E                     	;# 
   154  010F                     	;# 
   155  018C                     	;# 
   156  018D                     	;# 
   157  0000                     	;# 
   158  0001                     	;# 
   159  0002                     	;# 
   160  0003                     	;# 
   161  0004                     	;# 
   162  0005                     	;# 
   163  0006                     	;# 
   164  0007                     	;# 
   165  0008                     	;# 
   166  0009                     	;# 
   167  000A                     	;# 
   168  000B                     	;# 
   169  000C                     	;# 
   170  000D                     	;# 
   171  000E                     	;# 
   172  000E                     	;# 
   173  000F                     	;# 
   174  0010                     	;# 
   175  0011                     	;# 
   176  0012                     	;# 
   177  0013                     	;# 
   178  0014                     	;# 
   179  0015                     	;# 
   180  0015                     	;# 
   181  0016                     	;# 
   182  0017                     	;# 
   183  0018                     	;# 
   184  0019                     	;# 
   185  001A                     	;# 
   186  001B                     	;# 
   187  001B                     	;# 
   188  001C                     	;# 
   189  001D                     	;# 
   190  001E                     	;# 
   191  001F                     	;# 
   192  0081                     	;# 
   193  0085                     	;# 
   194  0086                     	;# 
   195  0087                     	;# 
   196  0088                     	;# 
   197  0089                     	;# 
   198  008C                     	;# 
   199  008D                     	;# 
   200  008E                     	;# 
   201  0091                     	;# 
   202  0092                     	;# 
   203  0093                     	;# 
   204  0094                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  009F                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  000E                     	;# 
   232  000E                     	;# 
   233  000F                     	;# 
   234  0010                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001D                     	;# 
   250  001E                     	;# 
   251  001F                     	;# 
   252  0081                     	;# 
   253  0085                     	;# 
   254  0086                     	;# 
   255  0087                     	;# 
   256  0088                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  0091                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  010C                     	;# 
   272  010D                     	;# 
   273  010E                     	;# 
   274  010F                     	;# 
   275  018C                     	;# 
   276  018D                     	;# 
   277  0000                     	;# 
   278  0001                     	;# 
   279  0002                     	;# 
   280  0003                     	;# 
   281  0004                     	;# 
   282  0005                     	;# 
   283  0006                     	;# 
   284  0007                     	;# 
   285  0008                     	;# 
   286  0009                     	;# 
   287  000A                     	;# 
   288  000B                     	;# 
   289  000C                     	;# 
   290  000D                     	;# 
   291  000E                     	;# 
   292  000E                     	;# 
   293  000F                     	;# 
   294  0010                     	;# 
   295  0011                     	;# 
   296  0012                     	;# 
   297  0013                     	;# 
   298  0014                     	;# 
   299  0015                     	;# 
   300  0015                     	;# 
   301  0016                     	;# 
   302  0017                     	;# 
   303  0018                     	;# 
   304  0019                     	;# 
   305  001A                     	;# 
   306  001B                     	;# 
   307  001B                     	;# 
   308  001C                     	;# 
   309  001D                     	;# 
   310  001E                     	;# 
   311  001F                     	;# 
   312  0081                     	;# 
   313  0085                     	;# 
   314  0086                     	;# 
   315  0087                     	;# 
   316  0088                     	;# 
   317  0089                     	;# 
   318  008C                     	;# 
   319  008D                     	;# 
   320  008E                     	;# 
   321  0091                     	;# 
   322  0092                     	;# 
   323  0093                     	;# 
   324  0094                     	;# 
   325  0098                     	;# 
   326  0099                     	;# 
   327  009C                     	;# 
   328  009D                     	;# 
   329  009E                     	;# 
   330  009F                     	;# 
   331  010C                     	;# 
   332  010D                     	;# 
   333  010E                     	;# 
   334  010F                     	;# 
   335  018C                     	;# 
   336  018D                     	;# 
   337  0000                     	;# 
   338  0001                     	;# 
   339  0002                     	;# 
   340  0003                     	;# 
   341  0004                     	;# 
   342  0005                     	;# 
   343  0006                     	;# 
   344  0007                     	;# 
   345  0008                     	;# 
   346  0009                     	;# 
   347  000A                     	;# 
   348  000B                     	;# 
   349  000C                     	;# 
   350  000D                     	;# 
   351  000E                     	;# 
   352  000E                     	;# 
   353  000F                     	;# 
   354  0010                     	;# 
   355  0011                     	;# 
   356  0012                     	;# 
   357  0013                     	;# 
   358  0014                     	;# 
   359  0015                     	;# 
   360  0015                     	;# 
   361  0016                     	;# 
   362  0017                     	;# 
   363  0018                     	;# 
   364  0019                     	;# 
   365  001A                     	;# 
   366  001B                     	;# 
   367  001B                     	;# 
   368  001C                     	;# 
   369  001D                     	;# 
   370  001E                     	;# 
   371  001F                     	;# 
   372  0081                     	;# 
   373  0085                     	;# 
   374  0086                     	;# 
   375  0087                     	;# 
   376  0088                     	;# 
   377  0089                     	;# 
   378  008C                     	;# 
   379  008D                     	;# 
   380  008E                     	;# 
   381  0091                     	;# 
   382  0092                     	;# 
   383  0093                     	;# 
   384  0094                     	;# 
   385  0098                     	;# 
   386  0099                     	;# 
   387  009C                     	;# 
   388  009D                     	;# 
   389  009E                     	;# 
   390  009F                     	;# 
   391  010C                     	;# 
   392  010D                     	;# 
   393  010E                     	;# 
   394  010F                     	;# 
   395  018C                     	;# 
   396  018D                     	;# 
   397  0000                     	;# 
   398  0001                     	;# 
   399  0002                     	;# 
   400  0003                     	;# 
   401  0004                     	;# 
   402  0005                     	;# 
   403  0006                     	;# 
   404  0007                     	;# 
   405  0008                     	;# 
   406  0009                     	;# 
   407  000A                     	;# 
   408  000B                     	;# 
   409  000C                     	;# 
   410  000D                     	;# 
   411  000E                     	;# 
   412  000E                     	;# 
   413  000F                     	;# 
   414  0010                     	;# 
   415  0011                     	;# 
   416  0012                     	;# 
   417  0013                     	;# 
   418  0014                     	;# 
   419  0015                     	;# 
   420  0015                     	;# 
   421  0016                     	;# 
   422  0017                     	;# 
   423  0018                     	;# 
   424  0019                     	;# 
   425  001A                     	;# 
   426  001B                     	;# 
   427  001B                     	;# 
   428  001C                     	;# 
   429  001D                     	;# 
   430  001E                     	;# 
   431  001F                     	;# 
   432  0081                     	;# 
   433  0085                     	;# 
   434  0086                     	;# 
   435  0087                     	;# 
   436  0088                     	;# 
   437  0089                     	;# 
   438  008C                     	;# 
   439  008D                     	;# 
   440  008E                     	;# 
   441  0091                     	;# 
   442  0092                     	;# 
   443  0093                     	;# 
   444  0094                     	;# 
   445  0098                     	;# 
   446  0099                     	;# 
   447  009C                     	;# 
   448  009D                     	;# 
   449  009E                     	;# 
   450  009F                     	;# 
   451  010C                     	;# 
   452  010D                     	;# 
   453  010E                     	;# 
   454  010F                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457  0000                     	;# 
   458  0001                     	;# 
   459  0002                     	;# 
   460  0003                     	;# 
   461  0004                     	;# 
   462  0005                     	;# 
   463  0006                     	;# 
   464  0007                     	;# 
   465  0008                     	;# 
   466  0009                     	;# 
   467  000A                     	;# 
   468  000B                     	;# 
   469  000C                     	;# 
   470  000D                     	;# 
   471  000E                     	;# 
   472  000E                     	;# 
   473  000F                     	;# 
   474  0010                     	;# 
   475  0011                     	;# 
   476  0012                     	;# 
   477  0013                     	;# 
   478  0014                     	;# 
   479  0015                     	;# 
   480  0015                     	;# 
   481  0016                     	;# 
   482  0017                     	;# 
   483  0018                     	;# 
   484  0019                     	;# 
   485  001A                     	;# 
   486  001B                     	;# 
   487  001B                     	;# 
   488  001C                     	;# 
   489  001D                     	;# 
   490  001E                     	;# 
   491  001F                     	;# 
   492  0081                     	;# 
   493  0085                     	;# 
   494  0086                     	;# 
   495  0087                     	;# 
   496  0088                     	;# 
   497  0089                     	;# 
   498  008C                     	;# 
   499  008D                     	;# 
   500  008E                     	;# 
   501  0091                     	;# 
   502  0092                     	;# 
   503  0093                     	;# 
   504  0094                     	;# 
   505  0098                     	;# 
   506  0099                     	;# 
   507  009C                     	;# 
   508  009D                     	;# 
   509  009E                     	;# 
   510  009F                     	;# 
   511  010C                     	;# 
   512  010D                     	;# 
   513  010E                     	;# 
   514  010F                     	;# 
   515  018C                     	;# 
   516  018D                     	;# 
   517  0000                     	;# 
   518  0001                     	;# 
   519  0002                     	;# 
   520  0003                     	;# 
   521  0004                     	;# 
   522  0005                     	;# 
   523  0006                     	;# 
   524  0007                     	;# 
   525  0008                     	;# 
   526  0009                     	;# 
   527  000A                     	;# 
   528  000B                     	;# 
   529  000C                     	;# 
   530  000D                     	;# 
   531  000E                     	;# 
   532  000E                     	;# 
   533  000F                     	;# 
   534  0010                     	;# 
   535  0011                     	;# 
   536  0012                     	;# 
   537  0013                     	;# 
   538  0014                     	;# 
   539  0015                     	;# 
   540  0015                     	;# 
   541  0016                     	;# 
   542  0017                     	;# 
   543  0018                     	;# 
   544  0019                     	;# 
   545  001A                     	;# 
   546  001B                     	;# 
   547  001B                     	;# 
   548  001C                     	;# 
   549  001D                     	;# 
   550  001E                     	;# 
   551  001F                     	;# 
   552  0081                     	;# 
   553  0085                     	;# 
   554  0086                     	;# 
   555  0087                     	;# 
   556  0088                     	;# 
   557  0089                     	;# 
   558  008C                     	;# 
   559  008D                     	;# 
   560  008E                     	;# 
   561  0091                     	;# 
   562  0092                     	;# 
   563  0093                     	;# 
   564  0094                     	;# 
   565  0098                     	;# 
   566  0099                     	;# 
   567  009C                     	;# 
   568  009D                     	;# 
   569  009E                     	;# 
   570  009F                     	;# 
   571  010C                     	;# 
   572  010D                     	;# 
   573  010E                     	;# 
   574  010F                     	;# 
   575  018C                     	;# 
   576  018D                     	;# 
   577  0000                     	;# 
   578  0001                     	;# 
   579  0002                     	;# 
   580  0003                     	;# 
   581  0004                     	;# 
   582  0005                     	;# 
   583  0006                     	;# 
   584  0007                     	;# 
   585  0008                     	;# 
   586  0009                     	;# 
   587  000A                     	;# 
   588  000B                     	;# 
   589  000C                     	;# 
   590  000D                     	;# 
   591  000E                     	;# 
   592  000E                     	;# 
   593  000F                     	;# 
   594  0010                     	;# 
   595  0011                     	;# 
   596  0012                     	;# 
   597  0013                     	;# 
   598  0014                     	;# 
   599  0015                     	;# 
   600  0015                     	;# 
   601  0016                     	;# 
   602  0017                     	;# 
   603  0018                     	;# 
   604  0019                     	;# 
   605  001A                     	;# 
   606  001B                     	;# 
   607  001B                     	;# 
   608  001C                     	;# 
   609  001D                     	;# 
   610  001E                     	;# 
   611  001F                     	;# 
   612  0081                     	;# 
   613  0085                     	;# 
   614  0086                     	;# 
   615  0087                     	;# 
   616  0088                     	;# 
   617  0089                     	;# 
   618  008C                     	;# 
   619  008D                     	;# 
   620  008E                     	;# 
   621  0091                     	;# 
   622  0092                     	;# 
   623  0093                     	;# 
   624  0094                     	;# 
   625  0098                     	;# 
   626  0099                     	;# 
   627  009C                     	;# 
   628  009D                     	;# 
   629  009E                     	;# 
   630  009F                     	;# 
   631  010C                     	;# 
   632  010D                     	;# 
   633  010E                     	;# 
   634  010F                     	;# 
   635  018C                     	;# 
   636  018D                     	;# 
   637  0000                     	;# 
   638  0001                     	;# 
   639  0002                     	;# 
   640  0003                     	;# 
   641  0004                     	;# 
   642  0005                     	;# 
   643  0006                     	;# 
   644  0007                     	;# 
   645  0008                     	;# 
   646  0009                     	;# 
   647  000A                     	;# 
   648  000B                     	;# 
   649  000C                     	;# 
   650  000D                     	;# 
   651  000E                     	;# 
   652  000E                     	;# 
   653  000F                     	;# 
   654  0010                     	;# 
   655  0011                     	;# 
   656  0012                     	;# 
   657  0013                     	;# 
   658  0014                     	;# 
   659  0015                     	;# 
   660  0015                     	;# 
   661  0016                     	;# 
   662  0017                     	;# 
   663  0018                     	;# 
   664  0019                     	;# 
   665  001A                     	;# 
   666  001B                     	;# 
   667  001B                     	;# 
   668  001C                     	;# 
   669  001D                     	;# 
   670  001E                     	;# 
   671  001F                     	;# 
   672  0081                     	;# 
   673  0085                     	;# 
   674  0086                     	;# 
   675  0087                     	;# 
   676  0088                     	;# 
   677  0089                     	;# 
   678  008C                     	;# 
   679  008D                     	;# 
   680  008E                     	;# 
   681  0091                     	;# 
   682  0092                     	;# 
   683  0093                     	;# 
   684  0094                     	;# 
   685  0098                     	;# 
   686  0099                     	;# 
   687  009C                     	;# 
   688  009D                     	;# 
   689  009E                     	;# 
   690  009F                     	;# 
   691  010C                     	;# 
   692  010D                     	;# 
   693  010E                     	;# 
   694  010F                     	;# 
   695  018C                     	;# 
   696  018D                     	;# 
   697                           
   698                           	psect	idataBANK1
   699  08B0                     __pidataBANK1:
   700                           
   701                           ;initializer for _SSD_code
   702  08B0  343F               	retlw	63
   703  08B1  3406               	retlw	6
   704  08B2  345B               	retlw	91
   705  08B3  344F               	retlw	79
   706  08B4  3466               	retlw	102
   707  08B5  346D               	retlw	109
   708  08B6  347D               	retlw	125
   709  08B7  3407               	retlw	7
   710  08B8  347F               	retlw	127
   711  08B9  346F               	retlw	111
   712  000E                     _TMR1	set	14
   713  0008                     _PORTD	set	8
   714  0005                     _PORTA	set	5
   715  001E                     _ADRESH	set	30
   716  001F                     _ADCON0	set	31
   717  0007                     _PORTC	set	7
   718  0006                     _PORTB	set	6
   719  0013                     _SSPBUF	set	19
   720  0014                     _SSPCON	set	20
   721  0059                     _INTF	set	89
   722  005C                     _INTE	set	92
   723  0080                     _TMR1ON	set	128
   724  0060                     _TMR1IF	set	96
   725  0085                     _T1CKPS1	set	133
   726  0084                     _T1CKPS0	set	132
   727  0066                     _ADIF	set	102
   728  00F8                     _ADON	set	248
   729  0063                     _SSPIF	set	99
   730  005E                     _PEIE	set	94
   731  005F                     _GIE	set	95
   732  00A5                     _SSPEN	set	165
   733  0088                     _TRISD	set	136
   734  0085                     _TRISA	set	133
   735  009E                     _ADRESL	set	158
   736  009F                     _ADCON1	set	159
   737  0086                     _TRISB	set	134
   738  0087                     _TRISC	set	135
   739  0093                     _SSPADD	set	147
   740  0094                     _SSPSTAT	set	148
   741  0091                     _SSPCON2	set	145
   742  040E                     _INTEDG	set	1038
   743  0460                     _TMR1IE	set	1120
   744  040D                     _T0CS	set	1037
   745  0466                     _ADIE	set	1126
   746  048B                     _RCEN	set	1163
   747  048E                     _ACKSTAT	set	1166
   748  048C                     _ACKEN	set	1164
   749  048D                     _ACKDT	set	1165
   750  0489                     _RSEN	set	1161
   751  048A                     _PEN	set	1162
   752  0488                     _SEN	set	1160
   753  0463                     _SSPIE	set	1123
   754                           
   755                           	psect	cinit
   756  0015                     start_initialization:	
   757                           ; #config settings
   758                           
   759  0015                     __initialization:
   760                           
   761                           ; Initialize objects allocated to BANK1
   762  0015  1383               	bcf	3,7	;select IRP bank0
   763  0016  30DF               	movlw	low (__pdataBANK1+10)
   764  0017  00FD               	movwf	btemp+-1
   765  0018  3008               	movlw	high __pidataBANK1
   766  0019  00FE               	movwf	btemp
   767  001A  30B0               	movlw	low __pidataBANK1
   768  001B  00FF               	movwf	btemp+1
   769  001C  30D5               	movlw	low __pdataBANK1
   770  001D  0084               	movwf	4
   771  001E  120A  158A  2120  120A  118A  	fcall	init_ram0
   772                           
   773                           ; Clear objects allocated to BANK1
   774  0023  30BD               	movlw	low __pbssBANK1
   775  0024  0084               	movwf	4
   776  0025  30D5               	movlw	low (__pbssBANK1+24)
   777  0026  120A  158A  2070  120A  118A  	fcall	clear_ram0
   778                           
   779                           ; Clear objects allocated to BANK0
   780  002B  304A               	movlw	low __pbssBANK0
   781  002C  0084               	movwf	4
   782  002D  3053               	movlw	low (__pbssBANK0+9)
   783  002E  120A  158A  2070  120A  118A  	fcall	clear_ram0
   784  0033                     end_of_initialization:	
   785                           ;End of C runtime variable initialization code
   786                           
   787  0033                     __end_of__initialization:
   788  0033  0183               	clrf	3
   789  0034  120A  158A  2C0A   	ljmp	_main	;jump to C main() function
   790                           
   791                           	psect	bssBANK0
   792  004A                     __pbssBANK0:
   793  004A                     _SW_State:
   794  004A                     	ds	3
   795  004D                     _SW_StateControl:
   796  004D                     	ds	3
   797  0050                     ISR@count:
   798  0050                     	ds	1
   799  0051                     _NoPress_Sec_count:
   800  0051                     	ds	1
   801  0052                     _EWH_State:
   802  0052                     	ds	1
   803                           
   804                           	psect	bssBANK1
   805  00BD                     __pbssBANK1:
   806  00BD                     _EWH_Events:
   807  00BD                     	ds	4
   808  00C1                     _Devices_State:
   809  00C1                     	ds	3
   810  00C4                     _TempavgReading:
   811  00C4                     	ds	1
   812  00C5                     _ReadingBufferFull:
   813  00C5                     	ds	1
   814  00C6                     _SSD_Blink_flag:
   815  00C6                     	ds	1
   816  00C7                     _TempReading_count:
   817  00C7                     	ds	1
   818  00C8                     _current_Temp:
   819  00C8                     	ds	1
   820  00C9                     _set_Temp:
   821  00C9                     	ds	1
   822  00CA                     _EWH_Mode:
   823  00CA                     	ds	1
   824  00CB                     _ReadingBuffer:
   825  00CB                     	ds	10
   826                           
   827                           	psect	dataBANK1
   828  00D5                     __pdataBANK1:
   829  00D5                     _SSD_code:
   830  00D5                     	ds	10
   831                           
   832                           	psect	inittext
   833  091C                     init_fetch0:	
   834                           ;	Called with low address in FSR and high address in W
   835                           
   836  091C  087E               	movf	btemp,w
   837  091D  008A               	movwf	10
   838  091E  087F               	movf	btemp+1,w
   839  091F  0082               	movwf	2
   840  0920                     init_ram0:	
   841                           ;Called with:
   842                           ;	high address of idata address in btemp 
   843                           ;	low address of idata address in btemp+1 
   844                           ;	low address of data in FSR
   845                           ;	high address + 1 of data in btemp-1
   846                           
   847  0920  120A  158A  211C  120A  158A  	fcall	init_fetch0
   848  0925  0080               	movwf	0
   849  0926  0A84               	incf	4,f
   850  0927  0804               	movf	4,w
   851  0928  067D               	xorwf	btemp+-1,w
   852  0929  1903               	btfsc	3,2
   853  092A  3400               	retlw	0
   854  092B  0AFF               	incf	btemp+1,f
   855  092C  1903               	btfsc	3,2
   856  092D  0AFE               	incf	btemp,f
   857  092E  2920               	goto	init_ram0
   858                           
   859                           	psect	clrtext
   860  0870                     clear_ram0:	
   861                           ;	Called with FSR containing the base address, and
   862                           ;	W with the last address+1
   863                           
   864  0870  0064               	clrwdt	;clear the watchdog before getting into this loop
   865  0871                     clrloop0:
   866  0871  0180               	clrf	0	;clear RAM location pointed to by FSR
   867  0872  0A84               	incf	4,f	;increment pointer
   868  0873  0604               	xorwf	4,w	;XOR with final address
   869  0874  1903               	btfsc	3,2	;have we reached the end yet?
   870  0875  3400               	retlw	0	;all done for this memory range, return
   871  0876  0604               	xorwf	4,w	;XOR again to restore value
   872  0877  2871               	goto	clrloop0	;do the next byte
   873                           
   874                           	psect	cstackBANK1
   875  00A0                     __pcstackBANK1:
   876  00A0                     ??_I2C_Master_Send_Start:
   877  00A0                     ??_I2C_Master_Send_RepeatedStart:	
   878                           ; 1 bytes @ 0x0
   879                           
   880  00A0                     ??_I2C_Master_WriteByte:	
   881                           ; 1 bytes @ 0x0
   882                           
   883  00A0                     ??_I2C_Master_Send_Stop:	
   884                           ; 1 bytes @ 0x0
   885                           
   886  00A0                     ??_I2C_Master_ReadByte:	
   887                           ; 1 bytes @ 0x0
   888                           
   889  00A0                     ??_I2C_Wait_IDLE:	
   890                           ; 1 bytes @ 0x0
   891                           
   892  00A0                     ??_I2C_Master_Send_ACK:	
   893                           ; 1 bytes @ 0x0
   894                           
   895  00A0                     ??_I2C_Master_Send_NACK:	
   896                           ; 1 bytes @ 0x0
   897                           
   898  00A0                     ??_DD_Init:	
   899                           ; 1 bytes @ 0x0
   900                           
   901  00A0                     ?_DD_SetState:	
   902                           ; 1 bytes @ 0x0
   903                           
   904  00A0                     ??_ADC_Init:	
   905                           ; 1 bytes @ 0x0
   906                           
   907  00A0                     ??_TMR1_Init:	
   908                           ; 1 bytes @ 0x0
   909                           
   910  00A0                     ??_TMR1_Start:	
   911                           ; 1 bytes @ 0x0
   912                           
   913  00A0                     ??_TMR1_Stop:	
   914                           ; 1 bytes @ 0x0
   915                           
   916  00A0                     ??_SW_Init:	
   917                           ; 1 bytes @ 0x0
   918                           
   919  00A0                     ?_SSD_config:	
   920                           ; 1 bytes @ 0x0
   921                           
   922  00A0                     ?___awdiv:	
   923                           ; 1 bytes @ 0x0
   924                           
   925  00A0                     ?___awmod:	
   926                           ; 2 bytes @ 0x0
   927                           
   928  00A0                     ?___lwdiv:	
   929                           ; 2 bytes @ 0x0
   930                           
   931  00A0                     ?___lwmod:	
   932                           ; 2 bytes @ 0x0
   933                           
   934  00A0                     ?___lldiv:	
   935                           ; 2 bytes @ 0x0
   936                           
   937  00A0                     I2C_Master_WriteByte@Data:	
   938                           ; 4 bytes @ 0x0
   939                           
   940  00A0                     DD_SetState@state:	
   941                           ; 1 bytes @ 0x0
   942                           
   943  00A0                     SSD_config@SSD_state:	
   944                           ; 1 bytes @ 0x0
   945                           
   946  00A0                     ___awdiv@divisor:	
   947                           ; 1 bytes @ 0x0
   948                           
   949  00A0                     ___awmod@divisor:	
   950                           ; 2 bytes @ 0x0
   951                           
   952  00A0                     ___lwdiv@divisor:	
   953                           ; 2 bytes @ 0x0
   954                           
   955  00A0                     ___lwmod@divisor:	
   956                           ; 2 bytes @ 0x0
   957                           
   958  00A0                     ___lldiv@divisor:	
   959                           ; 2 bytes @ 0x0
   960                           
   961                           
   962                           ; 4 bytes @ 0x0
   963  00A0                     	ds	1
   964  00A1                     ?_EEPROM_WriteByte:
   965  00A1                     ??_DD_SetState:	
   966                           ; 1 bytes @ 0x1
   967                           
   968  00A1                     ??_SSD_config:	
   969                           ; 1 bytes @ 0x1
   970                           
   971  00A1                     I2C_Master_ReadByte@Read_State:	
   972                           ; 1 bytes @ 0x1
   973                           
   974  00A1                     EEPROM_WriteByte@address:	
   975                           ; 1 bytes @ 0x1
   976                           
   977                           
   978                           ; 2 bytes @ 0x1
   979  00A1                     	ds	1
   980  00A2                     ?_EEPROM_ReadByte:
   981  00A2                     ADC_Init@config:	
   982                           ; 1 bytes @ 0x2
   983                           
   984  00A2                     TMR1_Init@config:	
   985                           ; 1 bytes @ 0x2
   986                           
   987  00A2                     EEPROM_ReadByte@address:	
   988                           ; 1 bytes @ 0x2
   989                           
   990  00A2                     ___awdiv@dividend:	
   991                           ; 2 bytes @ 0x2
   992                           
   993  00A2                     ___awmod@dividend:	
   994                           ; 2 bytes @ 0x2
   995                           
   996  00A2                     ___lwdiv@dividend:	
   997                           ; 2 bytes @ 0x2
   998                           
   999  00A2                     ___lwmod@dividend:	
  1000                           ; 2 bytes @ 0x2
  1001                           
  1002                           
  1003                           ; 2 bytes @ 0x2
  1004  00A2                     	ds	1
  1005  00A3                     EEPROM_WriteByte@data:
  1006  00A3                     DD_SetState@device:	
  1007                           ; 1 bytes @ 0x3
  1008                           
  1009  00A3                     SSD_config@ID:	
  1010                           ; 1 bytes @ 0x3
  1011                           
  1012                           
  1013                           ; 1 bytes @ 0x3
  1014  00A3                     	ds	1
  1015  00A4                     ??_SSD_OFF:
  1016  00A4                     ??_EEPROM_WriteByte:	
  1017                           ; 1 bytes @ 0x4
  1018                           
  1019  00A4                     ??_EEPROM_ReadByte:	
  1020                           ; 1 bytes @ 0x4
  1021                           
  1022  00A4                     ??___awdiv:	
  1023                           ; 1 bytes @ 0x4
  1024                           
  1025  00A4                     ??___awmod:	
  1026                           ; 1 bytes @ 0x4
  1027                           
  1028  00A4                     ??___lwdiv:	
  1029                           ; 1 bytes @ 0x4
  1030                           
  1031  00A4                     ??___lwmod:	
  1032                           ; 1 bytes @ 0x4
  1033                           
  1034  00A4                     SSD_OFF@ID:	
  1035                           ; 1 bytes @ 0x4
  1036                           
  1037  00A4                     ___awdiv@counter:	
  1038                           ; 1 bytes @ 0x4
  1039                           
  1040  00A4                     ___awmod@counter:	
  1041                           ; 1 bytes @ 0x4
  1042                           
  1043  00A4                     ___lwmod@counter:	
  1044                           ; 1 bytes @ 0x4
  1045                           
  1046  00A4                     ___lwdiv@quotient:	
  1047                           ; 1 bytes @ 0x4
  1048                           
  1049  00A4                     ___lldiv@dividend:	
  1050                           ; 2 bytes @ 0x4
  1051                           
  1052                           
  1053                           ; 4 bytes @ 0x4
  1054  00A4                     	ds	1
  1055  00A5                     ??_EWH_Sleep_Mode:
  1056  00A5                     ??_EWH_SSD_OFF:	
  1057                           ; 1 bytes @ 0x5
  1058                           
  1059  00A5                     ___awdiv@sign:	
  1060                           ; 1 bytes @ 0x5
  1061                           
  1062  00A5                     ___awmod@sign:	
  1063                           ; 1 bytes @ 0x5
  1064                           
  1065                           
  1066                           ; 1 bytes @ 0x5
  1067  00A5                     	ds	1
  1068  00A6                     ??_EWH_EEPROM_Update:
  1069  00A6                     ??_EWH_EEPROM_Init:	
  1070                           ; 1 bytes @ 0x6
  1071                           
  1072  00A6                     EEPROM_ReadByte@data:	
  1073                           ; 1 bytes @ 0x6
  1074                           
  1075  00A6                     EWH_EEPROM_Update@newSetTemp:	
  1076                           ; 1 bytes @ 0x6
  1077                           
  1078  00A6                     ___lwdiv@counter:	
  1079                           ; 1 bytes @ 0x6
  1080                           
  1081  00A6                     ___awdiv@quotient:	
  1082                           ; 1 bytes @ 0x6
  1083                           
  1084                           
  1085                           ; 2 bytes @ 0x6
  1086  00A6                     	ds	1
  1087  00A7                     ??_EWH_EEPROM_Read:
  1088  00A7                     ?_EWH_getAvrgTempReading:	
  1089                           ; 1 bytes @ 0x7
  1090                           
  1091  00A7                     EWH_getAvrgTempReading@length:	
  1092                           ; 1 bytes @ 0x7
  1093                           
  1094                           
  1095                           ; 1 bytes @ 0x7
  1096  00A7                     	ds	1
  1097  00A8                     ?_SSD_Write:
  1098  00A8                     ??_EWH_getAvrgTempReading:	
  1099                           ; 1 bytes @ 0x8
  1100                           
  1101  00A8                     ??___lldiv:	
  1102                           ; 1 bytes @ 0x8
  1103                           
  1104  00A8                     SSD_Write@Number:	
  1105                           ; 1 bytes @ 0x8
  1106                           
  1107                           
  1108                           ; 1 bytes @ 0x8
  1109  00A8                     	ds	1
  1110  00A9                     ??_SSD_Write:
  1111  00A9                     SSD_Write@ID:	
  1112                           ; 1 bytes @ 0x9
  1113                           
  1114  00A9                     ___lldiv@quotient:	
  1115                           ; 1 bytes @ 0x9
  1116                           
  1117                           
  1118                           ; 4 bytes @ 0x9
  1119  00A9                     	ds	1
  1120  00AA                     ?_EWH_SSD_Update:
  1121  00AA                     EWH_SSD_Update@temp:	
  1122                           ; 1 bytes @ 0xA
  1123                           
  1124                           
  1125                           ; 2 bytes @ 0xA
  1126  00AA                     	ds	1
  1127  00AB                     EWH_getAvrgTempReading@sumOfReadings:
  1128                           
  1129                           ; 2 bytes @ 0xB
  1130  00AB                     	ds	1
  1131  00AC                     ??_EWH_SSD_Update:
  1132                           
  1133                           ; 1 bytes @ 0xC
  1134  00AC                     	ds	1
  1135  00AD                     EWH_getAvrgTempReading@averageReading:
  1136  00AD                     ___lldiv@counter:	
  1137                           ; 1 bytes @ 0xD
  1138                           
  1139                           
  1140                           ; 1 bytes @ 0xD
  1141  00AD                     	ds	1
  1142  00AE                     ??_EWH_WakeUP_Mode:
  1143  00AE                     ??_EWH_SetTemp_Mode:	
  1144                           ; 1 bytes @ 0xE
  1145                           
  1146  00AE                     ??_I2C_Init:	
  1147                           ; 1 bytes @ 0xE
  1148                           
  1149  00AE                     I2C_Init@i2c_config:	
  1150                           ; 1 bytes @ 0xE
  1151                           
  1152  00AE                     EWH_getAvrgTempReading@buffer:	
  1153                           ; 1 bytes @ 0xE
  1154                           
  1155                           
  1156                           ; 1 bytes @ 0xE
  1157  00AE                     	ds	1
  1158  00AF                     ??_EWH_Init:
  1159  00AF                     EWH_getAvrgTempReading@i:	
  1160                           ; 1 bytes @ 0xF
  1161                           
  1162  00AF                     EWH_Init@TMR1_cfg:	
  1163                           ; 1 bytes @ 0xF
  1164                           
  1165                           
  1166                           ; 2 bytes @ 0xF
  1167  00AF                     	ds	1
  1168  00B0                     ??_EWH_Operating_Mode:
  1169                           
  1170                           ; 1 bytes @ 0x10
  1171  00B0                     	ds	1
  1172  00B1                     EWH_Init@i2c_config:
  1173                           
  1174                           ; 6 bytes @ 0x11
  1175  00B1                     	ds	6
  1176  00B7                     EWH_Init@adc_config:
  1177                           
  1178                           ; 4 bytes @ 0x17
  1179  00B7                     	ds	4
  1180  00BB                     ??_main:
  1181                           
  1182                           ; 1 bytes @ 0x1B
  1183  00BB                     	ds	2
  1184                           
  1185                           	psect	cstackCOMMON
  1186  0070                     __pcstackCOMMON:
  1187  0070                     ?_I2C_Master_Send_Start:
  1188  0070                     ?_I2C_Master_Send_RepeatedStart:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0070                     ?_I2C_Master_WriteByte:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194  0070                     ?_I2C_Master_Send_Stop:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197  0070                     ?_I2C_Master_ReadByte:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200  0070                     ?_EWH_Init:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203  0070                     ?_EWH_Sleep_Mode:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  0070                     ?_EWH_WakeUP_Mode:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209  0070                     ?_EWH_Operating_Mode:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212  0070                     ?_EWH_SetTemp_Mode:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215  0070                     ?_SSD_OFF:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218  0070                     ?_EWH_EEPROM_Read:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221  0070                     ?_EWH_EEPROM_Update:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224  0070                     ?_EWH_EEPROM_Init:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227  0070                     ?_I2C_Init:	
  1228                           ; 1 bytes @ 0x0
  1229                           
  1230  0070                     ?_I2C_Wait_IDLE:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233  0070                     ?_I2C_Master_Send_ACK:	
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236  0070                     ?_I2C_Master_Send_NACK:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239  0070                     ?_main:	
  1240                           ; 1 bytes @ 0x0
  1241                           
  1242  0070                     ?_DD_Init:	
  1243                           ; 1 bytes @ 0x0
  1244                           
  1245  0070                     ?_DD_GetState:	
  1246                           ; 1 bytes @ 0x0
  1247                           
  1248  0070                     ??_DD_GetState:	
  1249                           ; 1 bytes @ 0x0
  1250                           
  1251  0070                     ?_EWH_SSD_OFF:	
  1252                           ; 1 bytes @ 0x0
  1253                           
  1254  0070                     ?_ADC_Init:	
  1255                           ; 1 bytes @ 0x0
  1256                           
  1257  0070                     ?_TMR1_Init:	
  1258                           ; 1 bytes @ 0x0
  1259                           
  1260  0070                     ?_TMR1_Start:	
  1261                           ; 1 bytes @ 0x0
  1262                           
  1263  0070                     ?_TMR1_Stop:	
  1264                           ; 1 bytes @ 0x0
  1265                           
  1266  0070                     ?_SW_Init:	
  1267                           ; 1 bytes @ 0x0
  1268                           
  1269  0070                     ?_ISR:	
  1270                           ; 1 bytes @ 0x0
  1271                           
  1272  0070                     ?__Umul8_16:	
  1273                           ; 1 bytes @ 0x0
  1274                           
  1275  0070                     ?_ADC_ReadChannel:	
  1276                           ; 2 bytes @ 0x0
  1277                           
  1278  0070                     ?___xxtofl:	
  1279                           ; 2 bytes @ 0x0
  1280                           
  1281  0070                     __Umul8_16@multiplicand:	
  1282                           ; 4 bytes @ 0x0
  1283                           
  1284  0070                     ___xxtofl@val:	
  1285                           ; 1 bytes @ 0x0
  1286                           
  1287                           
  1288                           ; 4 bytes @ 0x0
  1289  0070                     	ds	2
  1290  0072                     ??__Umul8_16:
  1291  0072                     ??_ADC_ReadChannel:	
  1292                           ; 1 bytes @ 0x2
  1293                           
  1294  0072                     DD_GetState@device:	
  1295                           ; 1 bytes @ 0x2
  1296                           
  1297                           
  1298                           ; 1 bytes @ 0x2
  1299  0072                     	ds	1
  1300  0073                     ADC_ReadChannel@result:
  1301                           
  1302                           ; 2 bytes @ 0x3
  1303  0073                     	ds	1
  1304  0074                     ??___xxtofl:
  1305  0074                     __Umul8_16@product:	
  1306                           ; 1 bytes @ 0x4
  1307                           
  1308                           
  1309                           ; 2 bytes @ 0x4
  1310  0074                     	ds	1
  1311  0075                     ADC_ReadChannel@channel:
  1312                           
  1313                           ; 1 bytes @ 0x5
  1314  0075                     	ds	1
  1315  0076                     __Umul8_16@word_mpld:
  1316                           
  1317                           ; 2 bytes @ 0x6
  1318  0076                     	ds	2
  1319  0078                     __Umul8_16@multiplier:
  1320  0078                     ___xxtofl@sign:	
  1321                           ; 1 bytes @ 0x8
  1322                           
  1323                           
  1324                           ; 1 bytes @ 0x8
  1325  0078                     	ds	1
  1326  0079                     ___xxtofl@exp:
  1327                           
  1328                           ; 1 bytes @ 0x9
  1329  0079                     	ds	1
  1330  007A                     ___xxtofl@arg:
  1331                           
  1332                           ; 4 bytes @ 0xA
  1333  007A                     	ds	4
  1334                           
  1335                           	psect	cstackBANK0
  1336  0020                     __pcstackBANK0:
  1337  0020                     ?___flmul:
  1338  0020                     ___flmul@b:	
  1339                           ; 4 bytes @ 0x0
  1340                           
  1341                           
  1342                           ; 4 bytes @ 0x0
  1343  0020                     	ds	4
  1344  0024                     ___flmul@a:
  1345                           
  1346                           ; 4 bytes @ 0x4
  1347  0024                     	ds	4
  1348  0028                     ??___flmul:
  1349                           
  1350                           ; 1 bytes @ 0x8
  1351  0028                     	ds	5
  1352  002D                     ___flmul@sign:
  1353                           
  1354                           ; 1 bytes @ 0xD
  1355  002D                     	ds	1
  1356  002E                     ___flmul@grs:
  1357                           
  1358                           ; 4 bytes @ 0xE
  1359  002E                     	ds	4
  1360  0032                     ___flmul@aexp:
  1361                           
  1362                           ; 1 bytes @ 0x12
  1363  0032                     	ds	1
  1364  0033                     ___flmul@bexp:
  1365                           
  1366                           ; 1 bytes @ 0x13
  1367  0033                     	ds	1
  1368  0034                     ___flmul@prod:
  1369                           
  1370                           ; 4 bytes @ 0x14
  1371  0034                     	ds	4
  1372  0038                     ___flmul@temp:
  1373                           
  1374                           ; 2 bytes @ 0x18
  1375  0038                     	ds	2
  1376  003A                     ?___fltol:
  1377  003A                     ___fltol@f1:	
  1378                           ; 4 bytes @ 0x1A
  1379                           
  1380                           
  1381                           ; 4 bytes @ 0x1A
  1382  003A                     	ds	4
  1383  003E                     ??___fltol:
  1384                           
  1385                           ; 1 bytes @ 0x1E
  1386  003E                     	ds	4
  1387  0042                     ___fltol@sign1:
  1388                           
  1389                           ; 1 bytes @ 0x22
  1390  0042                     	ds	1
  1391  0043                     ___fltol@exp1:
  1392                           
  1393                           ; 1 bytes @ 0x23
  1394  0043                     	ds	1
  1395  0044                     ??_ISR:
  1396                           
  1397                           ; 1 bytes @ 0x24
  1398  0044                     	ds	4
  1399  0048                     ISR@Reading:
  1400                           
  1401                           ; 2 bytes @ 0x28
  1402  0048                     	ds	2
  1403                           
  1404                           	psect	maintext
  1405  0C0A                     __pmaintext:	
  1406 ;;
  1407 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1408 ;;
  1409 ;; *************** function _main *****************
  1410 ;; Defined at:
  1411 ;;		line 5 in file "main.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;		None
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;		None
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      void 
  1418 ;; Registers used:
  1419 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1420 ;; Tracked objects:
  1421 ;;		On entry : B00/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1425 ;;      Params:         0       0       0       0       0
  1426 ;;      Locals:         0       0       0       0       0
  1427 ;;      Temps:          0       0       2       0       0
  1428 ;;      Totals:         0       0       2       0       0
  1429 ;;Total ram usage:        2 bytes
  1430 ;; Hardware stack levels required when called:    9
  1431 ;; This function calls:
  1432 ;;		_EWH_Init
  1433 ;;		_EWH_Operating_Mode
  1434 ;;		_EWH_SetTemp_Mode
  1435 ;;		_EWH_Sleep_Mode
  1436 ;;		_EWH_WakeUP_Mode
  1437 ;; This function is called by:
  1438 ;;		Startup code after reset
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           
  1443                           ;psect for function _main
  1444  0C0A                     _main:
  1445  0C0A                     l3596:	
  1446                           ;incstack = 0
  1447 ;; hardware stack exceeded
  1448                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1449                           
  1450                           
  1451                           ;main.c: 7:     EWH_Init();
  1452  0C0A  120A  158A  22EC  120A  158A  	fcall	_EWH_Init
  1453  0C0F                     l3600:	
  1454                           ;main.c: 9:     (0u)? (TRISB |= (1<<4)) : (TRISB &= ~(1<<4));
  1455                           
  1456  0C0F  30EF               	movlw	239
  1457  0C10  00FF               	movwf	btemp+1
  1458  0C11  087F               	movf	btemp+1,w
  1459  0C12  1683               	bsf	3,5	;RP0=1, select bank1
  1460  0C13  1303               	bcf	3,6	;RP1=0, select bank1
  1461  0C14  0586               	andwf	6,f	;volatile
  1462  0C15                     l3604:
  1463  0C15  30DF               	movlw	223
  1464  0C16  00FF               	movwf	btemp+1
  1465  0C17  087F               	movf	btemp+1,w
  1466  0C18  0586               	andwf	6,f	;volatile
  1467  0C19                     l3608:
  1468  0C19  30BF               	movlw	191
  1469  0C1A  00FF               	movwf	btemp+1
  1470  0C1B  087F               	movf	btemp+1,w
  1471  0C1C  0586               	andwf	6,f	;volatile
  1472  0C1D                     l3612:
  1473  0C1D  30EF               	movlw	239
  1474  0C1E  00FF               	movwf	btemp+1
  1475  0C1F  087F               	movf	btemp+1,w
  1476  0C20  1283               	bcf	3,5	;RP0=0, select bank0
  1477  0C21  1303               	bcf	3,6	;RP1=0, select bank0
  1478  0C22  0586               	andwf	6,f	;volatile
  1479  0C23                     l3616:
  1480  0C23  30DF               	movlw	223
  1481  0C24  00FF               	movwf	btemp+1
  1482  0C25  087F               	movf	btemp+1,w
  1483  0C26  0586               	andwf	6,f	;volatile
  1484  0C27                     l3620:
  1485  0C27  30BF               	movlw	191
  1486  0C28  00FF               	movwf	btemp+1
  1487  0C29  087F               	movf	btemp+1,w
  1488  0C2A  0586               	andwf	6,f	;volatile
  1489  0C2B  2C43               	goto	l3632
  1490  0C2C                     l3622:
  1491                           
  1492                           ;main.c: 21:                 EWH_Sleep_Mode();
  1493  0C2C  120A  158A  2275  120A  158A  	fcall	_EWH_Sleep_Mode
  1494                           
  1495                           ;main.c: 22:                 break;
  1496  0C31  2C43               	goto	l3632
  1497  0C32                     l3624:
  1498                           
  1499                           ;main.c: 24:                 EWH_WakeUP_Mode();
  1500  0C32  120A  118A  273A  120A  158A  	fcall	_EWH_WakeUP_Mode
  1501                           
  1502                           ;main.c: 25:                 break;
  1503  0C37  2C43               	goto	l3632
  1504  0C38                     l3626:
  1505                           
  1506                           ;main.c: 27:                 EWH_Operating_Mode();
  1507  0C38  120A  118A  2398  120A  158A  	fcall	_EWH_Operating_Mode
  1508                           
  1509                           ;main.c: 28:                 break;
  1510  0C3D  2C43               	goto	l3632
  1511  0C3E                     l3628:
  1512                           
  1513                           ;main.c: 30:                 EWH_SetTemp_Mode();
  1514  0C3E  120A  118A  24CA  120A  158A  	fcall	_EWH_SetTemp_Mode
  1515  0C43                     l3632:	
  1516                           ;main.c: 31:                 break;
  1517                           
  1518  0C43  1683               	bsf	3,5	;RP0=1, select bank1
  1519  0C44  1303               	bcf	3,6	;RP1=0, select bank1
  1520  0C45  084A               	movf	_EWH_Mode^(0+128),w
  1521  0C46  00BB               	movwf	??_main^(0+128)
  1522  0C47  01BC               	clrf	(??_main^(0+128)+1)
  1523                           
  1524                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1525                           ; Switch size 1, requested type "simple"
  1526                           ; Number of cases is 1, Range of values is 0 to 0
  1527                           ; switch strategies available:
  1528                           ; Name         Instructions Cycles
  1529                           ; simple_byte            4     3 (average)
  1530                           ; direct_byte           11     8 (fixed)
  1531                           ; jumptable            260     6 (fixed)
  1532                           ;	Chosen strategy is simple_byte
  1533  0C48  083C               	movf	(??_main+1)^(0+128),w
  1534  0C49  3A00               	xorlw	0	; case 0
  1535  0C4A  1903               	skipnz
  1536  0C4B  2C4D               	goto	l3924
  1537  0C4C  2C43               	goto	l3632
  1538  0C4D                     l3924:
  1539                           
  1540                           ; Switch size 1, requested type "simple"
  1541                           ; Number of cases is 4, Range of values is 0 to 3
  1542                           ; switch strategies available:
  1543                           ; Name         Instructions Cycles
  1544                           ; simple_byte           13     7 (average)
  1545                           ; direct_byte           20     8 (fixed)
  1546                           ; jumptable            260     6 (fixed)
  1547                           ;	Chosen strategy is simple_byte
  1548  0C4D  083B               	movf	??_main^(0+128),w
  1549  0C4E  3A00               	xorlw	0	; case 0
  1550  0C4F  1903               	skipnz
  1551  0C50  2C2C               	goto	l3622
  1552  0C51  3A01               	xorlw	1	; case 1
  1553  0C52  1903               	skipnz
  1554  0C53  2C32               	goto	l3624
  1555  0C54  3A03               	xorlw	3	; case 2
  1556  0C55  1903               	skipnz
  1557  0C56  2C3E               	goto	l3628
  1558  0C57  3A01               	xorlw	1	; case 3
  1559  0C58  1903               	skipnz
  1560  0C59  2C38               	goto	l3626
  1561  0C5A  2C43               	goto	l3632
  1562  0C5B  120A  118A  2812   	ljmp	start
  1563  0C5E                     __end_of_main:
  1564                           
  1565                           	psect	text1
  1566  073A                     __ptext1:	
  1567 ;; *************** function _EWH_WakeUP_Mode *****************
  1568 ;; Defined at:
  1569 ;;		line 30 in file "EWH.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;		None
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;		None
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  1    wreg      void 
  1576 ;; Registers used:
  1577 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1583 ;;      Params:         0       0       0       0       0
  1584 ;;      Locals:         0       0       0       0       0
  1585 ;;      Temps:          0       0       2       0       0
  1586 ;;      Totals:         0       0       2       0       0
  1587 ;;Total ram usage:        2 bytes
  1588 ;; Hardware stack levels used:    1
  1589 ;; Hardware stack levels required when called:    8
  1590 ;; This function calls:
  1591 ;;		_EWH_EEPROM_Read
  1592 ;;		_EWH_SSD_Update
  1593 ;; This function is called by:
  1594 ;;		_main
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           
  1599                           ;psect for function _EWH_WakeUP_Mode
  1600  073A                     _EWH_WakeUP_Mode:
  1601  073A                     l3148:	
  1602                           ;incstack = 0
  1603 ;; hardware stack exceeded
  1604                           ; Regs used in _EWH_WakeUP_Mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1605                           
  1606                           
  1607                           ;EWH.c: 36:     EWH_Events[0]=0;
  1608  073A  1683               	bsf	3,5	;RP0=1, select bank1
  1609  073B  1303               	bcf	3,6	;RP1=0, select bank1
  1610  073C  01BD               	clrf	_EWH_Events^(0+128)
  1611                           
  1612                           ;EWH.c: 37:     EWH_Events[2]=0;
  1613  073D  01BF               	clrf	(_EWH_Events^(0+128)+2)
  1614                           
  1615                           ;EWH.c: 38:     EWH_Events[1]=0;
  1616  073E  01BE               	clrf	(_EWH_Events^(0+128)+1)
  1617                           
  1618                           ;EWH.c: 39:     EWH_Events[3]=0;
  1619  073F  01C0               	clrf	(_EWH_Events^(0+128)+3)
  1620                           
  1621                           ;EWH.c: 42:     EWH_Events[0]=0;
  1622  0740  01BD               	clrf	_EWH_Events^(0+128)
  1623  0741                     l3150:
  1624                           
  1625                           ;EWH.c: 47:     set_Temp = EWH_EEPROM_Read();
  1626  0741  120A  158A  20C5  120A  118A  	fcall	_EWH_EEPROM_Read
  1627  0746  00FF               	movwf	btemp+1
  1628  0747  087F               	movf	btemp+1,w
  1629  0748  1683               	bsf	3,5	;RP0=1, select bank1
  1630  0749  1303               	bcf	3,6	;RP1=0, select bank1
  1631  074A  00C9               	movwf	_set_Temp^(0+128)
  1632  074B                     l3152:
  1633                           
  1634                           ;EWH.c: 50:     EWH_SSD_Update(set_Temp);
  1635  074B  0849               	movf	_set_Temp^(0+128),w
  1636  074C  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  1637  074D  01AF               	clrf	(??_EWH_WakeUP_Mode^(0+128)+1)
  1638  074E  082E               	movf	??_EWH_WakeUP_Mode^(0+128),w
  1639  074F  00AA               	movwf	EWH_SSD_Update@temp^(0+128)
  1640  0750  082F               	movf	(??_EWH_WakeUP_Mode+1)^(0+128),w
  1641  0751  00AB               	movwf	(EWH_SSD_Update@temp+1)^(0+128)
  1642  0752  120A  158A  256E  120A  118A  	fcall	_EWH_SSD_Update
  1643  0757                     l3154:
  1644                           
  1645                           ;EWH.c: 52:     if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED))
  1646  0757  1283               	bcf	3,5	;RP0=0, select bank0
  1647  0758  1303               	bcf	3,6	;RP1=0, select bank0
  1648  0759  0806               	movf	6,w	;volatile
  1649  075A  1683               	bsf	3,5	;RP0=1, select bank1
  1650  075B  1303               	bcf	3,6	;RP1=0, select bank1
  1651  075C  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  1652  075D  3002               	movlw	2
  1653  075E                     u2515:
  1654  075E  1003               	clrc
  1655  075F  0CAE               	rrf	??_EWH_WakeUP_Mode^(0+128),f
  1656  0760  3EFF               	addlw	-1
  1657  0761  1D03               	skipz
  1658  0762  2F5E               	goto	u2515
  1659  0763  182E               	btfsc	??_EWH_WakeUP_Mode^(0+128),0
  1660  0764  2F66               	goto	u2521
  1661  0765  2F67               	goto	u2520
  1662  0766                     u2521:
  1663  0766  2F8E               	goto	l3166
  1664  0767                     u2520:
  1665  0767                     l3156:
  1666                           
  1667                           ;EWH.c: 53:     {;EWH.c: 54:         _delay((unsigned long)((50)*(4000000/4000.0)));
  1668  0767  3041               	movlw	65
  1669  0768  1683               	bsf	3,5	;RP0=1, select bank1
  1670  0769  1303               	bcf	3,6	;RP1=0, select bank1
  1671  076A  00AF               	movwf	(??_EWH_WakeUP_Mode^(0+128)+1)
  1672  076B  30ED               	movlw	237
  1673  076C  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  1674  076D                     u3747:
  1675  076D  0BAE               	decfsz	??_EWH_WakeUP_Mode^(0+128),f
  1676  076E  2F6D               	goto	u3747
  1677  076F  0BAF               	decfsz	(??_EWH_WakeUP_Mode^(0+128)+1),f
  1678  0770  2F6D               	goto	u3747
  1679  0771  2F72               	nop2
  1680  0772                     l3158:
  1681                           
  1682                           ;EWH.c: 55:         if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED))
  1683  0772  1283               	bcf	3,5	;RP0=0, select bank0
  1684  0773  1303               	bcf	3,6	;RP1=0, select bank0
  1685  0774  0806               	movf	6,w	;volatile
  1686  0775  1683               	bsf	3,5	;RP0=1, select bank1
  1687  0776  1303               	bcf	3,6	;RP1=0, select bank1
  1688  0777  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  1689  0778  3002               	movlw	2
  1690  0779                     u2535:
  1691  0779  1003               	clrc
  1692  077A  0CAE               	rrf	??_EWH_WakeUP_Mode^(0+128),f
  1693  077B  3EFF               	addlw	-1
  1694  077C  1D03               	skipz
  1695  077D  2F79               	goto	u2535
  1696  077E  182E               	btfsc	??_EWH_WakeUP_Mode^(0+128),0
  1697  077F  2F81               	goto	u2541
  1698  0780  2F82               	goto	u2540
  1699  0781                     u2541:
  1700  0781  2FBC               	goto	l523
  1701  0782                     u2540:
  1702  0782                     l3160:
  1703                           
  1704                           ;EWH.c: 56:         {;EWH.c: 57:             EWH_Events[1]=1;
  1705  0782  01BE               	clrf	(_EWH_Events^(0+128)+1)
  1706  0783  0ABE               	incf	(_EWH_Events^(0+128)+1),f
  1707  0784                     l3162:
  1708                           
  1709                           ;EWH.c: 58:             NoPress_Sec_count=0;
  1710  0784  1283               	bcf	3,5	;RP0=0, select bank0
  1711  0785  1303               	bcf	3,6	;RP1=0, select bank0
  1712  0786  01D1               	clrf	_NoPress_Sec_count
  1713  0787                     l3164:
  1714                           
  1715                           ;EWH.c: 59:             EWH_Mode=EWH_SET_TEMP_MODE;
  1716  0787  3002               	movlw	2
  1717  0788  00FF               	movwf	btemp+1
  1718  0789  087F               	movf	btemp+1,w
  1719  078A  1683               	bsf	3,5	;RP0=1, select bank1
  1720  078B  1303               	bcf	3,6	;RP1=0, select bank1
  1721  078C  00CA               	movwf	_EWH_Mode^(0+128)
  1722  078D  2FBC               	goto	l523
  1723  078E                     l3166:
  1724  078E  1283               	bcf	3,5	;RP0=0, select bank0
  1725  078F  1303               	bcf	3,6	;RP1=0, select bank0
  1726  0790  0806               	movf	6,w	;volatile
  1727  0791  1683               	bsf	3,5	;RP0=1, select bank1
  1728  0792  1303               	bcf	3,6	;RP1=0, select bank1
  1729  0793  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  1730  0794  3001               	movlw	1
  1731  0795                     u2555:
  1732  0795  1003               	clrc
  1733  0796  0CAE               	rrf	??_EWH_WakeUP_Mode^(0+128),f
  1734  0797  3EFF               	addlw	-1
  1735  0798  1D03               	skipz
  1736  0799  2F95               	goto	u2555
  1737  079A  182E               	btfsc	??_EWH_WakeUP_Mode^(0+128),0
  1738  079B  2F9D               	goto	u2561
  1739  079C  2F9E               	goto	u2560
  1740  079D                     u2561:
  1741  079D  2FBC               	goto	l523
  1742  079E                     u2560:
  1743  079E                     l3168:
  1744                           
  1745                           ;EWH.c: 63:     {;EWH.c: 64:         _delay((unsigned long)((50)*(4000000/4000.0)));
  1746  079E  3041               	movlw	65
  1747  079F  1683               	bsf	3,5	;RP0=1, select bank1
  1748  07A0  1303               	bcf	3,6	;RP1=0, select bank1
  1749  07A1  00AF               	movwf	(??_EWH_WakeUP_Mode^(0+128)+1)
  1750  07A2  30ED               	movlw	237
  1751  07A3  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  1752  07A4                     u3757:
  1753  07A4  0BAE               	decfsz	??_EWH_WakeUP_Mode^(0+128),f
  1754  07A5  2FA4               	goto	u3757
  1755  07A6  0BAF               	decfsz	(??_EWH_WakeUP_Mode^(0+128)+1),f
  1756  07A7  2FA4               	goto	u3757
  1757  07A8  2FA9               	nop2
  1758  07A9                     l3170:
  1759                           
  1760                           ;EWH.c: 65:         if((!((PORTB & (1<<1)) >> 1)==SW_PRESSED))
  1761  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  1762  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  1763  07AB  0806               	movf	6,w	;volatile
  1764  07AC  1683               	bsf	3,5	;RP0=1, select bank1
  1765  07AD  1303               	bcf	3,6	;RP1=0, select bank1
  1766  07AE  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  1767  07AF  3001               	movlw	1
  1768  07B0                     u2575:
  1769  07B0  1003               	clrc
  1770  07B1  0CAE               	rrf	??_EWH_WakeUP_Mode^(0+128),f
  1771  07B2  3EFF               	addlw	-1
  1772  07B3  1D03               	skipz
  1773  07B4  2FB0               	goto	u2575
  1774  07B5  182E               	btfsc	??_EWH_WakeUP_Mode^(0+128),0
  1775  07B6  2FB8               	goto	u2581
  1776  07B7  2FB9               	goto	u2580
  1777  07B8                     u2581:
  1778  07B8  2FBC               	goto	l523
  1779  07B9                     u2580:
  1780  07B9                     l3172:
  1781                           
  1782                           ;EWH.c: 66:         {;EWH.c: 67:             EWH_Events[2]=1;
  1783  07B9  01BF               	clrf	(_EWH_Events^(0+128)+2)
  1784  07BA  0ABF               	incf	(_EWH_Events^(0+128)+2),f
  1785  07BB  2F84               	goto	l3162
  1786  07BC                     l523:
  1787  07BC  0008               	return
  1788  07BD                     __end_of_EWH_WakeUP_Mode:
  1789                           
  1790                           	psect	text2
  1791  0A75                     __ptext2:	
  1792 ;; *************** function _EWH_Sleep_Mode *****************
  1793 ;; Defined at:
  1794 ;;		line 5 in file "EWH.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;		None
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;		None
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  1    wreg      void 
  1801 ;; Registers used:
  1802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1808 ;;      Params:         0       0       0       0       0
  1809 ;;      Locals:         0       0       0       0       0
  1810 ;;      Temps:          0       0       0       0       0
  1811 ;;      Totals:         0       0       0       0       0
  1812 ;;Total ram usage:        0 bytes
  1813 ;; Hardware stack levels used:    1
  1814 ;; Hardware stack levels required when called:    6
  1815 ;; This function calls:
  1816 ;;		_DD_SetState
  1817 ;;		_EWH_SSD_OFF
  1818 ;;		_TMR1_Stop
  1819 ;; This function is called by:
  1820 ;;		_main
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           
  1825                           ;psect for function _EWH_Sleep_Mode
  1826  0A75                     _EWH_Sleep_Mode:
  1827  0A75                     l3124:	
  1828                           ;incstack = 0
  1829                           ; Regs used in _EWH_Sleep_Mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1830                           
  1831                           
  1832                           ;EWH.c: 9:     EWH_SSD_OFF();
  1833  0A75  120A  158A  20DE  120A  158A  	fcall	_EWH_SSD_OFF
  1834                           
  1835                           ;EWH.c: 11:     DD_SetState(HEATER,OFF);
  1836  0A7A  1683               	bsf	3,5	;RP0=1, select bank1
  1837  0A7B  1303               	bcf	3,6	;RP1=0, select bank1
  1838  0A7C  01A0               	clrf	DD_SetState@state^(0+128)
  1839  0A7D  3000               	movlw	0
  1840  0A7E  120A  158A  245E  120A  158A  	fcall	_DD_SetState
  1841                           
  1842                           ;EWH.c: 13:     DD_SetState(COOLER,OFF);
  1843  0A83  1683               	bsf	3,5	;RP0=1, select bank1
  1844  0A84  1303               	bcf	3,6	;RP1=0, select bank1
  1845  0A85  01A0               	clrf	DD_SetState@state^(0+128)
  1846  0A86  3001               	movlw	1
  1847  0A87  120A  158A  245E  120A  158A  	fcall	_DD_SetState
  1848                           
  1849                           ;EWH.c: 15:     DD_SetState(HEATER_LED,OFF);
  1850  0A8C  1683               	bsf	3,5	;RP0=1, select bank1
  1851  0A8D  1303               	bcf	3,6	;RP1=0, select bank1
  1852  0A8E  01A0               	clrf	DD_SetState@state^(0+128)
  1853  0A8F  3002               	movlw	2
  1854  0A90  120A  158A  245E  120A  158A  	fcall	_DD_SetState
  1855  0A95                     l3126:
  1856                           
  1857                           ;EWH.c: 17:     TMR1_Stop();
  1858  0A95  120A  118A  27FA  120A  158A  	fcall	_TMR1_Stop
  1859  0A9A                     l3128:
  1860                           
  1861                           ;EWH.c: 19:     EWH_Events[0]=0;
  1862  0A9A  1683               	bsf	3,5	;RP0=1, select bank1
  1863  0A9B  1303               	bcf	3,6	;RP1=0, select bank1
  1864  0A9C  01BD               	clrf	_EWH_Events^(0+128)
  1865  0A9D                     l3130:
  1866                           
  1867                           ;EWH.c: 20:     EWH_Events[2]=0;
  1868  0A9D  01BF               	clrf	(_EWH_Events^(0+128)+2)
  1869  0A9E                     l3132:
  1870                           
  1871                           ;EWH.c: 21:     EWH_Events[1]=0;
  1872  0A9E  01BE               	clrf	(_EWH_Events^(0+128)+1)
  1873  0A9F                     l3134:
  1874                           
  1875                           ;EWH.c: 22:     EWH_Events[3]=0;
  1876  0A9F  01C0               	clrf	(_EWH_Events^(0+128)+3)
  1877  0AA0                     l3138:	
  1878                           ;EWH.c: 24:     (OFF)?(PORTB |= (1<<4)) : (PORTB &= ~(1<<4));
  1879                           
  1880  0AA0  30EF               	movlw	239
  1881  0AA1  00FF               	movwf	btemp+1
  1882  0AA2  087F               	movf	btemp+1,w
  1883  0AA3  1283               	bcf	3,5	;RP0=0, select bank0
  1884  0AA4  1303               	bcf	3,6	;RP1=0, select bank0
  1885  0AA5  0586               	andwf	6,f	;volatile
  1886  0AA6                     l3142:
  1887  0AA6  30DF               	movlw	223
  1888  0AA7  00FF               	movwf	btemp+1
  1889  0AA8  087F               	movf	btemp+1,w
  1890  0AA9  0586               	andwf	6,f	;volatile
  1891  0AAA                     l3146:
  1892  0AAA  30BF               	movlw	191
  1893  0AAB  00FF               	movwf	btemp+1
  1894  0AAC  087F               	movf	btemp+1,w
  1895  0AAD  0586               	andwf	6,f	;volatile
  1896  0AAE                     l514:
  1897  0AAE  0063               	sleep	;# 
  1898  0AAF                     l515:
  1899  0AAF  0008               	return
  1900  0AB0                     __end_of_EWH_Sleep_Mode:
  1901                           
  1902                           	psect	text3
  1903  04CA                     __ptext3:	
  1904 ;; *************** function _EWH_SetTemp_Mode *****************
  1905 ;; Defined at:
  1906 ;;		line 73 in file "EWH.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;		None
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;		None
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      void 
  1913 ;; Registers used:
  1914 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1920 ;;      Params:         0       0       0       0       0
  1921 ;;      Locals:         0       0       0       0       0
  1922 ;;      Temps:          0       0       2       0       0
  1923 ;;      Totals:         0       0       2       0       0
  1924 ;;Total ram usage:        2 bytes
  1925 ;; Hardware stack levels used:    1
  1926 ;; Hardware stack levels required when called:    8
  1927 ;; This function calls:
  1928 ;;		_DD_SetState
  1929 ;;		_EWH_EEPROM_Read
  1930 ;;		_EWH_EEPROM_Update
  1931 ;;		_EWH_SSD_OFF
  1932 ;;		_EWH_SSD_Update
  1933 ;;		_TMR1_Start
  1934 ;; This function is called by:
  1935 ;;		_main
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           
  1940                           ;psect for function _EWH_SetTemp_Mode
  1941  04CA                     _EWH_SetTemp_Mode:
  1942  04CA                     l3240:	
  1943                           ;incstack = 0
  1944 ;; hardware stack exceeded
  1945                           ; Regs used in _EWH_SetTemp_Mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1946                           
  1947                           
  1948                           ;EWH.c: 79:     EWH_Events[0]=0;
  1949  04CA  1683               	bsf	3,5	;RP0=1, select bank1
  1950  04CB  1303               	bcf	3,6	;RP1=0, select bank1
  1951  04CC  01BD               	clrf	_EWH_Events^(0+128)
  1952                           
  1953                           ;EWH.c: 80:     EWH_Events[2]=0;
  1954  04CD  01BF               	clrf	(_EWH_Events^(0+128)+2)
  1955                           
  1956                           ;EWH.c: 81:     EWH_Events[1]=0;
  1957  04CE  01BE               	clrf	(_EWH_Events^(0+128)+1)
  1958                           
  1959                           ;EWH.c: 82:     EWH_Events[3]=0;
  1960  04CF  01C0               	clrf	(_EWH_Events^(0+128)+3)
  1961  04D0                     l3242:
  1962                           
  1963                           ;EWH.c: 86:     set_Temp = EWH_EEPROM_Read();
  1964  04D0  120A  158A  20C5  120A  118A  	fcall	_EWH_EEPROM_Read
  1965  04D5  00FF               	movwf	btemp+1
  1966  04D6  087F               	movf	btemp+1,w
  1967  04D7  1683               	bsf	3,5	;RP0=1, select bank1
  1968  04D8  1303               	bcf	3,6	;RP1=0, select bank1
  1969  04D9  00C9               	movwf	_set_Temp^(0+128)
  1970  04DA                     l3244:
  1971                           
  1972                           ;EWH.c: 88:     DD_SetState(HEATER,OFF);
  1973  04DA  01A0               	clrf	DD_SetState@state^(0+128)
  1974  04DB  3000               	movlw	0
  1975  04DC  120A  158A  245E  120A  118A  	fcall	_DD_SetState
  1976  04E1                     l3246:
  1977                           
  1978                           ;EWH.c: 89:     DD_SetState(COOLER,OFF);
  1979  04E1  1683               	bsf	3,5	;RP0=1, select bank1
  1980  04E2  1303               	bcf	3,6	;RP1=0, select bank1
  1981  04E3  01A0               	clrf	DD_SetState@state^(0+128)
  1982  04E4  3001               	movlw	1
  1983  04E5  120A  158A  245E  120A  118A  	fcall	_DD_SetState
  1984  04EA                     l3248:
  1985                           
  1986                           ;EWH.c: 91:     EWH_SSD_Update(set_Temp);
  1987  04EA  1683               	bsf	3,5	;RP0=1, select bank1
  1988  04EB  1303               	bcf	3,6	;RP1=0, select bank1
  1989  04EC  0849               	movf	_set_Temp^(0+128),w
  1990  04ED  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  1991  04EE  01AF               	clrf	(??_EWH_SetTemp_Mode^(0+128)+1)
  1992  04EF  082E               	movf	??_EWH_SetTemp_Mode^(0+128),w
  1993  04F0  00AA               	movwf	EWH_SSD_Update@temp^(0+128)
  1994  04F1  082F               	movf	(??_EWH_SetTemp_Mode+1)^(0+128),w
  1995  04F2  00AB               	movwf	(EWH_SSD_Update@temp+1)^(0+128)
  1996  04F3  120A  158A  256E  120A  118A  	fcall	_EWH_SSD_Update
  1997  04F8                     l3250:
  1998                           
  1999                           ;EWH.c: 93:     TMR1_Start();
  2000  04F8  120A  158A  20FB  120A  118A  	fcall	_TMR1_Start
  2001  04FD                     l3252:
  2002                           
  2003                           ;EWH.c: 94:     NoPress_Sec_count=0;
  2004  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  2005  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  2006  04FF  01D1               	clrf	_NoPress_Sec_count
  2007  0500                     l3254:
  2008                           
  2009                           ;EWH.c: 96:     {;EWH.c: 97:         if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED) && set_Te
      +                          mp<75)
  2010  0500  1283               	bcf	3,5	;RP0=0, select bank0
  2011  0501  1303               	bcf	3,6	;RP1=0, select bank0
  2012  0502  0806               	movf	6,w	;volatile
  2013  0503  1683               	bsf	3,5	;RP0=1, select bank1
  2014  0504  1303               	bcf	3,6	;RP1=0, select bank1
  2015  0505  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2016  0506  3002               	movlw	2
  2017  0507                     u2745:
  2018  0507  1003               	clrc
  2019  0508  0CAE               	rrf	??_EWH_SetTemp_Mode^(0+128),f
  2020  0509  3EFF               	addlw	-1
  2021  050A  1D03               	skipz
  2022  050B  2D07               	goto	u2745
  2023  050C  182E               	btfsc	??_EWH_SetTemp_Mode^(0+128),0
  2024  050D  2D0F               	goto	u2751
  2025  050E  2D10               	goto	u2750
  2026  050F                     u2751:
  2027  050F  2D39               	goto	l3266
  2028  0510                     u2750:
  2029  0510                     l3256:
  2030  0510  304B               	movlw	75
  2031  0511  0249               	subwf	_set_Temp^(0+128),w
  2032  0512  1803               	skipnc
  2033  0513  2D15               	goto	u2761
  2034  0514  2D16               	goto	u2760
  2035  0515                     u2761:
  2036  0515  2D39               	goto	l3266
  2037  0516                     u2760:
  2038  0516                     l3258:
  2039                           
  2040                           ;EWH.c: 98:         {;EWH.c: 99:             _delay((unsigned long)((50)*(4000000/4000.0
      +                          )));
  2041  0516  3041               	movlw	65
  2042  0517  1683               	bsf	3,5	;RP0=1, select bank1
  2043  0518  1303               	bcf	3,6	;RP1=0, select bank1
  2044  0519  00AF               	movwf	(??_EWH_SetTemp_Mode^(0+128)+1)
  2045  051A  30ED               	movlw	237
  2046  051B  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2047  051C                     u3767:
  2048  051C  0BAE               	decfsz	??_EWH_SetTemp_Mode^(0+128),f
  2049  051D  2D1C               	goto	u3767
  2050  051E  0BAF               	decfsz	(??_EWH_SetTemp_Mode^(0+128)+1),f
  2051  051F  2D1C               	goto	u3767
  2052  0520  2D21               	nop2
  2053  0521                     l3260:
  2054                           
  2055                           ;EWH.c: 100:             if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED))
  2056  0521  1283               	bcf	3,5	;RP0=0, select bank0
  2057  0522  1303               	bcf	3,6	;RP1=0, select bank0
  2058  0523  0806               	movf	6,w	;volatile
  2059  0524  1683               	bsf	3,5	;RP0=1, select bank1
  2060  0525  1303               	bcf	3,6	;RP1=0, select bank1
  2061  0526  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2062  0527  3002               	movlw	2
  2063  0528                     u2775:
  2064  0528  1003               	clrc
  2065  0529  0CAE               	rrf	??_EWH_SetTemp_Mode^(0+128),f
  2066  052A  3EFF               	addlw	-1
  2067  052B  1D03               	skipz
  2068  052C  2D28               	goto	u2775
  2069  052D  182E               	btfsc	??_EWH_SetTemp_Mode^(0+128),0
  2070  052E  2D30               	goto	u2781
  2071  052F  2D31               	goto	u2780
  2072  0530                     u2781:
  2073  0530  2D6D               	goto	l3278
  2074  0531                     u2780:
  2075  0531                     l3262:
  2076                           
  2077                           ;EWH.c: 101:             {;EWH.c: 102:                 set_Temp+=5;
  2078  0531  3005               	movlw	5
  2079  0532  00FF               	movwf	btemp+1
  2080  0533  087F               	movf	btemp+1,w
  2081  0534  07C9               	addwf	_set_Temp^(0+128),f
  2082  0535                     l3264:
  2083                           
  2084                           ;EWH.c: 103:                 NoPress_Sec_count=0;
  2085  0535  1283               	bcf	3,5	;RP0=0, select bank0
  2086  0536  1303               	bcf	3,6	;RP1=0, select bank0
  2087  0537  01D1               	clrf	_NoPress_Sec_count
  2088  0538  2D6D               	goto	l3278
  2089  0539                     l3266:
  2090  0539  1283               	bcf	3,5	;RP0=0, select bank0
  2091  053A  1303               	bcf	3,6	;RP1=0, select bank0
  2092  053B  0806               	movf	6,w	;volatile
  2093  053C  1683               	bsf	3,5	;RP0=1, select bank1
  2094  053D  1303               	bcf	3,6	;RP1=0, select bank1
  2095  053E  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2096  053F  3001               	movlw	1
  2097  0540                     u2795:
  2098  0540  1003               	clrc
  2099  0541  0CAE               	rrf	??_EWH_SetTemp_Mode^(0+128),f
  2100  0542  3EFF               	addlw	-1
  2101  0543  1D03               	skipz
  2102  0544  2D40               	goto	u2795
  2103  0545  182E               	btfsc	??_EWH_SetTemp_Mode^(0+128),0
  2104  0546  2D48               	goto	u2801
  2105  0547  2D49               	goto	u2800
  2106  0548                     u2801:
  2107  0548  2D6D               	goto	l3278
  2108  0549                     u2800:
  2109  0549                     l3268:
  2110  0549  3024               	movlw	36
  2111  054A  0249               	subwf	_set_Temp^(0+128),w
  2112  054B  1C03               	skipc
  2113  054C  2D4E               	goto	u2811
  2114  054D  2D4F               	goto	u2810
  2115  054E                     u2811:
  2116  054E  2D6D               	goto	l3278
  2117  054F                     u2810:
  2118  054F                     l3270:
  2119                           
  2120                           ;EWH.c: 107:         {;EWH.c: 108:             _delay((unsigned long)((50)*(4000000/4000
      +                          .0)));
  2121  054F  3041               	movlw	65
  2122  0550  1683               	bsf	3,5	;RP0=1, select bank1
  2123  0551  1303               	bcf	3,6	;RP1=0, select bank1
  2124  0552  00AF               	movwf	(??_EWH_SetTemp_Mode^(0+128)+1)
  2125  0553  30ED               	movlw	237
  2126  0554  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2127  0555                     u3777:
  2128  0555  0BAE               	decfsz	??_EWH_SetTemp_Mode^(0+128),f
  2129  0556  2D55               	goto	u3777
  2130  0557  0BAF               	decfsz	(??_EWH_SetTemp_Mode^(0+128)+1),f
  2131  0558  2D55               	goto	u3777
  2132  0559  2D5A               	nop2
  2133  055A                     l3272:
  2134                           
  2135                           ;EWH.c: 109:             if((!((PORTB & (1<<1)) >> 1)==SW_PRESSED))
  2136  055A  1283               	bcf	3,5	;RP0=0, select bank0
  2137  055B  1303               	bcf	3,6	;RP1=0, select bank0
  2138  055C  0806               	movf	6,w	;volatile
  2139  055D  1683               	bsf	3,5	;RP0=1, select bank1
  2140  055E  1303               	bcf	3,6	;RP1=0, select bank1
  2141  055F  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2142  0560  3001               	movlw	1
  2143  0561                     u2825:
  2144  0561  1003               	clrc
  2145  0562  0CAE               	rrf	??_EWH_SetTemp_Mode^(0+128),f
  2146  0563  3EFF               	addlw	-1
  2147  0564  1D03               	skipz
  2148  0565  2D61               	goto	u2825
  2149  0566  182E               	btfsc	??_EWH_SetTemp_Mode^(0+128),0
  2150  0567  2D69               	goto	u2831
  2151  0568  2D6A               	goto	u2830
  2152  0569                     u2831:
  2153  0569  2D6D               	goto	l3278
  2154  056A                     u2830:
  2155  056A                     l3274:
  2156                           
  2157                           ;EWH.c: 110:             {;EWH.c: 111:                 set_Temp-=5;
  2158  056A  3005               	movlw	5
  2159  056B  02C9               	subwf	_set_Temp^(0+128),f
  2160  056C  2D35               	goto	l3264
  2161  056D                     l3278:
  2162                           
  2163                           ;EWH.c: 115:         if(EWH_Events[3] || EWH_Events[0])
  2164  056D  1683               	bsf	3,5	;RP0=1, select bank1
  2165  056E  1303               	bcf	3,6	;RP1=0, select bank1
  2166  056F  0840               	movf	(_EWH_Events^(0+128)+3),w
  2167  0570  1D03               	btfss	3,2
  2168  0571  2D73               	goto	u2841
  2169  0572  2D74               	goto	u2840
  2170  0573                     u2841:
  2171  0573  2D79               	goto	l3282
  2172  0574                     u2840:
  2173  0574                     l3280:
  2174  0574  083D               	movf	_EWH_Events^(0+128),w
  2175  0575  1903               	btfsc	3,2
  2176  0576  2D78               	goto	u2851
  2177  0577  2D79               	goto	u2850
  2178  0578                     u2851:
  2179  0578  2D80               	goto	l3284
  2180  0579                     u2850:
  2181  0579                     l3282:
  2182                           
  2183                           ;EWH.c: 116:         {;EWH.c: 118:             EWH_EEPROM_Update(set_Temp);
  2184  0579  0849               	movf	_set_Temp^(0+128),w
  2185  057A  120A  158A  210B  120A  118A  	fcall	_EWH_EEPROM_Update
  2186                           
  2187                           ;EWH.c: 120:             break ;
  2188  057F  2D98               	goto	l3290
  2189  0580                     l3284:
  2190                           
  2191                           ;EWH.c: 123:         if(SSD_Blink_flag)
  2192  0580  0846               	movf	_SSD_Blink_flag^(0+128),w
  2193  0581  1903               	btfsc	3,2
  2194  0582  2D84               	goto	u2861
  2195  0583  2D85               	goto	u2860
  2196  0584                     u2861:
  2197  0584  2D92               	goto	l3288
  2198  0585                     u2860:
  2199  0585                     l3286:
  2200                           
  2201                           ;EWH.c: 124:         {;EWH.c: 125:             EWH_SSD_Update(set_Temp);
  2202  0585  0849               	movf	_set_Temp^(0+128),w
  2203  0586  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2204  0587  01AF               	clrf	(??_EWH_SetTemp_Mode^(0+128)+1)
  2205  0588  082E               	movf	??_EWH_SetTemp_Mode^(0+128),w
  2206  0589  00AA               	movwf	EWH_SSD_Update@temp^(0+128)
  2207  058A  082F               	movf	(??_EWH_SetTemp_Mode+1)^(0+128),w
  2208  058B  00AB               	movwf	(EWH_SSD_Update@temp+1)^(0+128)
  2209  058C  120A  158A  256E  120A  118A  	fcall	_EWH_SSD_Update
  2210                           
  2211                           ;EWH.c: 126:         }
  2212  0591  2D00               	goto	l3254
  2213  0592                     l3288:
  2214                           
  2215                           ;EWH.c: 128:         {;EWH.c: 129:             EWH_SSD_OFF();
  2216  0592  120A  158A  20DE  120A  118A  	fcall	_EWH_SSD_OFF
  2217  0597  2D00               	goto	l3254
  2218  0598                     l3290:
  2219                           
  2220                           ;EWH.c: 134:     if(EWH_Events[3])
  2221  0598  1683               	bsf	3,5	;RP0=1, select bank1
  2222  0599  1303               	bcf	3,6	;RP1=0, select bank1
  2223  059A  0840               	movf	(_EWH_Events^(0+128)+3),w
  2224  059B  1903               	btfsc	3,2
  2225  059C  2D9E               	goto	u2871
  2226  059D  2D9F               	goto	u2870
  2227  059E                     u2871:
  2228  059E  2DA4               	goto	l540
  2229  059F                     u2870:
  2230  059F                     l3292:
  2231                           
  2232                           ;EWH.c: 135:     {;EWH.c: 136:         EWH_Events[3]=0;
  2233  059F  01C0               	clrf	(_EWH_Events^(0+128)+3)
  2234  05A0                     l3294:
  2235                           
  2236                           ;EWH.c: 139:         EWH_Mode=EWH_OPERATING_MODE;
  2237  05A0  3003               	movlw	3
  2238  05A1  00FF               	movwf	btemp+1
  2239  05A2  087F               	movf	btemp+1,w
  2240  05A3  00CA               	movwf	_EWH_Mode^(0+128)
  2241  05A4                     l540:
  2242  05A4  0008               	return
  2243  05A5                     __end_of_EWH_SetTemp_Mode:
  2244                           
  2245                           	psect	text4
  2246  08DE                     __ptext4:	
  2247 ;; *************** function _EWH_SSD_OFF *****************
  2248 ;; Defined at:
  2249 ;;		line 75 in file "DD.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;		None
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;		None
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  1    wreg      void 
  2256 ;; Registers used:
  2257 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2263 ;;      Params:         0       0       0       0       0
  2264 ;;      Locals:         0       0       0       0       0
  2265 ;;      Temps:          0       0       0       0       0
  2266 ;;      Totals:         0       0       0       0       0
  2267 ;;Total ram usage:        0 bytes
  2268 ;; Hardware stack levels used:    1
  2269 ;; Hardware stack levels required when called:    5
  2270 ;; This function calls:
  2271 ;;		_SSD_OFF
  2272 ;; This function is called by:
  2273 ;;		_EWH_Sleep_Mode
  2274 ;;		_EWH_SetTemp_Mode
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           
  2279                           ;psect for function _EWH_SSD_OFF
  2280  08DE                     _EWH_SSD_OFF:
  2281  08DE                     l2940:	
  2282                           ;incstack = 0
  2283                           ; Regs used in _EWH_SSD_OFF: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2284                           
  2285                           
  2286                           ;DD.c: 77:     SSD_OFF(3);
  2287  08DE  3003               	movlw	3
  2288  08DF  120A  158A  20BA  120A  158A  	fcall	_SSD_OFF
  2289                           
  2290                           ;DD.c: 78:     SSD_OFF(4);
  2291  08E4  3004               	movlw	4
  2292  08E5  120A  158A  20BA  120A  158A  	fcall	_SSD_OFF
  2293  08EA                     l285:
  2294  08EA  0008               	return
  2295  08EB                     __end_of_EWH_SSD_OFF:
  2296                           
  2297                           	psect	text5
  2298  090B                     __ptext5:	
  2299 ;; *************** function _EWH_EEPROM_Update *****************
  2300 ;; Defined at:
  2301 ;;		line 258 in file "EWH.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;  newSetTemp      1    wreg     unsigned char 
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;  newSetTemp      1    6[BANK1 ] unsigned char 
  2306 ;; Return value:  Size  Location     Type
  2307 ;;                  1    wreg      void 
  2308 ;; Registers used:
  2309 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/0
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2315 ;;      Params:         0       0       0       0       0
  2316 ;;      Locals:         0       0       1       0       0
  2317 ;;      Temps:          0       0       0       0       0
  2318 ;;      Totals:         0       0       1       0       0
  2319 ;;Total ram usage:        1 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; Hardware stack levels required when called:    6
  2322 ;; This function calls:
  2323 ;;		_EEPROM_WriteByte
  2324 ;; This function is called by:
  2325 ;;		_EWH_SetTemp_Mode
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           
  2330                           ;psect for function _EWH_EEPROM_Update
  2331  090B                     _EWH_EEPROM_Update:
  2332                           
  2333                           ;incstack = 0
  2334                           ; Regs used in _EWH_EEPROM_Update: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2335                           ;EWH_EEPROM_Update@newSetTemp stored from wreg
  2336  090B  1683               	bsf	3,5	;RP0=1, select bank1
  2337  090C  1303               	bcf	3,6	;RP1=0, select bank1
  2338  090D  00A6               	movwf	EWH_EEPROM_Update@newSetTemp^(0+128)
  2339  090E                     l3026:
  2340                           
  2341                           ;EWH.c: 258: void EWH_EEPROM_Update(uint8_t newSetTemp);EWH.c: 259: {;EWH.c: 260:     EE
      +                          PROM_WriteByte(0x0020,newSetTemp);
  2342  090E  3020               	movlw	32
  2343  090F  00A1               	movwf	EEPROM_WriteByte@address^(0+128)
  2344  0910  3000               	movlw	0
  2345  0911  00A2               	movwf	(EEPROM_WriteByte@address^(0+128)+1)
  2346  0912  0826               	movf	EWH_EEPROM_Update@newSetTemp^(0+128),w
  2347  0913  00FF               	movwf	btemp+1
  2348  0914  087F               	movf	btemp+1,w
  2349  0915  00A3               	movwf	EEPROM_WriteByte@data^(0+128)
  2350  0916  120A  158A  223A  120A  158A  	fcall	_EEPROM_WriteByte
  2351  091B                     l569:
  2352  091B  0008               	return
  2353  091C                     __end_of_EWH_EEPROM_Update:
  2354                           
  2355                           	psect	text6
  2356  08C5                     __ptext6:	
  2357 ;; *************** function _EWH_EEPROM_Read *****************
  2358 ;; Defined at:
  2359 ;;		line 262 in file "EWH.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;		None
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;		None
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  1    wreg      unsigned char 
  2366 ;; Registers used:
  2367 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2373 ;;      Params:         0       0       0       0       0
  2374 ;;      Locals:         0       0       0       0       0
  2375 ;;      Temps:          0       0       0       0       0
  2376 ;;      Totals:         0       0       0       0       0
  2377 ;;Total ram usage:        0 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; Hardware stack levels required when called:    7
  2380 ;; This function calls:
  2381 ;;		_EEPROM_ReadByte
  2382 ;; This function is called by:
  2383 ;;		_EWH_WakeUP_Mode
  2384 ;;		_EWH_SetTemp_Mode
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           
  2389                           ;psect for function _EWH_EEPROM_Read
  2390  08C5                     _EWH_EEPROM_Read:
  2391  08C5                     l3022:	
  2392                           ;incstack = 0
  2393 ;; hardware stack exceeded
  2394                           ; Regs used in _EWH_EEPROM_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2395                           
  2396                           
  2397                           ;EWH.c: 264:     return EEPROM_ReadByte(0x0020);
  2398  08C5  3020               	movlw	32
  2399  08C6  1683               	bsf	3,5	;RP0=1, select bank1
  2400  08C7  1303               	bcf	3,6	;RP1=0, select bank1
  2401  08C8  00A2               	movwf	EEPROM_ReadByte@address^(0+128)
  2402  08C9  3000               	movlw	0
  2403  08CA  00A3               	movwf	(EEPROM_ReadByte@address^(0+128)+1)
  2404  08CB  120A  158A  2513  120A  158A  	fcall	_EEPROM_ReadByte
  2405  08D0                     l572:
  2406  08D0  0008               	return
  2407  08D1                     __end_of_EWH_EEPROM_Read:
  2408                           
  2409                           	psect	text7
  2410  0D13                     __ptext7:	
  2411 ;; *************** function _EEPROM_ReadByte *****************
  2412 ;; Defined at:
  2413 ;;		line 36 in file "EEPROM.c"
  2414 ;; Parameters:    Size  Location     Type
  2415 ;;  address         2    2[BANK1 ] unsigned short 
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;  data            1    6[BANK1 ] unsigned char 
  2418 ;; Return value:  Size  Location     Type
  2419 ;;                  1    wreg      unsigned char 
  2420 ;; Registers used:
  2421 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2422 ;; Tracked objects:
  2423 ;;		On entry : 0/0
  2424 ;;		On exit  : 0/0
  2425 ;;		Unchanged: 0/0
  2426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2427 ;;      Params:         0       0       2       0       0
  2428 ;;      Locals:         0       0       1       0       0
  2429 ;;      Temps:          0       0       2       0       0
  2430 ;;      Totals:         0       0       5       0       0
  2431 ;;Total ram usage:        5 bytes
  2432 ;; Hardware stack levels used:    1
  2433 ;; Hardware stack levels required when called:    6
  2434 ;; This function calls:
  2435 ;;		_I2C_Master_ReadByte
  2436 ;;		_I2C_Master_Send_RepeatedStart
  2437 ;;		_I2C_Master_Send_Start
  2438 ;;		_I2C_Master_Send_Stop
  2439 ;;		_I2C_Master_WriteByte
  2440 ;; This function is called by:
  2441 ;;		_EWH_EEPROM_Read
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           
  2446                           ;psect for function _EEPROM_ReadByte
  2447  0D13                     _EEPROM_ReadByte:
  2448  0D13                     l2710:	
  2449                           ;incstack = 0
  2450 ;; hardware stack exceeded
  2451                           ; Regs used in _EEPROM_ReadByte: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2452                           
  2453                           
  2454                           ;EEPROM.c: 36: uint8_t EEPROM_ReadByte(uint16_t address );EEPROM.c: 37: {;EEPROM.c: 38: 
      +                              uint8_t data;;EEPROM.c: 40:     I2C_Master_Send_Start();
  2455  0D13  120A  158A  2081  120A  158A  	fcall	_I2C_Master_Send_Start
  2456                           
  2457                           ;EEPROM.c: 42:     while(I2C_Master_WriteByte(0xA0 | ((address & 0x0700)>>7)) )
  2458  0D18  2D1E               	goto	l28
  2459  0D19                     l2712:
  2460                           
  2461                           ;EEPROM.c: 43:         I2C_Master_Send_RepeatedStart();
  2462  0D19  120A  158A  2078  120A  158A  	fcall	_I2C_Master_Send_RepeatedStart
  2463  0D1E                     l28:
  2464                           
  2465                           ;EEPROM.c: 42:     while(I2C_Master_WriteByte(0xA0 | ((address & 0x0700)>>7)) )
  2466  0D1E  1683               	bsf	3,5	;RP0=1, select bank1
  2467  0D1F  1303               	bcf	3,6	;RP1=0, select bank1
  2468  0D20  0823               	movf	(EEPROM_ReadByte@address+1)^(0+128),w
  2469  0D21  00A5               	movwf	(??_EEPROM_ReadByte^(0+128)+1)
  2470  0D22  0822               	movf	EEPROM_ReadByte@address^(0+128),w
  2471  0D23  00A4               	movwf	??_EEPROM_ReadByte^(0+128)
  2472  0D24  3007               	movlw	7
  2473  0D25                     u1985:
  2474  0D25  1003               	clrc
  2475  0D26  0CA5               	rrf	(??_EEPROM_ReadByte^(0+128)+1),f
  2476  0D27  0CA4               	rrf	??_EEPROM_ReadByte^(0+128),f
  2477  0D28  3EFF               	addlw	-1
  2478  0D29  1D03               	skipz
  2479  0D2A  2D25               	goto	u1985
  2480  0D2B  0824               	movf	??_EEPROM_ReadByte^(0+128),w
  2481  0D2C  390E               	andlw	14
  2482  0D2D  38A0               	iorlw	160
  2483  0D2E  120A  158A  2169  120A  158A  	fcall	_I2C_Master_WriteByte
  2484  0D33  3A00               	xorlw	0
  2485  0D34  1D03               	skipz
  2486  0D35  2D37               	goto	u1991
  2487  0D36  2D38               	goto	u1990
  2488  0D37                     u1991:
  2489  0D37  2D19               	goto	l2712
  2490  0D38                     u1990:
  2491  0D38                     l2714:
  2492                           
  2493                           ;EEPROM.c: 46:     I2C_Master_WriteByte((uint8_t)address);
  2494  0D38  1683               	bsf	3,5	;RP0=1, select bank1
  2495  0D39  1303               	bcf	3,6	;RP1=0, select bank1
  2496  0D3A  0822               	movf	EEPROM_ReadByte@address^(0+128),w
  2497  0D3B  120A  158A  2169  120A  158A  	fcall	_I2C_Master_WriteByte
  2498                           
  2499                           ;EEPROM.c: 48:     I2C_Master_Send_RepeatedStart();
  2500  0D40  120A  158A  2078  120A  158A  	fcall	_I2C_Master_Send_RepeatedStart
  2501                           
  2502                           ;EEPROM.c: 49:     I2C_Master_WriteByte(0xA1 | ((address & 0x0700)>>7));
  2503  0D45  1683               	bsf	3,5	;RP0=1, select bank1
  2504  0D46  1303               	bcf	3,6	;RP1=0, select bank1
  2505  0D47  0823               	movf	(EEPROM_ReadByte@address+1)^(0+128),w
  2506  0D48  00A5               	movwf	(??_EEPROM_ReadByte^(0+128)+1)
  2507  0D49  0822               	movf	EEPROM_ReadByte@address^(0+128),w
  2508  0D4A  00A4               	movwf	??_EEPROM_ReadByte^(0+128)
  2509  0D4B  3007               	movlw	7
  2510  0D4C                     u2005:
  2511  0D4C  1003               	clrc
  2512  0D4D  0CA5               	rrf	(??_EEPROM_ReadByte^(0+128)+1),f
  2513  0D4E  0CA4               	rrf	??_EEPROM_ReadByte^(0+128),f
  2514  0D4F  3EFF               	addlw	-1
  2515  0D50  1D03               	skipz
  2516  0D51  2D4C               	goto	u2005
  2517  0D52  0824               	movf	??_EEPROM_ReadByte^(0+128),w
  2518  0D53  390E               	andlw	14
  2519  0D54  38A1               	iorlw	161
  2520  0D55  120A  158A  2169  120A  158A  	fcall	_I2C_Master_WriteByte
  2521  0D5A                     l2716:
  2522                           
  2523                           ;EEPROM.c: 51:     data=I2C_Master_ReadByte(I2C_STOP_READING);
  2524  0D5A  3001               	movlw	1
  2525  0D5B  120A  158A  21AE  120A  158A  	fcall	_I2C_Master_ReadByte
  2526  0D60  00FF               	movwf	btemp+1
  2527  0D61  087F               	movf	btemp+1,w
  2528  0D62  1683               	bsf	3,5	;RP0=1, select bank1
  2529  0D63  1303               	bcf	3,6	;RP1=0, select bank1
  2530  0D64  00A6               	movwf	EEPROM_ReadByte@data^(0+128)
  2531  0D65                     l2718:
  2532                           
  2533                           ;EEPROM.c: 52:     I2C_Master_Send_Stop();
  2534  0D65  120A  158A  208A  120A  158A  	fcall	_I2C_Master_Send_Stop
  2535  0D6A                     l2720:
  2536                           
  2537                           ;EEPROM.c: 54:     return data;
  2538  0D6A  1683               	bsf	3,5	;RP0=1, select bank1
  2539  0D6B  1303               	bcf	3,6	;RP1=0, select bank1
  2540  0D6C  0826               	movf	EEPROM_ReadByte@data^(0+128),w
  2541  0D6D                     l31:
  2542  0D6D  0008               	return
  2543  0D6E                     __end_of_EEPROM_ReadByte:
  2544                           
  2545                           	psect	text8
  2546  09AE                     __ptext8:	
  2547 ;; *************** function _I2C_Master_ReadByte *****************
  2548 ;; Defined at:
  2549 ;;		line 105 in file "i2c.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;  Read_State      1    wreg     enum E881
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;  Read_State      1    1[BANK1 ] enum E881
  2554 ;;  data            1    0        unsigned char 
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  1    wreg      unsigned char 
  2557 ;; Registers used:
  2558 ;;		wreg, status,2, status,0, pclath, cstack
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2564 ;;      Params:         0       0       0       0       0
  2565 ;;      Locals:         0       0       2       0       0
  2566 ;;      Temps:          0       0       0       0       0
  2567 ;;      Totals:         0       0       2       0       0
  2568 ;;Total ram usage:        2 bytes
  2569 ;; Hardware stack levels used:    1
  2570 ;; Hardware stack levels required when called:    5
  2571 ;; This function calls:
  2572 ;;		_I2C_Master_Send_ACK
  2573 ;;		_I2C_Master_Send_NACK
  2574 ;;		_I2C_Wait_IDLE
  2575 ;; This function is called by:
  2576 ;;		_EEPROM_ReadByte
  2577 ;;		_EEPROM_ReadPage
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580                           
  2581                           
  2582                           ;psect for function _I2C_Master_ReadByte
  2583  09AE                     _I2C_Master_ReadByte:
  2584                           
  2585                           ;incstack = 0
  2586 ;; hardware stack exceeded
  2587                           ; Regs used in _I2C_Master_ReadByte: [wreg+status,2+status,0+pclath+cstack]
  2588                           ;I2C_Master_ReadByte@Read_State stored from wreg
  2589  09AE  1683               	bsf	3,5	;RP0=1, select bank1
  2590  09AF  1303               	bcf	3,6	;RP1=0, select bank1
  2591  09B0  00A1               	movwf	I2C_Master_ReadByte@Read_State^(0+128)
  2592  09B1                     l2636:
  2593                           
  2594                           ;i2c.c: 105: uint8_t I2C_Master_ReadByte(tI2C_ReadingState Read_State);i2c.c: 106: {;i2c
      +                          .c: 108:     uint8_t data;;i2c.c: 110:     I2C_Wait_IDLE();
  2595  09B1  120A  158A  20D1  120A  158A  	fcall	_I2C_Wait_IDLE
  2596  09B6                     l2638:
  2597                           
  2598                           ;i2c.c: 111:     RCEN=1;
  2599  09B6  1683               	bsf	3,5	;RP0=1, select bank1
  2600  09B7  1303               	bcf	3,6	;RP1=0, select bank1
  2601  09B8  1591               	bsf	17,3	;volatile
  2602                           
  2603                           ;i2c.c: 112:     I2C_Wait_IDLE();
  2604  09B9  120A  158A  20D1  120A  158A  	fcall	_I2C_Wait_IDLE
  2605  09BE                     l2640:
  2606  09BE  1283               	bcf	3,5	;RP0=0, select bank0
  2607  09BF  1303               	bcf	3,6	;RP1=0, select bank0
  2608  09C0  0813               	movf	19,w	;volatile
  2609  09C1                     l2642:
  2610                           
  2611                           ;i2c.c: 115:     if(Read_State==I2C_STOP_READING)
  2612  09C1  1683               	bsf	3,5	;RP0=1, select bank1
  2613  09C2  1303               	bcf	3,6	;RP1=0, select bank1
  2614  09C3  0321               	decf	I2C_Master_ReadByte@Read_State^(0+128),w
  2615  09C4  1D03               	btfss	3,2
  2616  09C5  29C7               	goto	u1911
  2617  09C6  29C8               	goto	u1910
  2618  09C7                     u1911:
  2619  09C7  29CE               	goto	l2646
  2620  09C8                     u1910:
  2621  09C8                     l2644:
  2622                           
  2623                           ;i2c.c: 116:         I2C_Master_Send_NACK();
  2624  09C8  120A  158A  20A6  120A  158A  	fcall	_I2C_Master_Send_NACK
  2625  09CD  29D3               	goto	l2648
  2626  09CE                     l2646:
  2627                           
  2628                           ;i2c.c: 118:         I2C_Master_Send_ACK();
  2629  09CE  120A  158A  209C  120A  158A  	fcall	_I2C_Master_Send_ACK
  2630  09D3                     l2648:
  2631                           
  2632                           ;i2c.c: 120:     return SSPBUF ;
  2633  09D3  1283               	bcf	3,5	;RP0=0, select bank0
  2634  09D4  1303               	bcf	3,6	;RP1=0, select bank0
  2635  09D5  0813               	movf	19,w	;volatile
  2636  09D6                     l120:
  2637  09D6  0008               	return
  2638  09D7                     __end_of_I2C_Master_ReadByte:
  2639                           
  2640                           	psect	text9
  2641  08A6                     __ptext9:	
  2642 ;; *************** function _I2C_Master_Send_NACK *****************
  2643 ;; Defined at:
  2644 ;;		line 87 in file "i2c.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;		None
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;		None
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  1    wreg      void 
  2651 ;; Registers used:
  2652 ;;		wreg, status,2, status,0, pclath, cstack
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2658 ;;      Params:         0       0       0       0       0
  2659 ;;      Locals:         0       0       0       0       0
  2660 ;;      Temps:          0       0       0       0       0
  2661 ;;      Totals:         0       0       0       0       0
  2662 ;;Total ram usage:        0 bytes
  2663 ;; Hardware stack levels used:    1
  2664 ;; Hardware stack levels required when called:    4
  2665 ;; This function calls:
  2666 ;;		_I2C_Wait_IDLE
  2667 ;; This function is called by:
  2668 ;;		_I2C_Master_ReadByte
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672                           
  2673                           ;psect for function _I2C_Master_Send_NACK
  2674  08A6                     _I2C_Master_Send_NACK:
  2675  08A6                     l2608:	
  2676                           ;incstack = 0
  2677 ;; hardware stack exceeded
  2678                           ; Regs used in _I2C_Master_Send_NACK: [wreg+status,2+status,0+pclath+cstack]
  2679                           
  2680                           
  2681                           ;i2c.c: 90:     I2C_Wait_IDLE();
  2682  08A6  120A  158A  20D1  120A  158A  	fcall	_I2C_Wait_IDLE
  2683  08AB                     l2610:
  2684                           
  2685                           ;i2c.c: 92:     ACKDT=1;
  2686  08AB  1683               	bsf	3,5	;RP0=1, select bank1
  2687  08AC  1303               	bcf	3,6	;RP1=0, select bank1
  2688  08AD  1691               	bsf	17,5	;volatile
  2689  08AE                     l2612:
  2690                           
  2691                           ;i2c.c: 93:     ACKEN=1;
  2692  08AE  1611               	bsf	17,4	;volatile
  2693  08AF                     l109:
  2694  08AF  0008               	return
  2695  08B0                     __end_of_I2C_Master_Send_NACK:
  2696                           
  2697                           	psect	text10
  2698  089C                     __ptext10:	
  2699 ;; *************** function _I2C_Master_Send_ACK *****************
  2700 ;; Defined at:
  2701 ;;		line 79 in file "i2c.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;		None
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;		None
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  1    wreg      void 
  2708 ;; Registers used:
  2709 ;;		wreg, status,2, status,0, pclath, cstack
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2715 ;;      Params:         0       0       0       0       0
  2716 ;;      Locals:         0       0       0       0       0
  2717 ;;      Temps:          0       0       0       0       0
  2718 ;;      Totals:         0       0       0       0       0
  2719 ;;Total ram usage:        0 bytes
  2720 ;; Hardware stack levels used:    1
  2721 ;; Hardware stack levels required when called:    4
  2722 ;; This function calls:
  2723 ;;		_I2C_Wait_IDLE
  2724 ;; This function is called by:
  2725 ;;		_I2C_Master_ReadByte
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           
  2730                           ;psect for function _I2C_Master_Send_ACK
  2731  089C                     _I2C_Master_Send_ACK:
  2732  089C                     l2602:	
  2733                           ;incstack = 0
  2734 ;; hardware stack exceeded
  2735                           ; Regs used in _I2C_Master_Send_ACK: [wreg+status,2+status,0+pclath+cstack]
  2736                           
  2737                           
  2738                           ;i2c.c: 82:     I2C_Wait_IDLE();
  2739  089C  120A  158A  20D1  120A  158A  	fcall	_I2C_Wait_IDLE
  2740  08A1                     l2604:
  2741                           
  2742                           ;i2c.c: 84:     ACKDT=0;
  2743  08A1  1683               	bsf	3,5	;RP0=1, select bank1
  2744  08A2  1303               	bcf	3,6	;RP1=0, select bank1
  2745  08A3  1291               	bcf	17,5	;volatile
  2746  08A4                     l2606:
  2747                           
  2748                           ;i2c.c: 85:     ACKEN=1;
  2749  08A4  1611               	bsf	17,4	;volatile
  2750  08A5                     l106:
  2751  08A5  0008               	return
  2752  08A6                     __end_of_I2C_Master_Send_ACK:
  2753                           
  2754                           	psect	text11
  2755  0398                     __ptext11:	
  2756 ;; *************** function _EWH_Operating_Mode *****************
  2757 ;; Defined at:
  2758 ;;		line 143 in file "EWH.c"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;		None
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;		None
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  1    wreg      void 
  2765 ;; Registers used:
  2766 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2772 ;;      Params:         0       0       0       0       0
  2773 ;;      Locals:         0       0       0       0       0
  2774 ;;      Temps:          0       0       3       0       0
  2775 ;;      Totals:         0       0       3       0       0
  2776 ;;Total ram usage:        3 bytes
  2777 ;; Hardware stack levels used:    1
  2778 ;; Hardware stack levels required when called:    6
  2779 ;; This function calls:
  2780 ;;		_DD_SetState
  2781 ;;		_EWH_SSD_Update
  2782 ;;		_EWH_getAvrgTempReading
  2783 ;;		_TMR1_Start
  2784 ;;		_TMR1_Stop
  2785 ;;		___awmod
  2786 ;; This function is called by:
  2787 ;;		_main
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           
  2792                           ;psect for function _EWH_Operating_Mode
  2793  0398                     _EWH_Operating_Mode:
  2794  0398                     l3178:	
  2795                           ;incstack = 0
  2796                           ; Regs used in _EWH_Operating_Mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2797                           
  2798                           
  2799                           ;EWH.c: 149:     EWH_Events[0]=0;
  2800  0398  1683               	bsf	3,5	;RP0=1, select bank1
  2801  0399  1303               	bcf	3,6	;RP1=0, select bank1
  2802  039A  01BD               	clrf	_EWH_Events^(0+128)
  2803                           
  2804                           ;EWH.c: 150:     EWH_Events[2]=0;
  2805  039B  01BF               	clrf	(_EWH_Events^(0+128)+2)
  2806                           
  2807                           ;EWH.c: 151:     EWH_Events[1]=0;
  2808  039C  01BE               	clrf	(_EWH_Events^(0+128)+1)
  2809                           
  2810                           ;EWH.c: 152:     EWH_Events[3]=0;
  2811  039D  01C0               	clrf	(_EWH_Events^(0+128)+3)
  2812  039E                     l3180:
  2813                           
  2814                           ;EWH.c: 154:     EWH_Mode=EWH_OPERATING_MODE;
  2815  039E  3003               	movlw	3
  2816  039F  00FF               	movwf	btemp+1
  2817  03A0  087F               	movf	btemp+1,w
  2818  03A1  00CA               	movwf	_EWH_Mode^(0+128)
  2819  03A2                     l3182:
  2820                           
  2821                           ;EWH.c: 156:     TMR1_Start();
  2822  03A2  120A  158A  20FB  120A  118A  	fcall	_TMR1_Start
  2823  03A7                     l3184:
  2824                           
  2825                           ;EWH.c: 159:     {;EWH.c: 160:         EWH_SSD_Update(current_Temp);
  2826  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  2827  03A8  1303               	bcf	3,6	;RP1=0, select bank1
  2828  03A9  0848               	movf	_current_Temp^(0+128),w
  2829  03AA  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  2830  03AB  01B1               	clrf	(??_EWH_Operating_Mode^(0+128)+1)
  2831  03AC  0830               	movf	??_EWH_Operating_Mode^(0+128),w
  2832  03AD  00AA               	movwf	EWH_SSD_Update@temp^(0+128)
  2833  03AE  0831               	movf	(??_EWH_Operating_Mode+1)^(0+128),w
  2834  03AF  00AB               	movwf	(EWH_SSD_Update@temp+1)^(0+128)
  2835  03B0  120A  158A  256E  120A  118A  	fcall	_EWH_SSD_Update
  2836  03B5                     l3186:
  2837                           
  2838                           ;EWH.c: 161:         ReadingBuffer[TempReading_count]=current_Temp;
  2839  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  2840  03B6  1303               	bcf	3,6	;RP1=0, select bank1
  2841  03B7  0848               	movf	_current_Temp^(0+128),w
  2842  03B8  00FF               	movwf	btemp+1
  2843  03B9  0847               	movf	_TempReading_count^(0+128),w
  2844  03BA  3ECB               	addlw	(low (_ReadingBuffer| 0))& (0+255)
  2845  03BB  0084               	movwf	4
  2846  03BC  087F               	movf	btemp+1,w
  2847  03BD  1383               	bcf	3,7	;select IRP bank1
  2848  03BE  0080               	movwf	0
  2849  03BF                     l3188:
  2850                           
  2851                           ;EWH.c: 162:         TempReading_count++;
  2852  03BF  3001               	movlw	1
  2853  03C0  00FF               	movwf	btemp+1
  2854  03C1  087F               	movf	btemp+1,w
  2855  03C2  07C7               	addwf	_TempReading_count^(0+128),f
  2856  03C3                     l3190:
  2857                           
  2858                           ;EWH.c: 163:         TempReading_count= TempReading_count%10;
  2859  03C3  300A               	movlw	10
  2860  03C4  00A0               	movwf	___awmod@divisor^(0+128)
  2861  03C5  3000               	movlw	0
  2862  03C6  00A1               	movwf	(___awmod@divisor^(0+128)+1)
  2863  03C7  0847               	movf	_TempReading_count^(0+128),w
  2864  03C8  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  2865  03C9  01B1               	clrf	(??_EWH_Operating_Mode^(0+128)+1)
  2866  03CA  0830               	movf	??_EWH_Operating_Mode^(0+128),w
  2867  03CB  00A2               	movwf	___awmod@dividend^(0+128)
  2868  03CC  0831               	movf	(??_EWH_Operating_Mode+1)^(0+128),w
  2869  03CD  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  2870  03CE  120A  158A  24B8  120A  118A  	fcall	___awmod
  2871  03D3  1683               	bsf	3,5	;RP0=1, select bank1
  2872  03D4  1303               	bcf	3,6	;RP1=0, select bank1
  2873  03D5  0820               	movf	?___awmod^(0+128),w
  2874  03D6  00FF               	movwf	btemp+1
  2875  03D7  087F               	movf	btemp+1,w
  2876  03D8  00C7               	movwf	_TempReading_count^(0+128)
  2877  03D9                     l3192:
  2878                           
  2879                           ;EWH.c: 164:         if(TempReading_count==9)
  2880  03D9  3009               	movlw	9
  2881  03DA  0647               	xorwf	_TempReading_count^(0+128),w
  2882  03DB  1D03               	btfss	3,2
  2883  03DC  2BDE               	goto	u2591
  2884  03DD  2BDF               	goto	u2590
  2885  03DE                     u2591:
  2886  03DE  2BF0               	goto	l3198
  2887  03DF                     u2590:
  2888  03DF                     l3194:
  2889                           
  2890                           ;EWH.c: 165:         {;EWH.c: 166:             TempavgReading= EWH_getAvrgTempReading(Re
      +                          adingBuffer,10);
  2891  03DF  300A               	movlw	10
  2892  03E0  00FF               	movwf	btemp+1
  2893  03E1  087F               	movf	btemp+1,w
  2894  03E2  00A7               	movwf	EWH_getAvrgTempReading@length^(0+128)
  2895  03E3  30CB               	movlw	(low (_ReadingBuffer| 0))& (0+255)
  2896  03E4  120A  158A  2202  120A  118A  	fcall	_EWH_getAvrgTempReading
  2897  03E9  00FF               	movwf	btemp+1
  2898  03EA  087F               	movf	btemp+1,w
  2899  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  2900  03EC  1303               	bcf	3,6	;RP1=0, select bank1
  2901  03ED  00C4               	movwf	_TempavgReading^(0+128)
  2902  03EE                     l3196:
  2903                           
  2904                           ;EWH.c: 167:             ReadingBufferFull=TRUE;
  2905  03EE  01C5               	clrf	_ReadingBufferFull^(0+128)
  2906  03EF  0AC5               	incf	_ReadingBufferFull^(0+128),f
  2907  03F0                     l3198:
  2908                           
  2909                           ;EWH.c: 169:         if(ReadingBufferFull)
  2910  03F0  0845               	movf	_ReadingBufferFull^(0+128),w
  2911  03F1  1903               	btfsc	3,2
  2912  03F2  2BF4               	goto	u2601
  2913  03F3  2BF5               	goto	u2600
  2914  03F4                     u2601:
  2915  03F4  2C44               	goto	l3208
  2916  03F5                     u2600:
  2917  03F5                     l3200:
  2918                           
  2919                           ;EWH.c: 170:         {;EWH.c: 171:             if(TempavgReading>(set_Temp+5))
  2920  03F5  0849               	movf	_set_Temp^(0+128),w
  2921  03F6  3E05               	addlw	5
  2922  03F7  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  2923  03F8  3000               	movlw	0
  2924  03F9  1803               	skipnc
  2925  03FA  3001               	movlw	1
  2926  03FB  00B1               	movwf	(??_EWH_Operating_Mode^(0+128)+1)
  2927  03FC  0831               	movf	(??_EWH_Operating_Mode+1)^(0+128),w
  2928  03FD  3A80               	xorlw	128
  2929  03FE  00B2               	movwf	(??_EWH_Operating_Mode+2)^(0+128)
  2930  03FF  3080               	movlw	128
  2931  0400  0232               	subwf	(??_EWH_Operating_Mode+2)^(0+128),w
  2932  0401  1D03               	skipz
  2933  0402  2C05               	goto	u2615
  2934  0403  0844               	movf	_TempavgReading^(0+128),w
  2935  0404  0230               	subwf	??_EWH_Operating_Mode^(0+128),w
  2936  0405                     u2615:
  2937  0405  1803               	skipnc
  2938  0406  2C08               	goto	u2611
  2939  0407  2C09               	goto	u2610
  2940  0408                     u2611:
  2941  0408  2C1D               	goto	l3204
  2942  0409                     u2610:
  2943  0409                     l3202:
  2944                           
  2945                           ;EWH.c: 172:             {;EWH.c: 173:                 DD_SetState(HEATER,OFF);
  2946  0409  1683               	bsf	3,5	;RP0=1, select bank1
  2947  040A  1303               	bcf	3,6	;RP1=0, select bank1
  2948  040B  01A0               	clrf	DD_SetState@state^(0+128)
  2949  040C  3000               	movlw	0
  2950  040D  120A  158A  245E  120A  118A  	fcall	_DD_SetState
  2951                           
  2952                           ;EWH.c: 174:                 DD_SetState(COOLER,ON);
  2953  0412  1683               	bsf	3,5	;RP0=1, select bank1
  2954  0413  1303               	bcf	3,6	;RP1=0, select bank1
  2955  0414  01A0               	clrf	DD_SetState@state^(0+128)
  2956  0415  0AA0               	incf	DD_SetState@state^(0+128),f
  2957  0416  3001               	movlw	1
  2958  0417  120A  158A  245E  120A  118A  	fcall	_DD_SetState
  2959                           
  2960                           ;EWH.c: 175:             }
  2961  041C  2C44               	goto	l3208
  2962  041D                     l3204:
  2963  041D  1683               	bsf	3,5	;RP0=1, select bank1
  2964  041E  1303               	bcf	3,6	;RP1=0, select bank1
  2965  041F  0849               	movf	_set_Temp^(0+128),w
  2966  0420  3EFB               	addlw	251
  2967  0421  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  2968  0422  30FF               	movlw	255
  2969  0423  1803               	skipnc
  2970  0424  3000               	movlw	0
  2971  0425  00B1               	movwf	(??_EWH_Operating_Mode^(0+128)+1)
  2972  0426  0831               	movf	(??_EWH_Operating_Mode+1)^(0+128),w
  2973  0427  3A80               	xorlw	128
  2974  0428  3C80               	sublw	128
  2975  0429  1D03               	skipz
  2976  042A  2C2D               	goto	u2625
  2977  042B  0830               	movf	??_EWH_Operating_Mode^(0+128),w
  2978  042C  0244               	subwf	_TempavgReading^(0+128),w
  2979  042D                     u2625:
  2980  042D  1803               	skipnc
  2981  042E  2C30               	goto	u2621
  2982  042F  2C31               	goto	u2620
  2983  0430                     u2621:
  2984  0430  2C44               	goto	l3208
  2985  0431                     u2620:
  2986  0431                     l3206:
  2987                           
  2988                           ;EWH.c: 177:             {;EWH.c: 178:                 DD_SetState(HEATER,ON);
  2989  0431  1683               	bsf	3,5	;RP0=1, select bank1
  2990  0432  1303               	bcf	3,6	;RP1=0, select bank1
  2991  0433  01A0               	clrf	DD_SetState@state^(0+128)
  2992  0434  0AA0               	incf	DD_SetState@state^(0+128),f
  2993  0435  3000               	movlw	0
  2994  0436  120A  158A  245E  120A  118A  	fcall	_DD_SetState
  2995                           
  2996                           ;EWH.c: 179:                 DD_SetState(COOLER,OFF);
  2997  043B  1683               	bsf	3,5	;RP0=1, select bank1
  2998  043C  1303               	bcf	3,6	;RP1=0, select bank1
  2999  043D  01A0               	clrf	DD_SetState@state^(0+128)
  3000  043E  3001               	movlw	1
  3001  043F  120A  158A  245E  120A  118A  	fcall	_DD_SetState
  3002  0444                     l3208:
  3003                           
  3004                           ;EWH.c: 182:          if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED) || (!((PORTB & (1<<1)) >
      +                          > 1)==SW_PRESSED) )
  3005  0444  1283               	bcf	3,5	;RP0=0, select bank0
  3006  0445  1303               	bcf	3,6	;RP1=0, select bank0
  3007  0446  0806               	movf	6,w	;volatile
  3008  0447  1683               	bsf	3,5	;RP0=1, select bank1
  3009  0448  1303               	bcf	3,6	;RP1=0, select bank1
  3010  0449  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  3011  044A  3002               	movlw	2
  3012  044B                     u2635:
  3013  044B  1003               	clrc
  3014  044C  0CB0               	rrf	??_EWH_Operating_Mode^(0+128),f
  3015  044D  3EFF               	addlw	-1
  3016  044E  1D03               	skipz
  3017  044F  2C4B               	goto	u2635
  3018  0450  1C30               	btfss	??_EWH_Operating_Mode^(0+128),0
  3019  0451  2C53               	goto	u2641
  3020  0452  2C54               	goto	u2640
  3021  0453                     u2641:
  3022  0453  2C64               	goto	l3212
  3023  0454                     u2640:
  3024  0454                     l3210:
  3025  0454  1283               	bcf	3,5	;RP0=0, select bank0
  3026  0455  1303               	bcf	3,6	;RP1=0, select bank0
  3027  0456  0806               	movf	6,w	;volatile
  3028  0457  1683               	bsf	3,5	;RP0=1, select bank1
  3029  0458  1303               	bcf	3,6	;RP1=0, select bank1
  3030  0459  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  3031  045A  3001               	movlw	1
  3032  045B                     u2655:
  3033  045B  1003               	clrc
  3034  045C  0CB0               	rrf	??_EWH_Operating_Mode^(0+128),f
  3035  045D  3EFF               	addlw	-1
  3036  045E  1D03               	skipz
  3037  045F  2C5B               	goto	u2655
  3038  0460  1830               	btfsc	??_EWH_Operating_Mode^(0+128),0
  3039  0461  2C63               	goto	u2661
  3040  0462  2C64               	goto	u2660
  3041  0463                     u2661:
  3042  0463  2C94               	goto	l3218
  3043  0464                     u2660:
  3044  0464                     l3212:
  3045                           
  3046                           ;EWH.c: 183:          {;EWH.c: 184:              _delay((unsigned long)((50)*(4000000/40
      +                          00.0)));
  3047  0464  3041               	movlw	65
  3048  0465  1683               	bsf	3,5	;RP0=1, select bank1
  3049  0466  1303               	bcf	3,6	;RP1=0, select bank1
  3050  0467  00B1               	movwf	(??_EWH_Operating_Mode^(0+128)+1)
  3051  0468  30ED               	movlw	237
  3052  0469  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  3053  046A                     u3787:
  3054  046A  0BB0               	decfsz	??_EWH_Operating_Mode^(0+128),f
  3055  046B  2C6A               	goto	u3787
  3056  046C  0BB1               	decfsz	(??_EWH_Operating_Mode^(0+128)+1),f
  3057  046D  2C6A               	goto	u3787
  3058  046E  2C6F               	nop2
  3059  046F                     l3214:
  3060                           
  3061                           ;EWH.c: 185:             if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED) || (!((PORTB & (1<<1)
      +                          ) >> 1)==SW_PRESSED) )
  3062  046F  1283               	bcf	3,5	;RP0=0, select bank0
  3063  0470  1303               	bcf	3,6	;RP1=0, select bank0
  3064  0471  0806               	movf	6,w	;volatile
  3065  0472  1683               	bsf	3,5	;RP0=1, select bank1
  3066  0473  1303               	bcf	3,6	;RP1=0, select bank1
  3067  0474  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  3068  0475  3002               	movlw	2
  3069  0476                     u2675:
  3070  0476  1003               	clrc
  3071  0477  0CB0               	rrf	??_EWH_Operating_Mode^(0+128),f
  3072  0478  3EFF               	addlw	-1
  3073  0479  1D03               	skipz
  3074  047A  2C76               	goto	u2675
  3075  047B  1C30               	btfss	??_EWH_Operating_Mode^(0+128),0
  3076  047C  2C7E               	goto	u2681
  3077  047D  2C7F               	goto	u2680
  3078  047E                     u2681:
  3079  047E  2C8F               	goto	l554
  3080  047F                     u2680:
  3081  047F                     l3216:
  3082  047F  1283               	bcf	3,5	;RP0=0, select bank0
  3083  0480  1303               	bcf	3,6	;RP1=0, select bank0
  3084  0481  0806               	movf	6,w	;volatile
  3085  0482  1683               	bsf	3,5	;RP0=1, select bank1
  3086  0483  1303               	bcf	3,6	;RP1=0, select bank1
  3087  0484  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  3088  0485  3001               	movlw	1
  3089  0486                     u2695:
  3090  0486  1003               	clrc
  3091  0487  0CB0               	rrf	??_EWH_Operating_Mode^(0+128),f
  3092  0488  3EFF               	addlw	-1
  3093  0489  1D03               	skipz
  3094  048A  2C86               	goto	u2695
  3095  048B  1830               	btfsc	??_EWH_Operating_Mode^(0+128),0
  3096  048C  2C8E               	goto	u2701
  3097  048D  2C8F               	goto	u2700
  3098  048E                     u2701:
  3099  048E  2C94               	goto	l3218
  3100  048F                     u2700:
  3101  048F                     l554:
  3102                           
  3103                           ;EWH.c: 186:             {;EWH.c: 187:              EWH_Events[2]=1;
  3104  048F  01BF               	clrf	(_EWH_Events^(0+128)+2)
  3105  0490  0ABF               	incf	(_EWH_Events^(0+128)+2),f
  3106                           
  3107                           ;EWH.c: 188:              EWH_Events[1]=1;
  3108  0491  01BE               	clrf	(_EWH_Events^(0+128)+1)
  3109  0492  0ABE               	incf	(_EWH_Events^(0+128)+1),f
  3110                           
  3111                           ;EWH.c: 189:              break;
  3112  0493  2CA7               	goto	l3224
  3113  0494                     l3218:
  3114                           
  3115                           ;EWH.c: 192:         if(EWH_Events[0]==1)
  3116  0494  033D               	decf	_EWH_Events^(0+128),w
  3117  0495  1D03               	btfss	3,2
  3118  0496  2C98               	goto	u2711
  3119  0497  2C99               	goto	u2710
  3120  0498                     u2711:
  3121  0498  2C9A               	goto	l3222
  3122  0499                     u2710:
  3123  0499  2CA7               	goto	l3224
  3124  049A                     l3222:
  3125                           
  3126                           ;EWH.c: 195:          EWH_SSD_Update(current_Temp);
  3127  049A  0848               	movf	_current_Temp^(0+128),w
  3128  049B  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  3129  049C  01B1               	clrf	(??_EWH_Operating_Mode^(0+128)+1)
  3130  049D  0830               	movf	??_EWH_Operating_Mode^(0+128),w
  3131  049E  00AA               	movwf	EWH_SSD_Update@temp^(0+128)
  3132  049F  0831               	movf	(??_EWH_Operating_Mode+1)^(0+128),w
  3133  04A0  00AB               	movwf	(EWH_SSD_Update@temp+1)^(0+128)
  3134  04A1  120A  158A  256E  120A  118A  	fcall	_EWH_SSD_Update
  3135  04A6  2BA7               	goto	l3184
  3136  04A7                     l3224:
  3137                           
  3138                           ;EWH.c: 198:     if(EWH_Events[1] )
  3139  04A7  083E               	movf	(_EWH_Events^(0+128)+1),w
  3140  04A8  1903               	btfsc	3,2
  3141  04A9  2CAB               	goto	u2721
  3142  04AA  2CAC               	goto	u2720
  3143  04AB                     u2721:
  3144  04AB  2CB8               	goto	l3232
  3145  04AC                     u2720:
  3146  04AC                     l3226:
  3147                           
  3148                           ;EWH.c: 199:         {;EWH.c: 200:             EWH_Events[1]=0;
  3149  04AC  01BE               	clrf	(_EWH_Events^(0+128)+1)
  3150  04AD                     l3228:
  3151                           
  3152                           ;EWH.c: 201:             TMR1_Stop();
  3153  04AD  120A  118A  27FA  120A  118A  	fcall	_TMR1_Stop
  3154  04B2                     l3230:
  3155                           
  3156                           ;EWH.c: 203:             EWH_Mode=EWH_SET_TEMP_MODE;
  3157  04B2  3002               	movlw	2
  3158  04B3  00FF               	movwf	btemp+1
  3159  04B4  087F               	movf	btemp+1,w
  3160  04B5  1683               	bsf	3,5	;RP0=1, select bank1
  3161  04B6  1303               	bcf	3,6	;RP1=0, select bank1
  3162  04B7  00CA               	movwf	_EWH_Mode^(0+128)
  3163  04B8                     l3232:
  3164                           
  3165                           ;EWH.c: 205:     if( EWH_Events[2])
  3166  04B8  083F               	movf	(_EWH_Events^(0+128)+2),w
  3167  04B9  1903               	btfsc	3,2
  3168  04BA  2CBC               	goto	u2731
  3169  04BB  2CBD               	goto	u2730
  3170  04BC                     u2731:
  3171  04BC  2CC9               	goto	l560
  3172  04BD                     u2730:
  3173  04BD                     l3234:
  3174                           
  3175                           ;EWH.c: 206:         {;EWH.c: 207:              EWH_Events[2]=0;
  3176  04BD  01BF               	clrf	(_EWH_Events^(0+128)+2)
  3177  04BE                     l3236:
  3178                           
  3179                           ;EWH.c: 208:              TMR1_Stop();
  3180  04BE  120A  118A  27FA  120A  118A  	fcall	_TMR1_Stop
  3181  04C3                     l3238:
  3182                           
  3183                           ;EWH.c: 209:              EWH_Mode=EWH_SET_TEMP_MODE;
  3184  04C3  3002               	movlw	2
  3185  04C4  00FF               	movwf	btemp+1
  3186  04C5  087F               	movf	btemp+1,w
  3187  04C6  1683               	bsf	3,5	;RP0=1, select bank1
  3188  04C7  1303               	bcf	3,6	;RP1=0, select bank1
  3189  04C8  00CA               	movwf	_EWH_Mode^(0+128)
  3190  04C9                     l560:
  3191  04C9  0008               	return
  3192  04CA                     __end_of_EWH_Operating_Mode:
  3193                           
  3194                           	psect	text12
  3195  0CB8                     __ptext12:	
  3196 ;; *************** function ___awmod *****************
  3197 ;; Defined at:
  3198 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;  divisor         2    0[BANK1 ] int 
  3201 ;;  dividend        2    2[BANK1 ] int 
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;  sign            1    5[BANK1 ] unsigned char 
  3204 ;;  counter         1    4[BANK1 ] unsigned char 
  3205 ;; Return value:  Size  Location     Type
  3206 ;;                  2    0[BANK1 ] int 
  3207 ;; Registers used:
  3208 ;;		wreg, status,2, status,0, btemp+1
  3209 ;; Tracked objects:
  3210 ;;		On entry : 0/0
  3211 ;;		On exit  : 0/0
  3212 ;;		Unchanged: 0/0
  3213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3214 ;;      Params:         0       0       4       0       0
  3215 ;;      Locals:         0       0       2       0       0
  3216 ;;      Temps:          0       0       0       0       0
  3217 ;;      Totals:         0       0       6       0       0
  3218 ;;Total ram usage:        6 bytes
  3219 ;; Hardware stack levels used:    1
  3220 ;; Hardware stack levels required when called:    3
  3221 ;; This function calls:
  3222 ;;		Nothing
  3223 ;; This function is called by:
  3224 ;;		_EWH_Operating_Mode
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           
  3228                           
  3229                           ;psect for function ___awmod
  3230  0CB8                     ___awmod:
  3231  0CB8                     l3044:	
  3232                           ;incstack = 0
  3233                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  3234                           
  3235  0CB8  1683               	bsf	3,5	;RP0=1, select bank1
  3236  0CB9  1303               	bcf	3,6	;RP1=0, select bank1
  3237  0CBA  01A5               	clrf	___awmod@sign^(0+128)
  3238  0CBB                     l3046:
  3239  0CBB  1FA3               	btfss	(___awmod@dividend+1)^(0+128),7
  3240  0CBC  2CBE               	goto	u2391
  3241  0CBD  2CBF               	goto	u2390
  3242  0CBE                     u2391:
  3243  0CBE  2CC6               	goto	l3052
  3244  0CBF                     u2390:
  3245  0CBF                     l3048:
  3246  0CBF  09A2               	comf	___awmod@dividend^(0+128),f
  3247  0CC0  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  3248  0CC1  0AA2               	incf	___awmod@dividend^(0+128),f
  3249  0CC2  1903               	skipnz
  3250  0CC3  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  3251  0CC4                     l3050:
  3252  0CC4  01A5               	clrf	___awmod@sign^(0+128)
  3253  0CC5  0AA5               	incf	___awmod@sign^(0+128),f
  3254  0CC6                     l3052:
  3255  0CC6  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  3256  0CC7  2CC9               	goto	u2401
  3257  0CC8  2CCA               	goto	u2400
  3258  0CC9                     u2401:
  3259  0CC9  2CCF               	goto	l3056
  3260  0CCA                     u2400:
  3261  0CCA                     l3054:
  3262  0CCA  09A0               	comf	___awmod@divisor^(0+128),f
  3263  0CCB  09A1               	comf	(___awmod@divisor+1)^(0+128),f
  3264  0CCC  0AA0               	incf	___awmod@divisor^(0+128),f
  3265  0CCD  1903               	skipnz
  3266  0CCE  0AA1               	incf	(___awmod@divisor+1)^(0+128),f
  3267  0CCF                     l3056:
  3268  0CCF  0820               	movf	___awmod@divisor^(0+128),w
  3269  0CD0  0421               	iorwf	(___awmod@divisor+1)^(0+128),w
  3270  0CD1  1903               	btfsc	3,2
  3271  0CD2  2CD4               	goto	u2411
  3272  0CD3  2CD5               	goto	u2410
  3273  0CD4                     u2411:
  3274  0CD4  2D04               	goto	l3074
  3275  0CD5                     u2410:
  3276  0CD5                     l3058:
  3277  0CD5  01A4               	clrf	___awmod@counter^(0+128)
  3278  0CD6  0AA4               	incf	___awmod@counter^(0+128),f
  3279  0CD7  2CE3               	goto	l3064
  3280  0CD8                     l3060:
  3281  0CD8  3001               	movlw	1
  3282  0CD9                     u2425:
  3283  0CD9  1003               	clrc
  3284  0CDA  0DA0               	rlf	___awmod@divisor^(0+128),f
  3285  0CDB  0DA1               	rlf	(___awmod@divisor+1)^(0+128),f
  3286  0CDC  3EFF               	addlw	-1
  3287  0CDD  1D03               	skipz
  3288  0CDE  2CD9               	goto	u2425
  3289  0CDF                     l3062:
  3290  0CDF  3001               	movlw	1
  3291  0CE0  00FF               	movwf	btemp+1
  3292  0CE1  087F               	movf	btemp+1,w
  3293  0CE2  07A4               	addwf	___awmod@counter^(0+128),f
  3294  0CE3                     l3064:
  3295  0CE3  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  3296  0CE4  2CE6               	goto	u2431
  3297  0CE5  2CE7               	goto	u2430
  3298  0CE6                     u2431:
  3299  0CE6  2CD8               	goto	l3060
  3300  0CE7                     u2430:
  3301  0CE7                     l3066:
  3302  0CE7  0821               	movf	(___awmod@divisor+1)^(0+128),w
  3303  0CE8  0223               	subwf	(___awmod@dividend+1)^(0+128),w
  3304  0CE9  1D03               	skipz
  3305  0CEA  2CED               	goto	u2445
  3306  0CEB  0820               	movf	___awmod@divisor^(0+128),w
  3307  0CEC  0222               	subwf	___awmod@dividend^(0+128),w
  3308  0CED                     u2445:
  3309  0CED  1C03               	skipc
  3310  0CEE  2CF0               	goto	u2441
  3311  0CEF  2CF1               	goto	u2440
  3312  0CF0                     u2441:
  3313  0CF0  2CF7               	goto	l3070
  3314  0CF1                     u2440:
  3315  0CF1                     l3068:
  3316  0CF1  0820               	movf	___awmod@divisor^(0+128),w
  3317  0CF2  02A2               	subwf	___awmod@dividend^(0+128),f
  3318  0CF3  0821               	movf	(___awmod@divisor+1)^(0+128),w
  3319  0CF4  1C03               	skipc
  3320  0CF5  03A3               	decf	(___awmod@dividend+1)^(0+128),f
  3321  0CF6  02A3               	subwf	(___awmod@dividend+1)^(0+128),f
  3322  0CF7                     l3070:
  3323  0CF7  3001               	movlw	1
  3324  0CF8                     u2455:
  3325  0CF8  1003               	clrc
  3326  0CF9  0CA1               	rrf	(___awmod@divisor+1)^(0+128),f
  3327  0CFA  0CA0               	rrf	___awmod@divisor^(0+128),f
  3328  0CFB  3EFF               	addlw	-1
  3329  0CFC  1D03               	skipz
  3330  0CFD  2CF8               	goto	u2455
  3331  0CFE                     l3072:
  3332  0CFE  3001               	movlw	1
  3333  0CFF  02A4               	subwf	___awmod@counter^(0+128),f
  3334  0D00  1D03               	btfss	3,2
  3335  0D01  2D03               	goto	u2461
  3336  0D02  2D04               	goto	u2460
  3337  0D03                     u2461:
  3338  0D03  2CE7               	goto	l3066
  3339  0D04                     u2460:
  3340  0D04                     l3074:
  3341  0D04  0825               	movf	___awmod@sign^(0+128),w
  3342  0D05  1903               	btfsc	3,2
  3343  0D06  2D08               	goto	u2471
  3344  0D07  2D09               	goto	u2470
  3345  0D08                     u2471:
  3346  0D08  2D0E               	goto	l3078
  3347  0D09                     u2470:
  3348  0D09                     l3076:
  3349  0D09  09A2               	comf	___awmod@dividend^(0+128),f
  3350  0D0A  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  3351  0D0B  0AA2               	incf	___awmod@dividend^(0+128),f
  3352  0D0C  1903               	skipnz
  3353  0D0D  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  3354  0D0E                     l3078:
  3355  0D0E  0823               	movf	(___awmod@dividend+1)^(0+128),w
  3356  0D0F  00A1               	movwf	(?___awmod+1)^(0+128)
  3357  0D10  0822               	movf	___awmod@dividend^(0+128),w
  3358  0D11  00A0               	movwf	?___awmod^(0+128)
  3359  0D12                     l920:
  3360  0D12  0008               	return
  3361  0D13                     __end_of___awmod:
  3362                           
  3363                           	psect	text13
  3364  07FA                     __ptext13:	
  3365 ;; *************** function _TMR1_Stop *****************
  3366 ;; Defined at:
  3367 ;;		line 44 in file "TMR1.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;		None
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;		None
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  1    wreg      void 
  3374 ;; Registers used:
  3375 ;;		None
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3381 ;;      Params:         0       0       0       0       0
  3382 ;;      Locals:         0       0       0       0       0
  3383 ;;      Temps:          0       0       0       0       0
  3384 ;;      Totals:         0       0       0       0       0
  3385 ;;Total ram usage:        0 bytes
  3386 ;; Hardware stack levels used:    1
  3387 ;; Hardware stack levels required when called:    3
  3388 ;; This function calls:
  3389 ;;		Nothing
  3390 ;; This function is called by:
  3391 ;;		_EWH_Sleep_Mode
  3392 ;;		_EWH_Operating_Mode
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           
  3396                           
  3397                           ;psect for function _TMR1_Stop
  3398  07FA                     _TMR1_Stop:
  3399  07FA                     l3002:	
  3400                           ;incstack = 0
  3401                           ; Regs used in _TMR1_Stop: []
  3402                           
  3403                           
  3404                           ;TMR1.c: 46:     (TMR1ON = 0);
  3405  07FA  1283               	bcf	3,5	;RP0=0, select bank0
  3406  07FB  1303               	bcf	3,6	;RP1=0, select bank0
  3407  07FC  1010               	bcf	16,0	;volatile
  3408  07FD                     l374:
  3409  07FD  0008               	return
  3410  07FE                     __end_of_TMR1_Stop:
  3411                           
  3412                           	psect	text14
  3413  08FB                     __ptext14:	
  3414 ;; *************** function _TMR1_Start *****************
  3415 ;; Defined at:
  3416 ;;		line 31 in file "TMR1.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;		None
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;		None
  3421 ;; Return value:  Size  Location     Type
  3422 ;;                  1    wreg      void 
  3423 ;; Registers used:
  3424 ;;		None
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3430 ;;      Params:         0       0       0       0       0
  3431 ;;      Locals:         0       0       0       0       0
  3432 ;;      Temps:          0       0       0       0       0
  3433 ;;      Totals:         0       0       0       0       0
  3434 ;;Total ram usage:        0 bytes
  3435 ;; Hardware stack levels used:    1
  3436 ;; Hardware stack levels required when called:    3
  3437 ;; This function calls:
  3438 ;;		Nothing
  3439 ;; This function is called by:
  3440 ;;		_EWH_SetTemp_Mode
  3441 ;;		_EWH_Operating_Mode
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445                           
  3446                           ;psect for function _TMR1_Start
  3447  08FB                     _TMR1_Start:
  3448  08FB                     l3000:	
  3449                           ;incstack = 0
  3450                           ; Regs used in _TMR1_Start: []
  3451                           
  3452                           
  3453                           ;TMR1.c: 33:     (TMR1IF = 0);
  3454  08FB  1283               	bcf	3,5	;RP0=0, select bank0
  3455  08FC  1303               	bcf	3,6	;RP1=0, select bank0
  3456  08FD  100C               	bcf	12,0	;volatile
  3457                           
  3458                           ;TMR1.c: 34:     (TMR1IE = 1);
  3459  08FE  1683               	bsf	3,5	;RP0=1, select bank1
  3460  08FF  1303               	bcf	3,6	;RP1=0, select bank1
  3461  0900  140C               	bsf	12,0	;volatile
  3462                           
  3463                           ;TMR1.c: 35:     (PEIE = 1);
  3464  0901  170B               	bsf	11,6	;volatile
  3465                           
  3466                           ;TMR1.c: 36:     (GIE = 1);
  3467  0902  178B               	bsf	11,7	;volatile
  3468                           
  3469                           ;TMR1.c: 37:     TMR1=40536;
  3470  0903  309E               	movlw	158
  3471  0904  1283               	bcf	3,5	;RP0=0, select bank0
  3472  0905  1303               	bcf	3,6	;RP1=0, select bank0
  3473  0906  008F               	movwf	15	;volatile
  3474  0907  3058               	movlw	88
  3475  0908  008E               	movwf	14	;volatile
  3476                           
  3477                           ;TMR1.c: 38:     (TMR1ON = 1);
  3478  0909  1410               	bsf	16,0	;volatile
  3479  090A                     l368:
  3480  090A  0008               	return
  3481  090B                     __end_of_TMR1_Start:
  3482                           
  3483                           	psect	text15
  3484  0A02                     __ptext15:	
  3485 ;; *************** function _EWH_getAvrgTempReading *****************
  3486 ;; Defined at:
  3487 ;;		line 267 in file "EWH.c"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;  buffer          1    wreg     PTR unsigned char 
  3490 ;;		 -> ReadingBuffer(10), 
  3491 ;;  length          1    7[BANK1 ] unsigned char 
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;  buffer          1   14[BANK1 ] PTR unsigned char 
  3494 ;;		 -> ReadingBuffer(10), 
  3495 ;;  i               1   15[BANK1 ] unsigned char 
  3496 ;;  sumOfReading    2   11[BANK1 ] unsigned short 
  3497 ;;  averageReadi    1   13[BANK1 ] unsigned char 
  3498 ;; Return value:  Size  Location     Type
  3499 ;;                  1    wreg      unsigned char 
  3500 ;; Registers used:
  3501 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3502 ;; Tracked objects:
  3503 ;;		On entry : 0/0
  3504 ;;		On exit  : 0/0
  3505 ;;		Unchanged: 0/0
  3506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3507 ;;      Params:         0       0       1       0       0
  3508 ;;      Locals:         0       0       5       0       0
  3509 ;;      Temps:          0       0       3       0       0
  3510 ;;      Totals:         0       0       9       0       0
  3511 ;;Total ram usage:        9 bytes
  3512 ;; Hardware stack levels used:    1
  3513 ;; Hardware stack levels required when called:    4
  3514 ;; This function calls:
  3515 ;;		___lwdiv
  3516 ;; This function is called by:
  3517 ;;		_EWH_Operating_Mode
  3518 ;; This function uses a non-reentrant model
  3519 ;;
  3520                           
  3521                           
  3522                           ;psect for function _EWH_getAvrgTempReading
  3523  0A02                     _EWH_getAvrgTempReading:
  3524                           
  3525                           ;incstack = 0
  3526                           ; Regs used in _EWH_getAvrgTempReading: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  3527                           ;EWH_getAvrgTempReading@buffer stored from wreg
  3528  0A02  1683               	bsf	3,5	;RP0=1, select bank1
  3529  0A03  1303               	bcf	3,6	;RP1=0, select bank1
  3530  0A04  00AE               	movwf	EWH_getAvrgTempReading@buffer^(0+128)
  3531  0A05                     l3028:
  3532                           
  3533                           ;EWH.c: 267: uint8_t EWH_getAvrgTempReading(uint8_t *buffer, uint8_t length);EWH.c: 268:
      +                           {;EWH.c: 269:     uint16_t sumOfReadings=0;
  3534  0A05  01AB               	clrf	EWH_getAvrgTempReading@sumOfReadings^(0+128)
  3535  0A06  01AC               	clrf	(EWH_getAvrgTempReading@sumOfReadings+1)^(0+128)
  3536                           
  3537                           ;EWH.c: 270:     for(uint8_t i=0 ; i<length ; i++)
  3538  0A07  01AF               	clrf	EWH_getAvrgTempReading@i^(0+128)
  3539  0A08  2A1C               	goto	l3034
  3540  0A09                     l3030:
  3541                           
  3542                           ;EWH.c: 271:     {;EWH.c: 272:         sumOfReadings += buffer[i];
  3543  0A09  082F               	movf	EWH_getAvrgTempReading@i^(0+128),w
  3544  0A0A  072E               	addwf	EWH_getAvrgTempReading@buffer^(0+128),w
  3545  0A0B  00A8               	movwf	??_EWH_getAvrgTempReading^(0+128)
  3546  0A0C  0828               	movf	??_EWH_getAvrgTempReading^(0+128),w
  3547  0A0D  0084               	movwf	4
  3548  0A0E  1383               	bcf	3,7	;select IRP bank0
  3549  0A0F  0800               	movf	0,w
  3550  0A10  00A9               	movwf	(??_EWH_getAvrgTempReading+1)^(0+128)
  3551  0A11  01AA               	clrf	((??_EWH_getAvrgTempReading+1)^(0+128)+1)
  3552  0A12  0829               	movf	(??_EWH_getAvrgTempReading+1)^(0+128),w
  3553  0A13  07AB               	addwf	EWH_getAvrgTempReading@sumOfReadings^(0+128),f
  3554  0A14  1803               	skipnc
  3555  0A15  0AAC               	incf	(EWH_getAvrgTempReading@sumOfReadings+1)^(0+128),f
  3556  0A16  082A               	movf	(??_EWH_getAvrgTempReading+2)^(0+128),w
  3557  0A17  07AC               	addwf	(EWH_getAvrgTempReading@sumOfReadings+1)^(0+128),f
  3558  0A18                     l3032:
  3559                           
  3560                           ;EWH.c: 273:     }
  3561  0A18  3001               	movlw	1
  3562  0A19  00FF               	movwf	btemp+1
  3563  0A1A  087F               	movf	btemp+1,w
  3564  0A1B  07AF               	addwf	EWH_getAvrgTempReading@i^(0+128),f
  3565  0A1C                     l3034:
  3566  0A1C  0827               	movf	EWH_getAvrgTempReading@length^(0+128),w
  3567  0A1D  022F               	subwf	EWH_getAvrgTempReading@i^(0+128),w
  3568  0A1E  1C03               	skipc
  3569  0A1F  2A21               	goto	u2381
  3570  0A20  2A22               	goto	u2380
  3571  0A21                     u2381:
  3572  0A21  2A09               	goto	l3030
  3573  0A22                     u2380:
  3574  0A22                     l3036:
  3575                           
  3576                           ;EWH.c: 274:     uint8_t averageReading= sumOfReadings/length;
  3577  0A22  0827               	movf	EWH_getAvrgTempReading@length^(0+128),w
  3578  0A23  00A8               	movwf	??_EWH_getAvrgTempReading^(0+128)
  3579  0A24  01A9               	clrf	(??_EWH_getAvrgTempReading^(0+128)+1)
  3580  0A25  0828               	movf	??_EWH_getAvrgTempReading^(0+128),w
  3581  0A26  00A0               	movwf	___lwdiv@divisor^(0+128)
  3582  0A27  0829               	movf	(??_EWH_getAvrgTempReading+1)^(0+128),w
  3583  0A28  00A1               	movwf	(___lwdiv@divisor+1)^(0+128)
  3584  0A29  082C               	movf	(EWH_getAvrgTempReading@sumOfReadings+1)^(0+128),w
  3585  0A2A  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  3586  0A2B  082B               	movf	EWH_getAvrgTempReading@sumOfReadings^(0+128),w
  3587  0A2C  00A2               	movwf	___lwdiv@dividend^(0+128)
  3588  0A2D  120A  158A  2330  120A  158A  	fcall	___lwdiv
  3589  0A32  1683               	bsf	3,5	;RP0=1, select bank1
  3590  0A33  1303               	bcf	3,6	;RP1=0, select bank1
  3591  0A34  0820               	movf	?___lwdiv^(0+128),w
  3592  0A35  00FF               	movwf	btemp+1
  3593  0A36  087F               	movf	btemp+1,w
  3594  0A37  00AD               	movwf	EWH_getAvrgTempReading@averageReading^(0+128)
  3595  0A38                     l3038:
  3596                           
  3597                           ;EWH.c: 275:     return averageReading;
  3598  0A38  082D               	movf	EWH_getAvrgTempReading@averageReading^(0+128),w
  3599  0A39                     l578:
  3600  0A39  0008               	return
  3601  0A3A                     __end_of_EWH_getAvrgTempReading:
  3602                           
  3603                           	psect	text16
  3604  0B30                     __ptext16:	
  3605 ;; *************** function ___lwdiv *****************
  3606 ;; Defined at:
  3607 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  divisor         2    0[BANK1 ] unsigned int 
  3610 ;;  dividend        2    2[BANK1 ] unsigned int 
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;  quotient        2    4[BANK1 ] unsigned int 
  3613 ;;  counter         1    6[BANK1 ] unsigned char 
  3614 ;; Return value:  Size  Location     Type
  3615 ;;                  2    0[BANK1 ] unsigned int 
  3616 ;; Registers used:
  3617 ;;		wreg, status,2, status,0, btemp+1
  3618 ;; Tracked objects:
  3619 ;;		On entry : 0/0
  3620 ;;		On exit  : 0/0
  3621 ;;		Unchanged: 0/0
  3622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3623 ;;      Params:         0       0       4       0       0
  3624 ;;      Locals:         0       0       3       0       0
  3625 ;;      Temps:          0       0       0       0       0
  3626 ;;      Totals:         0       0       7       0       0
  3627 ;;Total ram usage:        7 bytes
  3628 ;; Hardware stack levels used:    1
  3629 ;; Hardware stack levels required when called:    3
  3630 ;; This function calls:
  3631 ;;		Nothing
  3632 ;; This function is called by:
  3633 ;;		_EWH_getAvrgTempReading
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           
  3638                           ;psect for function ___lwdiv
  3639  0B30                     ___lwdiv:
  3640  0B30                     l2808:	
  3641                           ;incstack = 0
  3642                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  3643                           
  3644  0B30  1683               	bsf	3,5	;RP0=1, select bank1
  3645  0B31  1303               	bcf	3,6	;RP1=0, select bank1
  3646  0B32  01A4               	clrf	___lwdiv@quotient^(0+128)
  3647  0B33  01A5               	clrf	(___lwdiv@quotient+1)^(0+128)
  3648  0B34                     l2810:
  3649  0B34  0820               	movf	___lwdiv@divisor^(0+128),w
  3650  0B35  0421               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  3651  0B36  1903               	btfsc	3,2
  3652  0B37  2B39               	goto	u2191
  3653  0B38  2B3A               	goto	u2190
  3654  0B39                     u2191:
  3655  0B39  2B71               	goto	l2830
  3656  0B3A                     u2190:
  3657  0B3A                     l2812:
  3658  0B3A  01A6               	clrf	___lwdiv@counter^(0+128)
  3659  0B3B  0AA6               	incf	___lwdiv@counter^(0+128),f
  3660  0B3C  2B48               	goto	l2818
  3661  0B3D                     l2814:
  3662  0B3D  3001               	movlw	1
  3663  0B3E                     u2205:
  3664  0B3E  1003               	clrc
  3665  0B3F  0DA0               	rlf	___lwdiv@divisor^(0+128),f
  3666  0B40  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
  3667  0B41  3EFF               	addlw	-1
  3668  0B42  1D03               	skipz
  3669  0B43  2B3E               	goto	u2205
  3670  0B44                     l2816:
  3671  0B44  3001               	movlw	1
  3672  0B45  00FF               	movwf	btemp+1
  3673  0B46  087F               	movf	btemp+1,w
  3674  0B47  07A6               	addwf	___lwdiv@counter^(0+128),f
  3675  0B48                     l2818:
  3676  0B48  1FA1               	btfss	(___lwdiv@divisor+1)^(0+128),7
  3677  0B49  2B4B               	goto	u2211
  3678  0B4A  2B4C               	goto	u2210
  3679  0B4B                     u2211:
  3680  0B4B  2B3D               	goto	l2814
  3681  0B4C                     u2210:
  3682  0B4C                     l2820:
  3683  0B4C  3001               	movlw	1
  3684  0B4D                     u2225:
  3685  0B4D  1003               	clrc
  3686  0B4E  0DA4               	rlf	___lwdiv@quotient^(0+128),f
  3687  0B4F  0DA5               	rlf	(___lwdiv@quotient+1)^(0+128),f
  3688  0B50  3EFF               	addlw	-1
  3689  0B51  1D03               	skipz
  3690  0B52  2B4D               	goto	u2225
  3691  0B53  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  3692  0B54  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
  3693  0B55  1D03               	skipz
  3694  0B56  2B59               	goto	u2235
  3695  0B57  0820               	movf	___lwdiv@divisor^(0+128),w
  3696  0B58  0222               	subwf	___lwdiv@dividend^(0+128),w
  3697  0B59                     u2235:
  3698  0B59  1C03               	skipc
  3699  0B5A  2B5C               	goto	u2231
  3700  0B5B  2B5D               	goto	u2230
  3701  0B5C                     u2231:
  3702  0B5C  2B64               	goto	l2826
  3703  0B5D                     u2230:
  3704  0B5D                     l2822:
  3705  0B5D  0820               	movf	___lwdiv@divisor^(0+128),w
  3706  0B5E  02A2               	subwf	___lwdiv@dividend^(0+128),f
  3707  0B5F  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  3708  0B60  1C03               	skipc
  3709  0B61  03A3               	decf	(___lwdiv@dividend+1)^(0+128),f
  3710  0B62  02A3               	subwf	(___lwdiv@dividend+1)^(0+128),f
  3711  0B63                     l2824:
  3712  0B63  1424               	bsf	___lwdiv@quotient^(0+128),0
  3713  0B64                     l2826:
  3714  0B64  3001               	movlw	1
  3715  0B65                     u2245:
  3716  0B65  1003               	clrc
  3717  0B66  0CA1               	rrf	(___lwdiv@divisor+1)^(0+128),f
  3718  0B67  0CA0               	rrf	___lwdiv@divisor^(0+128),f
  3719  0B68  3EFF               	addlw	-1
  3720  0B69  1D03               	skipz
  3721  0B6A  2B65               	goto	u2245
  3722  0B6B                     l2828:
  3723  0B6B  3001               	movlw	1
  3724  0B6C  02A6               	subwf	___lwdiv@counter^(0+128),f
  3725  0B6D  1D03               	btfss	3,2
  3726  0B6E  2B70               	goto	u2251
  3727  0B6F  2B71               	goto	u2250
  3728  0B70                     u2251:
  3729  0B70  2B4C               	goto	l2820
  3730  0B71                     u2250:
  3731  0B71                     l2830:
  3732  0B71  0825               	movf	(___lwdiv@quotient+1)^(0+128),w
  3733  0B72  00A1               	movwf	(?___lwdiv+1)^(0+128)
  3734  0B73  0824               	movf	___lwdiv@quotient^(0+128),w
  3735  0B74  00A0               	movwf	?___lwdiv^(0+128)
  3736  0B75                     l1026:
  3737  0B75  0008               	return
  3738  0B76                     __end_of___lwdiv:
  3739                           
  3740                           	psect	text17
  3741  0D6E                     __ptext17:	
  3742 ;; *************** function _EWH_SSD_Update *****************
  3743 ;; Defined at:
  3744 ;;		line 81 in file "DD.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;  temp            2   10[BANK1 ] unsigned short 
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;		None
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  1    wreg      void 
  3751 ;; Registers used:
  3752 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3758 ;;      Params:         0       0       2       0       0
  3759 ;;      Locals:         0       0       0       0       0
  3760 ;;      Temps:          0       0       2       0       0
  3761 ;;      Totals:         0       0       4       0       0
  3762 ;;Total ram usage:        4 bytes
  3763 ;; Hardware stack levels used:    1
  3764 ;; Hardware stack levels required when called:    5
  3765 ;; This function calls:
  3766 ;;		_SSD_OFF
  3767 ;;		_SSD_Write
  3768 ;;		___awdiv
  3769 ;;		___lwmod
  3770 ;; This function is called by:
  3771 ;;		_EWH_WakeUP_Mode
  3772 ;;		_EWH_SetTemp_Mode
  3773 ;;		_EWH_Operating_Mode
  3774 ;; This function uses a non-reentrant model
  3775 ;;
  3776                           
  3777                           
  3778                           ;psect for function _EWH_SSD_Update
  3779  0D6E                     _EWH_SSD_Update:
  3780  0D6E                     l2942:	
  3781                           ;incstack = 0
  3782                           ; Regs used in _EWH_SSD_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3783                           
  3784                           
  3785                           ;DD.c: 81: void EWH_SSD_Update(uint16_t temp);DD.c: 82: {;DD.c: 83:     SSD_OFF(3);
  3786  0D6E  3003               	movlw	3
  3787  0D6F  120A  158A  20BA  120A  158A  	fcall	_SSD_OFF
  3788                           
  3789                           ;DD.c: 84:     SSD_Write(4,temp%10);
  3790  0D74  300A               	movlw	10
  3791  0D75  1683               	bsf	3,5	;RP0=1, select bank1
  3792  0D76  1303               	bcf	3,6	;RP1=0, select bank1
  3793  0D77  00A0               	movwf	___lwmod@divisor^(0+128)
  3794  0D78  3000               	movlw	0
  3795  0D79  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  3796  0D7A  082B               	movf	(EWH_SSD_Update@temp+1)^(0+128),w
  3797  0D7B  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  3798  0D7C  082A               	movf	EWH_SSD_Update@temp^(0+128),w
  3799  0D7D  00A2               	movwf	___lwmod@dividend^(0+128)
  3800  0D7E  120A  158A  22B0  120A  158A  	fcall	___lwmod
  3801  0D83  1683               	bsf	3,5	;RP0=1, select bank1
  3802  0D84  1303               	bcf	3,6	;RP1=0, select bank1
  3803  0D85  0820               	movf	?___lwmod^(0+128),w
  3804  0D86  00FF               	movwf	btemp+1
  3805  0D87  087F               	movf	btemp+1,w
  3806  0D88  00A8               	movwf	SSD_Write@Number^(0+128)
  3807  0D89  3004               	movlw	4
  3808  0D8A  120A  158A  214C  120A  158A  	fcall	_SSD_Write
  3809  0D8F                     l2944:
  3810                           
  3811                           ;DD.c: 85:     _delay((unsigned long)((30)*(4000000/4000.0)));
  3812  0D8F  3027               	movlw	39
  3813  0D90  1683               	bsf	3,5	;RP0=1, select bank1
  3814  0D91  1303               	bcf	3,6	;RP1=0, select bank1
  3815  0D92  00AD               	movwf	(??_EWH_SSD_Update^(0+128)+1)
  3816  0D93  30F4               	movlw	244
  3817  0D94  00AC               	movwf	??_EWH_SSD_Update^(0+128)
  3818  0D95                     u3797:
  3819  0D95  0BAC               	decfsz	??_EWH_SSD_Update^(0+128),f
  3820  0D96  2D95               	goto	u3797
  3821  0D97  0BAD               	decfsz	(??_EWH_SSD_Update^(0+128)+1),f
  3822  0D98  2D95               	goto	u3797
  3823  0D99  0000               	nop
  3824  0D9A                     l2946:
  3825                           
  3826                           ;DD.c: 86:     SSD_OFF(4);
  3827  0D9A  3004               	movlw	4
  3828  0D9B  120A  158A  20BA  120A  158A  	fcall	_SSD_OFF
  3829  0DA0                     l2948:
  3830                           
  3831                           ;DD.c: 87:     SSD_Write(3,(uint8_t)temp/10);
  3832  0DA0  300A               	movlw	10
  3833  0DA1  1683               	bsf	3,5	;RP0=1, select bank1
  3834  0DA2  1303               	bcf	3,6	;RP1=0, select bank1
  3835  0DA3  00A0               	movwf	___awdiv@divisor^(0+128)
  3836  0DA4  3000               	movlw	0
  3837  0DA5  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
  3838  0DA6  082A               	movf	EWH_SSD_Update@temp^(0+128),w
  3839  0DA7  00AC               	movwf	??_EWH_SSD_Update^(0+128)
  3840  0DA8  01AD               	clrf	(??_EWH_SSD_Update^(0+128)+1)
  3841  0DA9  082C               	movf	??_EWH_SSD_Update^(0+128),w
  3842  0DAA  00A2               	movwf	___awdiv@dividend^(0+128)
  3843  0DAB  082D               	movf	(??_EWH_SSD_Update+1)^(0+128),w
  3844  0DAC  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
  3845  0DAD  120A  158A  2632  120A  158A  	fcall	___awdiv
  3846  0DB2  1683               	bsf	3,5	;RP0=1, select bank1
  3847  0DB3  1303               	bcf	3,6	;RP1=0, select bank1
  3848  0DB4  0820               	movf	?___awdiv^(0+128),w
  3849  0DB5  00FF               	movwf	btemp+1
  3850  0DB6  087F               	movf	btemp+1,w
  3851  0DB7  00A8               	movwf	SSD_Write@Number^(0+128)
  3852  0DB8  3003               	movlw	3
  3853  0DB9  120A  158A  214C  120A  158A  	fcall	_SSD_Write
  3854  0DBE                     l2950:
  3855                           
  3856                           ;DD.c: 88:     _delay((unsigned long)((30)*(4000000/4000.0)));
  3857  0DBE  3027               	movlw	39
  3858  0DBF  1683               	bsf	3,5	;RP0=1, select bank1
  3859  0DC0  1303               	bcf	3,6	;RP1=0, select bank1
  3860  0DC1  00AD               	movwf	(??_EWH_SSD_Update^(0+128)+1)
  3861  0DC2  30F4               	movlw	244
  3862  0DC3  00AC               	movwf	??_EWH_SSD_Update^(0+128)
  3863  0DC4                     u3807:
  3864  0DC4  0BAC               	decfsz	??_EWH_SSD_Update^(0+128),f
  3865  0DC5  2DC4               	goto	u3807
  3866  0DC6  0BAD               	decfsz	(??_EWH_SSD_Update^(0+128)+1),f
  3867  0DC7  2DC4               	goto	u3807
  3868  0DC8  0000               	nop
  3869  0DC9                     l288:
  3870  0DC9  0008               	return
  3871  0DCA                     __end_of_EWH_SSD_Update:
  3872                           
  3873                           	psect	text18
  3874  0AB0                     __ptext18:	
  3875 ;; *************** function ___lwmod *****************
  3876 ;; Defined at:
  3877 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;  divisor         2    0[BANK1 ] unsigned int 
  3880 ;;  dividend        2    2[BANK1 ] unsigned int 
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;  counter         1    4[BANK1 ] unsigned char 
  3883 ;; Return value:  Size  Location     Type
  3884 ;;                  2    0[BANK1 ] unsigned int 
  3885 ;; Registers used:
  3886 ;;		wreg, status,2, status,0, btemp+1
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3892 ;;      Params:         0       0       4       0       0
  3893 ;;      Locals:         0       0       1       0       0
  3894 ;;      Temps:          0       0       0       0       0
  3895 ;;      Totals:         0       0       5       0       0
  3896 ;;Total ram usage:        5 bytes
  3897 ;; Hardware stack levels used:    1
  3898 ;; Hardware stack levels required when called:    3
  3899 ;; This function calls:
  3900 ;;		Nothing
  3901 ;; This function is called by:
  3902 ;;		_EWH_SSD_Update
  3903 ;;		_Heater_Display
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906                           
  3907                           
  3908                           ;psect for function ___lwmod
  3909  0AB0                     ___lwmod:
  3910  0AB0                     l2834:	
  3911                           ;incstack = 0
  3912                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  3913                           
  3914  0AB0  1683               	bsf	3,5	;RP0=1, select bank1
  3915  0AB1  1303               	bcf	3,6	;RP1=0, select bank1
  3916  0AB2  0820               	movf	___lwmod@divisor^(0+128),w
  3917  0AB3  0421               	iorwf	(___lwmod@divisor+1)^(0+128),w
  3918  0AB4  1903               	btfsc	3,2
  3919  0AB5  2AB7               	goto	u2261
  3920  0AB6  2AB8               	goto	u2260
  3921  0AB7                     u2261:
  3922  0AB7  2AE7               	goto	l2852
  3923  0AB8                     u2260:
  3924  0AB8                     l2836:
  3925  0AB8  01A4               	clrf	___lwmod@counter^(0+128)
  3926  0AB9  0AA4               	incf	___lwmod@counter^(0+128),f
  3927  0ABA  2AC6               	goto	l2842
  3928  0ABB                     l2838:
  3929  0ABB  3001               	movlw	1
  3930  0ABC                     u2275:
  3931  0ABC  1003               	clrc
  3932  0ABD  0DA0               	rlf	___lwmod@divisor^(0+128),f
  3933  0ABE  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
  3934  0ABF  3EFF               	addlw	-1
  3935  0AC0  1D03               	skipz
  3936  0AC1  2ABC               	goto	u2275
  3937  0AC2                     l2840:
  3938  0AC2  3001               	movlw	1
  3939  0AC3  00FF               	movwf	btemp+1
  3940  0AC4  087F               	movf	btemp+1,w
  3941  0AC5  07A4               	addwf	___lwmod@counter^(0+128),f
  3942  0AC6                     l2842:
  3943  0AC6  1FA1               	btfss	(___lwmod@divisor+1)^(0+128),7
  3944  0AC7  2AC9               	goto	u2281
  3945  0AC8  2ACA               	goto	u2280
  3946  0AC9                     u2281:
  3947  0AC9  2ABB               	goto	l2838
  3948  0ACA                     u2280:
  3949  0ACA                     l2844:
  3950  0ACA  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  3951  0ACB  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
  3952  0ACC  1D03               	skipz
  3953  0ACD  2AD0               	goto	u2295
  3954  0ACE  0820               	movf	___lwmod@divisor^(0+128),w
  3955  0ACF  0222               	subwf	___lwmod@dividend^(0+128),w
  3956  0AD0                     u2295:
  3957  0AD0  1C03               	skipc
  3958  0AD1  2AD3               	goto	u2291
  3959  0AD2  2AD4               	goto	u2290
  3960  0AD3                     u2291:
  3961  0AD3  2ADA               	goto	l2848
  3962  0AD4                     u2290:
  3963  0AD4                     l2846:
  3964  0AD4  0820               	movf	___lwmod@divisor^(0+128),w
  3965  0AD5  02A2               	subwf	___lwmod@dividend^(0+128),f
  3966  0AD6  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  3967  0AD7  1C03               	skipc
  3968  0AD8  03A3               	decf	(___lwmod@dividend+1)^(0+128),f
  3969  0AD9  02A3               	subwf	(___lwmod@dividend+1)^(0+128),f
  3970  0ADA                     l2848:
  3971  0ADA  3001               	movlw	1
  3972  0ADB                     u2305:
  3973  0ADB  1003               	clrc
  3974  0ADC  0CA1               	rrf	(___lwmod@divisor+1)^(0+128),f
  3975  0ADD  0CA0               	rrf	___lwmod@divisor^(0+128),f
  3976  0ADE  3EFF               	addlw	-1
  3977  0ADF  1D03               	skipz
  3978  0AE0  2ADB               	goto	u2305
  3979  0AE1                     l2850:
  3980  0AE1  3001               	movlw	1
  3981  0AE2  02A4               	subwf	___lwmod@counter^(0+128),f
  3982  0AE3  1D03               	btfss	3,2
  3983  0AE4  2AE6               	goto	u2311
  3984  0AE5  2AE7               	goto	u2310
  3985  0AE6                     u2311:
  3986  0AE6  2ACA               	goto	l2844
  3987  0AE7                     u2310:
  3988  0AE7                     l2852:
  3989  0AE7  0823               	movf	(___lwmod@dividend+1)^(0+128),w
  3990  0AE8  00A1               	movwf	(?___lwmod+1)^(0+128)
  3991  0AE9  0822               	movf	___lwmod@dividend^(0+128),w
  3992  0AEA  00A0               	movwf	?___lwmod^(0+128)
  3993  0AEB                     l1036:
  3994  0AEB  0008               	return
  3995  0AEC                     __end_of___lwmod:
  3996                           
  3997                           	psect	text19
  3998  0E32                     __ptext19:	
  3999 ;; *************** function ___awdiv *****************
  4000 ;; Defined at:
  4001 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  divisor         2    0[BANK1 ] int 
  4004 ;;  dividend        2    2[BANK1 ] int 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  quotient        2    6[BANK1 ] int 
  4007 ;;  sign            1    5[BANK1 ] unsigned char 
  4008 ;;  counter         1    4[BANK1 ] unsigned char 
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  2    0[BANK1 ] int 
  4011 ;; Registers used:
  4012 ;;		wreg, status,2, status,0, btemp+1
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4018 ;;      Params:         0       0       4       0       0
  4019 ;;      Locals:         0       0       4       0       0
  4020 ;;      Temps:          0       0       0       0       0
  4021 ;;      Totals:         0       0       8       0       0
  4022 ;;Total ram usage:        8 bytes
  4023 ;; Hardware stack levels used:    1
  4024 ;; Hardware stack levels required when called:    3
  4025 ;; This function calls:
  4026 ;;		Nothing
  4027 ;; This function is called by:
  4028 ;;		_EWH_SSD_Update
  4029 ;;		_Heater_Display
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           
  4034                           ;psect for function ___awdiv
  4035  0E32                     ___awdiv:
  4036  0E32                     l2764:	
  4037                           ;incstack = 0
  4038                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  4039                           
  4040  0E32  1683               	bsf	3,5	;RP0=1, select bank1
  4041  0E33  1303               	bcf	3,6	;RP1=0, select bank1
  4042  0E34  01A5               	clrf	___awdiv@sign^(0+128)
  4043  0E35                     l2766:
  4044  0E35  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  4045  0E36  2E38               	goto	u2091
  4046  0E37  2E39               	goto	u2090
  4047  0E38                     u2091:
  4048  0E38  2E40               	goto	l2772
  4049  0E39                     u2090:
  4050  0E39                     l2768:
  4051  0E39  09A0               	comf	___awdiv@divisor^(0+128),f
  4052  0E3A  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
  4053  0E3B  0AA0               	incf	___awdiv@divisor^(0+128),f
  4054  0E3C  1903               	skipnz
  4055  0E3D  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
  4056  0E3E                     l2770:
  4057  0E3E  01A5               	clrf	___awdiv@sign^(0+128)
  4058  0E3F  0AA5               	incf	___awdiv@sign^(0+128),f
  4059  0E40                     l2772:
  4060  0E40  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
  4061  0E41  2E43               	goto	u2101
  4062  0E42  2E44               	goto	u2100
  4063  0E43                     u2101:
  4064  0E43  2E4D               	goto	l2778
  4065  0E44                     u2100:
  4066  0E44                     l2774:
  4067  0E44  09A2               	comf	___awdiv@dividend^(0+128),f
  4068  0E45  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
  4069  0E46  0AA2               	incf	___awdiv@dividend^(0+128),f
  4070  0E47  1903               	skipnz
  4071  0E48  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
  4072  0E49                     l2776:
  4073  0E49  3001               	movlw	1
  4074  0E4A  00FF               	movwf	btemp+1
  4075  0E4B  087F               	movf	btemp+1,w
  4076  0E4C  06A5               	xorwf	___awdiv@sign^(0+128),f
  4077  0E4D                     l2778:
  4078  0E4D  01A6               	clrf	___awdiv@quotient^(0+128)
  4079  0E4E  01A7               	clrf	(___awdiv@quotient+1)^(0+128)
  4080  0E4F                     l2780:
  4081  0E4F  0820               	movf	___awdiv@divisor^(0+128),w
  4082  0E50  0421               	iorwf	(___awdiv@divisor+1)^(0+128),w
  4083  0E51  1903               	btfsc	3,2
  4084  0E52  2E54               	goto	u2111
  4085  0E53  2E55               	goto	u2110
  4086  0E54                     u2111:
  4087  0E54  2E8C               	goto	l2800
  4088  0E55                     u2110:
  4089  0E55                     l2782:
  4090  0E55  01A4               	clrf	___awdiv@counter^(0+128)
  4091  0E56  0AA4               	incf	___awdiv@counter^(0+128),f
  4092  0E57  2E63               	goto	l2788
  4093  0E58                     l2784:
  4094  0E58  3001               	movlw	1
  4095  0E59                     u2125:
  4096  0E59  1003               	clrc
  4097  0E5A  0DA0               	rlf	___awdiv@divisor^(0+128),f
  4098  0E5B  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
  4099  0E5C  3EFF               	addlw	-1
  4100  0E5D  1D03               	skipz
  4101  0E5E  2E59               	goto	u2125
  4102  0E5F                     l2786:
  4103  0E5F  3001               	movlw	1
  4104  0E60  00FF               	movwf	btemp+1
  4105  0E61  087F               	movf	btemp+1,w
  4106  0E62  07A4               	addwf	___awdiv@counter^(0+128),f
  4107  0E63                     l2788:
  4108  0E63  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  4109  0E64  2E66               	goto	u2131
  4110  0E65  2E67               	goto	u2130
  4111  0E66                     u2131:
  4112  0E66  2E58               	goto	l2784
  4113  0E67                     u2130:
  4114  0E67                     l2790:
  4115  0E67  3001               	movlw	1
  4116  0E68                     u2145:
  4117  0E68  1003               	clrc
  4118  0E69  0DA6               	rlf	___awdiv@quotient^(0+128),f
  4119  0E6A  0DA7               	rlf	(___awdiv@quotient+1)^(0+128),f
  4120  0E6B  3EFF               	addlw	-1
  4121  0E6C  1D03               	skipz
  4122  0E6D  2E68               	goto	u2145
  4123  0E6E  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  4124  0E6F  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
  4125  0E70  1D03               	skipz
  4126  0E71  2E74               	goto	u2155
  4127  0E72  0820               	movf	___awdiv@divisor^(0+128),w
  4128  0E73  0222               	subwf	___awdiv@dividend^(0+128),w
  4129  0E74                     u2155:
  4130  0E74  1C03               	skipc
  4131  0E75  2E77               	goto	u2151
  4132  0E76  2E78               	goto	u2150
  4133  0E77                     u2151:
  4134  0E77  2E7F               	goto	l2796
  4135  0E78                     u2150:
  4136  0E78                     l2792:
  4137  0E78  0820               	movf	___awdiv@divisor^(0+128),w
  4138  0E79  02A2               	subwf	___awdiv@dividend^(0+128),f
  4139  0E7A  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  4140  0E7B  1C03               	skipc
  4141  0E7C  03A3               	decf	(___awdiv@dividend+1)^(0+128),f
  4142  0E7D  02A3               	subwf	(___awdiv@dividend+1)^(0+128),f
  4143  0E7E                     l2794:
  4144  0E7E  1426               	bsf	___awdiv@quotient^(0+128),0
  4145  0E7F                     l2796:
  4146  0E7F  3001               	movlw	1
  4147  0E80                     u2165:
  4148  0E80  1003               	clrc
  4149  0E81  0CA1               	rrf	(___awdiv@divisor+1)^(0+128),f
  4150  0E82  0CA0               	rrf	___awdiv@divisor^(0+128),f
  4151  0E83  3EFF               	addlw	-1
  4152  0E84  1D03               	skipz
  4153  0E85  2E80               	goto	u2165
  4154  0E86                     l2798:
  4155  0E86  3001               	movlw	1
  4156  0E87  02A4               	subwf	___awdiv@counter^(0+128),f
  4157  0E88  1D03               	btfss	3,2
  4158  0E89  2E8B               	goto	u2171
  4159  0E8A  2E8C               	goto	u2170
  4160  0E8B                     u2171:
  4161  0E8B  2E67               	goto	l2790
  4162  0E8C                     u2170:
  4163  0E8C                     l2800:
  4164  0E8C  0825               	movf	___awdiv@sign^(0+128),w
  4165  0E8D  1903               	btfsc	3,2
  4166  0E8E  2E90               	goto	u2181
  4167  0E8F  2E91               	goto	u2180
  4168  0E90                     u2181:
  4169  0E90  2E96               	goto	l2804
  4170  0E91                     u2180:
  4171  0E91                     l2802:
  4172  0E91  09A6               	comf	___awdiv@quotient^(0+128),f
  4173  0E92  09A7               	comf	(___awdiv@quotient+1)^(0+128),f
  4174  0E93  0AA6               	incf	___awdiv@quotient^(0+128),f
  4175  0E94  1903               	skipnz
  4176  0E95  0AA7               	incf	(___awdiv@quotient+1)^(0+128),f
  4177  0E96                     l2804:
  4178  0E96  0827               	movf	(___awdiv@quotient+1)^(0+128),w
  4179  0E97  00A1               	movwf	(?___awdiv+1)^(0+128)
  4180  0E98  0826               	movf	___awdiv@quotient^(0+128),w
  4181  0E99  00A0               	movwf	?___awdiv^(0+128)
  4182  0E9A                     l907:
  4183  0E9A  0008               	return
  4184  0E9B                     __end_of___awdiv:
  4185                           
  4186                           	psect	text20
  4187  094C                     __ptext20:	
  4188 ;; *************** function _SSD_Write *****************
  4189 ;; Defined at:
  4190 ;;		line 35 in file "SSD.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;  ID              1    wreg     unsigned char 
  4193 ;;  Number          1    8[BANK1 ] unsigned char 
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;  ID              1    9[BANK1 ] unsigned char 
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  1    wreg      unsigned char 
  4198 ;; Registers used:
  4199 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4205 ;;      Params:         0       0       1       0       0
  4206 ;;      Locals:         0       0       1       0       0
  4207 ;;      Temps:          0       0       0       0       0
  4208 ;;      Totals:         0       0       2       0       0
  4209 ;;Total ram usage:        2 bytes
  4210 ;; Hardware stack levels used:    1
  4211 ;; Hardware stack levels required when called:    4
  4212 ;; This function calls:
  4213 ;;		_SSD_config
  4214 ;; This function is called by:
  4215 ;;		_EWH_SSD_Update
  4216 ;;		_Heater_Display
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219                           
  4220                           
  4221                           ;psect for function _SSD_Write
  4222  094C                     _SSD_Write:
  4223                           
  4224                           ;incstack = 0
  4225                           ; Regs used in _SSD_Write: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4226                           ;SSD_Write@ID stored from wreg
  4227  094C  1683               	bsf	3,5	;RP0=1, select bank1
  4228  094D  1303               	bcf	3,6	;RP1=0, select bank1
  4229  094E  00A9               	movwf	SSD_Write@ID^(0+128)
  4230  094F                     l2726:
  4231                           
  4232                           ;SSD.c: 35: Std_ReturnType SSD_Write(SSD_ID ID ,SSD_Number Number);SSD.c: 36: {;SSD.c: 3
      +                          8:     SSD_config(ID,ON);
  4233  094F  01A0               	clrf	SSD_config@SSD_state^(0+128)
  4234  0950  0AA0               	incf	SSD_config@SSD_state^(0+128),f
  4235  0951  0829               	movf	SSD_Write@ID^(0+128),w
  4236  0952  120A  158A  269B  120A  158A  	fcall	_SSD_config
  4237  0957                     l2728:
  4238                           
  4239                           ;SSD.c: 40:     ((TRISD)=(0u));
  4240  0957  1683               	bsf	3,5	;RP0=1, select bank1
  4241  0958  1303               	bcf	3,6	;RP1=0, select bank1
  4242  0959  0188               	clrf	8	;volatile
  4243  095A                     l2730:
  4244                           
  4245                           ;SSD.c: 42:     if((Number>=0) && (Number<=9))
  4246  095A  300A               	movlw	10
  4247  095B  0228               	subwf	SSD_Write@Number^(0+128),w
  4248  095C  1803               	skipnc
  4249  095D  295F               	goto	u2011
  4250  095E  2960               	goto	u2010
  4251  095F                     u2011:
  4252  095F  2968               	goto	l658
  4253  0960                     u2010:
  4254  0960                     l2732:
  4255                           
  4256                           ;SSD.c: 43:     {;SSD.c: 45:         ((PORTD)=(SSD_code[Number]));
  4257  0960  0828               	movf	SSD_Write@Number^(0+128),w
  4258  0961  3ED5               	addlw	(low (_SSD_code| 0))& (0+255)
  4259  0962  0084               	movwf	4
  4260  0963  1383               	bcf	3,7	;select IRP bank1
  4261  0964  0800               	movf	0,w
  4262  0965  1283               	bcf	3,5	;RP0=0, select bank0
  4263  0966  1303               	bcf	3,6	;RP1=0, select bank0
  4264  0967  0088               	movwf	8	;volatile
  4265  0968                     l658:
  4266  0968  0008               	return
  4267  0969                     __end_of_SSD_Write:
  4268                           
  4269                           	psect	text21
  4270  08BA                     __ptext21:	
  4271 ;; *************** function _SSD_OFF *****************
  4272 ;; Defined at:
  4273 ;;		line 65 in file "SSD.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;  ID              1    wreg     unsigned char 
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;  ID              1    4[BANK1 ] unsigned char 
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  1    wreg      void 
  4280 ;; Registers used:
  4281 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4287 ;;      Params:         0       0       0       0       0
  4288 ;;      Locals:         0       0       1       0       0
  4289 ;;      Temps:          0       0       0       0       0
  4290 ;;      Totals:         0       0       1       0       0
  4291 ;;Total ram usage:        1 bytes
  4292 ;; Hardware stack levels used:    1
  4293 ;; Hardware stack levels required when called:    4
  4294 ;; This function calls:
  4295 ;;		_SSD_config
  4296 ;; This function is called by:
  4297 ;;		_EWH_SSD_OFF
  4298 ;;		_EWH_SSD_Update
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302                           
  4303                           ;psect for function _SSD_OFF
  4304  08BA                     _SSD_OFF:
  4305                           
  4306                           ;incstack = 0
  4307                           ; Regs used in _SSD_OFF: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4308                           ;SSD_OFF@ID stored from wreg
  4309  08BA  1683               	bsf	3,5	;RP0=1, select bank1
  4310  08BB  1303               	bcf	3,6	;RP1=0, select bank1
  4311  08BC  00A4               	movwf	SSD_OFF@ID^(0+128)
  4312  08BD                     l2724:
  4313                           
  4314                           ;SSD.c: 65: void SSD_OFF (SSD_ID ID);SSD.c: 66: {;SSD.c: 67:     SSD_config(ID,OFF);
  4315  08BD  01A0               	clrf	SSD_config@SSD_state^(0+128)
  4316  08BE  0824               	movf	SSD_OFF@ID^(0+128),w
  4317  08BF  120A  158A  269B  120A  158A  	fcall	_SSD_config
  4318  08C4                     l665:
  4319  08C4  0008               	return
  4320  08C5                     __end_of_SSD_OFF:
  4321                           
  4322                           	psect	text22
  4323  0E9B                     __ptext22:	
  4324 ;; *************** function _SSD_config *****************
  4325 ;; Defined at:
  4326 ;;		line 11 in file "SSD.c"
  4327 ;; Parameters:    Size  Location     Type
  4328 ;;  ID              1    wreg     unsigned char 
  4329 ;;  SSD_state       1    0[BANK1 ] enum E13
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;  ID              1    3[BANK1 ] unsigned char 
  4332 ;; Return value:  Size  Location     Type
  4333 ;;                  1    wreg      void 
  4334 ;; Registers used:
  4335 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4336 ;; Tracked objects:
  4337 ;;		On entry : 0/0
  4338 ;;		On exit  : 0/0
  4339 ;;		Unchanged: 0/0
  4340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4341 ;;      Params:         0       0       1       0       0
  4342 ;;      Locals:         0       0       1       0       0
  4343 ;;      Temps:          0       0       2       0       0
  4344 ;;      Totals:         0       0       4       0       0
  4345 ;;Total ram usage:        4 bytes
  4346 ;; Hardware stack levels used:    1
  4347 ;; Hardware stack levels required when called:    3
  4348 ;; This function calls:
  4349 ;;		Nothing
  4350 ;; This function is called by:
  4351 ;;		_SSD_Write
  4352 ;;		_SSD_OFF
  4353 ;;		_Heater_Display
  4354 ;;		_SSD_ON
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           
  4359                           ;psect for function _SSD_config
  4360  0E9B                     _SSD_config:
  4361                           
  4362                           ;incstack = 0
  4363                           ; Regs used in _SSD_config: [wreg-fsr0h+status,2+status,0+btemp+1]
  4364                           ;SSD_config@ID stored from wreg
  4365  0E9B  1683               	bsf	3,5	;RP0=1, select bank1
  4366  0E9C  1303               	bcf	3,6	;RP1=0, select bank1
  4367  0E9D  00A3               	movwf	SSD_config@ID^(0+128)
  4368  0E9E                     l2652:
  4369                           
  4370                           ;SSD.c: 11: static void SSD_config (SSD_ID ID ,tState SSD_state);SSD.c: 12: {;SSD.c: 15:
      +                               switch(ID)
  4371  0E9E  2EEF               	goto	l2696
  4372  0E9F                     l2656:
  4373  0E9F  30FB               	movlw	251
  4374  0EA0  00FF               	movwf	btemp+1
  4375  0EA1  087F               	movf	btemp+1,w
  4376  0EA2  0585               	andwf	5,f	;volatile
  4377  0EA3                     l2658:
  4378                           
  4379                           ;SSD.c: 19:             (SSD_state)?(PORTA |= (1<<2)) : (PORTA &= ~(1<<2));
  4380  0EA3  0820               	movf	SSD_config@SSD_state^(0+128),w
  4381  0EA4  1903               	btfsc	3,2
  4382  0EA5  2EA7               	goto	u1921
  4383  0EA6  2EA8               	goto	u1920
  4384  0EA7                     u1921:
  4385  0EA7  2EAC               	goto	l2662
  4386  0EA8                     u1920:
  4387  0EA8                     l2660:
  4388  0EA8  1283               	bcf	3,5	;RP0=0, select bank0
  4389  0EA9  1303               	bcf	3,6	;RP1=0, select bank0
  4390  0EAA  1505               	bsf	5,2	;volatile
  4391  0EAB  2F05               	goto	l654
  4392  0EAC                     l2662:
  4393  0EAC  30FB               	movlw	251
  4394  0EAD  00FF               	movwf	btemp+1
  4395  0EAE  087F               	movf	btemp+1,w
  4396  0EAF  1283               	bcf	3,5	;RP0=0, select bank0
  4397  0EB0  1303               	bcf	3,6	;RP1=0, select bank0
  4398  0EB1  0585               	andwf	5,f	;volatile
  4399  0EB2  2F05               	goto	l654
  4400  0EB3                     l2666:
  4401  0EB3  30F7               	movlw	247
  4402  0EB4  00FF               	movwf	btemp+1
  4403  0EB5  087F               	movf	btemp+1,w
  4404  0EB6  0585               	andwf	5,f	;volatile
  4405  0EB7                     l2668:
  4406                           
  4407                           ;SSD.c: 23:             (SSD_state)?(PORTA |= (1<<3)) : (PORTA &= ~(1<<3));
  4408  0EB7  0820               	movf	SSD_config@SSD_state^(0+128),w
  4409  0EB8  1903               	btfsc	3,2
  4410  0EB9  2EBB               	goto	u1931
  4411  0EBA  2EBC               	goto	u1930
  4412  0EBB                     u1931:
  4413  0EBB  2EC0               	goto	l2672
  4414  0EBC                     u1930:
  4415  0EBC                     l2670:
  4416  0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  4417  0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  4418  0EBE  1585               	bsf	5,3	;volatile
  4419  0EBF  2F05               	goto	l654
  4420  0EC0                     l2672:
  4421  0EC0  30F7               	movlw	247
  4422  0EC1  00FF               	movwf	btemp+1
  4423  0EC2  087F               	movf	btemp+1,w
  4424  0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  4425  0EC4  1303               	bcf	3,6	;RP1=0, select bank0
  4426  0EC5  0585               	andwf	5,f	;volatile
  4427  0EC6  2F05               	goto	l654
  4428  0EC7                     l2676:
  4429  0EC7  30EF               	movlw	239
  4430  0EC8  00FF               	movwf	btemp+1
  4431  0EC9  087F               	movf	btemp+1,w
  4432  0ECA  0585               	andwf	5,f	;volatile
  4433  0ECB                     l2678:
  4434                           
  4435                           ;SSD.c: 27:             (SSD_state)?(PORTA |= (1<<4)) : (PORTA &= ~(1<<4));
  4436  0ECB  0820               	movf	SSD_config@SSD_state^(0+128),w
  4437  0ECC  1903               	btfsc	3,2
  4438  0ECD  2ECF               	goto	u1941
  4439  0ECE  2ED0               	goto	u1940
  4440  0ECF                     u1941:
  4441  0ECF  2ED4               	goto	l2682
  4442  0ED0                     u1940:
  4443  0ED0                     l2680:
  4444  0ED0  1283               	bcf	3,5	;RP0=0, select bank0
  4445  0ED1  1303               	bcf	3,6	;RP1=0, select bank0
  4446  0ED2  1605               	bsf	5,4	;volatile
  4447  0ED3  2F05               	goto	l654
  4448  0ED4                     l2682:
  4449  0ED4  30EF               	movlw	239
  4450  0ED5  00FF               	movwf	btemp+1
  4451  0ED6  087F               	movf	btemp+1,w
  4452  0ED7  1283               	bcf	3,5	;RP0=0, select bank0
  4453  0ED8  1303               	bcf	3,6	;RP1=0, select bank0
  4454  0ED9  0585               	andwf	5,f	;volatile
  4455  0EDA  2F05               	goto	l654
  4456  0EDB                     l2686:
  4457  0EDB  30DF               	movlw	223
  4458  0EDC  00FF               	movwf	btemp+1
  4459  0EDD  087F               	movf	btemp+1,w
  4460  0EDE  0585               	andwf	5,f	;volatile
  4461  0EDF                     l2688:
  4462                           
  4463                           ;SSD.c: 31:             (SSD_state)?(PORTA |= (1<<5)) : (PORTA &= ~(1<<5));
  4464  0EDF  0820               	movf	SSD_config@SSD_state^(0+128),w
  4465  0EE0  1903               	btfsc	3,2
  4466  0EE1  2EE3               	goto	u1951
  4467  0EE2  2EE4               	goto	u1950
  4468  0EE3                     u1951:
  4469  0EE3  2EE8               	goto	l2692
  4470  0EE4                     u1950:
  4471  0EE4                     l2690:
  4472  0EE4  1283               	bcf	3,5	;RP0=0, select bank0
  4473  0EE5  1303               	bcf	3,6	;RP1=0, select bank0
  4474  0EE6  1685               	bsf	5,5	;volatile
  4475  0EE7  2F05               	goto	l654
  4476  0EE8                     l2692:
  4477  0EE8  30DF               	movlw	223
  4478  0EE9  00FF               	movwf	btemp+1
  4479  0EEA  087F               	movf	btemp+1,w
  4480  0EEB  1283               	bcf	3,5	;RP0=0, select bank0
  4481  0EEC  1303               	bcf	3,6	;RP1=0, select bank0
  4482  0EED  0585               	andwf	5,f	;volatile
  4483  0EEE  2F05               	goto	l654
  4484  0EEF                     l2696:
  4485  0EEF  0823               	movf	SSD_config@ID^(0+128),w
  4486  0EF0  00A1               	movwf	??_SSD_config^(0+128)
  4487  0EF1  01A2               	clrf	(??_SSD_config^(0+128)+1)
  4488                           
  4489                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4490                           ; Switch size 1, requested type "simple"
  4491                           ; Number of cases is 1, Range of values is 0 to 0
  4492                           ; switch strategies available:
  4493                           ; Name         Instructions Cycles
  4494                           ; simple_byte            4     3 (average)
  4495                           ; direct_byte           11     8 (fixed)
  4496                           ; jumptable            260     6 (fixed)
  4497                           ;	Chosen strategy is simple_byte
  4498  0EF2  0822               	movf	(??_SSD_config+1)^(0+128),w
  4499  0EF3  3A00               	xorlw	0	; case 0
  4500  0EF4  1903               	skipnz
  4501  0EF5  2EF7               	goto	l3926
  4502  0EF6  2F05               	goto	l654
  4503  0EF7                     l3926:
  4504                           
  4505                           ; Switch size 1, requested type "simple"
  4506                           ; Number of cases is 4, Range of values is 2 to 5
  4507                           ; switch strategies available:
  4508                           ; Name         Instructions Cycles
  4509                           ; simple_byte           13     7 (average)
  4510                           ; direct_byte           23    11 (fixed)
  4511                           ; jumptable            263     9 (fixed)
  4512                           ;	Chosen strategy is simple_byte
  4513  0EF7  0821               	movf	??_SSD_config^(0+128),w
  4514  0EF8  3A02               	xorlw	2	; case 2
  4515  0EF9  1903               	skipnz
  4516  0EFA  2E9F               	goto	l2656
  4517  0EFB  3A01               	xorlw	1	; case 3
  4518  0EFC  1903               	skipnz
  4519  0EFD  2EB3               	goto	l2666
  4520  0EFE  3A07               	xorlw	7	; case 4
  4521  0EFF  1903               	skipnz
  4522  0F00  2EC7               	goto	l2676
  4523  0F01  3A01               	xorlw	1	; case 5
  4524  0F02  1903               	skipnz
  4525  0F03  2EDB               	goto	l2686
  4526  0F04  2F05               	goto	l654
  4527  0F05                     l654:
  4528  0F05  0008               	return
  4529  0F06                     __end_of_SSD_config:
  4530                           
  4531                           	psect	text23
  4532  0C5E                     __ptext23:	
  4533 ;; *************** function _DD_SetState *****************
  4534 ;; Defined at:
  4535 ;;		line 29 in file "DD.c"
  4536 ;; Parameters:    Size  Location     Type
  4537 ;;  device          1    wreg     enum E884
  4538 ;;  state           1    0[BANK1 ] enum E13
  4539 ;; Auto vars:     Size  Location     Type
  4540 ;;  device          1    3[BANK1 ] enum E884
  4541 ;; Return value:  Size  Location     Type
  4542 ;;                  1    wreg      void 
  4543 ;; Registers used:
  4544 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4545 ;; Tracked objects:
  4546 ;;		On entry : 0/0
  4547 ;;		On exit  : 0/0
  4548 ;;		Unchanged: 0/0
  4549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4550 ;;      Params:         0       0       1       0       0
  4551 ;;      Locals:         0       0       1       0       0
  4552 ;;      Temps:          0       0       2       0       0
  4553 ;;      Totals:         0       0       4       0       0
  4554 ;;Total ram usage:        4 bytes
  4555 ;; Hardware stack levels used:    1
  4556 ;; Hardware stack levels required when called:    3
  4557 ;; This function calls:
  4558 ;;		Nothing
  4559 ;; This function is called by:
  4560 ;;		_EWH_Sleep_Mode
  4561 ;;		_EWH_SetTemp_Mode
  4562 ;;		_EWH_Operating_Mode
  4563 ;; This function uses a non-reentrant model
  4564 ;;
  4565                           
  4566                           
  4567                           ;psect for function _DD_SetState
  4568  0C5E                     _DD_SetState:
  4569                           
  4570                           ;incstack = 0
  4571                           ; Regs used in _DD_SetState: [wreg-fsr0h+status,2+status,0+btemp+1]
  4572                           ;DD_SetState@device stored from wreg
  4573  0C5E  1683               	bsf	3,5	;RP0=1, select bank1
  4574  0C5F  1303               	bcf	3,6	;RP1=0, select bank1
  4575  0C60  00A3               	movwf	DD_SetState@device^(0+128)
  4576  0C61                     l2904:
  4577                           
  4578                           ;DD.c: 29: void DD_SetState(tDD device ,tState state);DD.c: 30: {;DD.c: 31:     switch(d
      +                          evice)
  4579  0C61  2CA4               	goto	l2932
  4580  0C62                     l2906:
  4581                           
  4582                           ;DD.c: 34:             (state)?(PORTC |= (1<<5)) : (PORTC &= ~(1<<5));
  4583  0C62  0820               	movf	DD_SetState@state^(0+128),w
  4584  0C63  1903               	btfsc	3,2
  4585  0C64  2C66               	goto	u2331
  4586  0C65  2C67               	goto	u2330
  4587  0C66                     u2331:
  4588  0C66  2C6B               	goto	l2910
  4589  0C67                     u2330:
  4590  0C67                     l2908:
  4591  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  4592  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  4593  0C69  1687               	bsf	7,5	;volatile
  4594  0C6A  2C71               	goto	l2912
  4595  0C6B                     l2910:
  4596  0C6B  30DF               	movlw	223
  4597  0C6C  00FF               	movwf	btemp+1
  4598  0C6D  087F               	movf	btemp+1,w
  4599  0C6E  1283               	bcf	3,5	;RP0=0, select bank0
  4600  0C6F  1303               	bcf	3,6	;RP1=0, select bank0
  4601  0C70  0587               	andwf	7,f	;volatile
  4602  0C71                     l2912:
  4603                           
  4604                           ;DD.c: 35:             Devices_State.HEATER_State=state;
  4605  0C71  1683               	bsf	3,5	;RP0=1, select bank1
  4606  0C72  1303               	bcf	3,6	;RP1=0, select bank1
  4607  0C73  0820               	movf	DD_SetState@state^(0+128),w
  4608  0C74  00FF               	movwf	btemp+1
  4609  0C75  087F               	movf	btemp+1,w
  4610  0C76  00C1               	movwf	_Devices_State^(0+128)
  4611                           
  4612                           ;DD.c: 36:             break;
  4613  0C77  2CB7               	goto	l270
  4614  0C78                     l2914:
  4615                           
  4616                           ;DD.c: 38:             (state)?(PORTC |= (1<<2)) : (PORTC &= ~(1<<2));
  4617  0C78  0820               	movf	DD_SetState@state^(0+128),w
  4618  0C79  1903               	btfsc	3,2
  4619  0C7A  2C7C               	goto	u2341
  4620  0C7B  2C7D               	goto	u2340
  4621  0C7C                     u2341:
  4622  0C7C  2C81               	goto	l2918
  4623  0C7D                     u2340:
  4624  0C7D                     l2916:
  4625  0C7D  1283               	bcf	3,5	;RP0=0, select bank0
  4626  0C7E  1303               	bcf	3,6	;RP1=0, select bank0
  4627  0C7F  1507               	bsf	7,2	;volatile
  4628  0C80  2C87               	goto	l2920
  4629  0C81                     l2918:
  4630  0C81  30FB               	movlw	251
  4631  0C82  00FF               	movwf	btemp+1
  4632  0C83  087F               	movf	btemp+1,w
  4633  0C84  1283               	bcf	3,5	;RP0=0, select bank0
  4634  0C85  1303               	bcf	3,6	;RP1=0, select bank0
  4635  0C86  0587               	andwf	7,f	;volatile
  4636  0C87                     l2920:
  4637                           
  4638                           ;DD.c: 39:             Devices_State.COOLER_State=state;
  4639  0C87  1683               	bsf	3,5	;RP0=1, select bank1
  4640  0C88  1303               	bcf	3,6	;RP1=0, select bank1
  4641  0C89  0820               	movf	DD_SetState@state^(0+128),w
  4642  0C8A  00FF               	movwf	btemp+1
  4643  0C8B  087F               	movf	btemp+1,w
  4644  0C8C  00C3               	movwf	(_Devices_State^(0+128)+2)
  4645                           
  4646                           ;DD.c: 40:             break;
  4647  0C8D  2CB7               	goto	l270
  4648  0C8E                     l2922:
  4649                           
  4650                           ;DD.c: 42:             (state)?(PORTB |= (1<<7)) : (PORTB &= ~(1<<7));
  4651  0C8E  0820               	movf	DD_SetState@state^(0+128),w
  4652  0C8F  1903               	btfsc	3,2
  4653  0C90  2C92               	goto	u2351
  4654  0C91  2C93               	goto	u2350
  4655  0C92                     u2351:
  4656  0C92  2C97               	goto	l2926
  4657  0C93                     u2350:
  4658  0C93                     l2924:
  4659  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  4660  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  4661  0C95  1786               	bsf	6,7	;volatile
  4662  0C96  2C9D               	goto	l2928
  4663  0C97                     l2926:
  4664  0C97  307F               	movlw	127
  4665  0C98  00FF               	movwf	btemp+1
  4666  0C99  087F               	movf	btemp+1,w
  4667  0C9A  1283               	bcf	3,5	;RP0=0, select bank0
  4668  0C9B  1303               	bcf	3,6	;RP1=0, select bank0
  4669  0C9C  0586               	andwf	6,f	;volatile
  4670  0C9D                     l2928:
  4671                           
  4672                           ;DD.c: 43:             Devices_State.HEATER_LED_State=state;
  4673  0C9D  1683               	bsf	3,5	;RP0=1, select bank1
  4674  0C9E  1303               	bcf	3,6	;RP1=0, select bank1
  4675  0C9F  0820               	movf	DD_SetState@state^(0+128),w
  4676  0CA0  00FF               	movwf	btemp+1
  4677  0CA1  087F               	movf	btemp+1,w
  4678  0CA2  00C2               	movwf	(_Devices_State^(0+128)+1)
  4679                           
  4680                           ;DD.c: 44:             break;
  4681  0CA3  2CB7               	goto	l270
  4682  0CA4                     l2932:
  4683  0CA4  0823               	movf	DD_SetState@device^(0+128),w
  4684  0CA5  00A1               	movwf	??_DD_SetState^(0+128)
  4685  0CA6  01A2               	clrf	(??_DD_SetState^(0+128)+1)
  4686                           
  4687                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4688                           ; Switch size 1, requested type "simple"
  4689                           ; Number of cases is 1, Range of values is 0 to 0
  4690                           ; switch strategies available:
  4691                           ; Name         Instructions Cycles
  4692                           ; simple_byte            4     3 (average)
  4693                           ; direct_byte           11     8 (fixed)
  4694                           ; jumptable            260     6 (fixed)
  4695                           ;	Chosen strategy is simple_byte
  4696  0CA7  0822               	movf	(??_DD_SetState+1)^(0+128),w
  4697  0CA8  3A00               	xorlw	0	; case 0
  4698  0CA9  1903               	skipnz
  4699  0CAA  2CAC               	goto	l3928
  4700  0CAB  2CB7               	goto	l270
  4701  0CAC                     l3928:
  4702                           
  4703                           ; Switch size 1, requested type "simple"
  4704                           ; Number of cases is 3, Range of values is 0 to 2
  4705                           ; switch strategies available:
  4706                           ; Name         Instructions Cycles
  4707                           ; simple_byte           10     6 (average)
  4708                           ; direct_byte           17     8 (fixed)
  4709                           ; jumptable            260     6 (fixed)
  4710                           ;	Chosen strategy is simple_byte
  4711  0CAC  0821               	movf	??_DD_SetState^(0+128),w
  4712  0CAD  3A00               	xorlw	0	; case 0
  4713  0CAE  1903               	skipnz
  4714  0CAF  2C62               	goto	l2906
  4715  0CB0  3A01               	xorlw	1	; case 1
  4716  0CB1  1903               	skipnz
  4717  0CB2  2C78               	goto	l2914
  4718  0CB3  3A03               	xorlw	3	; case 2
  4719  0CB4  1903               	skipnz
  4720  0CB5  2C8E               	goto	l2922
  4721  0CB6  2CB7               	goto	l270
  4722  0CB7                     l270:
  4723  0CB7  0008               	return
  4724  0CB8                     __end_of_DD_SetState:
  4725                           
  4726                           	psect	text24
  4727  0AEC                     __ptext24:	
  4728 ;; *************** function _EWH_Init *****************
  4729 ;; Defined at:
  4730 ;;		line 215 in file "EWH.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;		None
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;  i2c_config      6   17[BANK1 ] struct .
  4735 ;;  adc_config      4   23[BANK1 ] struct .
  4736 ;;  TMR1_cfg        2   15[BANK1 ] struct .
  4737 ;; Return value:  Size  Location     Type
  4738 ;;                  1    wreg      void 
  4739 ;; Registers used:
  4740 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4746 ;;      Params:         0       0       0       0       0
  4747 ;;      Locals:         0       0      12       0       0
  4748 ;;      Temps:          0       0       0       0       0
  4749 ;;      Totals:         0       0      12       0       0
  4750 ;;Total ram usage:       12 bytes
  4751 ;; Hardware stack levels used:    1
  4752 ;; Hardware stack levels required when called:    7
  4753 ;; This function calls:
  4754 ;;		_ADC_Init
  4755 ;;		_DD_Init
  4756 ;;		_EWH_EEPROM_Init
  4757 ;;		_I2C_Init
  4758 ;;		_SW_Init
  4759 ;;		_TMR1_Init
  4760 ;; This function is called by:
  4761 ;;		_main
  4762 ;; This function uses a non-reentrant model
  4763 ;;
  4764                           
  4765                           
  4766                           ;psect for function _EWH_Init
  4767  0AEC                     _EWH_Init:
  4768  0AEC                     l3096:	
  4769                           ;incstack = 0
  4770                           ; Regs used in _EWH_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4771                           
  4772                           
  4773                           ;EWH.c: 218:     tTMR1_Config TMR1_cfg;;EWH.c: 219:     TMR1_cfg.Prescaler=TMR1_PRESCALE
      +                          R_4;
  4774  0AEC  3002               	movlw	2
  4775  0AED  00FF               	movwf	btemp+1
  4776  0AEE  087F               	movf	btemp+1,w
  4777  0AEF  1683               	bsf	3,5	;RP0=1, select bank1
  4778  0AF0  1303               	bcf	3,6	;RP1=0, select bank1
  4779  0AF1  00AF               	movwf	EWH_Init@TMR1_cfg^(0+128)
  4780  0AF2                     l3098:
  4781                           
  4782                           ;EWH.c: 220:     TMR1_cfg.clkSource=EXTERNAL_CLK_SOURCE;
  4783  0AF2  01B0               	clrf	(EWH_Init@TMR1_cfg^(0+128)+1)
  4784  0AF3  0AB0               	incf	(EWH_Init@TMR1_cfg^(0+128)+1),f
  4785  0AF4                     l3100:
  4786                           
  4787                           ;EWH.c: 223:     TMR1_Init(&TMR1_cfg);
  4788  0AF4  30AF               	movlw	(low (EWH_Init@TMR1_cfg| 0))& (0+255)
  4789  0AF5  120A  158A  23C0  120A  158A  	fcall	_TMR1_Init
  4790  0AFA                     l3102:
  4791                           
  4792                           ;EWH.c: 226:     tADC_Config adc_config;;EWH.c: 227:     adc_config.alignment=RIGHT;
  4793  0AFA  1683               	bsf	3,5	;RP0=1, select bank1
  4794  0AFB  1303               	bcf	3,6	;RP1=0, select bank1
  4795  0AFC  01B9               	clrf	(EWH_Init@adc_config^(0+128)+2)
  4796  0AFD  0AB9               	incf	(EWH_Init@adc_config^(0+128)+2),f
  4797  0AFE                     l3104:
  4798                           
  4799                           ;EWH.c: 228:     adc_config.channel=ADC2;
  4800  0AFE  3002               	movlw	2
  4801  0AFF  00FF               	movwf	btemp+1
  4802  0B00  087F               	movf	btemp+1,w
  4803  0B01  00B7               	movwf	EWH_Init@adc_config^(0+128)
  4804  0B02                     l3106:
  4805                           
  4806                           ;EWH.c: 229:     adc_config.clk=FOSC_8;
  4807  0B02  01BA               	clrf	(EWH_Init@adc_config^(0+128)+3)
  4808  0B03  0ABA               	incf	(EWH_Init@adc_config^(0+128)+3),f
  4809  0B04                     l3108:
  4810                           
  4811                           ;EWH.c: 230:     adc_config.mode= POLLING_MODE;
  4812  0B04  01B8               	clrf	(EWH_Init@adc_config^(0+128)+1)
  4813  0B05                     l3110:
  4814                           
  4815                           ;EWH.c: 233:     ADC_Init(&adc_config);
  4816  0B05  30B7               	movlw	(low (EWH_Init@adc_config| 0))& (0+255)
  4817  0B06  120A  158A  2782  120A  158A  	fcall	_ADC_Init
  4818  0B0B                     l3112:
  4819                           
  4820                           ;EWH.c: 236:     tI2C_Config i2c_config;;EWH.c: 237:     i2c_config.BaudRate=100000;
  4821  0B0B  3000               	movlw	0
  4822  0B0C  1683               	bsf	3,5	;RP0=1, select bank1
  4823  0B0D  1303               	bcf	3,6	;RP1=0, select bank1
  4824  0B0E  00B5               	movwf	((EWH_Init@i2c_config+3)^(0+128)+1)
  4825  0B0F  3001               	movlw	1
  4826  0B10  00B4               	movwf	((EWH_Init@i2c_config+2)^(0+128)+1)
  4827  0B11  3086               	movlw	134
  4828  0B12  00B3               	movwf	((EWH_Init@i2c_config+1)^(0+128)+1)
  4829  0B13  30A0               	movlw	160
  4830  0B14  00B2               	movwf	(EWH_Init@i2c_config^(0+128)+1)
  4831  0B15                     l3114:
  4832                           
  4833                           ;EWH.c: 238:     i2c_config.Mode=Master_Mode;
  4834  0B15  3008               	movlw	8
  4835  0B16  00FF               	movwf	btemp+1
  4836  0B17  087F               	movf	btemp+1,w
  4837  0B18  00B1               	movwf	EWH_Init@i2c_config^(0+128)
  4838                           
  4839                           ;EWH.c: 239:     i2c_config.operationMode=POLLING;
  4840  0B19  01B6               	clrf	(EWH_Init@i2c_config^(0+128)+5)
  4841  0B1A                     l3116:
  4842                           
  4843                           ;EWH.c: 242:     I2C_Init(&i2c_config);
  4844  0B1A  30B1               	movlw	(low (EWH_Init@i2c_config| 0))& (0+255)
  4845  0B1B  120A  158A  2376  120A  158A  	fcall	_I2C_Init
  4846  0B20                     l3118:
  4847                           
  4848                           ;EWH.c: 245:     DD_Init();
  4849  0B20  120A  158A  212F  120A  158A  	fcall	_DD_Init
  4850  0B25                     l3120:
  4851                           
  4852                           ;EWH.c: 248:     SW_Init();
  4853  0B25  120A  158A  2093  120A  158A  	fcall	_SW_Init
  4854  0B2A                     l3122:
  4855                           
  4856                           ;EWH.c: 251:     EWH_EEPROM_Init();
  4857  0B2A  120A  158A  20EB  120A  158A  	fcall	_EWH_EEPROM_Init
  4858  0B2F                     l563:
  4859  0B2F  0008               	return
  4860  0B30                     __end_of_EWH_Init:
  4861                           
  4862                           	psect	text25
  4863  0BC0                     __ptext25:	
  4864 ;; *************** function _TMR1_Init *****************
  4865 ;; Defined at:
  4866 ;;		line 3 in file "TMR1.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;  config          1    wreg     PTR struct .
  4869 ;;		 -> EWH_Init@TMR1_cfg(2), 
  4870 ;; Auto vars:     Size  Location     Type
  4871 ;;  config          1    2[BANK1 ] PTR struct .
  4872 ;;		 -> EWH_Init@TMR1_cfg(2), 
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      void 
  4875 ;; Registers used:
  4876 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4882 ;;      Params:         0       0       0       0       0
  4883 ;;      Locals:         0       0       1       0       0
  4884 ;;      Temps:          0       0       2       0       0
  4885 ;;      Totals:         0       0       3       0       0
  4886 ;;Total ram usage:        3 bytes
  4887 ;; Hardware stack levels used:    1
  4888 ;; Hardware stack levels required when called:    3
  4889 ;; This function calls:
  4890 ;;		Nothing
  4891 ;; This function is called by:
  4892 ;;		_EWH_Init
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           
  4897                           ;psect for function _TMR1_Init
  4898  0BC0                     _TMR1_Init:
  4899                           
  4900                           ;incstack = 0
  4901                           ; Regs used in _TMR1_Init: [wreg-fsr0h+status,2+status,0]
  4902                           ;TMR1_Init@config stored from wreg
  4903  0BC0  1683               	bsf	3,5	;RP0=1, select bank1
  4904  0BC1  1303               	bcf	3,6	;RP1=0, select bank1
  4905  0BC2  00A2               	movwf	TMR1_Init@config^(0+128)
  4906  0BC3                     l2978:
  4907                           
  4908                           ;TMR1.c: 3: void TMR1_Init(tTMR1_Config *config);TMR1.c: 4: {;TMR1.c: 5:     switch(conf
      +                          ig->Prescaler)
  4909  0BC3  2BD8               	goto	l2982
  4910  0BC4                     l356:	
  4911                           ;TMR1.c: 6:     {;TMR1.c: 7:         case TMR1_PRESCALER_1:
  4912                           
  4913                           
  4914                           ;TMR1.c: 8:             T1CKPS0 = 0; T1CKPS1 = 0;
  4915  0BC4  1283               	bcf	3,5	;RP0=0, select bank0
  4916  0BC5  1303               	bcf	3,6	;RP1=0, select bank0
  4917  0BC6  1210               	bcf	16,4	;volatile
  4918  0BC7  1290               	bcf	16,5	;volatile
  4919                           
  4920                           ;TMR1.c: 9:             break;
  4921  0BC8  2BF5               	goto	l2986
  4922  0BC9                     l358:	
  4923                           ;TMR1.c: 10:         case TMR1_PRESCALER_2:
  4924                           
  4925                           
  4926                           ;TMR1.c: 11:             T1CKPS0 = 1; T1CKPS1 = 0;
  4927  0BC9  1283               	bcf	3,5	;RP0=0, select bank0
  4928  0BCA  1303               	bcf	3,6	;RP1=0, select bank0
  4929  0BCB  1610               	bsf	16,4	;volatile
  4930  0BCC  1290               	bcf	16,5	;volatile
  4931                           
  4932                           ;TMR1.c: 12:             break;
  4933  0BCD  2BF5               	goto	l2986
  4934  0BCE                     l359:	
  4935                           ;TMR1.c: 13:         case TMR1_PRESCALER_4:
  4936                           
  4937                           
  4938                           ;TMR1.c: 14:             T1CKPS0 = 0; T1CKPS1 = 1;
  4939  0BCE  1283               	bcf	3,5	;RP0=0, select bank0
  4940  0BCF  1303               	bcf	3,6	;RP1=0, select bank0
  4941  0BD0  1210               	bcf	16,4	;volatile
  4942  0BD1  1690               	bsf	16,5	;volatile
  4943                           
  4944                           ;TMR1.c: 15:             break;
  4945  0BD2  2BF5               	goto	l2986
  4946  0BD3                     l360:	
  4947                           ;TMR1.c: 16:         case TMR1_PRESCALER_8:
  4948                           
  4949                           
  4950                           ;TMR1.c: 17:             T1CKPS0 = 1; T1CKPS1 = 1;
  4951  0BD3  1283               	bcf	3,5	;RP0=0, select bank0
  4952  0BD4  1303               	bcf	3,6	;RP1=0, select bank0
  4953  0BD5  1610               	bsf	16,4	;volatile
  4954  0BD6  1690               	bsf	16,5	;volatile
  4955                           
  4956                           ;TMR1.c: 18:             break;
  4957  0BD7  2BF5               	goto	l2986
  4958  0BD8                     l2982:
  4959  0BD8  0822               	movf	TMR1_Init@config^(0+128),w
  4960  0BD9  0084               	movwf	4
  4961  0BDA  1383               	bcf	3,7	;select IRP bank0
  4962  0BDB  0800               	movf	0,w
  4963  0BDC  00A0               	movwf	??_TMR1_Init^(0+128)
  4964  0BDD  01A1               	clrf	(??_TMR1_Init^(0+128)+1)
  4965                           
  4966                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4967                           ; Switch size 1, requested type "simple"
  4968                           ; Number of cases is 1, Range of values is 0 to 0
  4969                           ; switch strategies available:
  4970                           ; Name         Instructions Cycles
  4971                           ; simple_byte            4     3 (average)
  4972                           ; direct_byte           11     8 (fixed)
  4973                           ; jumptable            260     6 (fixed)
  4974                           ;	Chosen strategy is simple_byte
  4975  0BDE  0821               	movf	(??_TMR1_Init+1)^(0+128),w
  4976  0BDF  3A00               	xorlw	0	; case 0
  4977  0BE0  1903               	skipnz
  4978  0BE1  2BE3               	goto	l3930
  4979  0BE2  2BF5               	goto	l2986
  4980  0BE3                     l3930:
  4981                           
  4982                           ; Switch size 1, requested type "simple"
  4983                           ; Number of cases is 4, Range of values is 0 to 3
  4984                           ; switch strategies available:
  4985                           ; Name         Instructions Cycles
  4986                           ; simple_byte           13     7 (average)
  4987                           ; direct_byte           20     8 (fixed)
  4988                           ; jumptable            260     6 (fixed)
  4989                           ;	Chosen strategy is simple_byte
  4990  0BE3  0820               	movf	??_TMR1_Init^(0+128),w
  4991  0BE4  3A00               	xorlw	0	; case 0
  4992  0BE5  1903               	skipnz
  4993  0BE6  2BC4               	goto	l356
  4994  0BE7  3A01               	xorlw	1	; case 1
  4995  0BE8  1903               	skipnz
  4996  0BE9  2BC9               	goto	l358
  4997  0BEA  3A03               	xorlw	3	; case 2
  4998  0BEB  1903               	skipnz
  4999  0BEC  2BCE               	goto	l359
  5000  0BED  3A01               	xorlw	1	; case 3
  5001  0BEE  1903               	skipnz
  5002  0BEF  2BD3               	goto	l360
  5003  0BF0  2BF5               	goto	l2986
  5004  0BF1                     l362:	
  5005                           ;TMR1.c: 22:     {;TMR1.c: 23:         case INTERNAL_CLK_SOURCE:
  5006                           
  5007                           
  5008                           ;TMR1.c: 24:             (T0CS = 0);
  5009  0BF1  1281               	bcf	1,5	;volatile
  5010                           
  5011                           ;TMR1.c: 25:             break ;
  5012  0BF2  2C09               	goto	l365
  5013  0BF3                     l364:	
  5014                           ;TMR1.c: 26:         case EXTERNAL_CLK_SOURCE:
  5015                           
  5016                           
  5017                           ;TMR1.c: 27:             (T0CS = 1);
  5018  0BF3  1681               	bsf	1,5	;volatile
  5019                           
  5020                           ;TMR1.c: 28:             break ;
  5021  0BF4  2C09               	goto	l365
  5022  0BF5                     l2986:
  5023  0BF5  1683               	bsf	3,5	;RP0=1, select bank1
  5024  0BF6  1303               	bcf	3,6	;RP1=0, select bank1
  5025  0BF7  0A22               	incf	TMR1_Init@config^(0+128),w
  5026  0BF8  0084               	movwf	4
  5027  0BF9  0800               	movf	0,w
  5028  0BFA  00A0               	movwf	??_TMR1_Init^(0+128)
  5029  0BFB  01A1               	clrf	(??_TMR1_Init^(0+128)+1)
  5030                           
  5031                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5032                           ; Switch size 1, requested type "simple"
  5033                           ; Number of cases is 1, Range of values is 0 to 0
  5034                           ; switch strategies available:
  5035                           ; Name         Instructions Cycles
  5036                           ; simple_byte            4     3 (average)
  5037                           ; direct_byte           11     8 (fixed)
  5038                           ; jumptable            260     6 (fixed)
  5039                           ;	Chosen strategy is simple_byte
  5040  0BFC  0821               	movf	(??_TMR1_Init+1)^(0+128),w
  5041  0BFD  3A00               	xorlw	0	; case 0
  5042  0BFE  1903               	skipnz
  5043  0BFF  2C01               	goto	l3932
  5044  0C00  2C09               	goto	l365
  5045  0C01                     l3932:
  5046                           
  5047                           ; Switch size 1, requested type "simple"
  5048                           ; Number of cases is 2, Range of values is 0 to 1
  5049                           ; switch strategies available:
  5050                           ; Name         Instructions Cycles
  5051                           ; simple_byte            7     4 (average)
  5052                           ; direct_byte           14     8 (fixed)
  5053                           ; jumptable            260     6 (fixed)
  5054                           ;	Chosen strategy is simple_byte
  5055  0C01  0820               	movf	??_TMR1_Init^(0+128),w
  5056  0C02  3A00               	xorlw	0	; case 0
  5057  0C03  1903               	skipnz
  5058  0C04  2BF1               	goto	l362
  5059  0C05  3A01               	xorlw	1	; case 1
  5060  0C06  1903               	skipnz
  5061  0C07  2BF3               	goto	l364
  5062  0C08  2C09               	goto	l365
  5063  0C09                     l365:
  5064  0C09  0008               	return
  5065  0C0A                     __end_of_TMR1_Init:
  5066                           
  5067                           	psect	text26
  5068  0893                     __ptext26:	
  5069 ;; *************** function _SW_Init *****************
  5070 ;; Defined at:
  5071 ;;		line 16 in file "SW.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;		None
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;		None
  5076 ;; Return value:  Size  Location     Type
  5077 ;;                  1    wreg      void 
  5078 ;; Registers used:
  5079 ;;		wreg, status,2, status,0, btemp+1
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5085 ;;      Params:         0       0       0       0       0
  5086 ;;      Locals:         0       0       0       0       0
  5087 ;;      Temps:          0       0       0       0       0
  5088 ;;      Totals:         0       0       0       0       0
  5089 ;;Total ram usage:        0 bytes
  5090 ;; Hardware stack levels used:    1
  5091 ;; Hardware stack levels required when called:    3
  5092 ;; This function calls:
  5093 ;;		Nothing
  5094 ;; This function is called by:
  5095 ;;		_EWH_Init
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           
  5100                           ;psect for function _SW_Init
  5101  0893                     _SW_Init:
  5102  0893                     l3004:	
  5103                           ;incstack = 0
  5104                           ; Regs used in _SW_Init: [wreg+status,2+status,0+btemp+1]
  5105                           
  5106  0893  1683               	bsf	3,5	;RP0=1, select bank1
  5107  0894  1303               	bcf	3,6	;RP1=0, select bank1
  5108  0895  1506               	bsf	6,2	;volatile
  5109  0896                     l3008:
  5110  0896  1486               	bsf	6,1	;volatile
  5111  0897                     l3012:
  5112  0897  1406               	bsf	6,0	;volatile
  5113  0898                     l3016:
  5114                           
  5115                           ;SW.c: 24:     INTEDG=0;
  5116  0898  1301               	bcf	1,6	;volatile
  5117  0899                     l3018:
  5118                           
  5119                           ;SW.c: 25:     INTE=1;
  5120  0899  160B               	bsf	11,4	;volatile
  5121  089A                     l3020:
  5122                           
  5123                           ;SW.c: 26:     GIE=1;
  5124  089A  178B               	bsf	11,7	;volatile
  5125  089B                     l405:
  5126  089B  0008               	return
  5127  089C                     __end_of_SW_Init:
  5128                           
  5129                           	psect	text27
  5130  0B76                     __ptext27:	
  5131 ;; *************** function _I2C_Init *****************
  5132 ;; Defined at:
  5133 ;;		line 12 in file "i2c.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;  i2c_config      1    wreg     PTR struct .
  5136 ;;		 -> EWH_Init@i2c_config(6), 
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;  i2c_config      1   14[BANK1 ] PTR struct .
  5139 ;;		 -> EWH_Init@i2c_config(6), 
  5140 ;; Return value:  Size  Location     Type
  5141 ;;                  1    wreg      void 
  5142 ;; Registers used:
  5143 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5144 ;; Tracked objects:
  5145 ;;		On entry : 0/0
  5146 ;;		On exit  : 0/0
  5147 ;;		Unchanged: 0/0
  5148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5149 ;;      Params:         0       0       0       0       0
  5150 ;;      Locals:         0       0       1       0       0
  5151 ;;      Temps:          0       0       0       0       0
  5152 ;;      Totals:         0       0       1       0       0
  5153 ;;Total ram usage:        1 bytes
  5154 ;; Hardware stack levels used:    1
  5155 ;; Hardware stack levels required when called:    4
  5156 ;; This function calls:
  5157 ;;		___lldiv
  5158 ;; This function is called by:
  5159 ;;		_EWH_Init
  5160 ;; This function uses a non-reentrant model
  5161 ;;
  5162                           
  5163                           
  5164                           ;psect for function _I2C_Init
  5165  0B76                     _I2C_Init:
  5166                           
  5167                           ;incstack = 0
  5168                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5169                           ;I2C_Init@i2c_config stored from wreg
  5170  0B76  1683               	bsf	3,5	;RP0=1, select bank1
  5171  0B77  1303               	bcf	3,6	;RP1=0, select bank1
  5172  0B78  00AE               	movwf	I2C_Init@i2c_config^(0+128)
  5173  0B79                     l2856:
  5174                           
  5175                           ;i2c.c: 12: void I2C_Init(tI2C_Config *i2c_config);i2c.c: 13: {;i2c.c: 15:     SSPCON2=0
      +                          x00;
  5176  0B79  0191               	clrf	17	;volatile
  5177                           
  5178                           ;i2c.c: 16:     SSPSTAT=0x00;
  5179  0B7A  0194               	clrf	20	;volatile
  5180  0B7B                     l2858:
  5181                           
  5182                           ;i2c.c: 18:     SSPCON |= i2c_config->Mode;
  5183  0B7B  082E               	movf	I2C_Init@i2c_config^(0+128),w
  5184  0B7C  0084               	movwf	4
  5185  0B7D  1383               	bcf	3,7	;select IRP bank0
  5186  0B7E  0800               	movf	0,w
  5187  0B7F  00FF               	movwf	btemp+1
  5188  0B80  087F               	movf	btemp+1,w
  5189  0B81  1283               	bcf	3,5	;RP0=0, select bank0
  5190  0B82  1303               	bcf	3,6	;RP1=0, select bank0
  5191  0B83  0494               	iorwf	20,f	;volatile
  5192  0B84                     l2860:
  5193                           
  5194                           ;i2c.c: 22:     SSPADD = (((4000000/4)/i2c_config->BaudRate) - 1);
  5195  0B84  1683               	bsf	3,5	;RP0=1, select bank1
  5196  0B85  1303               	bcf	3,6	;RP1=0, select bank1
  5197  0B86  0A2E               	incf	I2C_Init@i2c_config^(0+128),w
  5198  0B87  0084               	movwf	4
  5199  0B88  0800               	movf	0,w
  5200  0B89  00A0               	movwf	___lldiv@divisor^(0+128)
  5201  0B8A  0A84               	incf	4,f
  5202  0B8B  0800               	movf	0,w
  5203  0B8C  00A1               	movwf	(___lldiv@divisor+1)^(0+128)
  5204  0B8D  0A84               	incf	4,f
  5205  0B8E  0800               	movf	0,w
  5206  0B8F  00A2               	movwf	(___lldiv@divisor+2)^(0+128)
  5207  0B90  0A84               	incf	4,f
  5208  0B91  0800               	movf	0,w
  5209  0B92  00A3               	movwf	(___lldiv@divisor+3)^(0+128)
  5210  0B93  3000               	movlw	0
  5211  0B94  00A7               	movwf	(___lldiv@dividend+3)^(0+128)
  5212  0B95  300F               	movlw	15
  5213  0B96  00A6               	movwf	(___lldiv@dividend+2)^(0+128)
  5214  0B97  3042               	movlw	66
  5215  0B98  00A5               	movwf	(___lldiv@dividend+1)^(0+128)
  5216  0B99  3040               	movlw	64
  5217  0B9A  00A4               	movwf	___lldiv@dividend^(0+128)
  5218  0B9B  120A  158A  25CA  120A  158A  	fcall	___lldiv
  5219  0BA0  1683               	bsf	3,5	;RP0=1, select bank1
  5220  0BA1  1303               	bcf	3,6	;RP1=0, select bank1
  5221  0BA2  0820               	movf	?___lldiv^(0+128),w
  5222  0BA3  3EFF               	addlw	255
  5223  0BA4  0093               	movwf	19	;volatile
  5224  0BA5                     l2862:
  5225                           
  5226                           ;i2c.c: 32:     SSPEN=1;
  5227  0BA5  1283               	bcf	3,5	;RP0=0, select bank0
  5228  0BA6  1303               	bcf	3,6	;RP1=0, select bank0
  5229  0BA7  1694               	bsf	20,5	;volatile
  5230  0BA8                     l2864:
  5231                           
  5232                           ;i2c.c: 38:     (1u)? (TRISC |= (1<<4)) : (TRISC &= ~(1<<4));
  5233  0BA8  3080               	movlw	128
  5234  0BA9  1683               	bsf	3,5	;RP0=1, select bank1
  5235  0BAA  1303               	bcf	3,6	;RP1=0, select bank1
  5236  0BAB  0094               	movwf	20	;volatile
  5237  0BAC                     l2866:
  5238  0BAC  1607               	bsf	7,4	;volatile
  5239  0BAD                     l2870:
  5240  0BAD  1587               	bsf	7,3	;volatile
  5241  0BAE                     l2874:
  5242                           
  5243                           ;i2c.c: 44:     if(i2c_config->operationMode==INTERRUPT)
  5244  0BAE  082E               	movf	I2C_Init@i2c_config^(0+128),w
  5245  0BAF  3E05               	addlw	5
  5246  0BB0  0084               	movwf	4
  5247  0BB1  1383               	bcf	3,7	;select IRP bank0
  5248  0BB2  0300               	decf	0,w
  5249  0BB3  1D03               	btfss	3,2
  5250  0BB4  2BB6               	goto	u2321
  5251  0BB5  2BB7               	goto	u2320
  5252  0BB6                     u2321:
  5253  0BB6  2BBF               	goto	l88
  5254  0BB7                     u2320:
  5255  0BB7                     l2876:
  5256                           
  5257                           ;i2c.c: 45:     {;i2c.c: 46:           GIE = 1;
  5258  0BB7  178B               	bsf	11,7	;volatile
  5259                           
  5260                           ;i2c.c: 47:           PEIE = 1;
  5261  0BB8  170B               	bsf	11,6	;volatile
  5262                           
  5263                           ;i2c.c: 48:           SSPIF = 0;
  5264  0BB9  1283               	bcf	3,5	;RP0=0, select bank0
  5265  0BBA  1303               	bcf	3,6	;RP1=0, select bank0
  5266  0BBB  118C               	bcf	12,3	;volatile
  5267                           
  5268                           ;i2c.c: 49:           SSPIE = 1;
  5269  0BBC  1683               	bsf	3,5	;RP0=1, select bank1
  5270  0BBD  1303               	bcf	3,6	;RP1=0, select bank1
  5271  0BBE  158C               	bsf	12,3	;volatile
  5272  0BBF                     l88:
  5273  0BBF  0008               	return
  5274  0BC0                     __end_of_I2C_Init:
  5275                           
  5276                           	psect	text28
  5277  0DCA                     __ptext28:	
  5278 ;; *************** function ___lldiv *****************
  5279 ;; Defined at:
  5280 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  5281 ;; Parameters:    Size  Location     Type
  5282 ;;  divisor         4    0[BANK1 ] unsigned long 
  5283 ;;  dividend        4    4[BANK1 ] unsigned long 
  5284 ;; Auto vars:     Size  Location     Type
  5285 ;;  quotient        4    9[BANK1 ] unsigned long 
  5286 ;;  counter         1   13[BANK1 ] unsigned char 
  5287 ;; Return value:  Size  Location     Type
  5288 ;;                  4    0[BANK1 ] unsigned long 
  5289 ;; Registers used:
  5290 ;;		wreg, status,2, status,0, btemp+1
  5291 ;; Tracked objects:
  5292 ;;		On entry : 0/0
  5293 ;;		On exit  : 0/0
  5294 ;;		Unchanged: 0/0
  5295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5296 ;;      Params:         0       0       8       0       0
  5297 ;;      Locals:         0       0       5       0       0
  5298 ;;      Temps:          0       0       1       0       0
  5299 ;;      Totals:         0       0      14       0       0
  5300 ;;Total ram usage:       14 bytes
  5301 ;; Hardware stack levels used:    1
  5302 ;; Hardware stack levels required when called:    3
  5303 ;; This function calls:
  5304 ;;		Nothing
  5305 ;; This function is called by:
  5306 ;;		_I2C_Init
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310                           
  5311                           ;psect for function ___lldiv
  5312  0DCA                     ___lldiv:
  5313  0DCA                     l2738:	
  5314                           ;incstack = 0
  5315                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  5316                           
  5317  0DCA  3000               	movlw	0
  5318  0DCB  1683               	bsf	3,5	;RP0=1, select bank1
  5319  0DCC  1303               	bcf	3,6	;RP1=0, select bank1
  5320  0DCD  00AC               	movwf	(___lldiv@quotient+3)^(0+128)
  5321  0DCE  3000               	movlw	0
  5322  0DCF  00AB               	movwf	(___lldiv@quotient+2)^(0+128)
  5323  0DD0  3000               	movlw	0
  5324  0DD1  00AA               	movwf	(___lldiv@quotient+1)^(0+128)
  5325  0DD2  3000               	movlw	0
  5326  0DD3  00A9               	movwf	___lldiv@quotient^(0+128)
  5327  0DD4  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  5328  0DD5  0422               	iorwf	(___lldiv@divisor+2)^(0+128),w
  5329  0DD6  0421               	iorwf	(___lldiv@divisor+1)^(0+128),w
  5330  0DD7  0420               	iorwf	___lldiv@divisor^(0+128),w
  5331  0DD8  1903               	skipnz
  5332  0DD9  2DDB               	goto	u2021
  5333  0DDA  2DDC               	goto	u2020
  5334  0DDB                     u2021:
  5335  0DDB  2E29               	goto	l2760
  5336  0DDC                     u2020:
  5337  0DDC                     l2740:
  5338  0DDC  01AD               	clrf	___lldiv@counter^(0+128)
  5339  0DDD  0AAD               	incf	___lldiv@counter^(0+128),f
  5340  0DDE  2DEC               	goto	l2746
  5341  0DDF                     l2742:
  5342  0DDF  3001               	movlw	1
  5343  0DE0  00A8               	movwf	??___lldiv^(0+128)
  5344  0DE1                     u2035:
  5345  0DE1  1003               	clrc
  5346  0DE2  0DA0               	rlf	___lldiv@divisor^(0+128),f
  5347  0DE3  0DA1               	rlf	(___lldiv@divisor+1)^(0+128),f
  5348  0DE4  0DA2               	rlf	(___lldiv@divisor+2)^(0+128),f
  5349  0DE5  0DA3               	rlf	(___lldiv@divisor+3)^(0+128),f
  5350  0DE6  0BA8               	decfsz	??___lldiv^(0+128),f
  5351  0DE7  2DE1               	goto	u2035
  5352  0DE8                     l2744:
  5353  0DE8  3001               	movlw	1
  5354  0DE9  00FF               	movwf	btemp+1
  5355  0DEA  087F               	movf	btemp+1,w
  5356  0DEB  07AD               	addwf	___lldiv@counter^(0+128),f
  5357  0DEC                     l2746:
  5358  0DEC  1FA3               	btfss	(___lldiv@divisor+3)^(0+128),7
  5359  0DED  2DEF               	goto	u2041
  5360  0DEE  2DF0               	goto	u2040
  5361  0DEF                     u2041:
  5362  0DEF  2DDF               	goto	l2742
  5363  0DF0                     u2040:
  5364  0DF0                     l2748:
  5365  0DF0  3001               	movlw	1
  5366  0DF1  00A8               	movwf	??___lldiv^(0+128)
  5367  0DF2                     u2055:
  5368  0DF2  1003               	clrc
  5369  0DF3  0DA9               	rlf	___lldiv@quotient^(0+128),f
  5370  0DF4  0DAA               	rlf	(___lldiv@quotient+1)^(0+128),f
  5371  0DF5  0DAB               	rlf	(___lldiv@quotient+2)^(0+128),f
  5372  0DF6  0DAC               	rlf	(___lldiv@quotient+3)^(0+128),f
  5373  0DF7  0BA8               	decfsz	??___lldiv^(0+128),f
  5374  0DF8  2DF2               	goto	u2055
  5375  0DF9                     l2750:
  5376  0DF9  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  5377  0DFA  0227               	subwf	(___lldiv@dividend+3)^(0+128),w
  5378  0DFB  1D03               	skipz
  5379  0DFC  2E07               	goto	u2065
  5380  0DFD  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  5381  0DFE  0226               	subwf	(___lldiv@dividend+2)^(0+128),w
  5382  0DFF  1D03               	skipz
  5383  0E00  2E07               	goto	u2065
  5384  0E01  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  5385  0E02  0225               	subwf	(___lldiv@dividend+1)^(0+128),w
  5386  0E03  1D03               	skipz
  5387  0E04  2E07               	goto	u2065
  5388  0E05  0820               	movf	___lldiv@divisor^(0+128),w
  5389  0E06  0224               	subwf	___lldiv@dividend^(0+128),w
  5390  0E07                     u2065:
  5391  0E07  1C03               	skipc
  5392  0E08  2E0A               	goto	u2061
  5393  0E09  2E0B               	goto	u2060
  5394  0E0A                     u2061:
  5395  0E0A  2E1A               	goto	l2756
  5396  0E0B                     u2060:
  5397  0E0B                     l2752:
  5398  0E0B  0820               	movf	___lldiv@divisor^(0+128),w
  5399  0E0C  02A4               	subwf	___lldiv@dividend^(0+128),f
  5400  0E0D  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  5401  0E0E  1C03               	skipc
  5402  0E0F  0F21               	incfsz	(___lldiv@divisor+1)^(0+128),w
  5403  0E10  02A5               	subwf	(___lldiv@dividend+1)^(0+128),f
  5404  0E11  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  5405  0E12  1C03               	skipc
  5406  0E13  0F22               	incfsz	(___lldiv@divisor+2)^(0+128),w
  5407  0E14  02A6               	subwf	(___lldiv@dividend+2)^(0+128),f
  5408  0E15  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  5409  0E16  1C03               	skipc
  5410  0E17  0F23               	incfsz	(___lldiv@divisor+3)^(0+128),w
  5411  0E18  02A7               	subwf	(___lldiv@dividend+3)^(0+128),f
  5412  0E19                     l2754:
  5413  0E19  1429               	bsf	___lldiv@quotient^(0+128),0
  5414  0E1A                     l2756:
  5415  0E1A  3001               	movlw	1
  5416  0E1B                     u2075:
  5417  0E1B  1003               	clrc
  5418  0E1C  0CA3               	rrf	(___lldiv@divisor+3)^(0+128),f
  5419  0E1D  0CA2               	rrf	(___lldiv@divisor+2)^(0+128),f
  5420  0E1E  0CA1               	rrf	(___lldiv@divisor+1)^(0+128),f
  5421  0E1F  0CA0               	rrf	___lldiv@divisor^(0+128),f
  5422  0E20  3EFF               	addlw	-1
  5423  0E21  1D03               	skipz
  5424  0E22  2E1B               	goto	u2075
  5425  0E23                     l2758:
  5426  0E23  3001               	movlw	1
  5427  0E24  02AD               	subwf	___lldiv@counter^(0+128),f
  5428  0E25  1D03               	btfss	3,2
  5429  0E26  2E28               	goto	u2081
  5430  0E27  2E29               	goto	u2080
  5431  0E28                     u2081:
  5432  0E28  2DF0               	goto	l2748
  5433  0E29                     u2080:
  5434  0E29                     l2760:
  5435  0E29  082C               	movf	(___lldiv@quotient+3)^(0+128),w
  5436  0E2A  00A3               	movwf	(?___lldiv+3)^(0+128)
  5437  0E2B  082B               	movf	(___lldiv@quotient+2)^(0+128),w
  5438  0E2C  00A2               	movwf	(?___lldiv+2)^(0+128)
  5439  0E2D  082A               	movf	(___lldiv@quotient+1)^(0+128),w
  5440  0E2E  00A1               	movwf	(?___lldiv+1)^(0+128)
  5441  0E2F  0829               	movf	___lldiv@quotient^(0+128),w
  5442  0E30  00A0               	movwf	?___lldiv^(0+128)
  5443  0E31                     l790:
  5444  0E31  0008               	return
  5445  0E32                     __end_of___lldiv:
  5446                           
  5447                           	psect	text29
  5448  08EB                     __ptext29:	
  5449 ;; *************** function _EWH_EEPROM_Init *****************
  5450 ;; Defined at:
  5451 ;;		line 254 in file "EWH.c"
  5452 ;; Parameters:    Size  Location     Type
  5453 ;;		None
  5454 ;; Auto vars:     Size  Location     Type
  5455 ;;		None
  5456 ;; Return value:  Size  Location     Type
  5457 ;;                  1    wreg      void 
  5458 ;; Registers used:
  5459 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5460 ;; Tracked objects:
  5461 ;;		On entry : 0/0
  5462 ;;		On exit  : 0/0
  5463 ;;		Unchanged: 0/0
  5464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5465 ;;      Params:         0       0       0       0       0
  5466 ;;      Locals:         0       0       0       0       0
  5467 ;;      Temps:          0       0       0       0       0
  5468 ;;      Totals:         0       0       0       0       0
  5469 ;;Total ram usage:        0 bytes
  5470 ;; Hardware stack levels used:    1
  5471 ;; Hardware stack levels required when called:    6
  5472 ;; This function calls:
  5473 ;;		_EEPROM_WriteByte
  5474 ;; This function is called by:
  5475 ;;		_EWH_Init
  5476 ;; This function uses a non-reentrant model
  5477 ;;
  5478                           
  5479                           
  5480                           ;psect for function _EWH_EEPROM_Init
  5481  08EB                     _EWH_EEPROM_Init:
  5482  08EB                     l3042:	
  5483                           ;incstack = 0
  5484                           ; Regs used in _EWH_EEPROM_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5485                           
  5486                           
  5487                           ;EWH.c: 256:     EEPROM_WriteByte(0x0020,60);
  5488  08EB  3020               	movlw	32
  5489  08EC  1683               	bsf	3,5	;RP0=1, select bank1
  5490  08ED  1303               	bcf	3,6	;RP1=0, select bank1
  5491  08EE  00A1               	movwf	EEPROM_WriteByte@address^(0+128)
  5492  08EF  3000               	movlw	0
  5493  08F0  00A2               	movwf	(EEPROM_WriteByte@address^(0+128)+1)
  5494  08F1  303C               	movlw	60
  5495  08F2  00FF               	movwf	btemp+1
  5496  08F3  087F               	movf	btemp+1,w
  5497  08F4  00A3               	movwf	EEPROM_WriteByte@data^(0+128)
  5498  08F5  120A  158A  223A  120A  158A  	fcall	_EEPROM_WriteByte
  5499  08FA                     l566:
  5500  08FA  0008               	return
  5501  08FB                     __end_of_EWH_EEPROM_Init:
  5502                           
  5503                           	psect	text30
  5504  0A3A                     __ptext30:	
  5505 ;; *************** function _EEPROM_WriteByte *****************
  5506 ;; Defined at:
  5507 ;;		line 4 in file "EEPROM.c"
  5508 ;; Parameters:    Size  Location     Type
  5509 ;;  address         2    1[BANK1 ] unsigned short 
  5510 ;;  data            1    3[BANK1 ] unsigned char 
  5511 ;; Auto vars:     Size  Location     Type
  5512 ;;		None
  5513 ;; Return value:  Size  Location     Type
  5514 ;;                  1    wreg      void 
  5515 ;; Registers used:
  5516 ;;		wreg, status,2, status,0, pclath, cstack
  5517 ;; Tracked objects:
  5518 ;;		On entry : 0/0
  5519 ;;		On exit  : 0/0
  5520 ;;		Unchanged: 0/0
  5521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5522 ;;      Params:         0       0       3       0       0
  5523 ;;      Locals:         0       0       0       0       0
  5524 ;;      Temps:          0       0       2       0       0
  5525 ;;      Totals:         0       0       5       0       0
  5526 ;;Total ram usage:        5 bytes
  5527 ;; Hardware stack levels used:    1
  5528 ;; Hardware stack levels required when called:    5
  5529 ;; This function calls:
  5530 ;;		_I2C_Master_Send_RepeatedStart
  5531 ;;		_I2C_Master_Send_Start
  5532 ;;		_I2C_Master_Send_Stop
  5533 ;;		_I2C_Master_WriteByte
  5534 ;; This function is called by:
  5535 ;;		_EWH_EEPROM_Init
  5536 ;;		_EWH_EEPROM_Update
  5537 ;; This function uses a non-reentrant model
  5538 ;;
  5539                           
  5540                           
  5541                           ;psect for function _EEPROM_WriteByte
  5542  0A3A                     _EEPROM_WriteByte:
  5543  0A3A                     l2704:	
  5544                           ;incstack = 0
  5545                           ; Regs used in _EEPROM_WriteByte: [wreg+status,2+status,0+pclath+cstack]
  5546                           
  5547                           
  5548                           ;EEPROM.c: 4: void EEPROM_WriteByte(uint16_t address , uint8_t data);EEPROM.c: 5: {;EEPR
      +                          OM.c: 6:   I2C_Master_Send_Start();
  5549  0A3A  120A  158A  2081  120A  158A  	fcall	_I2C_Master_Send_Start
  5550                           
  5551                           ;EEPROM.c: 9:   while(I2C_Master_WriteByte(0xA0 | ((address & 0x0700)>>7)) )
  5552  0A3F  2A45               	goto	l13
  5553  0A40                     l2706:
  5554                           
  5555                           ;EEPROM.c: 10:         I2C_Master_Send_RepeatedStart();
  5556  0A40  120A  158A  2078  120A  158A  	fcall	_I2C_Master_Send_RepeatedStart
  5557  0A45                     l13:
  5558                           
  5559                           ;EEPROM.c: 9:   while(I2C_Master_WriteByte(0xA0 | ((address & 0x0700)>>7)) )
  5560  0A45  1683               	bsf	3,5	;RP0=1, select bank1
  5561  0A46  1303               	bcf	3,6	;RP1=0, select bank1
  5562  0A47  0822               	movf	(EEPROM_WriteByte@address+1)^(0+128),w
  5563  0A48  00A5               	movwf	(??_EEPROM_WriteByte^(0+128)+1)
  5564  0A49  0821               	movf	EEPROM_WriteByte@address^(0+128),w
  5565  0A4A  00A4               	movwf	??_EEPROM_WriteByte^(0+128)
  5566  0A4B  3007               	movlw	7
  5567  0A4C                     u1965:
  5568  0A4C  1003               	clrc
  5569  0A4D  0CA5               	rrf	(??_EEPROM_WriteByte^(0+128)+1),f
  5570  0A4E  0CA4               	rrf	??_EEPROM_WriteByte^(0+128),f
  5571  0A4F  3EFF               	addlw	-1
  5572  0A50  1D03               	skipz
  5573  0A51  2A4C               	goto	u1965
  5574  0A52  0824               	movf	??_EEPROM_WriteByte^(0+128),w
  5575  0A53  390E               	andlw	14
  5576  0A54  38A0               	iorlw	160
  5577  0A55  120A  158A  2169  120A  158A  	fcall	_I2C_Master_WriteByte
  5578  0A5A  3A00               	xorlw	0
  5579  0A5B  1D03               	skipz
  5580  0A5C  2A5E               	goto	u1971
  5581  0A5D  2A5F               	goto	u1970
  5582  0A5E                     u1971:
  5583  0A5E  2A40               	goto	l2706
  5584  0A5F                     u1970:
  5585  0A5F                     l2708:
  5586                           
  5587                           ;EEPROM.c: 13:   I2C_Master_WriteByte((uint8_t)address);
  5588  0A5F  1683               	bsf	3,5	;RP0=1, select bank1
  5589  0A60  1303               	bcf	3,6	;RP1=0, select bank1
  5590  0A61  0821               	movf	EEPROM_WriteByte@address^(0+128),w
  5591  0A62  120A  158A  2169  120A  158A  	fcall	_I2C_Master_WriteByte
  5592                           
  5593                           ;EEPROM.c: 14:   I2C_Master_WriteByte(data);
  5594  0A67  1683               	bsf	3,5	;RP0=1, select bank1
  5595  0A68  1303               	bcf	3,6	;RP1=0, select bank1
  5596  0A69  0823               	movf	EEPROM_WriteByte@data^(0+128),w
  5597  0A6A  120A  158A  2169  120A  158A  	fcall	_I2C_Master_WriteByte
  5598                           
  5599                           ;EEPROM.c: 15:   I2C_Master_Send_Stop();
  5600  0A6F  120A  158A  208A  120A  158A  	fcall	_I2C_Master_Send_Stop
  5601  0A74                     l16:
  5602  0A74  0008               	return
  5603  0A75                     __end_of_EEPROM_WriteByte:
  5604                           
  5605                           	psect	text31
  5606  0969                     __ptext31:	
  5607 ;; *************** function _I2C_Master_WriteByte *****************
  5608 ;; Defined at:
  5609 ;;		line 95 in file "i2c.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;  Data            1    wreg     unsigned char 
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;  Data            1    0[BANK1 ] unsigned char 
  5614 ;; Return value:  Size  Location     Type
  5615 ;;                  1    wreg      unsigned char 
  5616 ;; Registers used:
  5617 ;;		wreg, status,2, status,0, pclath, cstack
  5618 ;; Tracked objects:
  5619 ;;		On entry : 0/0
  5620 ;;		On exit  : 0/0
  5621 ;;		Unchanged: 0/0
  5622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5623 ;;      Params:         0       0       0       0       0
  5624 ;;      Locals:         0       0       1       0       0
  5625 ;;      Temps:          0       0       0       0       0
  5626 ;;      Totals:         0       0       1       0       0
  5627 ;;Total ram usage:        1 bytes
  5628 ;; Hardware stack levels used:    1
  5629 ;; Hardware stack levels required when called:    4
  5630 ;; This function calls:
  5631 ;;		_I2C_Wait_IDLE
  5632 ;; This function is called by:
  5633 ;;		_EEPROM_WriteByte
  5634 ;;		_EEPROM_ReadByte
  5635 ;;		_EEPROM_WritePage
  5636 ;;		_EEPROM_ReadPage
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           
  5641                           ;psect for function _I2C_Master_WriteByte
  5642  0969                     _I2C_Master_WriteByte:
  5643                           
  5644                           ;incstack = 0
  5645                           ; Regs used in _I2C_Master_WriteByte: [wreg+status,2+status,0+pclath+cstack]
  5646                           ;I2C_Master_WriteByte@Data stored from wreg
  5647  0969  1683               	bsf	3,5	;RP0=1, select bank1
  5648  096A  1303               	bcf	3,6	;RP1=0, select bank1
  5649  096B  00A0               	movwf	I2C_Master_WriteByte@Data^(0+128)
  5650  096C                     l2622:
  5651                           
  5652                           ;i2c.c: 95: uint8_t I2C_Master_WriteByte(uint8_t Data);i2c.c: 96: {;i2c.c: 98:     I2C_W
      +                          ait_IDLE();
  5653  096C  120A  158A  20D1  120A  158A  	fcall	_I2C_Wait_IDLE
  5654  0971                     l2624:
  5655                           
  5656                           ;i2c.c: 99:     SSPBUF=Data;
  5657  0971  1683               	bsf	3,5	;RP0=1, select bank1
  5658  0972  1303               	bcf	3,6	;RP1=0, select bank1
  5659  0973  0820               	movf	I2C_Master_WriteByte@Data^(0+128),w
  5660  0974  1283               	bcf	3,5	;RP0=0, select bank0
  5661  0975  1303               	bcf	3,6	;RP1=0, select bank0
  5662  0976  0093               	movwf	19	;volatile
  5663  0977                     l112:	
  5664                           ;i2c.c: 100:     while(!SSPIF);
  5665                           
  5666  0977  1D8C               	btfss	12,3	;volatile
  5667  0978  297A               	goto	u1901
  5668  0979  297B               	goto	u1900
  5669  097A                     u1901:
  5670  097A  2977               	goto	l112
  5671  097B                     u1900:
  5672  097B                     l114:
  5673                           
  5674                           ;i2c.c: 101:     SSPIF=0;
  5675  097B  118C               	bcf	12,3	;volatile
  5676  097C                     l2626:
  5677                           
  5678                           ;i2c.c: 102:     I2C_Wait_IDLE();
  5679  097C  120A  158A  20D1  120A  158A  	fcall	_I2C_Wait_IDLE
  5680  0981                     l2628:
  5681                           
  5682                           ;i2c.c: 103:     return ACKSTAT;
  5683  0981  3000               	movlw	0
  5684  0982  1683               	bsf	3,5	;RP0=1, select bank1
  5685  0983  1303               	bcf	3,6	;RP1=0, select bank1
  5686  0984  1B11               	btfsc	17,6	;volatile
  5687  0985  3001               	movlw	1
  5688  0986                     l115:
  5689  0986  0008               	return
  5690  0987                     __end_of_I2C_Master_WriteByte:
  5691                           
  5692                           	psect	text32
  5693  088A                     __ptext32:	
  5694 ;; *************** function _I2C_Master_Send_Stop *****************
  5695 ;; Defined at:
  5696 ;;		line 67 in file "i2c.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;		None
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;		None
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  1    wreg      void 
  5703 ;; Registers used:
  5704 ;;		wreg, status,2, status,0, pclath, cstack
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5710 ;;      Params:         0       0       0       0       0
  5711 ;;      Locals:         0       0       0       0       0
  5712 ;;      Temps:          0       0       0       0       0
  5713 ;;      Totals:         0       0       0       0       0
  5714 ;;Total ram usage:        0 bytes
  5715 ;; Hardware stack levels used:    1
  5716 ;; Hardware stack levels required when called:    4
  5717 ;; This function calls:
  5718 ;;		_I2C_Wait_IDLE
  5719 ;; This function is called by:
  5720 ;;		_EEPROM_WriteByte
  5721 ;;		_EEPROM_ReadByte
  5722 ;;		_EEPROM_WritePage
  5723 ;;		_EEPROM_ReadPage
  5724 ;; This function uses a non-reentrant model
  5725 ;;
  5726                           
  5727                           
  5728                           ;psect for function _I2C_Master_Send_Stop
  5729  088A                     _I2C_Master_Send_Stop:
  5730  088A                     l2632:	
  5731                           ;incstack = 0
  5732                           ; Regs used in _I2C_Master_Send_Stop: [wreg+status,2+status,0+pclath+cstack]
  5733                           
  5734                           
  5735                           ;i2c.c: 70:     I2C_Wait_IDLE();
  5736  088A  120A  158A  20D1  120A  158A  	fcall	_I2C_Wait_IDLE
  5737  088F                     l2634:
  5738                           
  5739                           ;i2c.c: 71:     PEN=1 ;
  5740  088F  1683               	bsf	3,5	;RP0=1, select bank1
  5741  0890  1303               	bcf	3,6	;RP1=0, select bank1
  5742  0891  1511               	bsf	17,2	;volatile
  5743  0892                     l100:
  5744  0892  0008               	return
  5745  0893                     __end_of_I2C_Master_Send_Stop:
  5746                           
  5747                           	psect	text33
  5748  0881                     __ptext33:	
  5749 ;; *************** function _I2C_Master_Send_Start *****************
  5750 ;; Defined at:
  5751 ;;		line 61 in file "i2c.c"
  5752 ;; Parameters:    Size  Location     Type
  5753 ;;		None
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;		None
  5756 ;; Return value:  Size  Location     Type
  5757 ;;                  1    wreg      void 
  5758 ;; Registers used:
  5759 ;;		wreg, status,2, status,0, pclath, cstack
  5760 ;; Tracked objects:
  5761 ;;		On entry : 0/0
  5762 ;;		On exit  : 0/0
  5763 ;;		Unchanged: 0/0
  5764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5765 ;;      Params:         0       0       0       0       0
  5766 ;;      Locals:         0       0       0       0       0
  5767 ;;      Temps:          0       0       0       0       0
  5768 ;;      Totals:         0       0       0       0       0
  5769 ;;Total ram usage:        0 bytes
  5770 ;; Hardware stack levels used:    1
  5771 ;; Hardware stack levels required when called:    4
  5772 ;; This function calls:
  5773 ;;		_I2C_Wait_IDLE
  5774 ;; This function is called by:
  5775 ;;		_EEPROM_WriteByte
  5776 ;;		_EEPROM_ReadByte
  5777 ;;		_EEPROM_WritePage
  5778 ;;		_EEPROM_ReadPage
  5779 ;; This function uses a non-reentrant model
  5780 ;;
  5781                           
  5782                           
  5783                           ;psect for function _I2C_Master_Send_Start
  5784  0881                     _I2C_Master_Send_Start:
  5785  0881                     l2614:	
  5786                           ;incstack = 0
  5787                           ; Regs used in _I2C_Master_Send_Start: [wreg+status,2+status,0+pclath+cstack]
  5788                           
  5789                           
  5790                           ;i2c.c: 64:     I2C_Wait_IDLE();
  5791  0881  120A  158A  20D1  120A  158A  	fcall	_I2C_Wait_IDLE
  5792  0886                     l2616:
  5793                           
  5794                           ;i2c.c: 65:     SEN=1 ;
  5795  0886  1683               	bsf	3,5	;RP0=1, select bank1
  5796  0887  1303               	bcf	3,6	;RP1=0, select bank1
  5797  0888  1411               	bsf	17,0	;volatile
  5798  0889                     l97:
  5799  0889  0008               	return
  5800  088A                     __end_of_I2C_Master_Send_Start:
  5801                           
  5802                           	psect	text34
  5803  0878                     __ptext34:	
  5804 ;; *************** function _I2C_Master_Send_RepeatedStart *****************
  5805 ;; Defined at:
  5806 ;;		line 73 in file "i2c.c"
  5807 ;; Parameters:    Size  Location     Type
  5808 ;;		None
  5809 ;; Auto vars:     Size  Location     Type
  5810 ;;		None
  5811 ;; Return value:  Size  Location     Type
  5812 ;;                  1    wreg      void 
  5813 ;; Registers used:
  5814 ;;		wreg, status,2, status,0, pclath, cstack
  5815 ;; Tracked objects:
  5816 ;;		On entry : 0/0
  5817 ;;		On exit  : 0/0
  5818 ;;		Unchanged: 0/0
  5819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5820 ;;      Params:         0       0       0       0       0
  5821 ;;      Locals:         0       0       0       0       0
  5822 ;;      Temps:          0       0       0       0       0
  5823 ;;      Totals:         0       0       0       0       0
  5824 ;;Total ram usage:        0 bytes
  5825 ;; Hardware stack levels used:    1
  5826 ;; Hardware stack levels required when called:    4
  5827 ;; This function calls:
  5828 ;;		_I2C_Wait_IDLE
  5829 ;; This function is called by:
  5830 ;;		_EEPROM_WriteByte
  5831 ;;		_EEPROM_ReadByte
  5832 ;;		_EEPROM_WritePage
  5833 ;;		_EEPROM_ReadPage
  5834 ;; This function uses a non-reentrant model
  5835 ;;
  5836                           
  5837                           
  5838                           ;psect for function _I2C_Master_Send_RepeatedStart
  5839  0878                     _I2C_Master_Send_RepeatedStart:
  5840  0878                     l2618:	
  5841                           ;incstack = 0
  5842                           ; Regs used in _I2C_Master_Send_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  5843                           
  5844                           
  5845                           ;i2c.c: 76:     I2C_Wait_IDLE();
  5846  0878  120A  158A  20D1  120A  158A  	fcall	_I2C_Wait_IDLE
  5847  087D                     l2620:
  5848                           
  5849                           ;i2c.c: 77:     RSEN=1 ;
  5850  087D  1683               	bsf	3,5	;RP0=1, select bank1
  5851  087E  1303               	bcf	3,6	;RP1=0, select bank1
  5852  087F  1491               	bsf	17,1	;volatile
  5853  0880                     l103:
  5854  0880  0008               	return
  5855  0881                     __end_of_I2C_Master_Send_RepeatedStart:
  5856                           
  5857                           	psect	text35
  5858  08D1                     __ptext35:	
  5859 ;; *************** function _I2C_Wait_IDLE *****************
  5860 ;; Defined at:
  5861 ;;		line 53 in file "i2c.c"
  5862 ;; Parameters:    Size  Location     Type
  5863 ;;		None
  5864 ;; Auto vars:     Size  Location     Type
  5865 ;;		None
  5866 ;; Return value:  Size  Location     Type
  5867 ;;                  1    wreg      void 
  5868 ;; Registers used:
  5869 ;;		wreg, status,2
  5870 ;; Tracked objects:
  5871 ;;		On entry : 0/0
  5872 ;;		On exit  : 0/0
  5873 ;;		Unchanged: 0/0
  5874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5875 ;;      Params:         0       0       0       0       0
  5876 ;;      Locals:         0       0       0       0       0
  5877 ;;      Temps:          0       0       0       0       0
  5878 ;;      Totals:         0       0       0       0       0
  5879 ;;Total ram usage:        0 bytes
  5880 ;; Hardware stack levels used:    1
  5881 ;; Hardware stack levels required when called:    3
  5882 ;; This function calls:
  5883 ;;		Nothing
  5884 ;; This function is called by:
  5885 ;;		_I2C_Master_Send_Start
  5886 ;;		_I2C_Master_Send_Stop
  5887 ;;		_I2C_Master_Send_RepeatedStart
  5888 ;;		_I2C_Master_Send_ACK
  5889 ;;		_I2C_Master_Send_NACK
  5890 ;;		_I2C_Master_WriteByte
  5891 ;;		_I2C_Master_ReadByte
  5892 ;; This function uses a non-reentrant model
  5893 ;;
  5894                           
  5895                           
  5896                           ;psect for function _I2C_Wait_IDLE
  5897  08D1                     _I2C_Wait_IDLE:
  5898  08D1                     l2598:	
  5899                           ;incstack = 0
  5900                           ; Regs used in _I2C_Wait_IDLE: [wreg+status,2]
  5901                           
  5902  08D1                     l91:	
  5903                           ;i2c.c: 58:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  5904                           
  5905  08D1  1683               	bsf	3,5	;RP0=1, select bank1
  5906  08D2  1303               	bcf	3,6	;RP1=0, select bank1
  5907  08D3  1914               	btfsc	20,2	;volatile
  5908  08D4  28D6               	goto	u1881
  5909  08D5  28D7               	goto	u1880
  5910  08D6                     u1881:
  5911  08D6  28D1               	goto	l91
  5912  08D7                     u1880:
  5913  08D7                     l2600:
  5914  08D7  0811               	movf	17,w	;volatile
  5915  08D8  391F               	andlw	31
  5916  08D9  1D03               	btfss	3,2
  5917  08DA  28DC               	goto	u1891
  5918  08DB  28DD               	goto	u1890
  5919  08DC                     u1891:
  5920  08DC  28D1               	goto	l91
  5921  08DD                     u1890:
  5922  08DD                     l94:
  5923  08DD  0008               	return
  5924  08DE                     __end_of_I2C_Wait_IDLE:
  5925                           
  5926                           	psect	text36
  5927  092F                     __ptext36:	
  5928 ;; *************** function _DD_Init *****************
  5929 ;; Defined at:
  5930 ;;		line 14 in file "DD.c"
  5931 ;; Parameters:    Size  Location     Type
  5932 ;;		None
  5933 ;; Auto vars:     Size  Location     Type
  5934 ;;		None
  5935 ;; Return value:  Size  Location     Type
  5936 ;;                  1    wreg      void 
  5937 ;; Registers used:
  5938 ;;		wreg, status,2, status,0, btemp+1
  5939 ;; Tracked objects:
  5940 ;;		On entry : 0/0
  5941 ;;		On exit  : 0/0
  5942 ;;		Unchanged: 0/0
  5943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5944 ;;      Params:         0       0       0       0       0
  5945 ;;      Locals:         0       0       0       0       0
  5946 ;;      Temps:          0       0       0       0       0
  5947 ;;      Totals:         0       0       0       0       0
  5948 ;;Total ram usage:        0 bytes
  5949 ;; Hardware stack levels used:    1
  5950 ;; Hardware stack levels required when called:    3
  5951 ;; This function calls:
  5952 ;;		Nothing
  5953 ;; This function is called by:
  5954 ;;		_EWH_Init
  5955 ;; This function uses a non-reentrant model
  5956 ;;
  5957                           
  5958                           
  5959                           ;psect for function _DD_Init
  5960  092F                     _DD_Init:
  5961  092F                     l2878:	
  5962                           ;incstack = 0
  5963                           ; Regs used in _DD_Init: [wreg+status,2+status,0+btemp+1]
  5964                           
  5965  092F                     l2882:	
  5966                           ;DD.c: 17:     (0u)? (TRISC |= (1<<5)) : (TRISC &= ~(1<<5));
  5967                           
  5968  092F  30DF               	movlw	223
  5969  0930  00FF               	movwf	btemp+1
  5970  0931  087F               	movf	btemp+1,w
  5971  0932  1683               	bsf	3,5	;RP0=1, select bank1
  5972  0933  1303               	bcf	3,6	;RP1=0, select bank1
  5973  0934  0587               	andwf	7,f	;volatile
  5974  0935                     l2886:
  5975  0935  30FB               	movlw	251
  5976  0936  00FF               	movwf	btemp+1
  5977  0937  087F               	movf	btemp+1,w
  5978  0938  0587               	andwf	7,f	;volatile
  5979  0939                     l2890:
  5980  0939  307F               	movlw	127
  5981  093A  00FF               	movwf	btemp+1
  5982  093B  087F               	movf	btemp+1,w
  5983  093C  0586               	andwf	6,f	;volatile
  5984  093D                     l2894:
  5985  093D  30DF               	movlw	223
  5986  093E  00FF               	movwf	btemp+1
  5987  093F  087F               	movf	btemp+1,w
  5988  0940  1283               	bcf	3,5	;RP0=0, select bank0
  5989  0941  1303               	bcf	3,6	;RP1=0, select bank0
  5990  0942  0587               	andwf	7,f	;volatile
  5991  0943                     l2898:
  5992  0943  30FB               	movlw	251
  5993  0944  00FF               	movwf	btemp+1
  5994  0945  087F               	movf	btemp+1,w
  5995  0946  0587               	andwf	7,f	;volatile
  5996  0947                     l2902:
  5997  0947  307F               	movlw	127
  5998  0948  00FF               	movwf	btemp+1
  5999  0949  087F               	movf	btemp+1,w
  6000  094A  0586               	andwf	6,f	;volatile
  6001  094B                     l249:
  6002  094B  0008               	return
  6003  094C                     __end_of_DD_Init:
  6004                           
  6005                           	psect	text37
  6006  0F82                     __ptext37:	
  6007 ;; *************** function _ADC_Init *****************
  6008 ;; Defined at:
  6009 ;;		line 16 in file "adc.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;  config          1    wreg     PTR struct .
  6012 ;;		 -> EWH_Init@adc_config(4), 
  6013 ;; Auto vars:     Size  Location     Type
  6014 ;;  config          1    2[BANK1 ] PTR struct .
  6015 ;;		 -> EWH_Init@adc_config(4), 
  6016 ;; Return value:  Size  Location     Type
  6017 ;;                  1    wreg      void 
  6018 ;; Registers used:
  6019 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  6020 ;; Tracked objects:
  6021 ;;		On entry : 0/0
  6022 ;;		On exit  : 0/0
  6023 ;;		Unchanged: 0/0
  6024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6025 ;;      Params:         0       0       0       0       0
  6026 ;;      Locals:         0       0       1       0       0
  6027 ;;      Temps:          0       0       2       0       0
  6028 ;;      Totals:         0       0       3       0       0
  6029 ;;Total ram usage:        3 bytes
  6030 ;; Hardware stack levels used:    1
  6031 ;; Hardware stack levels required when called:    3
  6032 ;; This function calls:
  6033 ;;		Nothing
  6034 ;; This function is called by:
  6035 ;;		_EWH_Init
  6036 ;; This function uses a non-reentrant model
  6037 ;;
  6038                           
  6039                           
  6040                           ;psect for function _ADC_Init
  6041  0F82                     _ADC_Init:
  6042                           
  6043                           ;incstack = 0
  6044                           ; Regs used in _ADC_Init: [wreg-fsr0h+status,2+status,0+btemp+1]
  6045                           ;ADC_Init@config stored from wreg
  6046  0F82  1683               	bsf	3,5	;RP0=1, select bank1
  6047  0F83  1303               	bcf	3,6	;RP1=0, select bank1
  6048  0F84  00A2               	movwf	ADC_Init@config^(0+128)
  6049  0F85                     l2952:
  6050                           
  6051                           ;adc.c: 16: void ADC_Init(tADC_Config* config);adc.c: 17: {;adc.c: 19:     ADON=1;
  6052  0F85  1283               	bcf	3,5	;RP0=0, select bank0
  6053  0F86  1303               	bcf	3,6	;RP1=0, select bank0
  6054  0F87  141F               	bsf	31,0	;volatile
  6055                           
  6056                           ;adc.c: 21:     switch(config->clk)
  6057  0F88  2FB7               	goto	l2962
  6058  0F89                     l2954:
  6059                           
  6060                           ;adc.c: 24:             ADCON0 &= ~(0xC0);
  6061  0F89  303F               	movlw	63
  6062  0F8A  00FF               	movwf	btemp+1
  6063  0F8B  087F               	movf	btemp+1,w
  6064  0F8C  1283               	bcf	3,5	;RP0=0, select bank0
  6065  0F8D  1303               	bcf	3,6	;RP1=0, select bank0
  6066  0F8E  059F               	andwf	31,f	;volatile
  6067                           
  6068                           ;adc.c: 25:             break;
  6069  0F8F  2FDC               	goto	l2964
  6070  0F90                     l314:	
  6071                           ;adc.c: 26:         case FOSC_8:
  6072                           
  6073                           
  6074                           ;adc.c: 27:             ADCON0 |= (1<<6);
  6075  0F90  1283               	bcf	3,5	;RP0=0, select bank0
  6076  0F91  1303               	bcf	3,6	;RP1=0, select bank0
  6077  0F92  171F               	bsf	31,6	;volatile
  6078                           
  6079                           ;adc.c: 28:             break;
  6080  0F93  2FDC               	goto	l2964
  6081  0F94                     l315:	
  6082                           ;adc.c: 29:         case FOSC_32:
  6083                           
  6084                           
  6085                           ;adc.c: 30:             ADCON0 |= (2<<6);
  6086  0F94  1283               	bcf	3,5	;RP0=0, select bank0
  6087  0F95  1303               	bcf	3,6	;RP1=0, select bank0
  6088  0F96  179F               	bsf	31,7	;volatile
  6089                           
  6090                           ;adc.c: 31:             break;
  6091  0F97  2FDC               	goto	l2964
  6092  0F98                     l2956:
  6093                           
  6094                           ;adc.c: 33:             ADCON0 |= (3<<6);
  6095  0F98  30C0               	movlw	192
  6096  0F99  00FF               	movwf	btemp+1
  6097  0F9A  087F               	movf	btemp+1,w
  6098  0F9B  1283               	bcf	3,5	;RP0=0, select bank0
  6099  0F9C  1303               	bcf	3,6	;RP1=0, select bank0
  6100  0F9D  049F               	iorwf	31,f	;volatile
  6101                           
  6102                           ;adc.c: 34:             break;
  6103  0F9E  2FDC               	goto	l2964
  6104  0F9F                     l2958:
  6105                           
  6106                           ;adc.c: 36:             ADCON0 &= ~(0xC0);
  6107  0F9F  303F               	movlw	63
  6108  0FA0  00FF               	movwf	btemp+1
  6109  0FA1  087F               	movf	btemp+1,w
  6110  0FA2  1283               	bcf	3,5	;RP0=0, select bank0
  6111  0FA3  1303               	bcf	3,6	;RP1=0, select bank0
  6112  0FA4  059F               	andwf	31,f	;volatile
  6113  0FA5                     l2960:
  6114                           
  6115                           ;adc.c: 37:             ADCON1 |= (1<<6);
  6116  0FA5  1683               	bsf	3,5	;RP0=1, select bank1
  6117  0FA6  1303               	bcf	3,6	;RP1=0, select bank1
  6118  0FA7  171F               	bsf	31,6	;volatile
  6119                           
  6120                           ;adc.c: 38:             break;
  6121  0FA8  2FDC               	goto	l2964
  6122  0FA9                     l318:	
  6123                           ;adc.c: 39:         case FOSC_16:
  6124                           
  6125                           
  6126                           ;adc.c: 40:             ADCON0 |= (1<<6);
  6127  0FA9  1283               	bcf	3,5	;RP0=0, select bank0
  6128  0FAA  1303               	bcf	3,6	;RP1=0, select bank0
  6129  0FAB  171F               	bsf	31,6	;volatile
  6130                           
  6131                           ;adc.c: 41:             ADCON1 |= (1<<6);
  6132  0FAC  1683               	bsf	3,5	;RP0=1, select bank1
  6133  0FAD  1303               	bcf	3,6	;RP1=0, select bank1
  6134  0FAE  171F               	bsf	31,6	;volatile
  6135                           
  6136                           ;adc.c: 42:             break;
  6137  0FAF  2FDC               	goto	l2964
  6138  0FB0                     l319:	
  6139                           ;adc.c: 43:         case FOSC_64:
  6140                           
  6141                           
  6142                           ;adc.c: 44:             ADCON0 |= (2<<6);
  6143  0FB0  1283               	bcf	3,5	;RP0=0, select bank0
  6144  0FB1  1303               	bcf	3,6	;RP1=0, select bank0
  6145  0FB2  179F               	bsf	31,7	;volatile
  6146                           
  6147                           ;adc.c: 45:             ADCON1 |= (1<<6);
  6148  0FB3  1683               	bsf	3,5	;RP0=1, select bank1
  6149  0FB4  1303               	bcf	3,6	;RP1=0, select bank1
  6150  0FB5  171F               	bsf	31,6	;volatile
  6151                           
  6152                           ;adc.c: 46:             break;
  6153  0FB6  2FDC               	goto	l2964
  6154  0FB7                     l2962:
  6155  0FB7  1683               	bsf	3,5	;RP0=1, select bank1
  6156  0FB8  1303               	bcf	3,6	;RP1=0, select bank1
  6157  0FB9  0822               	movf	ADC_Init@config^(0+128),w
  6158  0FBA  3E03               	addlw	3
  6159  0FBB  0084               	movwf	4
  6160  0FBC  1383               	bcf	3,7	;select IRP bank0
  6161  0FBD  0800               	movf	0,w
  6162  0FBE  00A0               	movwf	??_ADC_Init^(0+128)
  6163  0FBF  01A1               	clrf	(??_ADC_Init^(0+128)+1)
  6164                           
  6165                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6166                           ; Switch size 1, requested type "simple"
  6167                           ; Number of cases is 1, Range of values is 0 to 0
  6168                           ; switch strategies available:
  6169                           ; Name         Instructions Cycles
  6170                           ; simple_byte            4     3 (average)
  6171                           ; direct_byte           11     8 (fixed)
  6172                           ; jumptable            260     6 (fixed)
  6173                           ;	Chosen strategy is simple_byte
  6174  0FC0  0821               	movf	(??_ADC_Init+1)^(0+128),w
  6175  0FC1  3A00               	xorlw	0	; case 0
  6176  0FC2  1903               	skipnz
  6177  0FC3  2FC5               	goto	l3934
  6178  0FC4  2F90               	goto	l314
  6179  0FC5                     l3934:
  6180                           
  6181                           ; Switch size 1, requested type "simple"
  6182                           ; Number of cases is 7, Range of values is 0 to 6
  6183                           ; switch strategies available:
  6184                           ; Name         Instructions Cycles
  6185                           ; simple_byte           22    12 (average)
  6186                           ; direct_byte           29     8 (fixed)
  6187                           ; jumptable            260     6 (fixed)
  6188                           ;	Chosen strategy is simple_byte
  6189  0FC5  0820               	movf	??_ADC_Init^(0+128),w
  6190  0FC6  3A00               	xorlw	0	; case 0
  6191  0FC7  1903               	skipnz
  6192  0FC8  2F89               	goto	l2954
  6193  0FC9  3A01               	xorlw	1	; case 1
  6194  0FCA  1903               	skipnz
  6195  0FCB  2F90               	goto	l314
  6196  0FCC  3A03               	xorlw	3	; case 2
  6197  0FCD  1903               	skipnz
  6198  0FCE  2F94               	goto	l315
  6199  0FCF  3A01               	xorlw	1	; case 3
  6200  0FD0  1903               	skipnz
  6201  0FD1  2F98               	goto	l2956
  6202  0FD2  3A07               	xorlw	7	; case 4
  6203  0FD3  1903               	skipnz
  6204  0FD4  2F9F               	goto	l2958
  6205  0FD5  3A01               	xorlw	1	; case 5
  6206  0FD6  1903               	skipnz
  6207  0FD7  2FA9               	goto	l318
  6208  0FD8  3A03               	xorlw	3	; case 6
  6209  0FD9  1903               	skipnz
  6210  0FDA  2FB0               	goto	l319
  6211  0FDB  2F90               	goto	l314
  6212  0FDC                     l2964:
  6213                           
  6214                           ;adc.c: 53:     ADCON1 |= ((config->alignment)<<7);
  6215  0FDC  1683               	bsf	3,5	;RP0=1, select bank1
  6216  0FDD  1303               	bcf	3,6	;RP1=0, select bank1
  6217  0FDE  0822               	movf	ADC_Init@config^(0+128),w
  6218  0FDF  3E02               	addlw	2
  6219  0FE0  0084               	movwf	4
  6220  0FE1  0800               	movf	0,w
  6221  0FE2  00A0               	movwf	??_ADC_Init^(0+128)
  6222  0FE3  3006               	movlw	6
  6223  0FE4                     u2365:
  6224  0FE4  1003               	clrc
  6225  0FE5  0DA0               	rlf	??_ADC_Init^(0+128),f
  6226  0FE6  3EFF               	addlw	-1
  6227  0FE7  1D03               	skipz
  6228  0FE8  2FE4               	goto	u2365
  6229  0FE9  1003               	clrc
  6230  0FEA  0D20               	rlf	??_ADC_Init^(0+128),w
  6231  0FEB  00FF               	movwf	btemp+1
  6232  0FEC  087F               	movf	btemp+1,w
  6233  0FED  049F               	iorwf	31,f	;volatile
  6234  0FEE                     l2966:
  6235                           
  6236                           ;adc.c: 56:     ADCON1 = (0x80);
  6237  0FEE  3080               	movlw	128
  6238  0FEF  009F               	movwf	31	;volatile
  6239  0FF0                     l2968:
  6240                           
  6241                           ;adc.c: 60:     if(config->mode==INTERRUPT_MODE)
  6242  0FF0  0A22               	incf	ADC_Init@config^(0+128),w
  6243  0FF1  0084               	movwf	4
  6244  0FF2  0300               	decf	0,w
  6245  0FF3  1D03               	btfss	3,2
  6246  0FF4  2FF6               	goto	u2371
  6247  0FF5  2FF7               	goto	u2370
  6248  0FF6                     u2371:
  6249  0FF6  2FFF               	goto	l322
  6250  0FF7                     u2370:
  6251  0FF7                     l2970:
  6252                           
  6253                           ;adc.c: 61:     {;adc.c: 62:         ADIF = 0;
  6254  0FF7  1283               	bcf	3,5	;RP0=0, select bank0
  6255  0FF8  1303               	bcf	3,6	;RP1=0, select bank0
  6256  0FF9  130C               	bcf	12,6	;volatile
  6257                           
  6258                           ;adc.c: 63:         ADIE = 1;
  6259  0FFA  1683               	bsf	3,5	;RP0=1, select bank1
  6260  0FFB  1303               	bcf	3,6	;RP1=0, select bank1
  6261  0FFC  170C               	bsf	12,6	;volatile
  6262                           
  6263                           ;adc.c: 64:         PEIE = 1;
  6264  0FFD  170B               	bsf	11,6	;volatile
  6265                           
  6266                           ;adc.c: 65:         GIE = 1;
  6267  0FFE  178B               	bsf	11,7	;volatile
  6268  0FFF                     l322:
  6269  0FFF  0008               	return
  6270  1000                     __end_of_ADC_Init:
  6271                           
  6272                           	psect	text38
  6273  05A5                     __ptext38:	
  6274 ;; *************** function _ISR *****************
  6275 ;; Defined at:
  6276 ;;		line 279 in file "EWH.c"
  6277 ;; Parameters:    Size  Location     Type
  6278 ;;		None
  6279 ;; Auto vars:     Size  Location     Type
  6280 ;;  Reading         2   40[BANK0 ] unsigned short 
  6281 ;; Return value:  Size  Location     Type
  6282 ;;                  1    wreg      void 
  6283 ;; Registers used:
  6284 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6285 ;; Tracked objects:
  6286 ;;		On entry : 0/0
  6287 ;;		On exit  : 0/0
  6288 ;;		Unchanged: 0/0
  6289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6290 ;;      Params:         0       0       0       0       0
  6291 ;;      Locals:         0       2       0       0       0
  6292 ;;      Temps:          0       4       0       0       0
  6293 ;;      Totals:         0       6       0       0       0
  6294 ;;Total ram usage:        6 bytes
  6295 ;; Hardware stack levels used:    1
  6296 ;; Hardware stack levels required when called:    2
  6297 ;; This function calls:
  6298 ;;		_ADC_ReadChannel
  6299 ;;		_DD_GetState
  6300 ;;		___flmul
  6301 ;;		___fltol
  6302 ;;		___xxtofl
  6303 ;; This function is called by:
  6304 ;;		Interrupt level 1
  6305 ;; This function uses a non-reentrant model
  6306 ;;
  6307                           
  6308                           
  6309                           ;psect for function _ISR
  6310  05A5                     _ISR:
  6311  05A5                     i1l3664:
  6312                           
  6313                           ;EWH.c: 281:     static uint8_t count =0;;EWH.c: 282:     if(INTF==1)
  6314  05A5  1C8B               	btfss	11,1	;volatile
  6315  05A6  2DA8               	goto	u362_21
  6316  05A7  2DA9               	goto	u362_20
  6317  05A8                     u362_21:
  6318  05A8  2DC5               	goto	i1l585
  6319  05A9                     u362_20:
  6320  05A9                     i1l3666:
  6321                           
  6322                           ;EWH.c: 283:     {;EWH.c: 284:         EWH_Events[0]=1;
  6323  05A9  1683               	bsf	3,5	;RP0=1, select bank1
  6324  05AA  1303               	bcf	3,6	;RP1=0, select bank1
  6325  05AB  01BD               	clrf	_EWH_Events^(0+128)
  6326  05AC  0ABD               	incf	_EWH_Events^(0+128),f
  6327  05AD                     i1l3668:
  6328                           
  6329                           ;EWH.c: 286:         if(EWH_State==ON)
  6330  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  6331  05AE  1303               	bcf	3,6	;RP1=0, select bank0
  6332  05AF  0352               	decf	_EWH_State,w
  6333  05B0  1D03               	btfss	3,2
  6334  05B1  2DB3               	goto	u363_21
  6335  05B2  2DB4               	goto	u363_20
  6336  05B3                     u363_21:
  6337  05B3  2DB9               	goto	i1l3672
  6338  05B4                     u363_20:
  6339  05B4                     i1l3670:
  6340                           
  6341                           ;EWH.c: 287:         {;EWH.c: 288:             EWH_State=OFF;
  6342  05B4  01D2               	clrf	_EWH_State
  6343                           
  6344                           ;EWH.c: 289:             EWH_Mode=EWH_SLEEP_MODE;
  6345  05B5  1683               	bsf	3,5	;RP0=1, select bank1
  6346  05B6  1303               	bcf	3,6	;RP1=0, select bank1
  6347  05B7  01CA               	clrf	_EWH_Mode^(0+128)
  6348                           
  6349                           ;EWH.c: 290:         }
  6350  05B8  2DC4               	goto	i1l587
  6351  05B9                     i1l3672:
  6352  05B9  0852               	movf	_EWH_State,w
  6353  05BA  1D03               	btfss	3,2
  6354  05BB  2DBD               	goto	u364_21
  6355  05BC  2DBE               	goto	u364_20
  6356  05BD                     u364_21:
  6357  05BD  2DC4               	goto	i1l587
  6358  05BE                     u364_20:
  6359  05BE                     i1l3674:
  6360                           
  6361                           ;EWH.c: 292:         {;EWH.c: 293:             EWH_State=ON;
  6362  05BE  01D2               	clrf	_EWH_State
  6363  05BF  0AD2               	incf	_EWH_State,f
  6364                           
  6365                           ;EWH.c: 294:             EWH_Mode=EWH_WAKE_UP_MODE;
  6366  05C0  1683               	bsf	3,5	;RP0=1, select bank1
  6367  05C1  1303               	bcf	3,6	;RP1=0, select bank1
  6368  05C2  01CA               	clrf	_EWH_Mode^(0+128)
  6369  05C3  0ACA               	incf	_EWH_Mode^(0+128),f
  6370  05C4                     i1l587:
  6371                           
  6372                           ;EWH.c: 296:         INTF=0;
  6373  05C4  108B               	bcf	11,1	;volatile
  6374  05C5                     i1l585:	
  6375                           ;EWH.c: 297:     }
  6376                           
  6377                           
  6378                           ;EWH.c: 299:    if (TMR1IF)
  6379  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  6380  05C6  1C0C               	btfss	12,0	;volatile
  6381  05C7  2DC9               	goto	u365_21
  6382  05C8  2DCA               	goto	u365_20
  6383  05C9                     u365_21:
  6384  05C9  2E75               	goto	i1l601
  6385  05CA                     u365_20:
  6386  05CA                     i1l3676:
  6387                           
  6388                           ;EWH.c: 300:    {;EWH.c: 301:       count++;
  6389  05CA  3001               	movlw	1
  6390  05CB  00FF               	movwf	btemp+1
  6391  05CC  087F               	movf	btemp+1,w
  6392  05CD  07D0               	addwf	ISR@count,f
  6393  05CE                     i1l3678:
  6394                           
  6395                           ;EWH.c: 302:       if(EWH_Mode==EWH_OPERATING_MODE)
  6396  05CE  3003               	movlw	3
  6397  05CF  1683               	bsf	3,5	;RP0=1, select bank1
  6398  05D0  1303               	bcf	3,6	;RP1=0, select bank1
  6399  05D1  064A               	xorwf	_EWH_Mode^(0+128),w
  6400  05D2  1D03               	btfss	3,2
  6401  05D3  2DD5               	goto	u366_21
  6402  05D4  2DD6               	goto	u366_20
  6403  05D5                     u366_21:
  6404  05D5  2E1C               	goto	i1l3682
  6405  05D6                     u366_20:
  6406  05D6                     i1l3680:
  6407                           
  6408                           ;EWH.c: 303:       {;EWH.c: 304:         uint16_t Reading = ADC_ReadChannel(ADC2);
  6409  05D6  3002               	movlw	2
  6410  05D7  120A  158A  21D7  120A  118A  	fcall	_ADC_ReadChannel
  6411  05DC  0871               	movf	?_ADC_ReadChannel+1,w
  6412  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  6413  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  6414  05DF  00C9               	movwf	ISR@Reading+1
  6415  05E0  0870               	movf	?_ADC_ReadChannel,w
  6416  05E1  00C8               	movwf	ISR@Reading
  6417                           
  6418                           ;EWH.c: 305:         current_Temp=Reading*0.488;
  6419  05E2  0848               	movf	ISR@Reading,w
  6420  05E3  00F0               	movwf	___xxtofl@val
  6421  05E4  0849               	movf	ISR@Reading+1,w
  6422  05E5  00F1               	movwf	___xxtofl@val+1
  6423  05E6  01F2               	clrf	___xxtofl@val+2
  6424  05E7  01F3               	clrf	___xxtofl@val+3
  6425  05E8  3000               	movlw	0
  6426  05E9  120A  118A  2680  120A  118A  	fcall	___xxtofl
  6427  05EE  0873               	movf	?___xxtofl+3,w
  6428  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  6429  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  6430  05F1  00A7               	movwf	___flmul@a+3
  6431  05F2  0872               	movf	?___xxtofl+2,w
  6432  05F3  00A6               	movwf	___flmul@a+2
  6433  05F4  0871               	movf	?___xxtofl+1,w
  6434  05F5  00A5               	movwf	___flmul@a+1
  6435  05F6  0870               	movf	?___xxtofl,w
  6436  05F7  00A4               	movwf	___flmul@a
  6437  05F8  303E               	movlw	62
  6438  05F9  00A3               	movwf	___flmul@b+3
  6439  05FA  30F9               	movlw	249
  6440  05FB  00A2               	movwf	___flmul@b+2
  6441  05FC  30DB               	movlw	219
  6442  05FD  00A1               	movwf	___flmul@b+1
  6443  05FE  3023               	movlw	35
  6444  05FF  00A0               	movwf	___flmul@b
  6445  0600  120A  118A  2037  120A  118A  	fcall	___flmul
  6446  0605  1283               	bcf	3,5	;RP0=0, select bank0
  6447  0606  1303               	bcf	3,6	;RP1=0, select bank0
  6448  0607  0823               	movf	?___flmul+3,w
  6449  0608  00BD               	movwf	___fltol@f1+3
  6450  0609  0822               	movf	?___flmul+2,w
  6451  060A  00BC               	movwf	___fltol@f1+2
  6452  060B  0821               	movf	?___flmul+1,w
  6453  060C  00BB               	movwf	___fltol@f1+1
  6454  060D  0820               	movf	?___flmul,w
  6455  060E  00BA               	movwf	___fltol@f1
  6456  060F  120A  158A  2706  120A  118A  	fcall	___fltol
  6457  0614  1283               	bcf	3,5	;RP0=0, select bank0
  6458  0615  1303               	bcf	3,6	;RP1=0, select bank0
  6459  0616  083A               	movf	?___fltol,w
  6460  0617  00FF               	movwf	btemp+1
  6461  0618  087F               	movf	btemp+1,w
  6462  0619  1683               	bsf	3,5	;RP0=1, select bank1
  6463  061A  1303               	bcf	3,6	;RP1=0, select bank1
  6464  061B  00C8               	movwf	_current_Temp^(0+128)
  6465  061C                     i1l3682:
  6466                           
  6467                           ;EWH.c: 308:       if(count==10)
  6468  061C  300A               	movlw	10
  6469  061D  1283               	bcf	3,5	;RP0=0, select bank0
  6470  061E  1303               	bcf	3,6	;RP1=0, select bank0
  6471  061F  0650               	xorwf	ISR@count,w
  6472  0620  1D03               	btfss	3,2
  6473  0621  2E23               	goto	u367_21
  6474  0622  2E24               	goto	u367_20
  6475  0623                     u367_21:
  6476  0623  2E70               	goto	i1l3710
  6477  0624                     u367_20:
  6478  0624                     i1l3684:
  6479                           
  6480                           ;EWH.c: 309:       {;EWH.c: 311:           if(EWH_Mode==EWH_SET_TEMP_MODE)
  6481  0624  3002               	movlw	2
  6482  0625  1683               	bsf	3,5	;RP0=1, select bank1
  6483  0626  1303               	bcf	3,6	;RP1=0, select bank1
  6484  0627  064A               	xorwf	_EWH_Mode^(0+128),w
  6485  0628  1D03               	btfss	3,2
  6486  0629  2E2B               	goto	u368_21
  6487  062A  2E2C               	goto	u368_20
  6488  062B                     u368_21:
  6489  062B  2E3D               	goto	i1l3694
  6490  062C                     u368_20:
  6491  062C                     i1l3686:
  6492                           
  6493                           ;EWH.c: 312:           {;EWH.c: 313:               SSD_Blink_flag = ~SSD_Blink_flag;
  6494  062C  09C6               	comf	_SSD_Blink_flag^(0+128),f
  6495  062D                     i1l3688:
  6496                           
  6497                           ;EWH.c: 314:               NoPress_Sec_count++;
  6498  062D  3001               	movlw	1
  6499  062E  00FF               	movwf	btemp+1
  6500  062F  087F               	movf	btemp+1,w
  6501  0630  1283               	bcf	3,5	;RP0=0, select bank0
  6502  0631  1303               	bcf	3,6	;RP1=0, select bank0
  6503  0632  07D1               	addwf	_NoPress_Sec_count,f
  6504  0633                     i1l3690:
  6505                           
  6506                           ;EWH.c: 315:               if(NoPress_Sec_count==5)
  6507  0633  3005               	movlw	5
  6508  0634  0651               	xorwf	_NoPress_Sec_count,w
  6509  0635  1D03               	btfss	3,2
  6510  0636  2E38               	goto	u369_21
  6511  0637  2E39               	goto	u369_20
  6512  0638                     u369_21:
  6513  0638  2E3D               	goto	i1l3694
  6514  0639                     u369_20:
  6515  0639                     i1l3692:
  6516                           
  6517                           ;EWH.c: 316:               {;EWH.c: 317:                   EWH_Events[3]=1;
  6518  0639  1683               	bsf	3,5	;RP0=1, select bank1
  6519  063A  1303               	bcf	3,6	;RP1=0, select bank1
  6520  063B  01C0               	clrf	(_EWH_Events^(0+128)+3)
  6521  063C  0AC0               	incf	(_EWH_Events^(0+128)+3),f
  6522  063D                     i1l3694:
  6523                           
  6524                           ;EWH.c: 321:         if(EWH_Mode==EWH_OPERATING_MODE && DD_GetState(HEATER)==ON)
  6525  063D  3003               	movlw	3
  6526  063E  1683               	bsf	3,5	;RP0=1, select bank1
  6527  063F  1303               	bcf	3,6	;RP1=0, select bank1
  6528  0640  064A               	xorwf	_EWH_Mode^(0+128),w
  6529  0641  1D03               	btfss	3,2
  6530  0642  2E44               	goto	u370_21
  6531  0643  2E45               	goto	u370_20
  6532  0644                     u370_21:
  6533  0644  2E57               	goto	i1l3700
  6534  0645                     u370_20:
  6535  0645                     i1l3696:
  6536  0645  3000               	movlw	0
  6537  0646  120A  118A  27BD  120A  118A  	fcall	_DD_GetState
  6538  064B  3A01               	xorlw	1
  6539  064C  1D03               	skipz
  6540  064D  2E4F               	goto	u371_21
  6541  064E  2E50               	goto	u371_20
  6542  064F                     u371_21:
  6543  064F  2E57               	goto	i1l3700
  6544  0650                     u371_20:
  6545  0650                     i1l3698:
  6546                           
  6547                           ;EWH.c: 322:         {;EWH.c: 323:             (PORTB^=(1<<7));
  6548  0650  3080               	movlw	128
  6549  0651  00FF               	movwf	btemp+1
  6550  0652  087F               	movf	btemp+1,w
  6551  0653  1283               	bcf	3,5	;RP0=0, select bank0
  6552  0654  1303               	bcf	3,6	;RP1=0, select bank0
  6553  0655  0686               	xorwf	6,f	;volatile
  6554                           
  6555                           ;EWH.c: 324:         }
  6556  0656  2E6D               	goto	i1l3708
  6557  0657                     i1l3700:
  6558  0657  3003               	movlw	3
  6559  0658  1683               	bsf	3,5	;RP0=1, select bank1
  6560  0659  1303               	bcf	3,6	;RP1=0, select bank1
  6561  065A  064A               	xorwf	_EWH_Mode^(0+128),w
  6562  065B  1D03               	btfss	3,2
  6563  065C  2E5E               	goto	u372_21
  6564  065D  2E5F               	goto	u372_20
  6565  065E                     u372_21:
  6566  065E  2E6D               	goto	i1l3708
  6567  065F                     u372_20:
  6568  065F                     i1l3702:
  6569                           
  6570                           ;EWH.c: 326:         {;EWH.c: 327:             (ON)?(PORTB |= (1<<7)) : (PORTB &= ~(1<<7
      +                          ));
  6571  065F  3001               	movlw	1
  6572  0660  120A  118A  27BD  120A  118A  	fcall	_DD_GetState
  6573  0665  3A01               	xorlw	1
  6574  0666  1D03               	skipz
  6575  0667  2E69               	goto	u373_21
  6576  0668  2E6A               	goto	u373_20
  6577  0669                     u373_21:
  6578  0669  2E6D               	goto	i1l3708
  6579  066A                     u373_20:
  6580  066A                     i1l3704:
  6581  066A  1283               	bcf	3,5	;RP0=0, select bank0
  6582  066B  1303               	bcf	3,6	;RP1=0, select bank0
  6583  066C  1786               	bsf	6,7	;volatile
  6584  066D                     i1l3708:
  6585                           
  6586                           ;EWH.c: 330:         count = 0;
  6587  066D  1283               	bcf	3,5	;RP0=0, select bank0
  6588  066E  1303               	bcf	3,6	;RP1=0, select bank0
  6589  066F  01D0               	clrf	ISR@count
  6590  0670                     i1l3710:
  6591                           
  6592                           ;EWH.c: 332:       TMR1IF = 0;
  6593  0670  100C               	bcf	12,0	;volatile
  6594  0671                     i1l3712:
  6595                           
  6596                           ;EWH.c: 333:       TMR1=40536;
  6597  0671  309E               	movlw	158
  6598  0672  008F               	movwf	15	;volatile
  6599  0673  3058               	movlw	88
  6600  0674  008E               	movwf	14	;volatile
  6601  0675                     i1l601:
  6602  0675  0847               	movf	??_ISR+3,w
  6603  0676  00FF               	movwf	btemp+1
  6604  0677  0846               	movf	??_ISR+2,w
  6605  0678  008A               	movwf	10
  6606  0679  0845               	movf	??_ISR+1,w
  6607  067A  0084               	movwf	4
  6608  067B  0E44               	swapf	??_ISR^0,w
  6609  067C  0083               	movwf	3
  6610  067D  0EFE               	swapf	btemp,f
  6611  067E  0E7E               	swapf	btemp,w
  6612  067F  0009               	retfie
  6613  0680                     __end_of_ISR:
  6614                           
  6615                           	psect	intentry
  6616  0004                     __pintentry:	
  6617                           ;incstack = 0
  6618 ;; hardware stack exceeded
  6619                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6620                           
  6621  0004                     interrupt_function:
  6622  007E                     saved_w	set	btemp
  6623  0004  00FE               	movwf	btemp
  6624  0005  0E03               	swapf	3,w
  6625  0006  1283               	bcf	3,5	;RP0=0, select bank0
  6626  0007  1303               	bcf	3,6	;RP1=0, select bank0
  6627  0008  00C4               	movwf	??_ISR
  6628  0009  0804               	movf	4,w
  6629  000A  00C5               	movwf	??_ISR+1
  6630  000B  080A               	movf	10,w
  6631  000C  00C6               	movwf	??_ISR+2
  6632  000D  087F               	movf	btemp+1,w
  6633  000E  00C7               	movwf	??_ISR+3
  6634  000F  120A  118A  2DA5   	ljmp	_ISR
  6635                           
  6636                           	psect	text39
  6637  0680                     __ptext39:	
  6638 ;; *************** function ___xxtofl *****************
  6639 ;; Defined at:
  6640 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\xxtofl.c"
  6641 ;; Parameters:    Size  Location     Type
  6642 ;;  sign            1    wreg     unsigned char 
  6643 ;;  val             4    0[COMMON] long 
  6644 ;; Auto vars:     Size  Location     Type
  6645 ;;  sign            1    8[COMMON] unsigned char 
  6646 ;;  arg             4   10[COMMON] unsigned long 
  6647 ;;  exp             1    9[COMMON] unsigned char 
  6648 ;; Return value:  Size  Location     Type
  6649 ;;                  4    0[COMMON] unsigned char 
  6650 ;; Registers used:
  6651 ;;		wreg, status,2, status,0, btemp+1
  6652 ;; Tracked objects:
  6653 ;;		On entry : 0/0
  6654 ;;		On exit  : 0/0
  6655 ;;		Unchanged: 0/0
  6656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6657 ;;      Params:         4       0       0       0       0
  6658 ;;      Locals:         6       0       0       0       0
  6659 ;;      Temps:          4       0       0       0       0
  6660 ;;      Totals:        14       0       0       0       0
  6661 ;;Total ram usage:       14 bytes
  6662 ;; Hardware stack levels used:    1
  6663 ;; This function calls:
  6664 ;;		Nothing
  6665 ;; This function is called by:
  6666 ;;		_ISR
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670                           
  6671                           ;psect for function ___xxtofl
  6672  0680                     ___xxtofl:
  6673                           
  6674                           ;incstack = 0
  6675                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  6676                           ;___xxtofl@sign stored from wreg
  6677  0680  00F8               	movwf	___xxtofl@sign
  6678  0681                     i1l3514:
  6679  0681  0878               	movf	___xxtofl@sign,w
  6680  0682  1903               	btfsc	3,2
  6681  0683  2E85               	goto	u340_21
  6682  0684  2E86               	goto	u340_20
  6683  0685                     u340_21:
  6684  0685  2E9A               	goto	i1l3520
  6685  0686                     u340_20:
  6686  0686                     i1l3516:
  6687  0686  1FF3               	btfss	___xxtofl@val+3,7
  6688  0687  2E89               	goto	u341_21
  6689  0688  2E8A               	goto	u341_20
  6690  0689                     u341_21:
  6691  0689  2E9A               	goto	i1l3520
  6692  068A                     u341_20:
  6693  068A                     i1l3518:
  6694  068A  0970               	comf	___xxtofl@val,w
  6695  068B  00FA               	movwf	___xxtofl@arg
  6696  068C  0971               	comf	___xxtofl@val+1,w
  6697  068D  00FB               	movwf	___xxtofl@arg+1
  6698  068E  0972               	comf	___xxtofl@val+2,w
  6699  068F  00FC               	movwf	___xxtofl@arg+2
  6700  0690  0973               	comf	___xxtofl@val+3,w
  6701  0691  00FD               	movwf	___xxtofl@arg+3
  6702  0692  0AFA               	incf	___xxtofl@arg,f
  6703  0693  1903               	skipnz
  6704  0694  0AFB               	incf	___xxtofl@arg+1,f
  6705  0695  1903               	skipnz
  6706  0696  0AFC               	incf	___xxtofl@arg+2,f
  6707  0697  1903               	skipnz
  6708  0698  0AFD               	incf	___xxtofl@arg+3,f
  6709  0699  2EA2               	goto	i1l1187
  6710  069A                     i1l3520:
  6711  069A  0873               	movf	___xxtofl@val+3,w
  6712  069B  00FD               	movwf	___xxtofl@arg+3
  6713  069C  0872               	movf	___xxtofl@val+2,w
  6714  069D  00FC               	movwf	___xxtofl@arg+2
  6715  069E  0871               	movf	___xxtofl@val+1,w
  6716  069F  00FB               	movwf	___xxtofl@arg+1
  6717  06A0  0870               	movf	___xxtofl@val,w
  6718  06A1  00FA               	movwf	___xxtofl@arg
  6719  06A2                     i1l1187:
  6720  06A2  0873               	movf	___xxtofl@val+3,w
  6721  06A3  0472               	iorwf	___xxtofl@val+2,w
  6722  06A4  0471               	iorwf	___xxtofl@val+1,w
  6723  06A5  0470               	iorwf	___xxtofl@val,w
  6724  06A6  1D03               	skipz
  6725  06A7  2EA9               	goto	u342_21
  6726  06A8  2EAA               	goto	u342_20
  6727  06A9                     u342_21:
  6728  06A9  2EB3               	goto	i1l3526
  6729  06AA                     u342_20:
  6730  06AA                     i1l3522:
  6731  06AA  3000               	movlw	0
  6732  06AB  00F3               	movwf	?___xxtofl+3
  6733  06AC  3000               	movlw	0
  6734  06AD  00F2               	movwf	?___xxtofl+2
  6735  06AE  3000               	movlw	0
  6736  06AF  00F1               	movwf	?___xxtofl+1
  6737  06B0  3000               	movlw	0
  6738  06B1  00F0               	movwf	?___xxtofl
  6739  06B2  2F39               	goto	i1l1189
  6740  06B3                     i1l3526:
  6741  06B3  3096               	movlw	150
  6742  06B4  00FF               	movwf	btemp+1
  6743  06B5  087F               	movf	btemp+1,w
  6744  06B6  00F9               	movwf	___xxtofl@exp
  6745  06B7  2EC5               	goto	i1l3532
  6746  06B8                     i1l3528:
  6747  06B8  3001               	movlw	1
  6748  06B9  00FF               	movwf	btemp+1
  6749  06BA  087F               	movf	btemp+1,w
  6750  06BB  07F9               	addwf	___xxtofl@exp,f
  6751  06BC                     i1l3530:
  6752  06BC  3001               	movlw	1
  6753  06BD                     u343_25:
  6754  06BD  1003               	clrc
  6755  06BE  0CFD               	rrf	___xxtofl@arg+3,f
  6756  06BF  0CFC               	rrf	___xxtofl@arg+2,f
  6757  06C0  0CFB               	rrf	___xxtofl@arg+1,f
  6758  06C1  0CFA               	rrf	___xxtofl@arg,f
  6759  06C2  3EFF               	addlw	-1
  6760  06C3  1D03               	skipz
  6761  06C4  2EBD               	goto	u343_25
  6762  06C5                     i1l3532:
  6763  06C5  30FE               	movlw	254
  6764  06C6  057D               	andwf	___xxtofl@arg+3,w
  6765  06C7  1D03               	btfss	3,2
  6766  06C8  2ECA               	goto	u344_21
  6767  06C9  2ECB               	goto	u344_20
  6768  06CA                     u344_21:
  6769  06CA  2EB8               	goto	i1l3528
  6770  06CB                     u344_20:
  6771  06CB  2EE7               	goto	i1l3540
  6772  06CC                     i1l3534:
  6773  06CC  3001               	movlw	1
  6774  06CD  00FF               	movwf	btemp+1
  6775  06CE  087F               	movf	btemp+1,w
  6776  06CF  07F9               	addwf	___xxtofl@exp,f
  6777  06D0                     i1l3536:
  6778  06D0  3001               	movlw	1
  6779  06D1  07FA               	addwf	___xxtofl@arg,f
  6780  06D2  3000               	movlw	0
  6781  06D3  1803               	skipnc
  6782  06D4  3001               	movlw	1
  6783  06D5  07FB               	addwf	___xxtofl@arg+1,f
  6784  06D6  3000               	movlw	0
  6785  06D7  1803               	skipnc
  6786  06D8  3001               	movlw	1
  6787  06D9  07FC               	addwf	___xxtofl@arg+2,f
  6788  06DA  3000               	movlw	0
  6789  06DB  1803               	skipnc
  6790  06DC  3001               	movlw	1
  6791  06DD  07FD               	addwf	___xxtofl@arg+3,f
  6792  06DE                     i1l3538:
  6793  06DE  3001               	movlw	1
  6794  06DF                     u345_25:
  6795  06DF  1003               	clrc
  6796  06E0  0CFD               	rrf	___xxtofl@arg+3,f
  6797  06E1  0CFC               	rrf	___xxtofl@arg+2,f
  6798  06E2  0CFB               	rrf	___xxtofl@arg+1,f
  6799  06E3  0CFA               	rrf	___xxtofl@arg,f
  6800  06E4  3EFF               	addlw	-1
  6801  06E5  1D03               	skipz
  6802  06E6  2EDF               	goto	u345_25
  6803  06E7                     i1l3540:
  6804  06E7  30FF               	movlw	255
  6805  06E8  057D               	andwf	___xxtofl@arg+3,w
  6806  06E9  1D03               	btfss	3,2
  6807  06EA  2EEC               	goto	u346_21
  6808  06EB  2EED               	goto	u346_20
  6809  06EC                     u346_21:
  6810  06EC  2ECC               	goto	i1l3534
  6811  06ED                     u346_20:
  6812  06ED  2EF9               	goto	i1l3544
  6813  06EE                     i1l3542:
  6814  06EE  3001               	movlw	1
  6815  06EF  02F9               	subwf	___xxtofl@exp,f
  6816  06F0  3001               	movlw	1
  6817  06F1  00F4               	movwf	??___xxtofl
  6818  06F2                     u347_25:
  6819  06F2  1003               	clrc
  6820  06F3  0DFA               	rlf	___xxtofl@arg,f
  6821  06F4  0DFB               	rlf	___xxtofl@arg+1,f
  6822  06F5  0DFC               	rlf	___xxtofl@arg+2,f
  6823  06F6  0DFD               	rlf	___xxtofl@arg+3,f
  6824  06F7  0BF4               	decfsz	??___xxtofl,f
  6825  06F8  2EF2               	goto	u347_25
  6826  06F9                     i1l3544:
  6827  06F9  1BFC               	btfsc	___xxtofl@arg+2,7
  6828  06FA  2EFC               	goto	u348_21
  6829  06FB  2EFD               	goto	u348_20
  6830  06FC                     u348_21:
  6831  06FC  2F03               	goto	i1l1200
  6832  06FD                     u348_20:
  6833  06FD                     i1l3546:
  6834  06FD  3002               	movlw	2
  6835  06FE  0279               	subwf	___xxtofl@exp,w
  6836  06FF  1803               	skipnc
  6837  0700  2F02               	goto	u349_21
  6838  0701  2F03               	goto	u349_20
  6839  0702                     u349_21:
  6840  0702  2EEE               	goto	i1l3542
  6841  0703                     u349_20:
  6842  0703                     i1l1200:
  6843  0703  1879               	btfsc	___xxtofl@exp,0
  6844  0704  2F06               	goto	u350_21
  6845  0705  2F07               	goto	u350_20
  6846  0706                     u350_21:
  6847  0706  2F0F               	goto	i1l1201
  6848  0707                     u350_20:
  6849  0707                     i1l3548:
  6850  0707  30FF               	movlw	255
  6851  0708  05FA               	andwf	___xxtofl@arg,f
  6852  0709  30FF               	movlw	255
  6853  070A  05FB               	andwf	___xxtofl@arg+1,f
  6854  070B  307F               	movlw	127
  6855  070C  05FC               	andwf	___xxtofl@arg+2,f
  6856  070D  30FF               	movlw	255
  6857  070E  05FD               	andwf	___xxtofl@arg+3,f
  6858  070F                     i1l1201:
  6859  070F  1003               	clrc
  6860  0710  0CF9               	rrf	___xxtofl@exp,f
  6861  0711                     i1l3550:
  6862  0711  0879               	movf	___xxtofl@exp,w
  6863  0712  00F4               	movwf	??___xxtofl
  6864  0713  01F5               	clrf	??___xxtofl+1
  6865  0714  01F6               	clrf	??___xxtofl+2
  6866  0715  01F7               	clrf	??___xxtofl+3
  6867  0716  3018               	movlw	24
  6868  0717                     u351_25:
  6869  0717  1003               	clrc
  6870  0718  0DF4               	rlf	??___xxtofl,f
  6871  0719  0DF5               	rlf	??___xxtofl+1,f
  6872  071A  0DF6               	rlf	??___xxtofl+2,f
  6873  071B  0DF7               	rlf	??___xxtofl+3,f
  6874  071C                     u351_20:
  6875  071C  3EFF               	addlw	-1
  6876  071D  1D03               	skipz
  6877  071E  2F17               	goto	u351_25
  6878  071F  0874               	movf	??___xxtofl,w
  6879  0720  04FA               	iorwf	___xxtofl@arg,f
  6880  0721  0875               	movf	??___xxtofl+1,w
  6881  0722  04FB               	iorwf	___xxtofl@arg+1,f
  6882  0723  0876               	movf	??___xxtofl+2,w
  6883  0724  04FC               	iorwf	___xxtofl@arg+2,f
  6884  0725  0877               	movf	??___xxtofl+3,w
  6885  0726  04FD               	iorwf	___xxtofl@arg+3,f
  6886  0727                     i1l3552:
  6887  0727  0878               	movf	___xxtofl@sign,w
  6888  0728  1903               	btfsc	3,2
  6889  0729  2F2B               	goto	u352_21
  6890  072A  2F2C               	goto	u352_20
  6891  072B                     u352_21:
  6892  072B  2F31               	goto	i1l3558
  6893  072C                     u352_20:
  6894  072C                     i1l3554:
  6895  072C  1FF3               	btfss	___xxtofl@val+3,7
  6896  072D  2F2F               	goto	u353_21
  6897  072E  2F30               	goto	u353_20
  6898  072F                     u353_21:
  6899  072F  2F31               	goto	i1l3558
  6900  0730                     u353_20:
  6901  0730                     i1l3556:
  6902  0730  17FD               	bsf	___xxtofl@arg+3,7
  6903  0731                     i1l3558:
  6904  0731  087D               	movf	___xxtofl@arg+3,w
  6905  0732  00F3               	movwf	?___xxtofl+3
  6906  0733  087C               	movf	___xxtofl@arg+2,w
  6907  0734  00F2               	movwf	?___xxtofl+2
  6908  0735  087B               	movf	___xxtofl@arg+1,w
  6909  0736  00F1               	movwf	?___xxtofl+1
  6910  0737  087A               	movf	___xxtofl@arg,w
  6911  0738  00F0               	movwf	?___xxtofl
  6912  0739                     i1l1189:
  6913  0739  0008               	return
  6914  073A                     __end_of___xxtofl:
  6915                           
  6916                           	psect	text40
  6917  0F06                     __ptext40:	
  6918 ;; *************** function ___fltol *****************
  6919 ;; Defined at:
  6920 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fltol.c"
  6921 ;; Parameters:    Size  Location     Type
  6922 ;;  f1              4   26[BANK0 ] unsigned char 
  6923 ;; Auto vars:     Size  Location     Type
  6924 ;;  exp1            1   35[BANK0 ] unsigned char 
  6925 ;;  sign1           1   34[BANK0 ] unsigned char 
  6926 ;; Return value:  Size  Location     Type
  6927 ;;                  4   26[BANK0 ] long 
  6928 ;; Registers used:
  6929 ;;		wreg, status,2, status,0, btemp+1
  6930 ;; Tracked objects:
  6931 ;;		On entry : 0/0
  6932 ;;		On exit  : 0/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6935 ;;      Params:         0       4       0       0       0
  6936 ;;      Locals:         0       2       0       0       0
  6937 ;;      Temps:          0       4       0       0       0
  6938 ;;      Totals:         0      10       0       0       0
  6939 ;;Total ram usage:       10 bytes
  6940 ;; Hardware stack levels used:    1
  6941 ;; This function calls:
  6942 ;;		Nothing
  6943 ;; This function is called by:
  6944 ;;		_ISR
  6945 ;; This function uses a non-reentrant model
  6946 ;;
  6947                           
  6948                           
  6949                           ;psect for function ___fltol
  6950  0F06                     ___fltol:
  6951  0F06                     i1l3334:	
  6952                           ;incstack = 0
  6953                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  6954                           
  6955  0F06  1003               	clrc
  6956  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  6957  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  6958  0F09  0D3C               	rlf	___fltol@f1+2,w
  6959  0F0A  0D3D               	rlf	___fltol@f1+3,w
  6960  0F0B  00FF               	movwf	btemp+1
  6961  0F0C  087F               	movf	btemp+1,w
  6962  0F0D  00C3               	movwf	___fltol@exp1
  6963  0F0E  0843               	movf	___fltol@exp1,w
  6964  0F0F  1D03               	btfss	3,2
  6965  0F10  2F12               	goto	u293_21
  6966  0F11  2F13               	goto	u293_20
  6967  0F12                     u293_21:
  6968  0F12  2F1C               	goto	i1l3340
  6969  0F13                     u293_20:
  6970  0F13                     i1l3336:
  6971  0F13  3000               	movlw	0
  6972  0F14  00BD               	movwf	?___fltol+3
  6973  0F15  3000               	movlw	0
  6974  0F16  00BC               	movwf	?___fltol+2
  6975  0F17  3000               	movlw	0
  6976  0F18  00BB               	movwf	?___fltol+1
  6977  0F19  3000               	movlw	0
  6978  0F1A  00BA               	movwf	?___fltol
  6979  0F1B  2F81               	goto	i1l940
  6980  0F1C                     i1l3340:
  6981  0F1C  083A               	movf	___fltol@f1,w
  6982  0F1D  00BE               	movwf	??___fltol
  6983  0F1E  083B               	movf	___fltol@f1+1,w
  6984  0F1F  00BF               	movwf	??___fltol+1
  6985  0F20  083C               	movf	___fltol@f1+2,w
  6986  0F21  00C0               	movwf	??___fltol+2
  6987  0F22  083D               	movf	___fltol@f1+3,w
  6988  0F23  00C1               	movwf	??___fltol+3
  6989  0F24  301F               	movlw	31
  6990  0F25                     u294_25:
  6991  0F25  1003               	clrc
  6992  0F26  0CC1               	rrf	??___fltol+3,f
  6993  0F27  0CC0               	rrf	??___fltol+2,f
  6994  0F28  0CBF               	rrf	??___fltol+1,f
  6995  0F29  0CBE               	rrf	??___fltol,f
  6996  0F2A                     u294_20:
  6997  0F2A  3EFF               	addlw	-1
  6998  0F2B  1D03               	skipz
  6999  0F2C  2F25               	goto	u294_25
  7000  0F2D  083E               	movf	??___fltol,w
  7001  0F2E  00FF               	movwf	btemp+1
  7002  0F2F  087F               	movf	btemp+1,w
  7003  0F30  00C2               	movwf	___fltol@sign1
  7004  0F31                     i1l3342:
  7005  0F31  17BC               	bsf	___fltol@f1+2,7
  7006  0F32                     i1l3344:
  7007  0F32  30FF               	movlw	255
  7008  0F33  05BA               	andwf	___fltol@f1,f
  7009  0F34  30FF               	movlw	255
  7010  0F35  05BB               	andwf	___fltol@f1+1,f
  7011  0F36  30FF               	movlw	255
  7012  0F37  05BC               	andwf	___fltol@f1+2,f
  7013  0F38  3000               	movlw	0
  7014  0F39  05BD               	andwf	___fltol@f1+3,f
  7015  0F3A                     i1l3346:
  7016  0F3A  3096               	movlw	150
  7017  0F3B  02C3               	subwf	___fltol@exp1,f
  7018  0F3C                     i1l3348:
  7019  0F3C  1FC3               	btfss	___fltol@exp1,7
  7020  0F3D  2F3F               	goto	u295_21
  7021  0F3E  2F40               	goto	u295_20
  7022  0F3F                     u295_21:
  7023  0F3F  2F5A               	goto	i1l3360
  7024  0F40                     u295_20:
  7025  0F40                     i1l3350:
  7026  0F40  0843               	movf	___fltol@exp1,w
  7027  0F41  3A80               	xorlw	128
  7028  0F42  3E97               	addlw	151
  7029  0F43  1803               	skipnc
  7030  0F44  2F46               	goto	u296_21
  7031  0F45  2F47               	goto	u296_20
  7032  0F46                     u296_21:
  7033  0F46  2F48               	goto	i1l3356
  7034  0F47                     u296_20:
  7035  0F47  2F13               	goto	i1l3336
  7036  0F48                     i1l3356:
  7037  0F48  3001               	movlw	1
  7038  0F49                     u297_25:
  7039  0F49  1003               	clrc
  7040  0F4A  0CBD               	rrf	___fltol@f1+3,f
  7041  0F4B  0CBC               	rrf	___fltol@f1+2,f
  7042  0F4C  0CBB               	rrf	___fltol@f1+1,f
  7043  0F4D  0CBA               	rrf	___fltol@f1,f
  7044  0F4E  3EFF               	addlw	-1
  7045  0F4F  1D03               	skipz
  7046  0F50  2F49               	goto	u297_25
  7047  0F51                     i1l3358:
  7048  0F51  3001               	movlw	1
  7049  0F52  00FF               	movwf	btemp+1
  7050  0F53  087F               	movf	btemp+1,w
  7051  0F54  07C3               	addwf	___fltol@exp1,f
  7052  0F55  1D03               	btfss	3,2
  7053  0F56  2F58               	goto	u298_21
  7054  0F57  2F59               	goto	u298_20
  7055  0F58                     u298_21:
  7056  0F58  2F48               	goto	i1l3356
  7057  0F59                     u298_20:
  7058  0F59  2F71               	goto	i1l3368
  7059  0F5A                     i1l3360:
  7060  0F5A  3020               	movlw	32
  7061  0F5B  0243               	subwf	___fltol@exp1,w
  7062  0F5C  1C03               	skipc
  7063  0F5D  2F5F               	goto	u299_21
  7064  0F5E  2F60               	goto	u299_20
  7065  0F5F                     u299_21:
  7066  0F5F  2F6C               	goto	i1l947
  7067  0F60                     u299_20:
  7068  0F60  2F13               	goto	i1l3336
  7069  0F61                     i1l3366:
  7070  0F61  3001               	movlw	1
  7071  0F62  00BE               	movwf	??___fltol
  7072  0F63                     u300_25:
  7073  0F63  1003               	clrc
  7074  0F64  0DBA               	rlf	___fltol@f1,f
  7075  0F65  0DBB               	rlf	___fltol@f1+1,f
  7076  0F66  0DBC               	rlf	___fltol@f1+2,f
  7077  0F67  0DBD               	rlf	___fltol@f1+3,f
  7078  0F68  0BBE               	decfsz	??___fltol,f
  7079  0F69  2F63               	goto	u300_25
  7080  0F6A  3001               	movlw	1
  7081  0F6B  02C3               	subwf	___fltol@exp1,f
  7082  0F6C                     i1l947:
  7083  0F6C  0843               	movf	___fltol@exp1,w
  7084  0F6D  1D03               	btfss	3,2
  7085  0F6E  2F70               	goto	u301_21
  7086  0F6F  2F71               	goto	u301_20
  7087  0F70                     u301_21:
  7088  0F70  2F61               	goto	i1l3366
  7089  0F71                     u301_20:
  7090  0F71                     i1l3368:
  7091  0F71  0842               	movf	___fltol@sign1,w
  7092  0F72  1903               	btfsc	3,2
  7093  0F73  2F75               	goto	u302_21
  7094  0F74  2F76               	goto	u302_20
  7095  0F75                     u302_21:
  7096  0F75  2F81               	goto	i1l950
  7097  0F76                     u302_20:
  7098  0F76                     i1l3370:
  7099  0F76  09BA               	comf	___fltol@f1,f
  7100  0F77  09BB               	comf	___fltol@f1+1,f
  7101  0F78  09BC               	comf	___fltol@f1+2,f
  7102  0F79  09BD               	comf	___fltol@f1+3,f
  7103  0F7A  0ABA               	incf	___fltol@f1,f
  7104  0F7B  1903               	skipnz
  7105  0F7C  0ABB               	incf	___fltol@f1+1,f
  7106  0F7D  1903               	skipnz
  7107  0F7E  0ABC               	incf	___fltol@f1+2,f
  7108  0F7F  1903               	skipnz
  7109  0F80  0ABD               	incf	___fltol@f1+3,f
  7110  0F81                     i1l950:
  7111  0F81                     i1l940:
  7112  0F81  0008               	return
  7113  0F82                     __end_of___fltol:
  7114                           
  7115                           	psect	text41
  7116  0037                     __ptext41:	
  7117 ;; *************** function ___flmul *****************
  7118 ;; Defined at:
  7119 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcmul.c"
  7120 ;; Parameters:    Size  Location     Type
  7121 ;;  b               4    0[BANK0 ] long 
  7122 ;;  a               4    4[BANK0 ] long 
  7123 ;; Auto vars:     Size  Location     Type
  7124 ;;  prod            4   20[BANK0 ] struct .
  7125 ;;  grs             4   14[BANK0 ] unsigned long 
  7126 ;;  temp            2   24[BANK0 ] struct .
  7127 ;;  bexp            1   19[BANK0 ] unsigned char 
  7128 ;;  aexp            1   18[BANK0 ] unsigned char 
  7129 ;;  sign            1   13[BANK0 ] unsigned char 
  7130 ;; Return value:  Size  Location     Type
  7131 ;;                  4    0[BANK0 ] unsigned char 
  7132 ;; Registers used:
  7133 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7134 ;; Tracked objects:
  7135 ;;		On entry : 0/0
  7136 ;;		On exit  : 0/0
  7137 ;;		Unchanged: 0/0
  7138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7139 ;;      Params:         0       8       0       0       0
  7140 ;;      Locals:         0      13       0       0       0
  7141 ;;      Temps:          0       5       0       0       0
  7142 ;;      Totals:         0      26       0       0       0
  7143 ;;Total ram usage:       26 bytes
  7144 ;; Hardware stack levels used:    1
  7145 ;; Hardware stack levels required when called:    1
  7146 ;; This function calls:
  7147 ;;		__Umul8_16
  7148 ;; This function is called by:
  7149 ;;		_ISR
  7150 ;; This function uses a non-reentrant model
  7151 ;;
  7152                           
  7153                           
  7154                           ;psect for function ___flmul
  7155  0037                     ___flmul:
  7156  0037                     i1l3372:	
  7157                           ;incstack = 0
  7158 ;; hardware stack exceeded
  7159                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7160                           
  7161  0037  1283               	bcf	3,5	;RP0=0, select bank0
  7162  0038  1303               	bcf	3,6	;RP1=0, select bank0
  7163  0039  0823               	movf	___flmul@b+3,w
  7164  003A  3980               	andlw	128
  7165  003B  00FF               	movwf	btemp+1
  7166  003C  087F               	movf	btemp+1,w
  7167  003D  00AD               	movwf	___flmul@sign
  7168  003E                     i1l3374:
  7169  003E  0823               	movf	___flmul@b+3,w
  7170  003F  00A8               	movwf	??___flmul
  7171  0040  0728               	addwf	??___flmul,w
  7172  0041  00FF               	movwf	btemp+1
  7173  0042  087F               	movf	btemp+1,w
  7174  0043  00B3               	movwf	___flmul@bexp
  7175  0044                     i1l3376:
  7176  0044  1FA2               	btfss	___flmul@b+2,7
  7177  0045  2847               	goto	u303_21
  7178  0046  2848               	goto	u303_20
  7179  0047                     u303_21:
  7180  0047  2849               	goto	i1l3380
  7181  0048                     u303_20:
  7182  0048                     i1l3378:
  7183  0048  1433               	bsf	___flmul@bexp,0
  7184  0049                     i1l3380:
  7185  0049  0833               	movf	___flmul@bexp,w
  7186  004A  1903               	btfsc	3,2
  7187  004B  284D               	goto	u304_21
  7188  004C  284E               	goto	u304_20
  7189  004D                     u304_21:
  7190  004D  285D               	goto	i1l3388
  7191  004E                     u304_20:
  7192  004E                     i1l3382:
  7193  004E  0A33               	incf	___flmul@bexp,w
  7194  004F  1D03               	btfss	3,2
  7195  0050  2852               	goto	u305_21
  7196  0051  2853               	goto	u305_20
  7197  0052                     u305_21:
  7198  0052  285B               	goto	i1l3386
  7199  0053                     u305_20:
  7200  0053                     i1l3384:
  7201  0053  3000               	movlw	0
  7202  0054  00A3               	movwf	___flmul@b+3
  7203  0055  3000               	movlw	0
  7204  0056  00A2               	movwf	___flmul@b+2
  7205  0057  3000               	movlw	0
  7206  0058  00A1               	movwf	___flmul@b+1
  7207  0059  3000               	movlw	0
  7208  005A  00A0               	movwf	___flmul@b
  7209  005B                     i1l3386:
  7210  005B  17A2               	bsf	___flmul@b+2,7
  7211  005C  2865               	goto	i1l3390
  7212  005D                     i1l3388:
  7213  005D  3000               	movlw	0
  7214  005E  00A3               	movwf	___flmul@b+3
  7215  005F  3000               	movlw	0
  7216  0060  00A2               	movwf	___flmul@b+2
  7217  0061  3000               	movlw	0
  7218  0062  00A1               	movwf	___flmul@b+1
  7219  0063  3000               	movlw	0
  7220  0064  00A0               	movwf	___flmul@b
  7221  0065                     i1l3390:
  7222  0065  0827               	movf	___flmul@a+3,w
  7223  0066  3980               	andlw	128
  7224  0067  00FF               	movwf	btemp+1
  7225  0068  087F               	movf	btemp+1,w
  7226  0069  06AD               	xorwf	___flmul@sign,f
  7227  006A                     i1l3392:
  7228  006A  0827               	movf	___flmul@a+3,w
  7229  006B  00A8               	movwf	??___flmul
  7230  006C  0728               	addwf	??___flmul,w
  7231  006D  00FF               	movwf	btemp+1
  7232  006E  087F               	movf	btemp+1,w
  7233  006F  00B2               	movwf	___flmul@aexp
  7234  0070                     i1l3394:
  7235  0070  1FA6               	btfss	___flmul@a+2,7
  7236  0071  2873               	goto	u306_21
  7237  0072  2874               	goto	u306_20
  7238  0073                     u306_21:
  7239  0073  2875               	goto	i1l3398
  7240  0074                     u306_20:
  7241  0074                     i1l3396:
  7242  0074  1432               	bsf	___flmul@aexp,0
  7243  0075                     i1l3398:
  7244  0075  0832               	movf	___flmul@aexp,w
  7245  0076  1903               	btfsc	3,2
  7246  0077  2879               	goto	u307_21
  7247  0078  287A               	goto	u307_20
  7248  0079                     u307_21:
  7249  0079  2889               	goto	i1l3406
  7250  007A                     u307_20:
  7251  007A                     i1l3400:
  7252  007A  0A32               	incf	___flmul@aexp,w
  7253  007B  1D03               	btfss	3,2
  7254  007C  287E               	goto	u308_21
  7255  007D  287F               	goto	u308_20
  7256  007E                     u308_21:
  7257  007E  2887               	goto	i1l3404
  7258  007F                     u308_20:
  7259  007F                     i1l3402:
  7260  007F  3000               	movlw	0
  7261  0080  00A7               	movwf	___flmul@a+3
  7262  0081  3000               	movlw	0
  7263  0082  00A6               	movwf	___flmul@a+2
  7264  0083  3000               	movlw	0
  7265  0084  00A5               	movwf	___flmul@a+1
  7266  0085  3000               	movlw	0
  7267  0086  00A4               	movwf	___flmul@a
  7268  0087                     i1l3404:
  7269  0087  17A6               	bsf	___flmul@a+2,7
  7270  0088  2891               	goto	i1l3408
  7271  0089                     i1l3406:
  7272  0089  3000               	movlw	0
  7273  008A  00A7               	movwf	___flmul@a+3
  7274  008B  3000               	movlw	0
  7275  008C  00A6               	movwf	___flmul@a+2
  7276  008D  3000               	movlw	0
  7277  008E  00A5               	movwf	___flmul@a+1
  7278  008F  3000               	movlw	0
  7279  0090  00A4               	movwf	___flmul@a
  7280  0091                     i1l3408:
  7281  0091  0832               	movf	___flmul@aexp,w
  7282  0092  1903               	btfsc	3,2
  7283  0093  2895               	goto	u309_21
  7284  0094  2896               	goto	u309_20
  7285  0095                     u309_21:
  7286  0095  289B               	goto	i1l3412
  7287  0096                     u309_20:
  7288  0096                     i1l3410:
  7289  0096  0833               	movf	___flmul@bexp,w
  7290  0097  1D03               	btfss	3,2
  7291  0098  289A               	goto	u310_21
  7292  0099  289B               	goto	u310_20
  7293  009A                     u310_21:
  7294  009A  28A4               	goto	i1l3416
  7295  009B                     u310_20:
  7296  009B                     i1l3412:
  7297  009B  3000               	movlw	0
  7298  009C  00A3               	movwf	?___flmul+3
  7299  009D  3000               	movlw	0
  7300  009E  00A2               	movwf	?___flmul+2
  7301  009F  3000               	movlw	0
  7302  00A0  00A1               	movwf	?___flmul+1
  7303  00A1  3000               	movlw	0
  7304  00A2  00A0               	movwf	?___flmul
  7305  00A3  2B97               	goto	i1l1143
  7306  00A4                     i1l3416:
  7307  00A4  0820               	movf	___flmul@b,w
  7308  00A5  00FF               	movwf	btemp+1
  7309  00A6  087F               	movf	btemp+1,w
  7310  00A7  00F0               	movwf	__Umul8_16@multiplicand
  7311  00A8  0826               	movf	___flmul@a+2,w
  7312  00A9  120A  158A  2187  120A  118A  	fcall	__Umul8_16
  7313  00AE  0871               	movf	?__Umul8_16+1,w
  7314  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  7315  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  7316  00B1  00B9               	movwf	___flmul@temp+1
  7317  00B2  0870               	movf	?__Umul8_16,w
  7318  00B3  00B8               	movwf	___flmul@temp
  7319  00B4                     i1l3418:
  7320  00B4  0838               	movf	___flmul@temp,w
  7321  00B5  00A8               	movwf	??___flmul
  7322  00B6  01A9               	clrf	??___flmul+1
  7323  00B7  01AA               	clrf	??___flmul+2
  7324  00B8  01AB               	clrf	??___flmul+3
  7325  00B9  082B               	movf	??___flmul+3,w
  7326  00BA  00B1               	movwf	___flmul@grs+3
  7327  00BB  082A               	movf	??___flmul+2,w
  7328  00BC  00B0               	movwf	___flmul@grs+2
  7329  00BD  0829               	movf	??___flmul+1,w
  7330  00BE  00AF               	movwf	___flmul@grs+1
  7331  00BF  0828               	movf	??___flmul,w
  7332  00C0  00AE               	movwf	___flmul@grs
  7333  00C1                     i1l3420:
  7334  00C1  0839               	movf	___flmul@temp+1,w
  7335  00C2  00A8               	movwf	??___flmul
  7336  00C3  01A9               	clrf	??___flmul+1
  7337  00C4  01AA               	clrf	??___flmul+2
  7338  00C5  01AB               	clrf	??___flmul+3
  7339  00C6  082B               	movf	??___flmul+3,w
  7340  00C7  00B7               	movwf	___flmul@prod+3
  7341  00C8  082A               	movf	??___flmul+2,w
  7342  00C9  00B6               	movwf	___flmul@prod+2
  7343  00CA  0829               	movf	??___flmul+1,w
  7344  00CB  00B5               	movwf	___flmul@prod+1
  7345  00CC  0828               	movf	??___flmul,w
  7346  00CD  00B4               	movwf	___flmul@prod
  7347  00CE  0821               	movf	___flmul@b+1,w
  7348  00CF  00FF               	movwf	btemp+1
  7349  00D0  087F               	movf	btemp+1,w
  7350  00D1  00F0               	movwf	__Umul8_16@multiplicand
  7351  00D2  0825               	movf	___flmul@a+1,w
  7352  00D3  120A  158A  2187  120A  118A  	fcall	__Umul8_16
  7353  00D8  0871               	movf	?__Umul8_16+1,w
  7354  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  7355  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  7356  00DB  00B9               	movwf	___flmul@temp+1
  7357  00DC  0870               	movf	?__Umul8_16,w
  7358  00DD  00B8               	movwf	___flmul@temp
  7359  00DE                     i1l3422:
  7360  00DE  0838               	movf	___flmul@temp,w
  7361  00DF  00A8               	movwf	??___flmul
  7362  00E0  01A9               	clrf	??___flmul+1
  7363  00E1  01AA               	clrf	??___flmul+2
  7364  00E2  01AB               	clrf	??___flmul+3
  7365  00E3  0828               	movf	??___flmul,w
  7366  00E4  07AE               	addwf	___flmul@grs,f
  7367  00E5  0829               	movf	??___flmul+1,w
  7368  00E6  1103               	clrz
  7369  00E7  1803               	skipnc
  7370  00E8  3E01               	addlw	1
  7371  00E9  1903               	skipnz
  7372  00EA  28EC               	goto	u311_21
  7373  00EB  07AF               	addwf	___flmul@grs+1,f
  7374  00EC                     u311_21:
  7375  00EC  082A               	movf	??___flmul+2,w
  7376  00ED  1103               	clrz
  7377  00EE  1803               	skipnc
  7378  00EF  3E01               	addlw	1
  7379  00F0  1903               	skipnz
  7380  00F1  28F3               	goto	u311_22
  7381  00F2  07B0               	addwf	___flmul@grs+2,f
  7382  00F3                     u311_22:
  7383  00F3  082B               	movf	??___flmul+3,w
  7384  00F4  1103               	clrz
  7385  00F5  1803               	skipnc
  7386  00F6  3E01               	addlw	1
  7387  00F7  1903               	skipnz
  7388  00F8  28FA               	goto	u311_23
  7389  00F9  07B1               	addwf	___flmul@grs+3,f
  7390  00FA                     u311_23:
  7391  00FA                     i1l3424:
  7392  00FA  0839               	movf	___flmul@temp+1,w
  7393  00FB  00A8               	movwf	??___flmul
  7394  00FC  01A9               	clrf	??___flmul+1
  7395  00FD  01AA               	clrf	??___flmul+2
  7396  00FE  01AB               	clrf	??___flmul+3
  7397  00FF  0828               	movf	??___flmul,w
  7398  0100  07B4               	addwf	___flmul@prod,f
  7399  0101  0829               	movf	??___flmul+1,w
  7400  0102  1103               	clrz
  7401  0103  1803               	skipnc
  7402  0104  3E01               	addlw	1
  7403  0105  1903               	skipnz
  7404  0106  2908               	goto	u312_21
  7405  0107  07B5               	addwf	___flmul@prod+1,f
  7406  0108                     u312_21:
  7407  0108  082A               	movf	??___flmul+2,w
  7408  0109  1103               	clrz
  7409  010A  1803               	skipnc
  7410  010B  3E01               	addlw	1
  7411  010C  1903               	skipnz
  7412  010D  290F               	goto	u312_22
  7413  010E  07B6               	addwf	___flmul@prod+2,f
  7414  010F                     u312_22:
  7415  010F  082B               	movf	??___flmul+3,w
  7416  0110  1103               	clrz
  7417  0111  1803               	skipnc
  7418  0112  3E01               	addlw	1
  7419  0113  1903               	skipnz
  7420  0114  2916               	goto	u312_23
  7421  0115  07B7               	addwf	___flmul@prod+3,f
  7422  0116                     u312_23:
  7423  0116  0822               	movf	___flmul@b+2,w
  7424  0117  00FF               	movwf	btemp+1
  7425  0118  087F               	movf	btemp+1,w
  7426  0119  00F0               	movwf	__Umul8_16@multiplicand
  7427  011A  0824               	movf	___flmul@a,w
  7428  011B  120A  158A  2187  120A  118A  	fcall	__Umul8_16
  7429  0120  0871               	movf	?__Umul8_16+1,w
  7430  0121  1283               	bcf	3,5	;RP0=0, select bank0
  7431  0122  1303               	bcf	3,6	;RP1=0, select bank0
  7432  0123  00B9               	movwf	___flmul@temp+1
  7433  0124  0870               	movf	?__Umul8_16,w
  7434  0125  00B8               	movwf	___flmul@temp
  7435  0126                     i1l3426:
  7436  0126  0838               	movf	___flmul@temp,w
  7437  0127  00A8               	movwf	??___flmul
  7438  0128  01A9               	clrf	??___flmul+1
  7439  0129  01AA               	clrf	??___flmul+2
  7440  012A  01AB               	clrf	??___flmul+3
  7441  012B  0828               	movf	??___flmul,w
  7442  012C  07AE               	addwf	___flmul@grs,f
  7443  012D  0829               	movf	??___flmul+1,w
  7444  012E  1103               	clrz
  7445  012F  1803               	skipnc
  7446  0130  3E01               	addlw	1
  7447  0131  1903               	skipnz
  7448  0132  2934               	goto	u313_21
  7449  0133  07AF               	addwf	___flmul@grs+1,f
  7450  0134                     u313_21:
  7451  0134  082A               	movf	??___flmul+2,w
  7452  0135  1103               	clrz
  7453  0136  1803               	skipnc
  7454  0137  3E01               	addlw	1
  7455  0138  1903               	skipnz
  7456  0139  293B               	goto	u313_22
  7457  013A  07B0               	addwf	___flmul@grs+2,f
  7458  013B                     u313_22:
  7459  013B  082B               	movf	??___flmul+3,w
  7460  013C  1103               	clrz
  7461  013D  1803               	skipnc
  7462  013E  3E01               	addlw	1
  7463  013F  1903               	skipnz
  7464  0140  2942               	goto	u313_23
  7465  0141  07B1               	addwf	___flmul@grs+3,f
  7466  0142                     u313_23:
  7467  0142                     i1l3428:
  7468  0142  0839               	movf	___flmul@temp+1,w
  7469  0143  00A8               	movwf	??___flmul
  7470  0144  01A9               	clrf	??___flmul+1
  7471  0145  01AA               	clrf	??___flmul+2
  7472  0146  01AB               	clrf	??___flmul+3
  7473  0147  0828               	movf	??___flmul,w
  7474  0148  07B4               	addwf	___flmul@prod,f
  7475  0149  0829               	movf	??___flmul+1,w
  7476  014A  1103               	clrz
  7477  014B  1803               	skipnc
  7478  014C  3E01               	addlw	1
  7479  014D  1903               	skipnz
  7480  014E  2950               	goto	u314_21
  7481  014F  07B5               	addwf	___flmul@prod+1,f
  7482  0150                     u314_21:
  7483  0150  082A               	movf	??___flmul+2,w
  7484  0151  1103               	clrz
  7485  0152  1803               	skipnc
  7486  0153  3E01               	addlw	1
  7487  0154  1903               	skipnz
  7488  0155  2957               	goto	u314_22
  7489  0156  07B6               	addwf	___flmul@prod+2,f
  7490  0157                     u314_22:
  7491  0157  082B               	movf	??___flmul+3,w
  7492  0158  1103               	clrz
  7493  0159  1803               	skipnc
  7494  015A  3E01               	addlw	1
  7495  015B  1903               	skipnz
  7496  015C  295E               	goto	u314_23
  7497  015D  07B7               	addwf	___flmul@prod+3,f
  7498  015E                     u314_23:
  7499  015E                     i1l3430:
  7500  015E  3008               	movlw	8
  7501  015F  00A8               	movwf	??___flmul
  7502  0160                     u315_25:
  7503  0160  1003               	clrc
  7504  0161  0DAE               	rlf	___flmul@grs,f
  7505  0162  0DAF               	rlf	___flmul@grs+1,f
  7506  0163  0DB0               	rlf	___flmul@grs+2,f
  7507  0164  0DB1               	rlf	___flmul@grs+3,f
  7508  0165  0BA8               	decfsz	??___flmul,f
  7509  0166  2960               	goto	u315_25
  7510  0167                     i1l3432:
  7511  0167  0821               	movf	___flmul@b+1,w
  7512  0168  00FF               	movwf	btemp+1
  7513  0169  087F               	movf	btemp+1,w
  7514  016A  00F0               	movwf	__Umul8_16@multiplicand
  7515  016B  0824               	movf	___flmul@a,w
  7516  016C  120A  158A  2187  120A  118A  	fcall	__Umul8_16
  7517  0171  0871               	movf	?__Umul8_16+1,w
  7518  0172  1283               	bcf	3,5	;RP0=0, select bank0
  7519  0173  1303               	bcf	3,6	;RP1=0, select bank0
  7520  0174  00B9               	movwf	___flmul@temp+1
  7521  0175  0870               	movf	?__Umul8_16,w
  7522  0176  00B8               	movwf	___flmul@temp
  7523  0177                     i1l3434:
  7524  0177  0838               	movf	___flmul@temp,w
  7525  0178  00A8               	movwf	??___flmul
  7526  0179  0839               	movf	___flmul@temp+1,w
  7527  017A  00A9               	movwf	??___flmul+1
  7528  017B  01AA               	clrf	??___flmul+2
  7529  017C  01AB               	clrf	??___flmul+3
  7530  017D  0828               	movf	??___flmul,w
  7531  017E  07AE               	addwf	___flmul@grs,f
  7532  017F  0829               	movf	??___flmul+1,w
  7533  0180  1103               	clrz
  7534  0181  1803               	skipnc
  7535  0182  3E01               	addlw	1
  7536  0183  1903               	skipnz
  7537  0184  2986               	goto	u316_21
  7538  0185  07AF               	addwf	___flmul@grs+1,f
  7539  0186                     u316_21:
  7540  0186  082A               	movf	??___flmul+2,w
  7541  0187  1103               	clrz
  7542  0188  1803               	skipnc
  7543  0189  3E01               	addlw	1
  7544  018A  1903               	skipnz
  7545  018B  298D               	goto	u316_22
  7546  018C  07B0               	addwf	___flmul@grs+2,f
  7547  018D                     u316_22:
  7548  018D  082B               	movf	??___flmul+3,w
  7549  018E  1103               	clrz
  7550  018F  1803               	skipnc
  7551  0190  3E01               	addlw	1
  7552  0191  1903               	skipnz
  7553  0192  2994               	goto	u316_23
  7554  0193  07B1               	addwf	___flmul@grs+3,f
  7555  0194                     u316_23:
  7556  0194                     i1l3436:
  7557  0194  0820               	movf	___flmul@b,w
  7558  0195  00FF               	movwf	btemp+1
  7559  0196  087F               	movf	btemp+1,w
  7560  0197  00F0               	movwf	__Umul8_16@multiplicand
  7561  0198  0825               	movf	___flmul@a+1,w
  7562  0199  120A  158A  2187  120A  118A  	fcall	__Umul8_16
  7563  019E  0871               	movf	?__Umul8_16+1,w
  7564  019F  1283               	bcf	3,5	;RP0=0, select bank0
  7565  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  7566  01A1  00B9               	movwf	___flmul@temp+1
  7567  01A2  0870               	movf	?__Umul8_16,w
  7568  01A3  00B8               	movwf	___flmul@temp
  7569  01A4                     i1l3438:
  7570  01A4  0838               	movf	___flmul@temp,w
  7571  01A5  00A8               	movwf	??___flmul
  7572  01A6  0839               	movf	___flmul@temp+1,w
  7573  01A7  00A9               	movwf	??___flmul+1
  7574  01A8  01AA               	clrf	??___flmul+2
  7575  01A9  01AB               	clrf	??___flmul+3
  7576  01AA  0828               	movf	??___flmul,w
  7577  01AB  07AE               	addwf	___flmul@grs,f
  7578  01AC  0829               	movf	??___flmul+1,w
  7579  01AD  1103               	clrz
  7580  01AE  1803               	skipnc
  7581  01AF  3E01               	addlw	1
  7582  01B0  1903               	skipnz
  7583  01B1  29B3               	goto	u317_21
  7584  01B2  07AF               	addwf	___flmul@grs+1,f
  7585  01B3                     u317_21:
  7586  01B3  082A               	movf	??___flmul+2,w
  7587  01B4  1103               	clrz
  7588  01B5  1803               	skipnc
  7589  01B6  3E01               	addlw	1
  7590  01B7  1903               	skipnz
  7591  01B8  29BA               	goto	u317_22
  7592  01B9  07B0               	addwf	___flmul@grs+2,f
  7593  01BA                     u317_22:
  7594  01BA  082B               	movf	??___flmul+3,w
  7595  01BB  1103               	clrz
  7596  01BC  1803               	skipnc
  7597  01BD  3E01               	addlw	1
  7598  01BE  1903               	skipnz
  7599  01BF  29C1               	goto	u317_23
  7600  01C0  07B1               	addwf	___flmul@grs+3,f
  7601  01C1                     u317_23:
  7602  01C1                     i1l3440:
  7603  01C1  3008               	movlw	8
  7604  01C2  00A8               	movwf	??___flmul
  7605  01C3                     u318_25:
  7606  01C3  1003               	clrc
  7607  01C4  0DAE               	rlf	___flmul@grs,f
  7608  01C5  0DAF               	rlf	___flmul@grs+1,f
  7609  01C6  0DB0               	rlf	___flmul@grs+2,f
  7610  01C7  0DB1               	rlf	___flmul@grs+3,f
  7611  01C8  0BA8               	decfsz	??___flmul,f
  7612  01C9  29C3               	goto	u318_25
  7613  01CA  0820               	movf	___flmul@b,w
  7614  01CB  00FF               	movwf	btemp+1
  7615  01CC  087F               	movf	btemp+1,w
  7616  01CD  00F0               	movwf	__Umul8_16@multiplicand
  7617  01CE  0824               	movf	___flmul@a,w
  7618  01CF  120A  158A  2187  120A  118A  	fcall	__Umul8_16
  7619  01D4  0871               	movf	?__Umul8_16+1,w
  7620  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  7621  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  7622  01D7  00B9               	movwf	___flmul@temp+1
  7623  01D8  0870               	movf	?__Umul8_16,w
  7624  01D9  00B8               	movwf	___flmul@temp
  7625  01DA                     i1l3442:
  7626  01DA  0838               	movf	___flmul@temp,w
  7627  01DB  00A8               	movwf	??___flmul
  7628  01DC  0839               	movf	___flmul@temp+1,w
  7629  01DD  00A9               	movwf	??___flmul+1
  7630  01DE  01AA               	clrf	??___flmul+2
  7631  01DF  01AB               	clrf	??___flmul+3
  7632  01E0  0828               	movf	??___flmul,w
  7633  01E1  07AE               	addwf	___flmul@grs,f
  7634  01E2  0829               	movf	??___flmul+1,w
  7635  01E3  1103               	clrz
  7636  01E4  1803               	skipnc
  7637  01E5  3E01               	addlw	1
  7638  01E6  1903               	skipnz
  7639  01E7  29E9               	goto	u319_21
  7640  01E8  07AF               	addwf	___flmul@grs+1,f
  7641  01E9                     u319_21:
  7642  01E9  082A               	movf	??___flmul+2,w
  7643  01EA  1103               	clrz
  7644  01EB  1803               	skipnc
  7645  01EC  3E01               	addlw	1
  7646  01ED  1903               	skipnz
  7647  01EE  29F0               	goto	u319_22
  7648  01EF  07B0               	addwf	___flmul@grs+2,f
  7649  01F0                     u319_22:
  7650  01F0  082B               	movf	??___flmul+3,w
  7651  01F1  1103               	clrz
  7652  01F2  1803               	skipnc
  7653  01F3  3E01               	addlw	1
  7654  01F4  1903               	skipnz
  7655  01F5  29F7               	goto	u319_23
  7656  01F6  07B1               	addwf	___flmul@grs+3,f
  7657  01F7                     u319_23:
  7658  01F7                     i1l3444:
  7659  01F7  0821               	movf	___flmul@b+1,w
  7660  01F8  00FF               	movwf	btemp+1
  7661  01F9  087F               	movf	btemp+1,w
  7662  01FA  00F0               	movwf	__Umul8_16@multiplicand
  7663  01FB  0826               	movf	___flmul@a+2,w
  7664  01FC  120A  158A  2187  120A  118A  	fcall	__Umul8_16
  7665  0201  0871               	movf	?__Umul8_16+1,w
  7666  0202  1283               	bcf	3,5	;RP0=0, select bank0
  7667  0203  1303               	bcf	3,6	;RP1=0, select bank0
  7668  0204  00B9               	movwf	___flmul@temp+1
  7669  0205  0870               	movf	?__Umul8_16,w
  7670  0206  00B8               	movwf	___flmul@temp
  7671  0207  0838               	movf	___flmul@temp,w
  7672  0208  00A8               	movwf	??___flmul
  7673  0209  0839               	movf	___flmul@temp+1,w
  7674  020A  00A9               	movwf	??___flmul+1
  7675  020B  01AA               	clrf	??___flmul+2
  7676  020C  01AB               	clrf	??___flmul+3
  7677  020D  0828               	movf	??___flmul,w
  7678  020E  07B4               	addwf	___flmul@prod,f
  7679  020F  0829               	movf	??___flmul+1,w
  7680  0210  1103               	clrz
  7681  0211  1803               	skipnc
  7682  0212  3E01               	addlw	1
  7683  0213  1903               	skipnz
  7684  0214  2A16               	goto	u320_21
  7685  0215  07B5               	addwf	___flmul@prod+1,f
  7686  0216                     u320_21:
  7687  0216  082A               	movf	??___flmul+2,w
  7688  0217  1103               	clrz
  7689  0218  1803               	skipnc
  7690  0219  3E01               	addlw	1
  7691  021A  1903               	skipnz
  7692  021B  2A1D               	goto	u320_22
  7693  021C  07B6               	addwf	___flmul@prod+2,f
  7694  021D                     u320_22:
  7695  021D  082B               	movf	??___flmul+3,w
  7696  021E  1103               	clrz
  7697  021F  1803               	skipnc
  7698  0220  3E01               	addlw	1
  7699  0221  1903               	skipnz
  7700  0222  2A24               	goto	u320_23
  7701  0223  07B7               	addwf	___flmul@prod+3,f
  7702  0224                     u320_23:
  7703  0224                     i1l3446:
  7704  0224  0822               	movf	___flmul@b+2,w
  7705  0225  00FF               	movwf	btemp+1
  7706  0226  087F               	movf	btemp+1,w
  7707  0227  00F0               	movwf	__Umul8_16@multiplicand
  7708  0228  0825               	movf	___flmul@a+1,w
  7709  0229  120A  158A  2187  120A  118A  	fcall	__Umul8_16
  7710  022E  0871               	movf	?__Umul8_16+1,w
  7711  022F  1283               	bcf	3,5	;RP0=0, select bank0
  7712  0230  1303               	bcf	3,6	;RP1=0, select bank0
  7713  0231  00B9               	movwf	___flmul@temp+1
  7714  0232  0870               	movf	?__Umul8_16,w
  7715  0233  00B8               	movwf	___flmul@temp
  7716  0234                     i1l3448:
  7717  0234  0838               	movf	___flmul@temp,w
  7718  0235  00A8               	movwf	??___flmul
  7719  0236  0839               	movf	___flmul@temp+1,w
  7720  0237  00A9               	movwf	??___flmul+1
  7721  0238  01AA               	clrf	??___flmul+2
  7722  0239  01AB               	clrf	??___flmul+3
  7723  023A  0828               	movf	??___flmul,w
  7724  023B  07B4               	addwf	___flmul@prod,f
  7725  023C  0829               	movf	??___flmul+1,w
  7726  023D  1103               	clrz
  7727  023E  1803               	skipnc
  7728  023F  3E01               	addlw	1
  7729  0240  1903               	skipnz
  7730  0241  2A43               	goto	u321_21
  7731  0242  07B5               	addwf	___flmul@prod+1,f
  7732  0243                     u321_21:
  7733  0243  082A               	movf	??___flmul+2,w
  7734  0244  1103               	clrz
  7735  0245  1803               	skipnc
  7736  0246  3E01               	addlw	1
  7737  0247  1903               	skipnz
  7738  0248  2A4A               	goto	u321_22
  7739  0249  07B6               	addwf	___flmul@prod+2,f
  7740  024A                     u321_22:
  7741  024A  082B               	movf	??___flmul+3,w
  7742  024B  1103               	clrz
  7743  024C  1803               	skipnc
  7744  024D  3E01               	addlw	1
  7745  024E  1903               	skipnz
  7746  024F  2A51               	goto	u321_23
  7747  0250  07B7               	addwf	___flmul@prod+3,f
  7748  0251                     u321_23:
  7749  0251  0822               	movf	___flmul@b+2,w
  7750  0252  00FF               	movwf	btemp+1
  7751  0253  087F               	movf	btemp+1,w
  7752  0254  00F0               	movwf	__Umul8_16@multiplicand
  7753  0255  0826               	movf	___flmul@a+2,w
  7754  0256  120A  158A  2187  120A  118A  	fcall	__Umul8_16
  7755  025B  0871               	movf	?__Umul8_16+1,w
  7756  025C  1283               	bcf	3,5	;RP0=0, select bank0
  7757  025D  1303               	bcf	3,6	;RP1=0, select bank0
  7758  025E  00B9               	movwf	___flmul@temp+1
  7759  025F  0870               	movf	?__Umul8_16,w
  7760  0260  00B8               	movwf	___flmul@temp
  7761  0261                     i1l3450:
  7762  0261  0838               	movf	___flmul@temp,w
  7763  0262  00A8               	movwf	??___flmul
  7764  0263  0839               	movf	___flmul@temp+1,w
  7765  0264  00A9               	movwf	??___flmul+1
  7766  0265  01AA               	clrf	??___flmul+2
  7767  0266  01AB               	clrf	??___flmul+3
  7768  0267  3008               	movlw	8
  7769  0268                     u322_25:
  7770  0268  1003               	clrc
  7771  0269  0DA8               	rlf	??___flmul,f
  7772  026A  0DA9               	rlf	??___flmul+1,f
  7773  026B  0DAA               	rlf	??___flmul+2,f
  7774  026C  0DAB               	rlf	??___flmul+3,f
  7775  026D                     u322_20:
  7776  026D  3EFF               	addlw	-1
  7777  026E  1D03               	skipz
  7778  026F  2A68               	goto	u322_25
  7779  0270  0828               	movf	??___flmul,w
  7780  0271  07B4               	addwf	___flmul@prod,f
  7781  0272  0829               	movf	??___flmul+1,w
  7782  0273  1103               	clrz
  7783  0274  1803               	skipnc
  7784  0275  3E01               	addlw	1
  7785  0276  1903               	skipnz
  7786  0277  2A79               	goto	u323_21
  7787  0278  07B5               	addwf	___flmul@prod+1,f
  7788  0279                     u323_21:
  7789  0279  082A               	movf	??___flmul+2,w
  7790  027A  1103               	clrz
  7791  027B  1803               	skipnc
  7792  027C  3E01               	addlw	1
  7793  027D  1903               	skipnz
  7794  027E  2A80               	goto	u323_22
  7795  027F  07B6               	addwf	___flmul@prod+2,f
  7796  0280                     u323_22:
  7797  0280  082B               	movf	??___flmul+3,w
  7798  0281  1103               	clrz
  7799  0282  1803               	skipnc
  7800  0283  3E01               	addlw	1
  7801  0284  1903               	skipnz
  7802  0285  2A87               	goto	u323_23
  7803  0286  07B7               	addwf	___flmul@prod+3,f
  7804  0287                     u323_23:
  7805  0287                     i1l3452:
  7806  0287  082E               	movf	___flmul@grs,w
  7807  0288  00A8               	movwf	??___flmul
  7808  0289  082F               	movf	___flmul@grs+1,w
  7809  028A  00A9               	movwf	??___flmul+1
  7810  028B  0830               	movf	___flmul@grs+2,w
  7811  028C  00AA               	movwf	??___flmul+2
  7812  028D  0831               	movf	___flmul@grs+3,w
  7813  028E  00AB               	movwf	??___flmul+3
  7814  028F  3018               	movlw	24
  7815  0290                     u324_25:
  7816  0290  1003               	clrc
  7817  0291  0CAB               	rrf	??___flmul+3,f
  7818  0292  0CAA               	rrf	??___flmul+2,f
  7819  0293  0CA9               	rrf	??___flmul+1,f
  7820  0294  0CA8               	rrf	??___flmul,f
  7821  0295                     u324_20:
  7822  0295  3EFF               	addlw	-1
  7823  0296  1D03               	skipz
  7824  0297  2A90               	goto	u324_25
  7825  0298  0828               	movf	??___flmul,w
  7826  0299  07B4               	addwf	___flmul@prod,f
  7827  029A  0829               	movf	??___flmul+1,w
  7828  029B  1103               	clrz
  7829  029C  1803               	skipnc
  7830  029D  3E01               	addlw	1
  7831  029E  1903               	skipnz
  7832  029F  2AA1               	goto	u325_21
  7833  02A0  07B5               	addwf	___flmul@prod+1,f
  7834  02A1                     u325_21:
  7835  02A1  082A               	movf	??___flmul+2,w
  7836  02A2  1103               	clrz
  7837  02A3  1803               	skipnc
  7838  02A4  3E01               	addlw	1
  7839  02A5  1903               	skipnz
  7840  02A6  2AA8               	goto	u325_22
  7841  02A7  07B6               	addwf	___flmul@prod+2,f
  7842  02A8                     u325_22:
  7843  02A8  082B               	movf	??___flmul+3,w
  7844  02A9  1103               	clrz
  7845  02AA  1803               	skipnc
  7846  02AB  3E01               	addlw	1
  7847  02AC  1903               	skipnz
  7848  02AD  2AAF               	goto	u325_23
  7849  02AE  07B7               	addwf	___flmul@prod+3,f
  7850  02AF                     u325_23:
  7851  02AF                     i1l3454:
  7852  02AF  3008               	movlw	8
  7853  02B0  00A8               	movwf	??___flmul
  7854  02B1                     u326_25:
  7855  02B1  1003               	clrc
  7856  02B2  0DAE               	rlf	___flmul@grs,f
  7857  02B3  0DAF               	rlf	___flmul@grs+1,f
  7858  02B4  0DB0               	rlf	___flmul@grs+2,f
  7859  02B5  0DB1               	rlf	___flmul@grs+3,f
  7860  02B6  0BA8               	decfsz	??___flmul,f
  7861  02B7  2AB1               	goto	u326_25
  7862  02B8                     i1l3456:
  7863  02B8  0833               	movf	___flmul@bexp,w
  7864  02B9  0732               	addwf	___flmul@aexp,w
  7865  02BA  00A8               	movwf	??___flmul
  7866  02BB  01A9               	clrf	??___flmul+1
  7867  02BC  0DA9               	rlf	??___flmul+1,f
  7868  02BD  0828               	movf	??___flmul,w
  7869  02BE  3E82               	addlw	130
  7870  02BF  00B8               	movwf	___flmul@temp
  7871  02C0  0829               	movf	??___flmul+1,w
  7872  02C1  1803               	skipnc
  7873  02C2  3E01               	addlw	1
  7874  02C3  3EFF               	addlw	255
  7875  02C4  00B9               	movwf	___flmul@temp+1
  7876  02C5  2AE3               	goto	i1l3468
  7877  02C6                     i1l3458:
  7878  02C6  3001               	movlw	1
  7879  02C7  00A8               	movwf	??___flmul
  7880  02C8                     u327_25:
  7881  02C8  1003               	clrc
  7882  02C9  0DB4               	rlf	___flmul@prod,f
  7883  02CA  0DB5               	rlf	___flmul@prod+1,f
  7884  02CB  0DB6               	rlf	___flmul@prod+2,f
  7885  02CC  0DB7               	rlf	___flmul@prod+3,f
  7886  02CD  0BA8               	decfsz	??___flmul,f
  7887  02CE  2AC8               	goto	u327_25
  7888  02CF                     i1l3460:
  7889  02CF  1FB1               	btfss	___flmul@grs+3,7
  7890  02D0  2AD2               	goto	u328_21
  7891  02D1  2AD3               	goto	u328_20
  7892  02D2                     u328_21:
  7893  02D2  2AD4               	goto	i1l3464
  7894  02D3                     u328_20:
  7895  02D3                     i1l3462:
  7896  02D3  1434               	bsf	___flmul@prod,0
  7897  02D4                     i1l3464:
  7898  02D4  3001               	movlw	1
  7899  02D5  00A8               	movwf	??___flmul
  7900  02D6                     u329_25:
  7901  02D6  1003               	clrc
  7902  02D7  0DAE               	rlf	___flmul@grs,f
  7903  02D8  0DAF               	rlf	___flmul@grs+1,f
  7904  02D9  0DB0               	rlf	___flmul@grs+2,f
  7905  02DA  0DB1               	rlf	___flmul@grs+3,f
  7906  02DB  0BA8               	decfsz	??___flmul,f
  7907  02DC  2AD6               	goto	u329_25
  7908  02DD                     i1l3466:
  7909  02DD  30FF               	movlw	255
  7910  02DE  07B8               	addwf	___flmul@temp,f
  7911  02DF  1803               	skipnc
  7912  02E0  0AB9               	incf	___flmul@temp+1,f
  7913  02E1  30FF               	movlw	255
  7914  02E2  07B9               	addwf	___flmul@temp+1,f
  7915  02E3                     i1l3468:
  7916  02E3  1FB6               	btfss	___flmul@prod+2,7
  7917  02E4  2AE6               	goto	u330_21
  7918  02E5  2AE7               	goto	u330_20
  7919  02E6                     u330_21:
  7920  02E6  2AC6               	goto	i1l3458
  7921  02E7                     u330_20:
  7922  02E7                     i1l3470:
  7923  02E7  01B2               	clrf	___flmul@aexp
  7924  02E8                     i1l3472:
  7925  02E8  1FB1               	btfss	___flmul@grs+3,7
  7926  02E9  2AEB               	goto	u331_21
  7927  02EA  2AEC               	goto	u331_20
  7928  02EB                     u331_21:
  7929  02EB  2B08               	goto	i1l3480
  7930  02EC                     u331_20:
  7931  02EC                     i1l3474:
  7932  02EC  30FF               	movlw	255
  7933  02ED  052E               	andwf	___flmul@grs,w
  7934  02EE  00A8               	movwf	??___flmul
  7935  02EF  30FF               	movlw	255
  7936  02F0  052F               	andwf	___flmul@grs+1,w
  7937  02F1  00A9               	movwf	??___flmul+1
  7938  02F2  30FF               	movlw	255
  7939  02F3  0530               	andwf	___flmul@grs+2,w
  7940  02F4  00AA               	movwf	??___flmul+2
  7941  02F5  307F               	movlw	127
  7942  02F6  0531               	andwf	___flmul@grs+3,w
  7943  02F7  00AB               	movwf	??___flmul+3
  7944  02F8  082B               	movf	??___flmul+3,w
  7945  02F9  042A               	iorwf	??___flmul+2,w
  7946  02FA  0429               	iorwf	??___flmul+1,w
  7947  02FB  0428               	iorwf	??___flmul,w
  7948  02FC  1903               	skipnz
  7949  02FD  2AFF               	goto	u332_21
  7950  02FE  2B00               	goto	u332_20
  7951  02FF                     u332_21:
  7952  02FF  2B03               	goto	i1l1149
  7953  0300                     u332_20:
  7954  0300                     i1l3476:
  7955  0300  01B2               	clrf	___flmul@aexp
  7956  0301  0AB2               	incf	___flmul@aexp,f
  7957  0302  2B08               	goto	i1l3480
  7958  0303                     i1l1149:
  7959  0303  1C34               	btfss	___flmul@prod,0
  7960  0304  2B06               	goto	u333_21
  7961  0305  2B07               	goto	u333_20
  7962  0306                     u333_21:
  7963  0306  2B08               	goto	i1l3480
  7964  0307                     u333_20:
  7965  0307  2B00               	goto	i1l3476
  7966  0308                     i1l3480:
  7967  0308  0832               	movf	___flmul@aexp,w
  7968  0309  1903               	btfsc	3,2
  7969  030A  2B0C               	goto	u334_21
  7970  030B  2B0D               	goto	u334_20
  7971  030C                     u334_21:
  7972  030C  2B3E               	goto	i1l3490
  7973  030D                     u334_20:
  7974  030D                     i1l3482:
  7975  030D  3001               	movlw	1
  7976  030E  07B4               	addwf	___flmul@prod,f
  7977  030F  3000               	movlw	0
  7978  0310  1803               	skipnc
  7979  0311  3001               	movlw	1
  7980  0312  07B5               	addwf	___flmul@prod+1,f
  7981  0313  3000               	movlw	0
  7982  0314  1803               	skipnc
  7983  0315  3001               	movlw	1
  7984  0316  07B6               	addwf	___flmul@prod+2,f
  7985  0317  3000               	movlw	0
  7986  0318  1803               	skipnc
  7987  0319  3001               	movlw	1
  7988  031A  07B7               	addwf	___flmul@prod+3,f
  7989  031B                     i1l3484:
  7990  031B  1C37               	btfss	___flmul@prod+3,0
  7991  031C  2B1E               	goto	u335_21
  7992  031D  2B1F               	goto	u335_20
  7993  031E                     u335_21:
  7994  031E  2B3E               	goto	i1l3490
  7995  031F                     u335_20:
  7996  031F                     i1l3486:
  7997  031F  0834               	movf	___flmul@prod,w
  7998  0320  00A8               	movwf	??___flmul
  7999  0321  0835               	movf	___flmul@prod+1,w
  8000  0322  00A9               	movwf	??___flmul+1
  8001  0323  0836               	movf	___flmul@prod+2,w
  8002  0324  00AA               	movwf	??___flmul+2
  8003  0325  0837               	movf	___flmul@prod+3,w
  8004  0326  00AB               	movwf	??___flmul+3
  8005  0327  3001               	movlw	1
  8006  0328  00AC               	movwf	??___flmul+4
  8007  0329                     u336_25:
  8008  0329  0D2B               	rlf	??___flmul+3,w
  8009  032A  0CAB               	rrf	??___flmul+3,f
  8010  032B  0CAA               	rrf	??___flmul+2,f
  8011  032C  0CA9               	rrf	??___flmul+1,f
  8012  032D  0CA8               	rrf	??___flmul,f
  8013  032E                     u336_20:
  8014  032E  0BAC               	decfsz	??___flmul+4,f
  8015  032F  2B29               	goto	u336_25
  8016  0330  082B               	movf	??___flmul+3,w
  8017  0331  00B7               	movwf	___flmul@prod+3
  8018  0332  082A               	movf	??___flmul+2,w
  8019  0333  00B6               	movwf	___flmul@prod+2
  8020  0334  0829               	movf	??___flmul+1,w
  8021  0335  00B5               	movwf	___flmul@prod+1
  8022  0336  0828               	movf	??___flmul,w
  8023  0337  00B4               	movwf	___flmul@prod
  8024  0338                     i1l3488:
  8025  0338  3001               	movlw	1
  8026  0339  07B8               	addwf	___flmul@temp,f
  8027  033A  1803               	skipnc
  8028  033B  0AB9               	incf	___flmul@temp+1,f
  8029  033C  3000               	movlw	0
  8030  033D  07B9               	addwf	___flmul@temp+1,f
  8031  033E                     i1l3490:
  8032  033E  0839               	movf	___flmul@temp+1,w
  8033  033F  3A80               	xorlw	128
  8034  0340  00FF               	movwf	btemp+1
  8035  0341  3080               	movlw	128
  8036  0342  027F               	subwf	btemp+1,w
  8037  0343  1D03               	skipz
  8038  0344  2B47               	goto	u337_25
  8039  0345  30FF               	movlw	255
  8040  0346  0238               	subwf	___flmul@temp,w
  8041  0347                     u337_25:
  8042  0347  1C03               	skipc
  8043  0348  2B4A               	goto	u337_21
  8044  0349  2B4B               	goto	u337_20
  8045  034A                     u337_21:
  8046  034A  2B56               	goto	i1l3494
  8047  034B                     u337_20:
  8048  034B                     i1l3492:
  8049  034B  307F               	movlw	127
  8050  034C  1283               	bcf	3,5	;RP0=0, select bank0
  8051  034D  1303               	bcf	3,6	;RP1=0, select bank0
  8052  034E  00B7               	movwf	___flmul@prod+3
  8053  034F  3080               	movlw	128
  8054  0350  00B6               	movwf	___flmul@prod+2
  8055  0351  3000               	movlw	0
  8056  0352  00B5               	movwf	___flmul@prod+1
  8057  0353  3000               	movlw	0
  8058  0354  00B4               	movwf	___flmul@prod
  8059  0355  2B8B               	goto	i1l1155
  8060  0356                     i1l3494:
  8061  0356  1283               	bcf	3,5	;RP0=0, select bank0
  8062  0357  1303               	bcf	3,6	;RP1=0, select bank0
  8063  0358  0839               	movf	___flmul@temp+1,w
  8064  0359  3A80               	xorlw	128
  8065  035A  00FF               	movwf	btemp+1
  8066  035B  3080               	movlw	128
  8067  035C  027F               	subwf	btemp+1,w
  8068  035D  1D03               	skipz
  8069  035E  2B61               	goto	u338_25
  8070  035F  3001               	movlw	1
  8071  0360  0238               	subwf	___flmul@temp,w
  8072  0361                     u338_25:
  8073  0361  1803               	skipnc
  8074  0362  2B64               	goto	u338_21
  8075  0363  2B65               	goto	u338_20
  8076  0364                     u338_21:
  8077  0364  2B71               	goto	i1l3500
  8078  0365                     u338_20:
  8079  0365                     i1l3496:
  8080  0365  3000               	movlw	0
  8081  0366  1283               	bcf	3,5	;RP0=0, select bank0
  8082  0367  1303               	bcf	3,6	;RP1=0, select bank0
  8083  0368  00B7               	movwf	___flmul@prod+3
  8084  0369  3000               	movlw	0
  8085  036A  00B6               	movwf	___flmul@prod+2
  8086  036B  3000               	movlw	0
  8087  036C  00B5               	movwf	___flmul@prod+1
  8088  036D  3000               	movlw	0
  8089  036E  00B4               	movwf	___flmul@prod
  8090  036F                     i1l3498:
  8091  036F  01AD               	clrf	___flmul@sign
  8092  0370  2B8B               	goto	i1l1155
  8093  0371                     i1l3500:
  8094  0371  1283               	bcf	3,5	;RP0=0, select bank0
  8095  0372  1303               	bcf	3,6	;RP1=0, select bank0
  8096  0373  0838               	movf	___flmul@temp,w
  8097  0374  00FF               	movwf	btemp+1
  8098  0375  087F               	movf	btemp+1,w
  8099  0376  00B3               	movwf	___flmul@bexp
  8100  0377                     i1l3502:
  8101  0377  30FF               	movlw	255
  8102  0378  05B4               	andwf	___flmul@prod,f
  8103  0379  30FF               	movlw	255
  8104  037A  05B5               	andwf	___flmul@prod+1,f
  8105  037B  307F               	movlw	127
  8106  037C  05B6               	andwf	___flmul@prod+2,f
  8107  037D  3000               	movlw	0
  8108  037E  05B7               	andwf	___flmul@prod+3,f
  8109  037F                     i1l3504:
  8110  037F  1C33               	btfss	___flmul@bexp,0
  8111  0380  2B82               	goto	u339_21
  8112  0381  2B83               	goto	u339_20
  8113  0382                     u339_21:
  8114  0382  2B84               	goto	i1l3508
  8115  0383                     u339_20:
  8116  0383                     i1l3506:
  8117  0383  17B6               	bsf	___flmul@prod+2,7
  8118  0384                     i1l3508:
  8119  0384  0833               	movf	___flmul@bexp,w
  8120  0385  00A8               	movwf	??___flmul
  8121  0386  1003               	clrc
  8122  0387  0C28               	rrf	??___flmul,w
  8123  0388  00FF               	movwf	btemp+1
  8124  0389  087F               	movf	btemp+1,w
  8125  038A  00B7               	movwf	___flmul@prod+3
  8126  038B                     i1l1155:
  8127  038B  082D               	movf	___flmul@sign,w
  8128  038C  00FF               	movwf	btemp+1
  8129  038D  087F               	movf	btemp+1,w
  8130  038E  04B7               	iorwf	___flmul@prod+3,f
  8131  038F                     i1l3510:
  8132  038F  0837               	movf	___flmul@prod+3,w
  8133  0390  00A3               	movwf	?___flmul+3
  8134  0391  0836               	movf	___flmul@prod+2,w
  8135  0392  00A2               	movwf	?___flmul+2
  8136  0393  0835               	movf	___flmul@prod+1,w
  8137  0394  00A1               	movwf	?___flmul+1
  8138  0395  0834               	movf	___flmul@prod,w
  8139  0396  00A0               	movwf	?___flmul
  8140  0397                     i1l1143:
  8141  0397  0008               	return
  8142  0398                     __end_of___flmul:
  8143                           
  8144                           	psect	text42
  8145  0987                     __ptext42:	
  8146 ;; *************** function __Umul8_16 *****************
  8147 ;; Defined at:
  8148 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8_16.c"
  8149 ;; Parameters:    Size  Location     Type
  8150 ;;  multiplier      1    wreg     unsigned char 
  8151 ;;  multiplicand    1    0[COMMON] unsigned char 
  8152 ;; Auto vars:     Size  Location     Type
  8153 ;;  multiplier      1    8[COMMON] unsigned char 
  8154 ;;  word_mpld       2    6[COMMON] unsigned int 
  8155 ;;  product         2    4[COMMON] unsigned int 
  8156 ;; Return value:  Size  Location     Type
  8157 ;;                  2    0[COMMON] unsigned int 
  8158 ;; Registers used:
  8159 ;;		wreg, status,2, status,0
  8160 ;; Tracked objects:
  8161 ;;		On entry : 0/0
  8162 ;;		On exit  : 0/0
  8163 ;;		Unchanged: 0/0
  8164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8165 ;;      Params:         2       0       0       0       0
  8166 ;;      Locals:         5       0       0       0       0
  8167 ;;      Temps:          2       0       0       0       0
  8168 ;;      Totals:         9       0       0       0       0
  8169 ;;Total ram usage:        9 bytes
  8170 ;; Hardware stack levels used:    1
  8171 ;; This function calls:
  8172 ;;		Nothing
  8173 ;; This function is called by:
  8174 ;;		___flmul
  8175 ;; This function uses a non-reentrant model
  8176 ;;
  8177                           
  8178                           
  8179                           ;psect for function __Umul8_16
  8180  0987                     __Umul8_16:
  8181                           
  8182                           ;incstack = 0
  8183 ;; hardware stack exceeded
  8184                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8185                           ;__Umul8_16@multiplier stored from wreg
  8186  0987  00F8               	movwf	__Umul8_16@multiplier
  8187  0988                     i1l3082:
  8188  0988  01F4               	clrf	__Umul8_16@product
  8189  0989  01F5               	clrf	__Umul8_16@product+1
  8190  098A                     i1l3084:
  8191  098A  0870               	movf	__Umul8_16@multiplicand,w
  8192  098B  00F2               	movwf	??__Umul8_16
  8193  098C  01F3               	clrf	??__Umul8_16+1
  8194  098D  0872               	movf	??__Umul8_16,w
  8195  098E  00F6               	movwf	__Umul8_16@word_mpld
  8196  098F  0873               	movf	??__Umul8_16+1,w
  8197  0990  00F7               	movwf	__Umul8_16@word_mpld+1
  8198  0991                     i1l3086:
  8199  0991  1C78               	btfss	__Umul8_16@multiplier,0
  8200  0992  2994               	goto	u248_21
  8201  0993  2995               	goto	u248_20
  8202  0994                     u248_21:
  8203  0994  299B               	goto	i1l1162
  8204  0995                     u248_20:
  8205  0995                     i1l3088:
  8206  0995  0876               	movf	__Umul8_16@word_mpld,w
  8207  0996  07F4               	addwf	__Umul8_16@product,f
  8208  0997  1803               	skipnc
  8209  0998  0AF5               	incf	__Umul8_16@product+1,f
  8210  0999  0877               	movf	__Umul8_16@word_mpld+1,w
  8211  099A  07F5               	addwf	__Umul8_16@product+1,f
  8212  099B                     i1l1162:
  8213  099B  3001               	movlw	1
  8214  099C                     u249_25:
  8215  099C  1003               	clrc
  8216  099D  0DF6               	rlf	__Umul8_16@word_mpld,f
  8217  099E  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  8218  099F  3EFF               	addlw	-1
  8219  09A0  1D03               	skipz
  8220  09A1  299C               	goto	u249_25
  8221  09A2  1003               	clrc
  8222  09A3  0CF8               	rrf	__Umul8_16@multiplier,f
  8223  09A4                     i1l3090:
  8224  09A4  0878               	movf	__Umul8_16@multiplier,w
  8225  09A5  1D03               	btfss	3,2
  8226  09A6  29A8               	goto	u250_21
  8227  09A7  29A9               	goto	u250_20
  8228  09A8                     u250_21:
  8229  09A8  2991               	goto	i1l3086
  8230  09A9                     u250_20:
  8231  09A9                     i1l3092:
  8232  09A9  0875               	movf	__Umul8_16@product+1,w
  8233  09AA  00F1               	movwf	?__Umul8_16+1
  8234  09AB  0874               	movf	__Umul8_16@product,w
  8235  09AC  00F0               	movwf	?__Umul8_16
  8236  09AD                     i1l1164:
  8237  09AD  0008               	return
  8238  09AE                     __end_of__Umul8_16:
  8239                           
  8240                           	psect	text43
  8241  07BD                     __ptext43:	
  8242 ;; *************** function _DD_GetState *****************
  8243 ;; Defined at:
  8244 ;;		line 50 in file "DD.c"
  8245 ;; Parameters:    Size  Location     Type
  8246 ;;  device          1    wreg     enum E884
  8247 ;; Auto vars:     Size  Location     Type
  8248 ;;  device          1    2[COMMON] enum E884
  8249 ;; Return value:  Size  Location     Type
  8250 ;;                  1    wreg      enum E13
  8251 ;; Registers used:
  8252 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8253 ;; Tracked objects:
  8254 ;;		On entry : 0/0
  8255 ;;		On exit  : 0/0
  8256 ;;		Unchanged: 0/0
  8257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8258 ;;      Params:         0       0       0       0       0
  8259 ;;      Locals:         1       0       0       0       0
  8260 ;;      Temps:          2       0       0       0       0
  8261 ;;      Totals:         3       0       0       0       0
  8262 ;;Total ram usage:        3 bytes
  8263 ;; Hardware stack levels used:    1
  8264 ;; This function calls:
  8265 ;;		Nothing
  8266 ;; This function is called by:
  8267 ;;		_ISR
  8268 ;; This function uses a non-reentrant model
  8269 ;;
  8270                           
  8271                           
  8272                           ;psect for function _DD_GetState
  8273  07BD                     _DD_GetState:
  8274                           
  8275                           ;incstack = 0
  8276                           ; Regs used in _DD_GetState: [wreg-fsr0h+status,2+status,0]
  8277                           ;DD_GetState@device stored from wreg
  8278  07BD  00F2               	movwf	DD_GetState@device
  8279  07BE                     i1l3296:
  8280                           
  8281                           ;DD.c: 50: tState DD_GetState(tDD device);DD.c: 51: {;DD.c: 52:     switch(device)
  8282  07BE  2FE6               	goto	i1l3318
  8283  07BF                     i1l3298:
  8284                           
  8285                           ;DD.c: 55:             return ((PORTC & (1<<5)) >> 5);
  8286  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  8287  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  8288  07C1  0807               	movf	7,w	;volatile
  8289  07C2  00F0               	movwf	??_DD_GetState
  8290  07C3  3005               	movlw	5
  8291  07C4                     u288_25:
  8292  07C4  1003               	clrc
  8293  07C5  0CF0               	rrf	??_DD_GetState,f
  8294  07C6  3EFF               	addlw	-1
  8295  07C7  1D03               	skipz
  8296  07C8  2FC4               	goto	u288_25
  8297  07C9  0870               	movf	??_DD_GetState,w
  8298  07CA  3901               	andlw	1
  8299  07CB  2FF9               	goto	i1l275
  8300  07CC                     i1l3304:
  8301                           
  8302                           ;DD.c: 58:             return ((PORTC & (1<<2)) >> 2);
  8303  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  8304  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  8305  07CE  0807               	movf	7,w	;volatile
  8306  07CF  00F0               	movwf	??_DD_GetState
  8307  07D0  3002               	movlw	2
  8308  07D1                     u289_25:
  8309  07D1  1003               	clrc
  8310  07D2  0CF0               	rrf	??_DD_GetState,f
  8311  07D3  3EFF               	addlw	-1
  8312  07D4  1D03               	skipz
  8313  07D5  2FD1               	goto	u289_25
  8314  07D6  0870               	movf	??_DD_GetState,w
  8315  07D7  3901               	andlw	1
  8316  07D8  2FF9               	goto	i1l275
  8317  07D9                     i1l3310:
  8318                           
  8319                           ;DD.c: 61:             return ((PORTB & (1<<7)) >> 7);
  8320  07D9  1283               	bcf	3,5	;RP0=0, select bank0
  8321  07DA  1303               	bcf	3,6	;RP1=0, select bank0
  8322  07DB  0806               	movf	6,w	;volatile
  8323  07DC  00F0               	movwf	??_DD_GetState
  8324  07DD  3007               	movlw	7
  8325  07DE                     u290_25:
  8326  07DE  1003               	clrc
  8327  07DF  0CF0               	rrf	??_DD_GetState,f
  8328  07E0  3EFF               	addlw	-1
  8329  07E1  1D03               	skipz
  8330  07E2  2FDE               	goto	u290_25
  8331  07E3  0870               	movf	??_DD_GetState,w
  8332  07E4  3901               	andlw	1
  8333  07E5  2FF9               	goto	i1l275
  8334  07E6                     i1l3318:
  8335  07E6  0872               	movf	DD_GetState@device,w
  8336  07E7  00F0               	movwf	??_DD_GetState
  8337  07E8  01F1               	clrf	??_DD_GetState+1
  8338                           
  8339                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8340                           ; Switch size 1, requested type "simple"
  8341                           ; Number of cases is 1, Range of values is 0 to 0
  8342                           ; switch strategies available:
  8343                           ; Name         Instructions Cycles
  8344                           ; simple_byte            4     3 (average)
  8345                           ; direct_byte           11     8 (fixed)
  8346                           ; jumptable            260     6 (fixed)
  8347                           ;	Chosen strategy is simple_byte
  8348  07E9  0871               	movf	??_DD_GetState+1,w
  8349  07EA  3A00               	xorlw	0	; case 0
  8350  07EB  1903               	skipnz
  8351  07EC  2FEE               	goto	i1l3936
  8352  07ED  2FF9               	goto	i1l275
  8353  07EE                     i1l3936:
  8354                           
  8355                           ; Switch size 1, requested type "simple"
  8356                           ; Number of cases is 3, Range of values is 0 to 2
  8357                           ; switch strategies available:
  8358                           ; Name         Instructions Cycles
  8359                           ; simple_byte           10     6 (average)
  8360                           ; direct_byte           17     8 (fixed)
  8361                           ; jumptable            260     6 (fixed)
  8362                           ;	Chosen strategy is simple_byte
  8363  07EE  0870               	movf	??_DD_GetState,w
  8364  07EF  3A00               	xorlw	0	; case 0
  8365  07F0  1903               	skipnz
  8366  07F1  2FBF               	goto	i1l3298
  8367  07F2  3A01               	xorlw	1	; case 1
  8368  07F3  1903               	skipnz
  8369  07F4  2FCC               	goto	i1l3304
  8370  07F5  3A03               	xorlw	3	; case 2
  8371  07F6  1903               	skipnz
  8372  07F7  2FD9               	goto	i1l3310
  8373  07F8  2FF9               	goto	i1l275
  8374  07F9                     i1l275:
  8375  07F9  0008               	return
  8376  07FA                     __end_of_DD_GetState:
  8377                           
  8378                           	psect	text44
  8379  09D7                     __ptext44:	
  8380 ;; *************** function _ADC_ReadChannel *****************
  8381 ;; Defined at:
  8382 ;;		line 69 in file "adc.c"
  8383 ;; Parameters:    Size  Location     Type
  8384 ;;  channel         1    wreg     enum E869
  8385 ;; Auto vars:     Size  Location     Type
  8386 ;;  channel         1    5[COMMON] enum E869
  8387 ;;  result          2    3[COMMON] unsigned short 
  8388 ;; Return value:  Size  Location     Type
  8389 ;;                  2    0[COMMON] unsigned short 
  8390 ;; Registers used:
  8391 ;;		wreg, status,2, status,0, btemp+1
  8392 ;; Tracked objects:
  8393 ;;		On entry : 0/0
  8394 ;;		On exit  : 0/0
  8395 ;;		Unchanged: 0/0
  8396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8397 ;;      Params:         2       0       0       0       0
  8398 ;;      Locals:         3       0       0       0       0
  8399 ;;      Temps:          1       0       0       0       0
  8400 ;;      Totals:         6       0       0       0       0
  8401 ;;Total ram usage:        6 bytes
  8402 ;; Hardware stack levels used:    1
  8403 ;; This function calls:
  8404 ;;		Nothing
  8405 ;; This function is called by:
  8406 ;;		_ISR
  8407 ;; This function uses a non-reentrant model
  8408 ;;
  8409                           
  8410                           
  8411                           ;psect for function _ADC_ReadChannel
  8412  09D7                     _ADC_ReadChannel:
  8413                           
  8414                           ;incstack = 0
  8415                           ; Regs used in _ADC_ReadChannel: [wreg+status,2+status,0+btemp+1]
  8416                           ;ADC_ReadChannel@channel stored from wreg
  8417  09D7  00F5               	movwf	ADC_ReadChannel@channel
  8418  09D8                     i1l3324:
  8419                           
  8420                           ;adc.c: 69: uint16_t ADC_ReadChannel(tADC_Channel_Select channel);adc.c: 70: {;adc.c: 72
      +                          :     ADCON0 &= ~(7<<3);
  8421  09D8  30C7               	movlw	199
  8422  09D9  00FF               	movwf	btemp+1
  8423  09DA  087F               	movf	btemp+1,w
  8424  09DB  1283               	bcf	3,5	;RP0=0, select bank0
  8425  09DC  1303               	bcf	3,6	;RP1=0, select bank0
  8426  09DD  059F               	andwf	31,f	;volatile
  8427                           
  8428                           ;adc.c: 75:     ADCON0 |= ((channel)<<3);
  8429  09DE  0875               	movf	ADC_ReadChannel@channel,w	;volatile
  8430  09DF  00F2               	movwf	??_ADC_ReadChannel
  8431  09E0  3002               	movlw	2
  8432  09E1                     u291_25:
  8433  09E1  1003               	clrc
  8434  09E2  0DF2               	rlf	??_ADC_ReadChannel,f
  8435  09E3  3EFF               	addlw	-1
  8436  09E4  1D03               	skipz
  8437  09E5  29E1               	goto	u291_25
  8438  09E6  1003               	clrc
  8439  09E7  0D72               	rlf	??_ADC_ReadChannel,w
  8440  09E8  00FF               	movwf	btemp+1
  8441  09E9  087F               	movf	btemp+1,w
  8442  09EA  049F               	iorwf	31,f	;volatile
  8443  09EB                     i1l3326:
  8444                           
  8445                           ;adc.c: 78:     _delay((unsigned long)((30)*(4000000/4000000.0)));
  8446  09EB  3009               	movlw	9
  8447  09EC  00F2               	movwf	??_ADC_ReadChannel
  8448  09ED                     u381_27:
  8449  09ED  0BF2               	decfsz	??_ADC_ReadChannel,f
  8450  09EE  29ED               	goto	u381_27
  8451  09EF  29F0               	nop2
  8452  09F0                     i1l3328:
  8453                           
  8454                           ;adc.c: 81:     (ADCON0|=(1<<2));
  8455  09F0  1283               	bcf	3,5	;RP0=0, select bank0
  8456  09F1  1303               	bcf	3,6	;RP1=0, select bank0
  8457  09F2  151F               	bsf	31,2	;volatile
  8458  09F3                     i1l325:	
  8459                           ;adc.c: 84:     while((ADCON0 & (1<<2)));
  8460                           
  8461  09F3  191F               	btfsc	31,2	;volatile
  8462  09F4  29F6               	goto	u292_21
  8463  09F5  29F7               	goto	u292_20
  8464  09F6                     u292_21:
  8465  09F6  29F3               	goto	i1l325
  8466  09F7                     u292_20:
  8467  09F7                     i1l3330:
  8468                           
  8469                           ;adc.c: 87:     uint16_t result =((ADRESH<<8) + ADRESL) ;
  8470  09F7  081E               	movf	30,w	;volatile
  8471  09F8  00F4               	movwf	ADC_ReadChannel@result+1
  8472  09F9  1683               	bsf	3,5	;RP0=1, select bank1
  8473  09FA  1303               	bcf	3,6	;RP1=0, select bank1
  8474  09FB  081E               	movf	30,w	;volatile
  8475  09FC  00F3               	movwf	ADC_ReadChannel@result
  8476                           
  8477                           ;adc.c: 89:     return result;
  8478  09FD  0874               	movf	ADC_ReadChannel@result+1,w
  8479  09FE  00F1               	movwf	?_ADC_ReadChannel+1
  8480  09FF  0873               	movf	ADC_ReadChannel@result,w
  8481  0A00  00F0               	movwf	?_ADC_ReadChannel
  8482  0A01                     i1l328:
  8483  0A01  0008               	return
  8484  0A02                     __end_of_ADC_ReadChannel:
  8485  007E                     btemp	set	126	;btemp
  8486  007E                     wtemp0	set	126
  8487                           
  8488                           	psect	config
  8489                           
  8490                           ;Config register CONFIG @ 0x2007
  8491                           ;	Oscillator Selection bits
  8492                           ;	FOSC = XT, XT oscillator
  8493                           ;	Watchdog Timer Enable bit
  8494                           ;	WDTE = OFF, WDT disabled
  8495                           ;	Power-up Timer Enable bit
  8496                           ;	PWRTE = ON, PWRT enabled
  8497                           ;	Brown-out Reset Enable bit
  8498                           ;	BOREN = ON, BOR enabled
  8499                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  8500                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  8501                           ;	Data EEPROM Memory Code Protection bit
  8502                           ;	CPD = OFF, Data EEPROM code protection off
  8503                           ;	Flash Program Memory Write Enable bits
  8504                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  8505                           ;	In-Circuit Debugger Mode bit
  8506                           ;	DEBUG = 0x1, unprogrammed default
  8507                           ;	Flash Program Memory Code Protection bit
  8508                           ;	CP = OFF, Code protection off
  8509  2007                     	org	8199
  8510  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     42      51
    BANK1            80     29      63
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    EWH_getAvrgTempReading@buffer	PTR unsigned char  size(1) Largest target is 10
		 -> ReadingBuffer(BANK1[10]), 

    TMR1_Init@config	PTR struct . size(1) Largest target is 2
		 -> EWH_Init@TMR1_cfg(BANK1[2]), 

    ADC_Init@config	PTR struct . size(1) Largest target is 4
		 -> EWH_Init@adc_config(BANK1[4]), 

    I2C_Init@i2c_config	PTR struct . size(1) Largest target is 6
		 -> EWH_Init@i2c_config(BANK1[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    _main->_EWH_Init
    _EWH_WakeUP_Mode->_EWH_SSD_Update
    _EWH_SetTemp_Mode->_EWH_SSD_Update
    _EWH_SSD_OFF->_SSD_OFF
    _EWH_EEPROM_Update->_EEPROM_WriteByte
    _EWH_EEPROM_Read->_EEPROM_ReadByte
    _EEPROM_ReadByte->_I2C_Master_ReadByte
    _EWH_Operating_Mode->_EWH_getAvrgTempReading
    _EWH_getAvrgTempReading->___lwdiv
    _EWH_SSD_Update->_SSD_Write
    _SSD_Write->___awdiv
    _SSD_OFF->_SSD_config
    _EWH_Init->_I2C_Init
    _I2C_Init->___lldiv
    _EWH_EEPROM_Init->_EEPROM_WriteByte
    _EEPROM_WriteByte->_I2C_Master_WriteByte

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   15193
                                             27 BANK1      2     2      0
                           _EWH_Init
                 _EWH_Operating_Mode
                   _EWH_SetTemp_Mode
                     _EWH_Sleep_Mode
                    _EWH_WakeUP_Mode
 ---------------------------------------------------------------------------------
 (1) _EWH_WakeUP_Mode                                      2     2      0    3073
                                             14 BANK1      2     2      0
                    _EWH_EEPROM_Read
                     _EWH_SSD_Update
 ---------------------------------------------------------------------------------
 (1) _EWH_Sleep_Mode                                       0     0      0    1350
                        _DD_SetState
                        _EWH_SSD_OFF
                          _TMR1_Stop
 ---------------------------------------------------------------------------------
 (1) _EWH_SetTemp_Mode                                     2     2      0    4837
                                             14 BANK1      2     2      0
                        _DD_SetState
                    _EWH_EEPROM_Read
                  _EWH_EEPROM_Update
                        _EWH_SSD_OFF
                     _EWH_SSD_Update
                         _TMR1_Start
 ---------------------------------------------------------------------------------
 (2) _EWH_SSD_OFF                                          0     0      0     512
                            _SSD_OFF
 ---------------------------------------------------------------------------------
 (2) _EWH_EEPROM_Update                                    1     1      0     414
                                              6 BANK1      1     1      0
                   _EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (2) _EWH_EEPROM_Read                                      0     0      0     210
                    _EEPROM_ReadByte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_ReadByte                                      5     3      2     210
                                              2 BANK1      5     3      2
                _I2C_Master_ReadByte
      _I2C_Master_Send_RepeatedStart
              _I2C_Master_Send_Start
               _I2C_Master_Send_Stop
               _I2C_Master_WriteByte
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_ReadByte                                  2     2      0      23
                                              0 BANK1      2     2      0
                _I2C_Master_Send_ACK
               _I2C_Master_Send_NACK
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Send_NACK                                 0     0      0       0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Send_ACK                                  0     0      0       0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (1) _EWH_Operating_Mode                                   3     3      0    4731
                                             16 BANK1      3     3      0
                        _DD_SetState
                     _EWH_SSD_Update
             _EWH_getAvrgTempReading
                         _TMR1_Start
                          _TMR1_Stop
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) _TMR1_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EWH_getAvrgTempReading                               9     8      1     582
                                              7 BANK1      9     8      1
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (2) _EWH_SSD_Update                                       4     2      2    2863
                                             10 BANK1      4     2      2
                            _SSD_OFF
                          _SSD_Write
                            ___awdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     463
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (3) _SSD_Write                                            2     1      1     860
                                              8 BANK1      2     1      1
                         _SSD_config
                            ___awdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _SSD_OFF                                              1     1      0     512
                                              4 BANK1      1     1      0
                         _SSD_config
 ---------------------------------------------------------------------------------
 (4) _SSD_config                                           4     3      1     490
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (2) _DD_SetState                                          4     3      1     838
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (1) _EWH_Init                                            12    12      0    1202
                                             15 BANK1     12    12      0
                           _ADC_Init
                            _DD_Init
                    _EWH_EEPROM_Init
                           _I2C_Init
                            _SW_Init
                          _TMR1_Init
 ---------------------------------------------------------------------------------
 (2) _TMR1_Init                                            3     3      0      77
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _SW_Init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             1     1      0     413
                                             14 BANK1      1     1      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (2) _EWH_EEPROM_Init                                      0     0      0     392
                   _EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_WriteByte                                     5     2      3     392
                                              1 BANK1      5     2      3
      _I2C_Master_Send_RepeatedStart
              _I2C_Master_Send_Start
               _I2C_Master_Send_Stop
               _I2C_Master_WriteByte
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_WriteByte                                 1     1      0      22
                                              0 BANK1      1     1      0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Send_Stop                                 0     0      0       0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Send_Start                                0     0      0       0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Send_RepeatedStart                        0     0      0       0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (5) _I2C_Wait_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DD_Init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             3     3      0      99
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  6     6      0    3210
                                             36 BANK0      6     6      0
                    _ADC_ReadChannel
                        _DD_GetState
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (8) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (8) ___fltol                                             10     6      4     305
                                             26 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             26    18      8    2417
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (9) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (8) _DD_GetState                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (8) _ADC_ReadChannel                                      6     4      2      45
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EWH_Init
     _ADC_Init
     _DD_Init
     _EWH_EEPROM_Init
       _EEPROM_WriteByte
         _I2C_Master_Send_RepeatedStart
           _I2C_Wait_IDLE
         _I2C_Master_Send_Start
           _I2C_Wait_IDLE
         _I2C_Master_Send_Stop
           _I2C_Wait_IDLE
         _I2C_Master_WriteByte
           _I2C_Wait_IDLE
     _I2C_Init
       ___lldiv
     _SW_Init
     _TMR1_Init
   _EWH_Operating_Mode
     _DD_SetState
     _EWH_SSD_Update
       _SSD_OFF
         _SSD_config
       _SSD_Write
         _SSD_config
         ___awdiv (ARG)
         ___lwmod (ARG)
       ___awdiv
       ___lwmod
     _EWH_getAvrgTempReading
       ___lwdiv
     _TMR1_Start
     _TMR1_Stop
     ___awmod
   _EWH_SetTemp_Mode
     _DD_SetState
     _EWH_EEPROM_Read
       _EEPROM_ReadByte
         _I2C_Master_ReadByte
           _I2C_Master_Send_ACK
             _I2C_Wait_IDLE
           _I2C_Master_Send_NACK
             _I2C_Wait_IDLE
           _I2C_Wait_IDLE
         _I2C_Master_Send_RepeatedStart
           _I2C_Wait_IDLE
         _I2C_Master_Send_Start
           _I2C_Wait_IDLE
         _I2C_Master_Send_Stop
           _I2C_Wait_IDLE
         _I2C_Master_WriteByte
           _I2C_Wait_IDLE
     _EWH_EEPROM_Update
       _EEPROM_WriteByte
         _I2C_Master_Send_RepeatedStart
           _I2C_Wait_IDLE
         _I2C_Master_Send_Start
           _I2C_Wait_IDLE
         _I2C_Master_Send_Stop
           _I2C_Wait_IDLE
         _I2C_Master_WriteByte
           _I2C_Wait_IDLE
     _EWH_SSD_OFF
       _SSD_OFF
         _SSD_config
     _EWH_SSD_Update
       _SSD_OFF
         _SSD_config
       _SSD_Write
         _SSD_config
         ___awdiv (ARG)
         ___lwmod (ARG)
       ___awdiv
       ___lwmod
     _TMR1_Start
   _EWH_Sleep_Mode
     _DD_SetState
     _EWH_SSD_OFF
       _SSD_OFF
         _SSD_config
     _TMR1_Stop
   _EWH_WakeUP_Mode
     _EWH_EEPROM_Read
       _EEPROM_ReadByte
         _I2C_Master_ReadByte
           _I2C_Master_Send_ACK
             _I2C_Wait_IDLE
           _I2C_Master_Send_NACK
             _I2C_Wait_IDLE
           _I2C_Wait_IDLE
         _I2C_Master_Send_RepeatedStart
           _I2C_Wait_IDLE
         _I2C_Master_Send_Start
           _I2C_Wait_IDLE
         _I2C_Master_Send_Stop
           _I2C_Wait_IDLE
         _I2C_Master_WriteByte
           _I2C_Wait_IDLE
     _EWH_SSD_Update
       _SSD_OFF
         _SSD_config
       _SSD_Write
         _SSD_config
         ___awdiv (ARG)
         ___lwmod (ARG)
       ___awdiv
       ___lwmod

 _ISR (ROOT)
   _ADC_ReadChannel
   _DD_GetState
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1D      3F       7       78.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2A      33       5       63.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      80      12        0.0%
ABS                  0      0      80       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Jul 10 09:19:34 2020

                          ?_DD_SetState 00A0                                       pc 0002  
                                    l13 0A45                                      l31 0D6D  
                                    l16 0A74            __size_of_I2C_Master_ReadByte 0029  
                                    l28 0D1E                                      l91 08D1  
                                    l94 08DD                                      l88 0BBF  
                                    l97 0889                            ___awdiv@sign 00A5  
                                    fsr 0004                              _SSD_config 0E9B  
          __size_of_I2C_Master_Send_ACK 000A                     __Umul8_16@word_mpld 0076  
                 _I2C_Master_Send_Start 0881                                     l100 0892  
                                   l103 0880                                     l112 0977  
                                   l120 09D6                                     l114 097B  
                                   l106 08A5                                     l115 0986  
                                   l109 08AF                                     l322 0FFF  
                                   l314 0F90                                     l315 0F94  
                                   l405 089B                                     l318 0FA9  
                                   l270 0CB7                                     l319 0FB0  
                                   l360 0BD3                                     l249 094B  
                                   l362 0BF1                                     l514 0AAE  
                                   l515 0AAF                                     l523 07BC  
                                   l364 0BF3                                     l356 0BC4  
                                   l540 05A4                                     l365 0C09  
                                   l285 08EA                                     l358 0BC9  
                                   l374 07FD                                     l359 0BCE  
                                   l288 0DC9                                     l368 090A  
                                   l560 04C9                                     l554 048F  
                                   l563 0B2F                                     l572 08D0  
                                   l566 08FA                                     l654 0F05  
                                   l920 0D12                                     l665 08C4  
                                   l569 091B                                     l658 0968  
                                   l578 0A39                                     l907 0E9A  
                                   l790 0E31                                     _GIE 005F  
                                   _PEN 048A                                     _ISR 05A5  
                                   _SEN 0488                                     fsr0 0004  
                                   indf 0000                            ___awmod@sign 00A5  
                       TMR1_Init@config 00A2              __size_of_EWH_EEPROM_Update 0011  
                    I2C_Init@i2c_config 00AE                            ___flmul@aexp 0032  
                          ___flmul@bexp 0033                            ___flmul@sign 002D  
                          ___flmul@temp 0038                            ___flmul@prod 0034  
         __size_of_I2C_Master_Send_NACK 000A                         __end_of_DD_Init 094C  
                                  ?_ISR 0070                            ___fltol@exp1 0043  
                                  l1026 0B75                                    l1036 0AEB  
                                  l3000 08FB                                    l3002 07FA  
                                  l3020 089A                                    l3012 0897  
                                  l3004 0893                                    l3100 0AF4  
                                  l3110 0B05                                    l3102 0AFA  
                                  l3030 0A09                                    l3022 08C5  
                                  l3016 0898                                    l3008 0896  
                                  l3120 0B25                                    l3112 0B0B  
                                  l3104 0AFE                                    l3032 0A18  
                                  l3200 03F5                                    l3042 08EB  
                                  l3018 0899                                    l3122 0B2A  
                                  l3114 0B15                                    l3106 0B02  
                                  l3034 0A1C                                    l3050 0CC4  
                                  l3210 0454                                    l3202 0409  
                                  l3026 090E                                    l3130 0A9D  
                                  l3116 0B1A                                    l3108 0B04  
                                  l3036 0A22                                    l3028 0A05  
                                  l3060 0CD8                                    l3052 0CC6  
                                  l3044 0CB8                                    l3212 0464  
                                  l3204 041D                                    l3132 0A9E  
                                  l3124 0A75                                    l3118 0B20  
                                  l3038 0A38                                    l3070 0CF7  
                                  l3062 0CDF                                    l3054 0CCA  
                                  l3046 0CBB                                    l3230 04B2  
                                  l3222 049A                                    l3214 046F  
                                  l3206 0431                                    l3142 0AA6  
                                  l3134 0A9F                                    l3126 0A95  
                                  l3150 0741                                    l2600 08D7  
                                  l3072 0CFE                                    l3064 0CE3  
                                  l3056 0CCF                                    l3048 0CBF  
                                  l3232 04B8                                    l3224 04A7  
                                  l3216 047F                                    l3208 0444  
                                  l3240 04CA                                    l3128 0A9A  
                                  l3160 0782                                    l3152 074B  
                                  l3066 0CE7                                    l3058 0CD5  
                                  l3074 0D04                                    l3234 04BD  
                                  l3226 04AC                                    l3218 0494  
                                  l2602 089C                                    l2610 08AB  
                                  l3250 04F8                                    l3242 04D0  
                                  l3146 0AAA                                    l3138 0AA0  
                                  l3170 07A9                                    l3162 0784  
                                  l3154 0757                                    l2620 087D  
                                  l3076 0D09                                    l3068 0CF1  
                                  l3236 04BE                                    l3228 04AD  
                                  l3180 039E                                    l2604 08A1  
                                  l2612 08AE                                    l3260 0521  
                                  l3252 04FD                                    l3244 04DA  
                                  l3172 07B9                                    l3164 0787  
                                  l3156 0767                                    l3148 073A  
                                  l2614 0881                                    l2622 096C  
                                  l3078 0D0E                                    l3238 04C3  
                                  l3190 03C3                                    l3182 03A2  
                                  l2606 08A4                                    l2710 0D13  
                                  l3270 054F                                    l3262 0531  
                                  l3254 0500                                    l3246 04E1  
                                  l3158 0772                                    l3166 078E  
                                  l2616 0886                                    l2632 088A  
                                  l2624 0971                                    l2704 0A3A  
                                  l3096 0AEC                                    l2800 0E8C  
                                  l3192 03D9                                    l3184 03A7  
                                  l2608 08A6                                    l2640 09BE  
                                  l2720 0D6A                                    l2712 0D19  
                                  l3280 0574                                    l3272 055A  
                                  l3264 0535                                    l3256 0510  
                                  l3248 04EA                                    l3168 079E  
                                  l3600 0C0F                                    l2618 0878  
                                  l2634 088F                                    l2626 097C  
                                  l2706 0A40                                    l3098 0AF2  
                                  l2730 095A                                    l2802 0E91  
                                  l2810 0B34                                    l3194 03DF  
                                  l3186 03B5                                    l3178 0398  
                                  l2642 09C1                                    l2714 0D38  
                                  l3290 0598                                    l3282 0579  
                                  l3274 056A                                    l3258 0516  
                                  l3266 0539                                    l2628 0981  
                                  l2708 0A5F                                    l2740 0DDC  
                                  l2660 0EA8                                    l2652 0E9E  
                                  l2724 08BD                                    l2732 0960  
                                  l2804 0E96                                    l2820 0B4C  
                                  l2812 0B3A                                    l3196 03EE  
                                  l3188 03BF                                    l2644 09C8  
                                  l2636 09B1                                    l2716 0D5A  
                                  l3292 059F                                    l3284 0580  
                                  l3268 0549                                    l3620 0C27  
                                  l3612 0C1D                                    l3604 0C15  
                                  l2902 0947                                    l2750 0DF9  
                                  l2742 0DDF                                    l2910 0C6B  
                                  l2670 0EBC                                    l2662 0EAC  
                                  l2726 094F                                    l2822 0B5D  
                                  l2814 0B3D                                    l2830 0B71  
                                  l3198 03F0                                    l2646 09CE  
                                  l2638 09B6                                    l2718 0D65  
                                  l3294 05A0                                    l3286 0585  
                                  l3278 056D                                    l3622 0C2C  
                                  l2752 0E0B                                    l2744 0DE8  
                                  l2760 0E29                                    l2920 0C87  
                                  l2912 0C71                                    l2904 0C61  
                                  l2680 0ED0                                    l2672 0EC0  
                                  l2656 0E9F                                    l2728 0957  
                                  l2840 0AC2                                    l2824 0B63  
                                  l2816 0B44                                    l2808 0B30  
                                  l2648 09D3                                    l3288 0592  
                                  l3624 0C32                                    l3632 0C43  
                                  l3616 0C23                                    l3608 0C19  
                                  l2754 0E19                                    l2746 0DEC  
                                  l2738 0DCA                                    l2922 0C8E  
                                  l2914 0C78                                    l2906 0C62  
                                  l2690 0EE4                                    l2682 0ED4  
                                  l2666 0EB3                                    l2658 0EA3  
                                  l2770 0E3E                                    l2850 0AE1  
                                  l2842 0AC6                                    l2834 0AB0  
                                  l2826 0B64                                    l2818 0B48  
                                  l3626 0C38                                    l2756 0E1A  
                                  l2748 0DF0                                    l2860 0B84  
                                  l2924 0C93                                    l2916 0C7D  
                                  l2908 0C67                                    l2932 0CA4  
                                  l2692 0EE8                                    l2676 0EC7  
                                  l2668 0EB7                                    l2780 0E4F  
                                  l2772 0E40                                    l2764 0E32  
                                  l2844 0ACA                                    l2836 0AB8  
                                  l2852 0AE7                                    l2828 0B6B  
                                  l2940 08DE                                    l3628 0C3E  
                                  l2598 08D1                                    l2758 0E23  
                                  l2870 0BAD                                    l2862 0BA5  
                                  l2926 0C97                                    l2918 0C81  
                                  l2686 0EDB                                    l2678 0ECB  
                                  l2790 0E67                                    l2782 0E55  
                                  l2774 0E44                                    l2766 0E35  
                                  l2846 0AD4                                    l2838 0ABB  
                                  l2950 0DBE                                    l2942 0D6E  
                                  l2960 0FA5                                    l2952 0F85  
                                  l2864 0BA8                                    l2856 0B79  
                                  l2928 0C9D                                    l2688 0EDF  
                                  l2696 0EEF                                    l2792 0E78  
                                  l2784 0E58                                    l2776 0E49  
                                  l2768 0E39                                    l2848 0ADA  
                                  l2944 0D8F                                    l2970 0FF7  
                                  l2954 0F89                                    l2962 0FB7  
                                  l2890 0939                                    l2882 092F  
                                  l2874 0BAE                                    l2866 0BAC  
                                  l2858 0B7B                                    l3930 0BE3  
                                  l2794 0E7E                                    l2786 0E5F  
                                  l2778 0E4D                                    l2946 0D9A  
                                  l2956 0F98                                    l2964 0FDC  
                                  l2876 0BB7                                    l3932 0C01  
                                  l2796 0E7F                                    l2788 0E63  
                                  l2948 0DA0                                    l3924 0C4D  
                                  l3596 0C0A                                    l2966 0FEE  
                                  l3934 0FC5                                    l2958 0F9F  
                                  l2894 093D                                    l2886 0935  
                                  l2878 092F                                    l2982 0BD8  
                                  l3926 0EF7                                    l2798 0E86  
                                  l2968 0FF0                                    l3928 0CAC  
                                  l2898 0943                                    l2986 0BF5  
                                  l2978 0BC3                                    _ADIE 0466  
                                  _ADIF 0066                                    _ADON 00F8  
         __size_of_I2C_Master_Send_Stop 0009                                    _T0CS 040D  
                                  u2010 0960                                    u2011 095F  
                                  u2020 0DDC                                    u2100 0E44  
                                  u2021 0DDB                                    u2101 0E43  
                                  u2005 0D4C                                    u2110 0E55  
                                  u2111 0E54                                    u2040 0DF0  
                                  u2041 0DEF                                    u2130 0E67  
                                  u2210 0B4C                                    u2035 0DE1  
                                  u2131 0E66                                    u2211 0B4B  
                                  u2060 0E0B                                    u2061 0E0A  
                                  u2125 0E59                                    u2205 0B3E  
                                  u2150 0E78                                    u2310 0AE7  
                                  u2230 0B5D                                    u2055 0DF2  
                                  u2151 0E77                                    u2311 0AE6  
                                  u2231 0B5C                                    u2080 0E29  
                                  u2320 0BB7                                    u2400 0CCA  
                                  u2081 0E28                                    u2065 0E07  
                                  u2321 0BB6                                    u2145 0E68  
                                  u2305 0ADB                                    u2225 0B4D  
                                  u2401 0CC9                                    u2330 0C67  
                                  u2170 0E8C                                    u2090 0E39  
                                  u2250 0B71                                    u2410 0CD5  
                                  u2075 0E1B                                    u2331 0C66  
                                  u2171 0E8B                                    u2155 0E74  
                                  u2091 0E38                                    u2251 0B70  
                                  u2235 0B59                                    u2411 0CD4  
                                  u2340 0C7D                                    u2180 0E91  
                                  u2260 0AB8                                    u2341 0C7C  
                                  u2181 0E90                                    u2165 0E80  
                                  u2261 0AB7                                    u2245 0B65  
                                  u2350 0C93                                    u2190 0B3A  
                                  u2430 0CE7                                    u2351 0C92  
                                  u2191 0B39                                    u2431 0CE6  
                                  u2280 0ACA                                    u2440 0CF1  
                                  u2600 03F5                                    u2520 0767  
                                  u2281 0AC9                                    u2441 0CF0  
                                  u2425 0CD9                                    u2601 03F4  
                                  u2521 0766                                    u2370 0FF7  
                                  u2290 0AD4                                    u2610 0409  
                                  u2371 0FF6                                    u2291 0AD3  
                                  u2275 0ABC                                    u2611 0408  
                                  u2515 075E                                    u1900 097B  
                                  u2380 0A22                                    u2460 0D04  
                                  u2700 048F                                    u2620 0431  
                                  u2540 0782                                    u2365 0FE4  
                                  u1901 097A                                    u2381 0A21  
                                  u2461 0D03                                    u2445 0CED  
                                  u2701 048E                                    u2621 0430  
                                  u2541 0781                                    u2470 0D09  
                                  u2390 0CBF                                    u2710 0499  
                                  u1910 09C8                                    u2295 0AD0  
                                  u2471 0D08                                    u2455 0CF8  
                                  u2391 0CBE                                    u2711 0498  
                                  u2615 0405                                    u1911 09C7  
                                  u2535 0779                                    u1920 0EA8  
                                  u2720 04AC                                    u2640 0454  
                                  u2800 0549                                    u2560 079E  
                                  u1921 0EA7                                    u2721 04AB  
                                  u2641 0453                                    u2625 042D  
                                  u2801 0548                                    u2561 079D  
                                  u1930 0EBC                                    u2730 04BD  
                                  u2810 054F                                    u1931 0EBB  
                                  u2731 04BC                                    u2635 044B  
                                  u2811 054E                                    u2555 0795  
                                  u1940 0ED0                                    u2660 0464  
                                  u2580 07B9                                    u1941 0ECF  
                                  u2661 0463                                    u2581 07B8  
                                  u1950 0EE4                                    u2590 03DF  
                                  u2830 056A                                    u2750 0510  
                                  u1951 0EE3                                    u2655 045B  
                                  u2591 03DE                                    u2831 0569  
                                  u2751 050F                                    u2575 07B0  
                                  u1880 08D7                                    u2680 047F  
                                  u2840 0574                                    u2760 0516  
                                  u1881 08D6                                    u2681 047E  
                                  u2841 0573                                    u2825 0561  
                                  u2761 0515                                    u2745 0507  
                                  u1890 08DD                                    u1970 0A5F  
                                  u2850 0579                                    u1891 08DC  
                                  u1971 0A5E                                    u2675 0476  
                                  u2851 0578                                    _PEIE 005E  
                                  u2860 0585                                    u2780 0531  
                                  u1965 0A4C                                    u2861 0584  
                                  u2781 0530                                    _INTE 005C  
                                  u1990 0D38                                    u2870 059F  
                                  _INTF 0059                                    u3807 0DC4  
                                  u2695 0486                                    u1991 0D37  
                                  u2871 059E                                    u2775 0528  
                                  u1985 0D25                                    u2795 0540  
                                  u3747 076D                                    _RCEN 048B  
                                  u3757 07A4                                    u3767 051C  
                                  u3777 0555                                    u3787 046A  
                                  u3797 0D95                                    _TMR1 000E  
                                  _RSEN 0489                                    _main 0C0A  
                       __end_of_SSD_OFF 08C5                        __end_of_I2C_Init 0BC0  
                                  btemp 007E                    EEPROM_WriteByte@data 00A3  
                      __end_of_ADC_Init 1000                  _EWH_getAvrgTempReading 0A02  
                                  start 0012                __size_of_EEPROM_ReadByte 005B  
              __size_of_EWH_EEPROM_Init 0010                __size_of_EWH_EEPROM_Read 000C  
                       __end_of_SW_Init 089C                            ?_EWH_SSD_OFF 0070  
                       _ADC_ReadChannel 09D7                                   ??_ISR 0044  
                         ___fltol@sign1 0042                                   ?_main 0070  
                                 _ACKEN 048C                                   _ACKDT 048D  
                       __end_of___awdiv 0E9B                         __end_of___awmod 0D13  
                      __end_of_EWH_Init 0B30                         __end_of___flmul 0398  
                       __end_of___fltol 0F82                         __end_of___lldiv 0E32  
                       ___awdiv@divisor 00A0                         __end_of___lwdiv 0B76  
                                 i1l325 09F3                                   i1l328 0A01  
                                 i1l601 0675                         __end_of___lwmod 0AEC  
                                 i1l275 07F9                                   i1l585 05C5  
                                 i1l587 05C4                                   i1l940 0F81  
                                 i1l950 0F81                                   i1l947 0F6C  
                       ___awdiv@counter 00A4           __size_of_I2C_Master_WriteByte 001E  
                                 _PORTA 0005                                   _PORTB 0006  
                                 _PORTC 0007                                   _PORTD 0008  
                                 _TRISA 0085                                   _TRISB 0086  
                                 _TRISC 0087                                   _TRISD 0088  
                                 _SSPIE 0463                                   _SSPEN 00A5  
                                 _SSPIF 0063                      __size_of_TMR1_Init 004A  
                           ?_TMR1_Start 0070                      __size_of_TMR1_Stop 0004  
                                 pclath 000A                                   status 0003  
                                 wtemp0 007E                      __size_of_SSD_Write 001D  
                __size_of_I2C_Wait_IDLE 000D                         __initialization 0015  
             __size_of_EWH_SetTemp_Mode 00DB                            __end_of_main 0C5E  
                ?_I2C_Master_Send_Start 0070                             ?_SSD_config 00A0  
                                ??_main 00BB                               ??_DD_Init 00A0  
                       _EWH_WakeUP_Mode 073A                                  _ADCON0 001F  
                                _ADCON1 009F                               ??_SSD_OFF 00A4  
                                _ADRESH 001E                                  _ADRESL 009E  
                      ___awdiv@dividend 00A2                                  i1l1200 0703  
                                i1l1201 070F                                  i1l1143 0397  
                                i1l1162 099B                                  i1l1155 038B  
                                i1l1164 09AD                                  i1l1149 0303  
                                i1l1187 06A2                                  i1l1189 0739  
                                i1l3310 07D9                                  i1l3304 07CC  
                                i1l3400 007A                                  i1l3330 09F7  
                                i1l3090 09A4                                  i1l3082 0988  
                                i1l3410 0096                                  i1l3402 007F  
                                i1l3324 09D8                                  i1l3092 09A9  
                                i1l3084 098A                                  i1l3500 0371  
                                i1l3420 00C1                                  i1l3412 009B  
                                i1l3404 0087                                  i1l3340 0F1C  
                                i1l3326 09EB                                  i1l3318 07E6  
                                i1l3086 0991                                  i1l3510 038F  
                                i1l3502 0377                                  i1l3430 015E  
                                i1l3422 00DE                                  i1l3406 0089  
                                i1l3350 0F40                                  i1l3342 0F31  
                                i1l3334 0F06                                  i1l3328 09F0  
                                i1l3088 0995                                  i1l3504 037F  
                                i1l3440 01C1                                  i1l3432 0167  
                                i1l3424 00FA                                  i1l3416 00A4  
                                i1l3408 0091                                  i1l3360 0F5A  
                                i1l3344 0F32                                  i1l3336 0F13  
                                i1l3520 069A                                  i1l3506 0383  
                                i1l3450 0261                                  i1l3442 01DA  
                                i1l3434 0177                                  i1l3426 0126  
                                i1l3418 00B4                                  i1l3370 0F76  
                                i1l3346 0F3A                                  i1l3530 06BC  
                                i1l3522 06AA                                  i1l3514 0681  
                                i1l3508 0384                                  i1l3460 02CF  
                                i1l3452 0287                                  i1l3444 01F7  
                                i1l3436 0194                                  i1l3428 0142  
                                i1l3380 0049                                  i1l3372 0037  
                                i1l3356 0F48                                  i1l3348 0F3C  
                                i1l3540 06E7                                  i1l3532 06C5  
                                i1l3516 0686                                  i1l3700 0657  
                                i1l3470 02E7                                  i1l3462 02D3  
                                i1l3454 02AF                                  i1l3446 0224  
                                i1l3438 01A4                                  i1l3390 0065  
                                i1l3382 004E                                  i1l3374 003E  
                                i1l3366 0F61                                  i1l3358 0F51  
                                i1l3550 0711                                  i1l3542 06EE  
                                i1l3534 06CC                                  i1l3526 06B3  
                                i1l3518 068A                                  i1l3702 065F  
                                i1l3710 0670                                  i1l3296 07BE  
                                i1l3480 0308                                  i1l3472 02E8  
                                i1l3464 02D4                                  i1l3456 02B8  
                                i1l3448 0234                                  i1l3392 006A  
                                i1l3384 0053                                  i1l3376 0044  
                                i1l3368 0F71                                  i1l3552 0727  
                                i1l3544 06F9                                  i1l3536 06D0  
                                i1l3528 06B8                                  i1l3712 0671  
                                i1l3704 066A                                  i1l3298 07BF  
                                i1l3482 030D                                  i1l3490 033E  
                                i1l3474 02EC                                  i1l3466 02DD  
                                i1l3458 02C6                                  i1l3394 0070  
                                i1l3386 005B                                  i1l3378 0048  
                                i1l3554 072C                                  i1l3546 06FD  
                                i1l3538 06DE                                  i1l3492 034B  
                                i1l3484 031B                                  i1l3476 0300  
                                i1l3468 02E3                                  i1l3396 0074  
                                i1l3388 005D                                  i1l3556 0730  
                                i1l3548 0707                                  i1l3708 066D  
                                i1l3494 0356                                  i1l3486 031F  
                                i1l3398 0075                                  i1l3558 0731  
                                i1l3670 05B4                                  i1l3496 0365  
                                i1l3488 0338                                  i1l3680 05D6  
                                i1l3672 05B9                                  i1l3664 05A5  
                                i1l3498 036F                                  i1l3690 0633  
                                i1l3682 061C                                  i1l3674 05BE  
                                i1l3666 05A9                                  i1l3692 0639  
                                i1l3684 0624                                  i1l3676 05CA  
                                i1l3668 05AD                                  u300_25 0F63  
                                i1l3686 062C                                  i1l3694 063D  
                                i1l3678 05CE                                  i1l3936 07EE  
                                u301_20 0F71                                  i1l3696 0645  
                                i1l3688 062D                                  u301_21 0F70  
                                i1l3698 0650                                  u310_20 009B  
                                u302_20 0F76                                  u310_21 009A  
                                u302_21 0F75                                  _INTEDG 040E  
                                u303_20 0048                                  u311_21 00EC  
                                u303_21 0047                                  u311_22 00F3  
                                u311_23 00FA                                  u304_20 004E  
                                u320_21 0216                                  u312_21 0108  
                                u304_21 004D                                  u320_22 021D  
                                u312_22 010F                                  u320_23 0224  
                                u312_23 0116                                  u305_20 0053  
                                u321_21 0243                                  u313_21 0134  
                                u305_21 0052                                  u321_22 024A  
                                u313_22 013B                                  u321_23 0251  
                                u313_23 0142                                  u250_20 09A9  
                                u330_20 02E7                                  u322_20 026D  
                                u306_20 0074                                  u250_21 09A8  
                                u330_21 02E6                                  u314_21 0150  
                                u306_21 0073                                  u314_22 0157  
                                u314_23 015E                                  u322_25 0268  
                                u331_20 02EC                                  u307_20 007A  
                                u331_21 02EB                                  u323_21 0279  
                                u307_21 0079                                  u323_22 0280  
                                u323_23 0287                                  u315_25 0160  
                                u332_20 0300                                  u324_20 0295  
                                u308_20 007F                                  u340_20 0686  
                                u332_21 02FF                                  u316_21 0186  
                                u308_21 007E                                  u340_21 0685  
                                u316_22 018D                                  u316_23 0194  
                                u324_25 0290                                  u333_20 0307  
                                u309_20 0096                                  u341_20 068A  
                                u333_21 0306                                  u325_21 02A1  
                                u317_21 01B3                                  u309_21 0095  
                                u341_21 0689                                  u325_22 02A8  
                                u317_22 01BA                                  u325_23 02AF  
                                u317_23 01C1                                  u334_20 030D  
                                u350_20 0707                                  u342_20 06AA  
                                u334_21 030C                                  u350_21 0706  
                                u342_21 06A9                                  u326_25 02B1  
                                u318_25 01C3                                  u335_20 031F  
                                u351_20 071C                                  u335_21 031E  
                                u319_21 01E9                                  u319_22 01F0  
                                u319_23 01F7                                  u327_25 02C8  
                                u351_25 0717                                  u343_25 06BD  
                                u248_20 0995                                  u336_20 032E  
                                u328_20 02D3                                  u352_20 072C  
                                u344_20 06CB                                  u248_21 0994  
                                u328_21 02D2                                  u352_21 072B  
                                u344_21 06CA                                  u336_25 0329  
                                u337_20 034B                                  u353_20 0730  
                                u337_21 034A                                  u353_21 072F  
                                u249_25 099C                                  u337_25 0347  
                                u329_25 02D6                                  u345_25 06DF  
                                u338_20 0365                                  u346_20 06ED  
                                u370_20 0645                                  u362_20 05A9  
                                u338_21 0364                                  u346_21 06EC  
                                u370_21 0644                                  u362_21 05A8  
                                u290_25 07DE                                  u338_25 0361  
                                u339_20 0383                                  u371_20 0650  
                                u363_20 05B4                                  u339_21 0382  
                                u371_21 064F                                  u363_21 05B3  
                                u291_25 09E1                                  u347_25 06F2  
                                u292_20 09F7                                  u348_20 06FD  
                                u372_20 065F                                  u364_20 05BE  
                                u292_21 09F6                                  u348_21 06FC  
                                u372_21 065E                                  u364_21 05BD  
                                u293_20 0F13                                  u349_20 0703  
                                u373_20 066A                                  u365_20 05CA  
                                u293_21 0F12                                  u349_21 0702  
                                u373_21 0669                                  u365_21 05C9  
                                u381_27 09ED                                  u294_20 0F2A  
                                u366_20 05D6                                  u366_21 05D5  
                                u294_25 0F25                                  u295_20 0F40  
                                u367_20 0624                                  u295_21 0F3F  
                                u367_21 0623                                  u296_20 0F47  
                                u368_20 062C                                  u296_21 0F46  
                                u368_21 062B                                  u288_25 07C4  
                                u369_20 0639                                  u369_21 0638  
                                u289_25 07D1                                  u297_25 0F49  
                                u298_20 0F59                                  u298_21 0F58  
                                u299_20 0F60                                  u299_21 0F5F  
                             ??_SW_Init 00A0                                  _TMR1IE 0460  
                                _TMR1IF 0060                                  _TMR1ON 0080  
                                _SSPADD 0093                                  _SSPCON 0014  
                                _SSPBUF 0013                 __end_of_ADC_ReadChannel 0A02  
                      __end_of___xxtofl 073A                    __size_of_DD_GetState 003D  
                         _ReadingBuffer 00CB                       __end_of_TMR1_Init 0C0A  
                     __end_of_TMR1_Stop 07FE                               ??___awdiv 00A4  
                             ??___awmod 00A4                               ??___flmul 0028  
                             ??___fltol 003E                               ??___lldiv 00A8  
                   __size_of_TMR1_Start 0010                               ??___lwdiv 00A4  
                             ??___lwmod 00A4                 __size_of_EWH_SSD_Update 005C  
                     ??_EEPROM_ReadByte 00A4                       ??_EWH_EEPROM_Init 00A6  
                     ??_EWH_EEPROM_Read 00A7                   ADC_ReadChannel@result 0073  
                  __size_of_DD_SetState 005A                        ___awdiv@quotient 00A6  
                       ___awmod@divisor 00A0                         ___awmod@counter 00A4  
              __end_of_EEPROM_WriteByte 0A75                       __end_of_SSD_Write 0969  
                             ?_I2C_Init 0070                      __size_of__Umul8_16 0027  
                         _I2C_Wait_IDLE 08D1                               ?_ADC_Init 0070  
                                saved_w 007E                     _I2C_Master_ReadByte 09AE  
                          ___xxtofl@arg 007A                            ___xxtofl@exp 0079  
                          ___xxtofl@val 0070                 __end_of__initialization 0033  
                   _I2C_Master_Send_ACK 089C                     __size_of_SSD_config 006B  
            __end_of_EWH_Operating_Mode 04CA                              ___fltol@f1 003A  
                          SSD_config@ID 00A3                               ?_EWH_Init 0070  
                     _ReadingBufferFull 00C5                          _TempavgReading 00C4  
                        __pcstackCOMMON 0070                            __pidataBANK1 08B0  
                  __size_of_EWH_SSD_OFF 000D                    ?_I2C_Master_ReadByte 0070  
               __end_of_EWH_WakeUP_Mode 07BD                        EWH_Init@TMR1_cfg 00AF  
                  ?_I2C_Master_Send_ACK 0070                      EWH_Init@i2c_config 00B1  
                        ?_I2C_Wait_IDLE 0070                              ??_I2C_Init 00AE  
                            ??_ADC_Init 00A0     EWH_getAvrgTempReading@sumOfReadings 00AB  
                            __pbssBANK0 004A                              __pbssBANK1 00BD  
               ?_EWH_getAvrgTempReading 00A7                        ?_ADC_ReadChannel 0070  
                            ??_EWH_Init 00AF                     SSD_config@SSD_state 00A0  
                     __end_of__Umul8_16 09AE                              __pmaintext 0C0A  
          __end_of_I2C_Master_Send_NACK 08B0                        _EWH_SetTemp_Mode 04CA  
          __end_of_I2C_Master_Send_Stop 0893                   ??_I2C_Master_ReadByte 00A0  
                            __pintentry 0004                                 _ACKSTAT 048E  
                 ??_I2C_Master_Send_ACK 00A0                                 _T1CKPS0 0084  
                               _T1CKPS1 0085                                 _DD_Init 092F  
                             ?___xxtofl 0070                            ??_TMR1_Start 00A0  
        __end_of_EWH_getAvrgTempReading 0A3A                                 _SSPCON2 0091  
                               _SSD_OFF 08BA                                 _SSPSTAT 0094  
                             SSD_OFF@ID 00A4                                 _SW_Init 0893  
          __end_of_I2C_Master_WriteByte 0987                 __size_of_EWH_Sleep_Mode 003B  
               ??_I2C_Master_Send_Start 00A0                                 ___awdiv 0E32  
                               ___awmod 0CB8                                 ___flmul 0037  
                               ___fltol 0F06                                 ___lldiv 0DCA  
                ADC_ReadChannel@channel 0075                                 ___lwdiv 0B30  
                        _EWH_SSD_Update 0D6E                                 ___lwmod 0AB0  
                    __end_of_TMR1_Start 090B                        ?_EWH_WakeUP_Mode 0070  
                          ??_SSD_config 00A1                         ??_I2C_Wait_IDLE 00A0  
                               __ptext1 073A                                 __ptext2 0A75  
                               __ptext3 04CA                                 __ptext4 08DE  
                               __ptext5 090B                                 __ptext6 08C5  
                               __ptext7 0D13                                 __ptext8 09AE  
                               __ptext9 08A6                            __size_of_ISR 00DB  
                EEPROM_ReadByte@address 00A2                              ??___xxtofl 0074  
                    EWH_Init@adc_config 00B7                        ___awmod@dividend 00A2  
               EEPROM_WriteByte@address 00A1                                 clrloop0 0871  
                  end_of_initialization 0033                      __end_of_SSD_config 0F06  
                             _EWH_State 0052                         _EEPROM_ReadByte 0D13  
                       _EWH_EEPROM_Init 08EB                         _EWH_EEPROM_Read 08C5  
                       ___lldiv@divisor 00A0                         ___lldiv@counter 00AD  
                __end_of_EWH_SSD_Update 0DCA                        DD_SetState@state 00A0  
                             _TMR1_Init 0BC0                               _TMR1_Stop 07FA  
                     ?_EEPROM_WriteByte 00A1                      ??_EEPROM_WriteByte 00A4  
                         ___xxtofl@sign 0078                       __size_of_I2C_Init 004A  
                  _I2C_Master_Send_NACK 08A6                               _SSD_Write 094C  
                     __size_of_ADC_Init 007E                    _I2C_Master_Send_Stop 088A  
                         ??_DD_GetState 0070                             ___flmul@grs 002E  
                       ?_EWH_SSD_Update 00AA                       __size_of_EWH_Init 0044  
                         ??_DD_SetState 00A1                              ?_TMR1_Init 0070  
                    _EWH_Operating_Mode 0398                              ?_TMR1_Stop 0070  
                  _I2C_Master_WriteByte 0969                     start_initialization 0015  
                           __end_of_ISR 0680                     ?_EWH_Operating_Mode 0070  
                 ?_I2C_Master_Send_NACK 0070                __end_of_EWH_SetTemp_Mode 05A5  
                            ?_SSD_Write 00A8                   ?_I2C_Master_Send_Stop 0070  
               __end_of_EEPROM_ReadByte 0D6E                 __end_of_EWH_EEPROM_Init 08FB  
               __end_of_EWH_EEPROM_Read 08D1            EWH_getAvrgTempReading@buffer 00AE  
  EWH_getAvrgTempReading@averageReading 00AD            EWH_getAvrgTempReading@length 00A7  
       ??_I2C_Master_Send_RepeatedStart 00A0                       _TempReading_count 00C7  
                         ??_EWH_SSD_OFF 00A5                     __end_of_DD_GetState 07FA  
                        _EWH_Sleep_Mode 0A75                    ??_EWH_Operating_Mode 00B0  
                        ADC_Init@config 00A2                             SSD_Write@ID 00A9  
                            init_fetch0 091C                               __Umul8_16 0987  
                           __pdataBANK1 00D5                              ISR@Reading 0048  
                   __end_of_DD_SetState 0CB8                   ?_I2C_Master_WriteByte 0070  
                              ?_DD_Init 0070                               ___flmul@a 0024  
                             ___flmul@b 0020                           _Devices_State 00C1  
                             ___latbits 0002                           __pcstackBANK0 0020  
                         __pcstackBANK1 00A0                       __size_of___xxtofl 00BA  
                              ?_SSD_OFF 0070                         _SW_StateControl 004D  
                              ?_SW_Init 0070                            _current_Temp 00C8  
                __end_of_EWH_Sleep_Mode 0AB0             __end_of_I2C_Master_ReadByte 09D7  
                              ISR@count 0050                        ___lwdiv@dividend 00A2  
           __end_of_I2C_Master_Send_ACK 08A6                                ?___awdiv 00A0  
                              ?___awmod 00A0                                ?___flmul 0020  
                              ?___fltol 003A                                ?___lldiv 00A0  
                            ?__Umul8_16 0070                __size_of_ADC_ReadChannel 002B  
                              ?___lwdiv 00A0                                ?___lwmod 00A0  
        __size_of_I2C_Master_Send_Start 0009           __end_of_I2C_Master_Send_Start 088A  
                   __end_of_EWH_SSD_OFF 08EB                             ??_TMR1_Init 00A0  
                           ??_TMR1_Stop 00A0                                _I2C_Init 0B76  
                              _ADC_Init 0F82                  ??_I2C_Master_Send_NACK 00A0  
                ??_I2C_Master_Send_Stop 00A0                       DD_GetState@device 0072  
                           ??_SSD_Write 00A9                        ___lwdiv@quotient 00A4  
                      ?_EEPROM_ReadByte 00A2                        ?_EWH_EEPROM_Init 0070  
                      ?_EWH_EEPROM_Read 0070                             _DD_GetState 07BD  
                       SSD_Write@Number 00A8                       interrupt_function 0004  
                             clear_ram0 0870                         ?_EWH_Sleep_Mode 0070  
                              _EWH_Init 0AEC                                _EWH_Mode 00CA  
 __end_of_I2C_Master_Send_RepeatedStart 0881  __size_of_I2C_Master_Send_RepeatedStart 0009  
         _I2C_Master_Send_RepeatedStart 0878                             _DD_SetState 0C5E  
         I2C_Master_ReadByte@Read_State 00A1                  ??_I2C_Master_WriteByte 00A0  
                              _SSD_code 00D5                      EWH_SSD_Update@temp 00AA  
                 __end_of_I2C_Wait_IDLE 08DE                        __size_of_DD_Init 001D  
              __size_of_EWH_WakeUP_Mode 0083                                _SW_State 004A  
                      __size_of_SSD_OFF 000B               __size_of_EEPROM_WriteByte 003B  
                      ??_EWH_SSD_Update 00AC                        __size_of_SW_Init 0009  
               EWH_getAvrgTempReading@i 00AF                             _EWH_SSD_OFF 08DE  
                           ??__Umul8_16 0072                        __size_of___awdiv 0069  
                      __size_of___awmod 005B                        __size_of___flmul 0361  
                      __size_of___fltol 007C                        __size_of___lldiv 0068  
                      __size_of___lwdiv 0046                        __size_of___lwmod 003C  
           EWH_EEPROM_Update@newSetTemp 00A6                ??_EWH_getAvrgTempReading 00A8  
                     ??_ADC_ReadChannel 0072                                ___xxtofl 0680  
                     _NoPress_Sec_count 0051                         ___lwdiv@divisor 00A0  
                       ___lwdiv@counter 00A6                                __ptext10 089C  
                              __ptext11 0398                                __ptext20 094C  
                              __ptext12 0CB8                                __ptext21 08BA  
                              __ptext13 07FA                                __ptext30 0A3A  
                              __ptext22 0E9B                                __ptext14 08FB  
                              __ptext31 0969                                __ptext23 0C5E  
                              __ptext15 0A02                                __ptext40 0F06  
                              __ptext32 088A                                __ptext24 0AEC  
                              __ptext16 0B30                                __ptext41 0037  
                              __ptext33 0881                                __ptext25 0BC0  
                              __ptext17 0D6E                                __ptext42 0987  
                              __ptext34 0878                                __ptext26 0893  
                              __ptext18 0AB0                                __ptext43 07BD  
                              __ptext35 08D1                                __ptext27 0B76  
                              __ptext19 0E32                                __ptext44 09D7  
                              __ptext36 092F                                __ptext28 0DCA  
                              __ptext37 0F82                                __ptext29 08EB  
                              __ptext38 05A5                                __ptext39 0680  
                     _EWH_EEPROM_Update 090B                       ?_EWH_SetTemp_Mode 0070  
                    ?_EWH_EEPROM_Update 0070                      ??_EWH_SetTemp_Mode 00AE  
                         __size_of_main 0054                     ??_EWH_EEPROM_Update 00A6  
                              _set_Temp 00C9          ?_I2C_Master_Send_RepeatedStart 0070  
             __end_of_EWH_EEPROM_Update 091C                                init_ram0 0920  
                            _EWH_Events 00BD                                intlevel1 0000  
                      ___lwmod@dividend 00A2                       ??_EWH_WakeUP_Mode 00AE  
                      ___lldiv@dividend 00A4                     EEPROM_ReadByte@data 00A6  
           __size_of_EWH_Operating_Mode 0132                       DD_SetState@device 00A3  
                __Umul8_16@multiplicand 0070         __size_of_EWH_getAvrgTempReading 0038  
                      ___lldiv@quotient 00A9                         ___lwmod@divisor 00A0  
                       ___lwmod@counter 00A4                          _SSD_Blink_flag 00C6  
                            _TMR1_Start 08FB                I2C_Master_WriteByte@Data 00A0  
                      ??_EWH_Sleep_Mode 00A5                            ?_DD_GetState 0070  
                      _EEPROM_WriteByte 0A3A                    __Umul8_16@multiplier 0078  
                     __Umul8_16@product 0074  
