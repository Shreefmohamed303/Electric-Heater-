

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Jul 11 06:41:52 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	intentry,global,class=CODE,delta=2
    54                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text43,local,class=CODE,merge=1,delta=2
    59                           	psect	text44,local,class=CODE,merge=1,delta=2
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    61                           	dabs	1,0x7E,2
    62  0000                     
    63                           ; Version 2.20
    64                           ; Generated 12/02/2020 GMT
    65                           ; 
    66                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC16F877A Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     	;# 
    98  0001                     	;# 
    99  0002                     	;# 
   100  0003                     	;# 
   101  0004                     	;# 
   102  0005                     	;# 
   103  0006                     	;# 
   104  0007                     	;# 
   105  0008                     	;# 
   106  0009                     	;# 
   107  000A                     	;# 
   108  000B                     	;# 
   109  000C                     	;# 
   110  000D                     	;# 
   111  000E                     	;# 
   112  000E                     	;# 
   113  000F                     	;# 
   114  0010                     	;# 
   115  0011                     	;# 
   116  0012                     	;# 
   117  0013                     	;# 
   118  0014                     	;# 
   119  0015                     	;# 
   120  0015                     	;# 
   121  0016                     	;# 
   122  0017                     	;# 
   123  0018                     	;# 
   124  0019                     	;# 
   125  001A                     	;# 
   126  001B                     	;# 
   127  001B                     	;# 
   128  001C                     	;# 
   129  001D                     	;# 
   130  001E                     	;# 
   131  001F                     	;# 
   132  0081                     	;# 
   133  0085                     	;# 
   134  0086                     	;# 
   135  0087                     	;# 
   136  0088                     	;# 
   137  0089                     	;# 
   138  008C                     	;# 
   139  008D                     	;# 
   140  008E                     	;# 
   141  0091                     	;# 
   142  0092                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0098                     	;# 
   146  0099                     	;# 
   147  009C                     	;# 
   148  009D                     	;# 
   149  009E                     	;# 
   150  009F                     	;# 
   151  010C                     	;# 
   152  010D                     	;# 
   153  010E                     	;# 
   154  010F                     	;# 
   155  018C                     	;# 
   156  018D                     	;# 
   157  0000                     	;# 
   158  0001                     	;# 
   159  0002                     	;# 
   160  0003                     	;# 
   161  0004                     	;# 
   162  0005                     	;# 
   163  0006                     	;# 
   164  0007                     	;# 
   165  0008                     	;# 
   166  0009                     	;# 
   167  000A                     	;# 
   168  000B                     	;# 
   169  000C                     	;# 
   170  000D                     	;# 
   171  000E                     	;# 
   172  000E                     	;# 
   173  000F                     	;# 
   174  0010                     	;# 
   175  0011                     	;# 
   176  0012                     	;# 
   177  0013                     	;# 
   178  0014                     	;# 
   179  0015                     	;# 
   180  0015                     	;# 
   181  0016                     	;# 
   182  0017                     	;# 
   183  0018                     	;# 
   184  0019                     	;# 
   185  001A                     	;# 
   186  001B                     	;# 
   187  001B                     	;# 
   188  001C                     	;# 
   189  001D                     	;# 
   190  001E                     	;# 
   191  001F                     	;# 
   192  0081                     	;# 
   193  0085                     	;# 
   194  0086                     	;# 
   195  0087                     	;# 
   196  0088                     	;# 
   197  0089                     	;# 
   198  008C                     	;# 
   199  008D                     	;# 
   200  008E                     	;# 
   201  0091                     	;# 
   202  0092                     	;# 
   203  0093                     	;# 
   204  0094                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  009F                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  000E                     	;# 
   232  000E                     	;# 
   233  000F                     	;# 
   234  0010                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001D                     	;# 
   250  001E                     	;# 
   251  001F                     	;# 
   252  0081                     	;# 
   253  0085                     	;# 
   254  0086                     	;# 
   255  0087                     	;# 
   256  0088                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  0091                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  010C                     	;# 
   272  010D                     	;# 
   273  010E                     	;# 
   274  010F                     	;# 
   275  018C                     	;# 
   276  018D                     	;# 
   277  0000                     	;# 
   278  0001                     	;# 
   279  0002                     	;# 
   280  0003                     	;# 
   281  0004                     	;# 
   282  0005                     	;# 
   283  0006                     	;# 
   284  0007                     	;# 
   285  0008                     	;# 
   286  0009                     	;# 
   287  000A                     	;# 
   288  000B                     	;# 
   289  000C                     	;# 
   290  000D                     	;# 
   291  000E                     	;# 
   292  000E                     	;# 
   293  000F                     	;# 
   294  0010                     	;# 
   295  0011                     	;# 
   296  0012                     	;# 
   297  0013                     	;# 
   298  0014                     	;# 
   299  0015                     	;# 
   300  0015                     	;# 
   301  0016                     	;# 
   302  0017                     	;# 
   303  0018                     	;# 
   304  0019                     	;# 
   305  001A                     	;# 
   306  001B                     	;# 
   307  001B                     	;# 
   308  001C                     	;# 
   309  001D                     	;# 
   310  001E                     	;# 
   311  001F                     	;# 
   312  0081                     	;# 
   313  0085                     	;# 
   314  0086                     	;# 
   315  0087                     	;# 
   316  0088                     	;# 
   317  0089                     	;# 
   318  008C                     	;# 
   319  008D                     	;# 
   320  008E                     	;# 
   321  0091                     	;# 
   322  0092                     	;# 
   323  0093                     	;# 
   324  0094                     	;# 
   325  0098                     	;# 
   326  0099                     	;# 
   327  009C                     	;# 
   328  009D                     	;# 
   329  009E                     	;# 
   330  009F                     	;# 
   331  010C                     	;# 
   332  010D                     	;# 
   333  010E                     	;# 
   334  010F                     	;# 
   335  018C                     	;# 
   336  018D                     	;# 
   337  0000                     	;# 
   338  0001                     	;# 
   339  0002                     	;# 
   340  0003                     	;# 
   341  0004                     	;# 
   342  0005                     	;# 
   343  0006                     	;# 
   344  0007                     	;# 
   345  0008                     	;# 
   346  0009                     	;# 
   347  000A                     	;# 
   348  000B                     	;# 
   349  000C                     	;# 
   350  000D                     	;# 
   351  000E                     	;# 
   352  000E                     	;# 
   353  000F                     	;# 
   354  0010                     	;# 
   355  0011                     	;# 
   356  0012                     	;# 
   357  0013                     	;# 
   358  0014                     	;# 
   359  0015                     	;# 
   360  0015                     	;# 
   361  0016                     	;# 
   362  0017                     	;# 
   363  0018                     	;# 
   364  0019                     	;# 
   365  001A                     	;# 
   366  001B                     	;# 
   367  001B                     	;# 
   368  001C                     	;# 
   369  001D                     	;# 
   370  001E                     	;# 
   371  001F                     	;# 
   372  0081                     	;# 
   373  0085                     	;# 
   374  0086                     	;# 
   375  0087                     	;# 
   376  0088                     	;# 
   377  0089                     	;# 
   378  008C                     	;# 
   379  008D                     	;# 
   380  008E                     	;# 
   381  0091                     	;# 
   382  0092                     	;# 
   383  0093                     	;# 
   384  0094                     	;# 
   385  0098                     	;# 
   386  0099                     	;# 
   387  009C                     	;# 
   388  009D                     	;# 
   389  009E                     	;# 
   390  009F                     	;# 
   391  010C                     	;# 
   392  010D                     	;# 
   393  010E                     	;# 
   394  010F                     	;# 
   395  018C                     	;# 
   396  018D                     	;# 
   397  0000                     	;# 
   398  0001                     	;# 
   399  0002                     	;# 
   400  0003                     	;# 
   401  0004                     	;# 
   402  0005                     	;# 
   403  0006                     	;# 
   404  0007                     	;# 
   405  0008                     	;# 
   406  0009                     	;# 
   407  000A                     	;# 
   408  000B                     	;# 
   409  000C                     	;# 
   410  000D                     	;# 
   411  000E                     	;# 
   412  000E                     	;# 
   413  000F                     	;# 
   414  0010                     	;# 
   415  0011                     	;# 
   416  0012                     	;# 
   417  0013                     	;# 
   418  0014                     	;# 
   419  0015                     	;# 
   420  0015                     	;# 
   421  0016                     	;# 
   422  0017                     	;# 
   423  0018                     	;# 
   424  0019                     	;# 
   425  001A                     	;# 
   426  001B                     	;# 
   427  001B                     	;# 
   428  001C                     	;# 
   429  001D                     	;# 
   430  001E                     	;# 
   431  001F                     	;# 
   432  0081                     	;# 
   433  0085                     	;# 
   434  0086                     	;# 
   435  0087                     	;# 
   436  0088                     	;# 
   437  0089                     	;# 
   438  008C                     	;# 
   439  008D                     	;# 
   440  008E                     	;# 
   441  0091                     	;# 
   442  0092                     	;# 
   443  0093                     	;# 
   444  0094                     	;# 
   445  0098                     	;# 
   446  0099                     	;# 
   447  009C                     	;# 
   448  009D                     	;# 
   449  009E                     	;# 
   450  009F                     	;# 
   451  010C                     	;# 
   452  010D                     	;# 
   453  010E                     	;# 
   454  010F                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457  0000                     	;# 
   458  0001                     	;# 
   459  0002                     	;# 
   460  0003                     	;# 
   461  0004                     	;# 
   462  0005                     	;# 
   463  0006                     	;# 
   464  0007                     	;# 
   465  0008                     	;# 
   466  0009                     	;# 
   467  000A                     	;# 
   468  000B                     	;# 
   469  000C                     	;# 
   470  000D                     	;# 
   471  000E                     	;# 
   472  000E                     	;# 
   473  000F                     	;# 
   474  0010                     	;# 
   475  0011                     	;# 
   476  0012                     	;# 
   477  0013                     	;# 
   478  0014                     	;# 
   479  0015                     	;# 
   480  0015                     	;# 
   481  0016                     	;# 
   482  0017                     	;# 
   483  0018                     	;# 
   484  0019                     	;# 
   485  001A                     	;# 
   486  001B                     	;# 
   487  001B                     	;# 
   488  001C                     	;# 
   489  001D                     	;# 
   490  001E                     	;# 
   491  001F                     	;# 
   492  0081                     	;# 
   493  0085                     	;# 
   494  0086                     	;# 
   495  0087                     	;# 
   496  0088                     	;# 
   497  0089                     	;# 
   498  008C                     	;# 
   499  008D                     	;# 
   500  008E                     	;# 
   501  0091                     	;# 
   502  0092                     	;# 
   503  0093                     	;# 
   504  0094                     	;# 
   505  0098                     	;# 
   506  0099                     	;# 
   507  009C                     	;# 
   508  009D                     	;# 
   509  009E                     	;# 
   510  009F                     	;# 
   511  010C                     	;# 
   512  010D                     	;# 
   513  010E                     	;# 
   514  010F                     	;# 
   515  018C                     	;# 
   516  018D                     	;# 
   517  0000                     	;# 
   518  0001                     	;# 
   519  0002                     	;# 
   520  0003                     	;# 
   521  0004                     	;# 
   522  0005                     	;# 
   523  0006                     	;# 
   524  0007                     	;# 
   525  0008                     	;# 
   526  0009                     	;# 
   527  000A                     	;# 
   528  000B                     	;# 
   529  000C                     	;# 
   530  000D                     	;# 
   531  000E                     	;# 
   532  000E                     	;# 
   533  000F                     	;# 
   534  0010                     	;# 
   535  0011                     	;# 
   536  0012                     	;# 
   537  0013                     	;# 
   538  0014                     	;# 
   539  0015                     	;# 
   540  0015                     	;# 
   541  0016                     	;# 
   542  0017                     	;# 
   543  0018                     	;# 
   544  0019                     	;# 
   545  001A                     	;# 
   546  001B                     	;# 
   547  001B                     	;# 
   548  001C                     	;# 
   549  001D                     	;# 
   550  001E                     	;# 
   551  001F                     	;# 
   552  0081                     	;# 
   553  0085                     	;# 
   554  0086                     	;# 
   555  0087                     	;# 
   556  0088                     	;# 
   557  0089                     	;# 
   558  008C                     	;# 
   559  008D                     	;# 
   560  008E                     	;# 
   561  0091                     	;# 
   562  0092                     	;# 
   563  0093                     	;# 
   564  0094                     	;# 
   565  0098                     	;# 
   566  0099                     	;# 
   567  009C                     	;# 
   568  009D                     	;# 
   569  009E                     	;# 
   570  009F                     	;# 
   571  010C                     	;# 
   572  010D                     	;# 
   573  010E                     	;# 
   574  010F                     	;# 
   575  018C                     	;# 
   576  018D                     	;# 
   577  0000                     	;# 
   578  0001                     	;# 
   579  0002                     	;# 
   580  0003                     	;# 
   581  0004                     	;# 
   582  0005                     	;# 
   583  0006                     	;# 
   584  0007                     	;# 
   585  0008                     	;# 
   586  0009                     	;# 
   587  000A                     	;# 
   588  000B                     	;# 
   589  000C                     	;# 
   590  000D                     	;# 
   591  000E                     	;# 
   592  000E                     	;# 
   593  000F                     	;# 
   594  0010                     	;# 
   595  0011                     	;# 
   596  0012                     	;# 
   597  0013                     	;# 
   598  0014                     	;# 
   599  0015                     	;# 
   600  0015                     	;# 
   601  0016                     	;# 
   602  0017                     	;# 
   603  0018                     	;# 
   604  0019                     	;# 
   605  001A                     	;# 
   606  001B                     	;# 
   607  001B                     	;# 
   608  001C                     	;# 
   609  001D                     	;# 
   610  001E                     	;# 
   611  001F                     	;# 
   612  0081                     	;# 
   613  0085                     	;# 
   614  0086                     	;# 
   615  0087                     	;# 
   616  0088                     	;# 
   617  0089                     	;# 
   618  008C                     	;# 
   619  008D                     	;# 
   620  008E                     	;# 
   621  0091                     	;# 
   622  0092                     	;# 
   623  0093                     	;# 
   624  0094                     	;# 
   625  0098                     	;# 
   626  0099                     	;# 
   627  009C                     	;# 
   628  009D                     	;# 
   629  009E                     	;# 
   630  009F                     	;# 
   631  010C                     	;# 
   632  010D                     	;# 
   633  010E                     	;# 
   634  010F                     	;# 
   635  018C                     	;# 
   636  018D                     	;# 
   637  0000                     	;# 
   638  0001                     	;# 
   639  0002                     	;# 
   640  0003                     	;# 
   641  0004                     	;# 
   642  0005                     	;# 
   643  0006                     	;# 
   644  0007                     	;# 
   645  0008                     	;# 
   646  0009                     	;# 
   647  000A                     	;# 
   648  000B                     	;# 
   649  000C                     	;# 
   650  000D                     	;# 
   651  000E                     	;# 
   652  000E                     	;# 
   653  000F                     	;# 
   654  0010                     	;# 
   655  0011                     	;# 
   656  0012                     	;# 
   657  0013                     	;# 
   658  0014                     	;# 
   659  0015                     	;# 
   660  0015                     	;# 
   661  0016                     	;# 
   662  0017                     	;# 
   663  0018                     	;# 
   664  0019                     	;# 
   665  001A                     	;# 
   666  001B                     	;# 
   667  001B                     	;# 
   668  001C                     	;# 
   669  001D                     	;# 
   670  001E                     	;# 
   671  001F                     	;# 
   672  0081                     	;# 
   673  0085                     	;# 
   674  0086                     	;# 
   675  0087                     	;# 
   676  0088                     	;# 
   677  0089                     	;# 
   678  008C                     	;# 
   679  008D                     	;# 
   680  008E                     	;# 
   681  0091                     	;# 
   682  0092                     	;# 
   683  0093                     	;# 
   684  0094                     	;# 
   685  0098                     	;# 
   686  0099                     	;# 
   687  009C                     	;# 
   688  009D                     	;# 
   689  009E                     	;# 
   690  009F                     	;# 
   691  010C                     	;# 
   692  010D                     	;# 
   693  010E                     	;# 
   694  010F                     	;# 
   695  018C                     	;# 
   696  018D                     	;# 
   697                           
   698                           	psect	idataBANK1
   699  08B1                     __pidataBANK1:
   700                           
   701                           ;initializer for _SSD_code
   702  08B1  343F               	retlw	63
   703  08B2  3406               	retlw	6
   704  08B3  345B               	retlw	91
   705  08B4  344F               	retlw	79
   706  08B5  3466               	retlw	102
   707  08B6  346D               	retlw	109
   708  08B7  347D               	retlw	125
   709  08B8  3407               	retlw	7
   710  08B9  347F               	retlw	127
   711  08BA  346F               	retlw	111
   712  000E                     _TMR1	set	14
   713  0008                     _PORTD	set	8
   714  0005                     _PORTA	set	5
   715  001E                     _ADRESH	set	30
   716  001F                     _ADCON0	set	31
   717  0007                     _PORTC	set	7
   718  0006                     _PORTB	set	6
   719  0013                     _SSPBUF	set	19
   720  0014                     _SSPCON	set	20
   721  0059                     _INTF	set	89
   722  005C                     _INTE	set	92
   723  0080                     _TMR1ON	set	128
   724  0060                     _TMR1IF	set	96
   725  0085                     _T1CKPS1	set	133
   726  0084                     _T1CKPS0	set	132
   727  0066                     _ADIF	set	102
   728  00F8                     _ADON	set	248
   729  0063                     _SSPIF	set	99
   730  005E                     _PEIE	set	94
   731  005F                     _GIE	set	95
   732  00A5                     _SSPEN	set	165
   733  0088                     _TRISD	set	136
   734  0085                     _TRISA	set	133
   735  009E                     _ADRESL	set	158
   736  009F                     _ADCON1	set	159
   737  0086                     _TRISB	set	134
   738  0087                     _TRISC	set	135
   739  0093                     _SSPADD	set	147
   740  0094                     _SSPSTAT	set	148
   741  0091                     _SSPCON2	set	145
   742  040E                     _INTEDG	set	1038
   743  0460                     _TMR1IE	set	1120
   744  040D                     _T0CS	set	1037
   745  0466                     _ADIE	set	1126
   746  048B                     _RCEN	set	1163
   747  048E                     _ACKSTAT	set	1166
   748  048C                     _ACKEN	set	1164
   749  048D                     _ACKDT	set	1165
   750  0489                     _RSEN	set	1161
   751  048A                     _PEN	set	1162
   752  0488                     _SEN	set	1160
   753  0463                     _SSPIE	set	1123
   754                           
   755                           	psect	cinit
   756  0015                     start_initialization:	
   757                           ; #config settings
   758                           
   759  0015                     __initialization:
   760                           
   761                           ; Initialize objects allocated to BANK1
   762  0015  1383               	bcf	3,7	;select IRP bank0
   763  0016  30DF               	movlw	low (__pdataBANK1+10)
   764  0017  00FD               	movwf	btemp+-1
   765  0018  3008               	movlw	high __pidataBANK1
   766  0019  00FE               	movwf	btemp
   767  001A  30B1               	movlw	low __pidataBANK1
   768  001B  00FF               	movwf	btemp+1
   769  001C  30D5               	movlw	low __pdataBANK1
   770  001D  0084               	movwf	4
   771  001E  120A  158A  2121  120A  118A  	fcall	init_ram0
   772                           
   773                           ; Clear objects allocated to BANK1
   774  0023  30BD               	movlw	low __pbssBANK1
   775  0024  0084               	movwf	4
   776  0025  30D5               	movlw	low (__pbssBANK1+24)
   777  0026  120A  158A  2071  120A  118A  	fcall	clear_ram0
   778                           
   779                           ; Clear objects allocated to BANK0
   780  002B  304A               	movlw	low __pbssBANK0
   781  002C  0084               	movwf	4
   782  002D  3053               	movlw	low (__pbssBANK0+9)
   783  002E  120A  158A  2071  120A  118A  	fcall	clear_ram0
   784  0033                     end_of_initialization:	
   785                           ;End of C runtime variable initialization code
   786                           
   787  0033                     __end_of__initialization:
   788  0033  0183               	clrf	3
   789  0034  120A  158A  2C0A   	ljmp	_main	;jump to C main() function
   790                           
   791                           	psect	bssBANK0
   792  004A                     __pbssBANK0:
   793  004A                     _SW_State:
   794  004A                     	ds	3
   795  004D                     _SW_StateControl:
   796  004D                     	ds	3
   797  0050                     ISR@count:
   798  0050                     	ds	1
   799  0051                     _NoPress_Sec_count:
   800  0051                     	ds	1
   801  0052                     _EWH_State:
   802  0052                     	ds	1
   803                           
   804                           	psect	bssBANK1
   805  00BD                     __pbssBANK1:
   806  00BD                     _EWH_Events:
   807  00BD                     	ds	4
   808  00C1                     _Devices_State:
   809  00C1                     	ds	3
   810  00C4                     _TempavgReading:
   811  00C4                     	ds	1
   812  00C5                     _ReadingBufferFull:
   813  00C5                     	ds	1
   814  00C6                     _SSD_Blink_flag:
   815  00C6                     	ds	1
   816  00C7                     _TempReading_count:
   817  00C7                     	ds	1
   818  00C8                     _current_Temp:
   819  00C8                     	ds	1
   820  00C9                     _set_Temp:
   821  00C9                     	ds	1
   822  00CA                     _EWH_Mode:
   823  00CA                     	ds	1
   824  00CB                     _ReadingBuffer:
   825  00CB                     	ds	10
   826                           
   827                           	psect	dataBANK1
   828  00D5                     __pdataBANK1:
   829  00D5                     _SSD_code:
   830  00D5                     	ds	10
   831                           
   832                           	psect	inittext
   833  091D                     init_fetch0:	
   834                           ;	Called with low address in FSR and high address in W
   835                           
   836  091D  087E               	movf	btemp,w
   837  091E  008A               	movwf	10
   838  091F  087F               	movf	btemp+1,w
   839  0920  0082               	movwf	2
   840  0921                     init_ram0:	
   841                           ;Called with:
   842                           ;	high address of idata address in btemp 
   843                           ;	low address of idata address in btemp+1 
   844                           ;	low address of data in FSR
   845                           ;	high address + 1 of data in btemp-1
   846                           
   847  0921  120A  158A  211D  120A  158A  	fcall	init_fetch0
   848  0926  0080               	movwf	0
   849  0927  0A84               	incf	4,f
   850  0928  0804               	movf	4,w
   851  0929  067D               	xorwf	btemp+-1,w
   852  092A  1903               	btfsc	3,2
   853  092B  3400               	retlw	0
   854  092C  0AFF               	incf	btemp+1,f
   855  092D  1903               	btfsc	3,2
   856  092E  0AFE               	incf	btemp,f
   857  092F  2921               	goto	init_ram0
   858                           
   859                           	psect	clrtext
   860  0871                     clear_ram0:	
   861                           ;	Called with FSR containing the base address, and
   862                           ;	W with the last address+1
   863                           
   864  0871  0064               	clrwdt	;clear the watchdog before getting into this loop
   865  0872                     clrloop0:
   866  0872  0180               	clrf	0	;clear RAM location pointed to by FSR
   867  0873  0A84               	incf	4,f	;increment pointer
   868  0874  0604               	xorwf	4,w	;XOR with final address
   869  0875  1903               	btfsc	3,2	;have we reached the end yet?
   870  0876  3400               	retlw	0	;all done for this memory range, return
   871  0877  0604               	xorwf	4,w	;XOR again to restore value
   872  0878  2872               	goto	clrloop0	;do the next byte
   873                           
   874                           	psect	cstackBANK1
   875  00A0                     __pcstackBANK1:
   876  00A0                     ??_I2C_Master_Send_Start:
   877  00A0                     ??_I2C_Master_Send_RepeatedStart:	
   878                           ; 1 bytes @ 0x0
   879                           
   880  00A0                     ??_I2C_Master_WriteByte:	
   881                           ; 1 bytes @ 0x0
   882                           
   883  00A0                     ??_I2C_Master_Send_Stop:	
   884                           ; 1 bytes @ 0x0
   885                           
   886  00A0                     ??_I2C_Master_ReadByte:	
   887                           ; 1 bytes @ 0x0
   888                           
   889  00A0                     ??_I2C_Wait_IDLE:	
   890                           ; 1 bytes @ 0x0
   891                           
   892  00A0                     ??_I2C_Master_Send_ACK:	
   893                           ; 1 bytes @ 0x0
   894                           
   895  00A0                     ??_I2C_Master_Send_NACK:	
   896                           ; 1 bytes @ 0x0
   897                           
   898  00A0                     ??_DD_Init:	
   899                           ; 1 bytes @ 0x0
   900                           
   901  00A0                     ?_DD_SetState:	
   902                           ; 1 bytes @ 0x0
   903                           
   904  00A0                     ??_ADC_Init:	
   905                           ; 1 bytes @ 0x0
   906                           
   907  00A0                     ??_TMR1_Init:	
   908                           ; 1 bytes @ 0x0
   909                           
   910  00A0                     ??_TMR1_Start:	
   911                           ; 1 bytes @ 0x0
   912                           
   913  00A0                     ??_TMR1_Stop:	
   914                           ; 1 bytes @ 0x0
   915                           
   916  00A0                     ??_SW_Init:	
   917                           ; 1 bytes @ 0x0
   918                           
   919  00A0                     ?_SSD_config:	
   920                           ; 1 bytes @ 0x0
   921                           
   922  00A0                     ?___awdiv:	
   923                           ; 1 bytes @ 0x0
   924                           
   925  00A0                     ?___awmod:	
   926                           ; 2 bytes @ 0x0
   927                           
   928  00A0                     ?___lwdiv:	
   929                           ; 2 bytes @ 0x0
   930                           
   931  00A0                     ?___lwmod:	
   932                           ; 2 bytes @ 0x0
   933                           
   934  00A0                     ?___lldiv:	
   935                           ; 2 bytes @ 0x0
   936                           
   937  00A0                     I2C_Master_WriteByte@Data:	
   938                           ; 4 bytes @ 0x0
   939                           
   940  00A0                     DD_SetState@state:	
   941                           ; 1 bytes @ 0x0
   942                           
   943  00A0                     SSD_config@SSD_state:	
   944                           ; 1 bytes @ 0x0
   945                           
   946  00A0                     ___awdiv@divisor:	
   947                           ; 1 bytes @ 0x0
   948                           
   949  00A0                     ___awmod@divisor:	
   950                           ; 2 bytes @ 0x0
   951                           
   952  00A0                     ___lwdiv@divisor:	
   953                           ; 2 bytes @ 0x0
   954                           
   955  00A0                     ___lwmod@divisor:	
   956                           ; 2 bytes @ 0x0
   957                           
   958  00A0                     ___lldiv@divisor:	
   959                           ; 2 bytes @ 0x0
   960                           
   961                           
   962                           ; 4 bytes @ 0x0
   963  00A0                     	ds	1
   964  00A1                     ?_EEPROM_WriteByte:
   965  00A1                     ??_DD_SetState:	
   966                           ; 1 bytes @ 0x1
   967                           
   968  00A1                     ??_SSD_config:	
   969                           ; 1 bytes @ 0x1
   970                           
   971  00A1                     I2C_Master_ReadByte@Read_State:	
   972                           ; 1 bytes @ 0x1
   973                           
   974  00A1                     EEPROM_WriteByte@address:	
   975                           ; 1 bytes @ 0x1
   976                           
   977                           
   978                           ; 2 bytes @ 0x1
   979  00A1                     	ds	1
   980  00A2                     ?_EEPROM_ReadByte:
   981  00A2                     ADC_Init@config:	
   982                           ; 1 bytes @ 0x2
   983                           
   984  00A2                     TMR1_Init@config:	
   985                           ; 1 bytes @ 0x2
   986                           
   987  00A2                     EEPROM_ReadByte@address:	
   988                           ; 1 bytes @ 0x2
   989                           
   990  00A2                     ___awdiv@dividend:	
   991                           ; 2 bytes @ 0x2
   992                           
   993  00A2                     ___awmod@dividend:	
   994                           ; 2 bytes @ 0x2
   995                           
   996  00A2                     ___lwdiv@dividend:	
   997                           ; 2 bytes @ 0x2
   998                           
   999  00A2                     ___lwmod@dividend:	
  1000                           ; 2 bytes @ 0x2
  1001                           
  1002                           
  1003                           ; 2 bytes @ 0x2
  1004  00A2                     	ds	1
  1005  00A3                     EEPROM_WriteByte@data:
  1006  00A3                     DD_SetState@device:	
  1007                           ; 1 bytes @ 0x3
  1008                           
  1009  00A3                     SSD_config@ID:	
  1010                           ; 1 bytes @ 0x3
  1011                           
  1012                           
  1013                           ; 1 bytes @ 0x3
  1014  00A3                     	ds	1
  1015  00A4                     ??_SSD_OFF:
  1016  00A4                     ??_EEPROM_WriteByte:	
  1017                           ; 1 bytes @ 0x4
  1018                           
  1019  00A4                     ??_EEPROM_ReadByte:	
  1020                           ; 1 bytes @ 0x4
  1021                           
  1022  00A4                     ??___awdiv:	
  1023                           ; 1 bytes @ 0x4
  1024                           
  1025  00A4                     ??___awmod:	
  1026                           ; 1 bytes @ 0x4
  1027                           
  1028  00A4                     ??___lwdiv:	
  1029                           ; 1 bytes @ 0x4
  1030                           
  1031  00A4                     ??___lwmod:	
  1032                           ; 1 bytes @ 0x4
  1033                           
  1034  00A4                     SSD_OFF@ID:	
  1035                           ; 1 bytes @ 0x4
  1036                           
  1037  00A4                     ___awdiv@counter:	
  1038                           ; 1 bytes @ 0x4
  1039                           
  1040  00A4                     ___awmod@counter:	
  1041                           ; 1 bytes @ 0x4
  1042                           
  1043  00A4                     ___lwmod@counter:	
  1044                           ; 1 bytes @ 0x4
  1045                           
  1046  00A4                     ___lwdiv@quotient:	
  1047                           ; 1 bytes @ 0x4
  1048                           
  1049  00A4                     ___lldiv@dividend:	
  1050                           ; 2 bytes @ 0x4
  1051                           
  1052                           
  1053                           ; 4 bytes @ 0x4
  1054  00A4                     	ds	1
  1055  00A5                     ??_EWH_Sleep_Mode:
  1056  00A5                     ??_EWH_SSD_OFF:	
  1057                           ; 1 bytes @ 0x5
  1058                           
  1059  00A5                     ___awdiv@sign:	
  1060                           ; 1 bytes @ 0x5
  1061                           
  1062  00A5                     ___awmod@sign:	
  1063                           ; 1 bytes @ 0x5
  1064                           
  1065                           
  1066                           ; 1 bytes @ 0x5
  1067  00A5                     	ds	1
  1068  00A6                     ??_EWH_EEPROM_Update:
  1069  00A6                     ??_EWH_EEPROM_Init:	
  1070                           ; 1 bytes @ 0x6
  1071                           
  1072  00A6                     EEPROM_ReadByte@data:	
  1073                           ; 1 bytes @ 0x6
  1074                           
  1075  00A6                     EWH_EEPROM_Update@newSetTemp:	
  1076                           ; 1 bytes @ 0x6
  1077                           
  1078  00A6                     ___lwdiv@counter:	
  1079                           ; 1 bytes @ 0x6
  1080                           
  1081  00A6                     ___awdiv@quotient:	
  1082                           ; 1 bytes @ 0x6
  1083                           
  1084                           
  1085                           ; 2 bytes @ 0x6
  1086  00A6                     	ds	1
  1087  00A7                     ??_EWH_EEPROM_Read:
  1088  00A7                     ?_EWH_getAvrgTempReading:	
  1089                           ; 1 bytes @ 0x7
  1090                           
  1091  00A7                     EWH_getAvrgTempReading@length:	
  1092                           ; 1 bytes @ 0x7
  1093                           
  1094                           
  1095                           ; 1 bytes @ 0x7
  1096  00A7                     	ds	1
  1097  00A8                     ??_EWH_getAvrgTempReading:
  1098  00A8                     ?_SSD_Write:	
  1099                           ; 1 bytes @ 0x8
  1100                           
  1101  00A8                     ??___lldiv:	
  1102                           ; 1 bytes @ 0x8
  1103                           
  1104  00A8                     SSD_Write@Number:	
  1105                           ; 1 bytes @ 0x8
  1106                           
  1107                           
  1108                           ; 1 bytes @ 0x8
  1109  00A8                     	ds	1
  1110  00A9                     ??_SSD_Write:
  1111  00A9                     SSD_Write@ID:	
  1112                           ; 1 bytes @ 0x9
  1113                           
  1114  00A9                     ___lldiv@quotient:	
  1115                           ; 1 bytes @ 0x9
  1116                           
  1117                           
  1118                           ; 4 bytes @ 0x9
  1119  00A9                     	ds	1
  1120  00AA                     ?_EWH_SSD_Update:
  1121  00AA                     EWH_SSD_Update@temp:	
  1122                           ; 1 bytes @ 0xA
  1123                           
  1124                           
  1125                           ; 2 bytes @ 0xA
  1126  00AA                     	ds	1
  1127  00AB                     EWH_getAvrgTempReading@sumOfReadings:
  1128                           
  1129                           ; 2 bytes @ 0xB
  1130  00AB                     	ds	1
  1131  00AC                     ??_EWH_SSD_Update:
  1132                           
  1133                           ; 1 bytes @ 0xC
  1134  00AC                     	ds	1
  1135  00AD                     EWH_getAvrgTempReading@averageReading:
  1136  00AD                     ___lldiv@counter:	
  1137                           ; 1 bytes @ 0xD
  1138                           
  1139                           
  1140                           ; 1 bytes @ 0xD
  1141  00AD                     	ds	1
  1142  00AE                     ??_EWH_WakeUP_Mode:
  1143  00AE                     ??_EWH_SetTemp_Mode:	
  1144                           ; 1 bytes @ 0xE
  1145                           
  1146  00AE                     ??_I2C_Init:	
  1147                           ; 1 bytes @ 0xE
  1148                           
  1149  00AE                     I2C_Init@i2c_config:	
  1150                           ; 1 bytes @ 0xE
  1151                           
  1152  00AE                     EWH_getAvrgTempReading@buffer:	
  1153                           ; 1 bytes @ 0xE
  1154                           
  1155                           
  1156                           ; 1 bytes @ 0xE
  1157  00AE                     	ds	1
  1158  00AF                     ??_EWH_Init:
  1159  00AF                     EWH_getAvrgTempReading@i:	
  1160                           ; 1 bytes @ 0xF
  1161                           
  1162  00AF                     EWH_Init@TMR1_cfg:	
  1163                           ; 1 bytes @ 0xF
  1164                           
  1165                           
  1166                           ; 2 bytes @ 0xF
  1167  00AF                     	ds	1
  1168  00B0                     ??_EWH_Operating_Mode:
  1169                           
  1170                           ; 1 bytes @ 0x10
  1171  00B0                     	ds	1
  1172  00B1                     EWH_Init@i2c_config:
  1173                           
  1174                           ; 6 bytes @ 0x11
  1175  00B1                     	ds	6
  1176  00B7                     EWH_Init@adc_config:
  1177                           
  1178                           ; 4 bytes @ 0x17
  1179  00B7                     	ds	4
  1180  00BB                     ??_main:
  1181                           
  1182                           ; 1 bytes @ 0x1B
  1183  00BB                     	ds	2
  1184                           
  1185                           	psect	cstackCOMMON
  1186  0070                     __pcstackCOMMON:
  1187  0070                     ?_I2C_Master_Send_Start:
  1188  0070                     ?_I2C_Master_Send_RepeatedStart:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0070                     ?_I2C_Master_WriteByte:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194  0070                     ?_I2C_Master_Send_Stop:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197  0070                     ?_I2C_Master_ReadByte:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200  0070                     ?_EWH_Init:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203  0070                     ?_EWH_Sleep_Mode:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  0070                     ?_EWH_WakeUP_Mode:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209  0070                     ?_EWH_Operating_Mode:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212  0070                     ?_EWH_SetTemp_Mode:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215  0070                     ?_EWH_SSD_OFF:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218  0070                     ?_EWH_EEPROM_Read:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221  0070                     ?_EWH_EEPROM_Update:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224  0070                     ?_EWH_EEPROM_Init:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227  0070                     ?_SSD_OFF:	
  1228                           ; 1 bytes @ 0x0
  1229                           
  1230  0070                     ?_I2C_Init:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233  0070                     ?_I2C_Wait_IDLE:	
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236  0070                     ?_I2C_Master_Send_ACK:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239  0070                     ?_I2C_Master_Send_NACK:	
  1240                           ; 1 bytes @ 0x0
  1241                           
  1242  0070                     ?_main:	
  1243                           ; 1 bytes @ 0x0
  1244                           
  1245  0070                     ?_DD_Init:	
  1246                           ; 1 bytes @ 0x0
  1247                           
  1248  0070                     ?_DD_GetState:	
  1249                           ; 1 bytes @ 0x0
  1250                           
  1251  0070                     ??_DD_GetState:	
  1252                           ; 1 bytes @ 0x0
  1253                           
  1254  0070                     ?_ADC_Init:	
  1255                           ; 1 bytes @ 0x0
  1256                           
  1257  0070                     ?_TMR1_Init:	
  1258                           ; 1 bytes @ 0x0
  1259                           
  1260  0070                     ?_TMR1_Start:	
  1261                           ; 1 bytes @ 0x0
  1262                           
  1263  0070                     ?_TMR1_Stop:	
  1264                           ; 1 bytes @ 0x0
  1265                           
  1266  0070                     ?_SW_Init:	
  1267                           ; 1 bytes @ 0x0
  1268                           
  1269  0070                     ?_ISR:	
  1270                           ; 1 bytes @ 0x0
  1271                           
  1272  0070                     ?__Umul8_16:	
  1273                           ; 1 bytes @ 0x0
  1274                           
  1275  0070                     ?_ADC_ReadChannel:	
  1276                           ; 2 bytes @ 0x0
  1277                           
  1278  0070                     ?___xxtofl:	
  1279                           ; 2 bytes @ 0x0
  1280                           
  1281  0070                     __Umul8_16@multiplicand:	
  1282                           ; 4 bytes @ 0x0
  1283                           
  1284  0070                     ___xxtofl@val:	
  1285                           ; 1 bytes @ 0x0
  1286                           
  1287                           
  1288                           ; 4 bytes @ 0x0
  1289  0070                     	ds	2
  1290  0072                     ??__Umul8_16:
  1291  0072                     ??_ADC_ReadChannel:	
  1292                           ; 1 bytes @ 0x2
  1293                           
  1294  0072                     DD_GetState@device:	
  1295                           ; 1 bytes @ 0x2
  1296                           
  1297                           
  1298                           ; 1 bytes @ 0x2
  1299  0072                     	ds	1
  1300  0073                     ADC_ReadChannel@result:
  1301                           
  1302                           ; 2 bytes @ 0x3
  1303  0073                     	ds	1
  1304  0074                     ??___xxtofl:
  1305  0074                     __Umul8_16@product:	
  1306                           ; 1 bytes @ 0x4
  1307                           
  1308                           
  1309                           ; 2 bytes @ 0x4
  1310  0074                     	ds	1
  1311  0075                     ADC_ReadChannel@channel:
  1312                           
  1313                           ; 1 bytes @ 0x5
  1314  0075                     	ds	1
  1315  0076                     __Umul8_16@word_mpld:
  1316                           
  1317                           ; 2 bytes @ 0x6
  1318  0076                     	ds	2
  1319  0078                     __Umul8_16@multiplier:
  1320  0078                     ___xxtofl@sign:	
  1321                           ; 1 bytes @ 0x8
  1322                           
  1323                           
  1324                           ; 1 bytes @ 0x8
  1325  0078                     	ds	1
  1326  0079                     ___xxtofl@exp:
  1327                           
  1328                           ; 1 bytes @ 0x9
  1329  0079                     	ds	1
  1330  007A                     ___xxtofl@arg:
  1331                           
  1332                           ; 4 bytes @ 0xA
  1333  007A                     	ds	4
  1334                           
  1335                           	psect	cstackBANK0
  1336  0020                     __pcstackBANK0:
  1337  0020                     ?___flmul:
  1338  0020                     ___flmul@b:	
  1339                           ; 4 bytes @ 0x0
  1340                           
  1341                           
  1342                           ; 4 bytes @ 0x0
  1343  0020                     	ds	4
  1344  0024                     ___flmul@a:
  1345                           
  1346                           ; 4 bytes @ 0x4
  1347  0024                     	ds	4
  1348  0028                     ??___flmul:
  1349                           
  1350                           ; 1 bytes @ 0x8
  1351  0028                     	ds	5
  1352  002D                     ___flmul@sign:
  1353                           
  1354                           ; 1 bytes @ 0xD
  1355  002D                     	ds	1
  1356  002E                     ___flmul@grs:
  1357                           
  1358                           ; 4 bytes @ 0xE
  1359  002E                     	ds	4
  1360  0032                     ___flmul@aexp:
  1361                           
  1362                           ; 1 bytes @ 0x12
  1363  0032                     	ds	1
  1364  0033                     ___flmul@bexp:
  1365                           
  1366                           ; 1 bytes @ 0x13
  1367  0033                     	ds	1
  1368  0034                     ___flmul@prod:
  1369                           
  1370                           ; 4 bytes @ 0x14
  1371  0034                     	ds	4
  1372  0038                     ___flmul@temp:
  1373                           
  1374                           ; 2 bytes @ 0x18
  1375  0038                     	ds	2
  1376  003A                     ?___fltol:
  1377  003A                     ___fltol@f1:	
  1378                           ; 4 bytes @ 0x1A
  1379                           
  1380                           
  1381                           ; 4 bytes @ 0x1A
  1382  003A                     	ds	4
  1383  003E                     ??___fltol:
  1384                           
  1385                           ; 1 bytes @ 0x1E
  1386  003E                     	ds	4
  1387  0042                     ___fltol@sign1:
  1388                           
  1389                           ; 1 bytes @ 0x22
  1390  0042                     	ds	1
  1391  0043                     ___fltol@exp1:
  1392                           
  1393                           ; 1 bytes @ 0x23
  1394  0043                     	ds	1
  1395  0044                     ??_ISR:
  1396                           
  1397                           ; 1 bytes @ 0x24
  1398  0044                     	ds	4
  1399  0048                     ISR@Reading:
  1400                           
  1401                           ; 2 bytes @ 0x28
  1402  0048                     	ds	2
  1403                           
  1404                           	psect	maintext
  1405  0C0A                     __pmaintext:	
  1406 ;;
  1407 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1408 ;;
  1409 ;; *************** function _main *****************
  1410 ;; Defined at:
  1411 ;;		line 5 in file "main.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;		None
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;		None
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      void 
  1418 ;; Registers used:
  1419 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1420 ;; Tracked objects:
  1421 ;;		On entry : B00/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1425 ;;      Params:         0       0       0       0       0
  1426 ;;      Locals:         0       0       0       0       0
  1427 ;;      Temps:          0       0       2       0       0
  1428 ;;      Totals:         0       0       2       0       0
  1429 ;;Total ram usage:        2 bytes
  1430 ;; Hardware stack levels required when called:    9
  1431 ;; This function calls:
  1432 ;;		_EWH_Init
  1433 ;;		_EWH_Operating_Mode
  1434 ;;		_EWH_SetTemp_Mode
  1435 ;;		_EWH_Sleep_Mode
  1436 ;;		_EWH_WakeUP_Mode
  1437 ;; This function is called by:
  1438 ;;		Startup code after reset
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           
  1443                           ;psect for function _main
  1444  0C0A                     _main:
  1445  0C0A                     l3594:	
  1446                           ;incstack = 0
  1447 ;; hardware stack exceeded
  1448                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1449                           
  1450                           
  1451                           ;main.c: 7:     EWH_Init();
  1452  0C0A  120A  158A  22EC  120A  158A  	fcall	_EWH_Init
  1453  0C0F                     l3598:	
  1454                           ;main.c: 9:     (0u)? (TRISB |= (1<<4)) : (TRISB &= ~(1<<4));
  1455                           
  1456  0C0F  30EF               	movlw	239
  1457  0C10  00FF               	movwf	btemp+1
  1458  0C11  087F               	movf	btemp+1,w
  1459  0C12  1683               	bsf	3,5	;RP0=1, select bank1
  1460  0C13  1303               	bcf	3,6	;RP1=0, select bank1
  1461  0C14  0586               	andwf	6,f	;volatile
  1462  0C15                     l3602:
  1463  0C15  30DF               	movlw	223
  1464  0C16  00FF               	movwf	btemp+1
  1465  0C17  087F               	movf	btemp+1,w
  1466  0C18  0586               	andwf	6,f	;volatile
  1467  0C19                     l3606:
  1468  0C19  30BF               	movlw	191
  1469  0C1A  00FF               	movwf	btemp+1
  1470  0C1B  087F               	movf	btemp+1,w
  1471  0C1C  0586               	andwf	6,f	;volatile
  1472  0C1D                     l3610:
  1473  0C1D  30EF               	movlw	239
  1474  0C1E  00FF               	movwf	btemp+1
  1475  0C1F  087F               	movf	btemp+1,w
  1476  0C20  1283               	bcf	3,5	;RP0=0, select bank0
  1477  0C21  1303               	bcf	3,6	;RP1=0, select bank0
  1478  0C22  0586               	andwf	6,f	;volatile
  1479  0C23                     l3614:
  1480  0C23  30DF               	movlw	223
  1481  0C24  00FF               	movwf	btemp+1
  1482  0C25  087F               	movf	btemp+1,w
  1483  0C26  0586               	andwf	6,f	;volatile
  1484  0C27                     l3618:
  1485  0C27  30BF               	movlw	191
  1486  0C28  00FF               	movwf	btemp+1
  1487  0C29  087F               	movf	btemp+1,w
  1488  0C2A  0586               	andwf	6,f	;volatile
  1489  0C2B  2C43               	goto	l3630
  1490  0C2C                     l3620:
  1491                           
  1492                           ;main.c: 21:                 EWH_Sleep_Mode();
  1493  0C2C  120A  158A  223B  120A  158A  	fcall	_EWH_Sleep_Mode
  1494                           
  1495                           ;main.c: 22:                 break;
  1496  0C31  2C43               	goto	l3630
  1497  0C32                     l3622:
  1498                           
  1499                           ;main.c: 24:                 EWH_WakeUP_Mode();
  1500  0C32  120A  118A  273B  120A  158A  	fcall	_EWH_WakeUP_Mode
  1501                           
  1502                           ;main.c: 25:                 break;
  1503  0C37  2C43               	goto	l3630
  1504  0C38                     l3624:
  1505                           
  1506                           ;main.c: 27:                 EWH_Operating_Mode();
  1507  0C38  120A  118A  2398  120A  158A  	fcall	_EWH_Operating_Mode
  1508                           
  1509                           ;main.c: 28:                 break;
  1510  0C3D  2C43               	goto	l3630
  1511  0C3E                     l3626:
  1512                           
  1513                           ;main.c: 30:                 EWH_SetTemp_Mode();
  1514  0C3E  120A  118A  24CA  120A  158A  	fcall	_EWH_SetTemp_Mode
  1515  0C43                     l3630:	
  1516                           ;main.c: 31:                 break;
  1517                           
  1518  0C43  1683               	bsf	3,5	;RP0=1, select bank1
  1519  0C44  1303               	bcf	3,6	;RP1=0, select bank1
  1520  0C45  084A               	movf	_EWH_Mode^(0+128),w
  1521  0C46  00BB               	movwf	??_main^(0+128)
  1522  0C47  01BC               	clrf	(??_main^(0+128)+1)
  1523                           
  1524                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1525                           ; Switch size 1, requested type "simple"
  1526                           ; Number of cases is 1, Range of values is 0 to 0
  1527                           ; switch strategies available:
  1528                           ; Name         Instructions Cycles
  1529                           ; simple_byte            4     3 (average)
  1530                           ; direct_byte           11     8 (fixed)
  1531                           ; jumptable            260     6 (fixed)
  1532                           ;	Chosen strategy is simple_byte
  1533  0C48  083C               	movf	(??_main+1)^(0+128),w
  1534  0C49  3A00               	xorlw	0	; case 0
  1535  0C4A  1903               	skipnz
  1536  0C4B  2C4D               	goto	l3922
  1537  0C4C  2C43               	goto	l3630
  1538  0C4D                     l3922:
  1539                           
  1540                           ; Switch size 1, requested type "simple"
  1541                           ; Number of cases is 4, Range of values is 0 to 3
  1542                           ; switch strategies available:
  1543                           ; Name         Instructions Cycles
  1544                           ; simple_byte           13     7 (average)
  1545                           ; direct_byte           20     8 (fixed)
  1546                           ; jumptable            260     6 (fixed)
  1547                           ;	Chosen strategy is simple_byte
  1548  0C4D  083B               	movf	??_main^(0+128),w
  1549  0C4E  3A00               	xorlw	0	; case 0
  1550  0C4F  1903               	skipnz
  1551  0C50  2C2C               	goto	l3620
  1552  0C51  3A01               	xorlw	1	; case 1
  1553  0C52  1903               	skipnz
  1554  0C53  2C32               	goto	l3622
  1555  0C54  3A03               	xorlw	3	; case 2
  1556  0C55  1903               	skipnz
  1557  0C56  2C3E               	goto	l3626
  1558  0C57  3A01               	xorlw	1	; case 3
  1559  0C58  1903               	skipnz
  1560  0C59  2C38               	goto	l3624
  1561  0C5A  2C43               	goto	l3630
  1562  0C5B  120A  118A  2812   	ljmp	start
  1563  0C5E                     __end_of_main:
  1564                           
  1565                           	psect	text1
  1566  073B                     __ptext1:	
  1567 ;; *************** function _EWH_WakeUP_Mode *****************
  1568 ;; Defined at:
  1569 ;;		line 30 in file "EWH.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;		None
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;		None
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  1    wreg      void 
  1576 ;; Registers used:
  1577 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1583 ;;      Params:         0       0       0       0       0
  1584 ;;      Locals:         0       0       0       0       0
  1585 ;;      Temps:          0       0       2       0       0
  1586 ;;      Totals:         0       0       2       0       0
  1587 ;;Total ram usage:        2 bytes
  1588 ;; Hardware stack levels used:    1
  1589 ;; Hardware stack levels required when called:    8
  1590 ;; This function calls:
  1591 ;;		_EWH_EEPROM_Read
  1592 ;;		_EWH_SSD_Update
  1593 ;; This function is called by:
  1594 ;;		_main
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           
  1599                           ;psect for function _EWH_WakeUP_Mode
  1600  073B                     _EWH_WakeUP_Mode:
  1601  073B                     l3146:	
  1602                           ;incstack = 0
  1603 ;; hardware stack exceeded
  1604                           ; Regs used in _EWH_WakeUP_Mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1605                           
  1606                           
  1607                           ;EWH.c: 36:     EWH_Events[0]=0;
  1608  073B  1683               	bsf	3,5	;RP0=1, select bank1
  1609  073C  1303               	bcf	3,6	;RP1=0, select bank1
  1610  073D  01BD               	clrf	_EWH_Events^(0+128)
  1611                           
  1612                           ;EWH.c: 37:     EWH_Events[2]=0;
  1613  073E  01BF               	clrf	(_EWH_Events^(0+128)+2)
  1614                           
  1615                           ;EWH.c: 38:     EWH_Events[1]=0;
  1616  073F  01BE               	clrf	(_EWH_Events^(0+128)+1)
  1617                           
  1618                           ;EWH.c: 39:     EWH_Events[3]=0;
  1619  0740  01C0               	clrf	(_EWH_Events^(0+128)+3)
  1620                           
  1621                           ;EWH.c: 42:     EWH_Events[0]=0;
  1622  0741  01BD               	clrf	_EWH_Events^(0+128)
  1623  0742                     l3148:
  1624                           
  1625                           ;EWH.c: 47:     set_Temp = EWH_EEPROM_Read();
  1626  0742  120A  158A  20C6  120A  118A  	fcall	_EWH_EEPROM_Read
  1627  0747  00FF               	movwf	btemp+1
  1628  0748  087F               	movf	btemp+1,w
  1629  0749  1683               	bsf	3,5	;RP0=1, select bank1
  1630  074A  1303               	bcf	3,6	;RP1=0, select bank1
  1631  074B  00C9               	movwf	_set_Temp^(0+128)
  1632  074C                     l3150:
  1633                           
  1634                           ;EWH.c: 50:     EWH_SSD_Update(set_Temp);
  1635  074C  0849               	movf	_set_Temp^(0+128),w
  1636  074D  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  1637  074E  01AF               	clrf	(??_EWH_WakeUP_Mode^(0+128)+1)
  1638  074F  082E               	movf	??_EWH_WakeUP_Mode^(0+128),w
  1639  0750  00AA               	movwf	EWH_SSD_Update@temp^(0+128)
  1640  0751  082F               	movf	(??_EWH_WakeUP_Mode+1)^(0+128),w
  1641  0752  00AB               	movwf	(EWH_SSD_Update@temp+1)^(0+128)
  1642  0753  120A  158A  256E  120A  118A  	fcall	_EWH_SSD_Update
  1643  0758                     l3152:
  1644                           
  1645                           ;EWH.c: 52:     if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED))
  1646  0758  1283               	bcf	3,5	;RP0=0, select bank0
  1647  0759  1303               	bcf	3,6	;RP1=0, select bank0
  1648  075A  0806               	movf	6,w	;volatile
  1649  075B  1683               	bsf	3,5	;RP0=1, select bank1
  1650  075C  1303               	bcf	3,6	;RP1=0, select bank1
  1651  075D  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  1652  075E  3002               	movlw	2
  1653  075F                     u2515:
  1654  075F  1003               	clrc
  1655  0760  0CAE               	rrf	??_EWH_WakeUP_Mode^(0+128),f
  1656  0761  3EFF               	addlw	-1
  1657  0762  1D03               	skipz
  1658  0763  2F5F               	goto	u2515
  1659  0764  182E               	btfsc	??_EWH_WakeUP_Mode^(0+128),0
  1660  0765  2F67               	goto	u2521
  1661  0766  2F68               	goto	u2520
  1662  0767                     u2521:
  1663  0767  2F8F               	goto	l3164
  1664  0768                     u2520:
  1665  0768                     l3154:
  1666                           
  1667                           ;EWH.c: 53:     {;EWH.c: 54:         _delay((unsigned long)((50)*(4000000/4000.0)));
  1668  0768  3041               	movlw	65
  1669  0769  1683               	bsf	3,5	;RP0=1, select bank1
  1670  076A  1303               	bcf	3,6	;RP1=0, select bank1
  1671  076B  00AF               	movwf	(??_EWH_WakeUP_Mode^(0+128)+1)
  1672  076C  30ED               	movlw	237
  1673  076D  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  1674  076E                     u3747:
  1675  076E  0BAE               	decfsz	??_EWH_WakeUP_Mode^(0+128),f
  1676  076F  2F6E               	goto	u3747
  1677  0770  0BAF               	decfsz	(??_EWH_WakeUP_Mode^(0+128)+1),f
  1678  0771  2F6E               	goto	u3747
  1679  0772  2F73               	nop2
  1680  0773                     l3156:
  1681                           
  1682                           ;EWH.c: 55:         if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED))
  1683  0773  1283               	bcf	3,5	;RP0=0, select bank0
  1684  0774  1303               	bcf	3,6	;RP1=0, select bank0
  1685  0775  0806               	movf	6,w	;volatile
  1686  0776  1683               	bsf	3,5	;RP0=1, select bank1
  1687  0777  1303               	bcf	3,6	;RP1=0, select bank1
  1688  0778  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  1689  0779  3002               	movlw	2
  1690  077A                     u2535:
  1691  077A  1003               	clrc
  1692  077B  0CAE               	rrf	??_EWH_WakeUP_Mode^(0+128),f
  1693  077C  3EFF               	addlw	-1
  1694  077D  1D03               	skipz
  1695  077E  2F7A               	goto	u2535
  1696  077F  182E               	btfsc	??_EWH_WakeUP_Mode^(0+128),0
  1697  0780  2F82               	goto	u2541
  1698  0781  2F83               	goto	u2540
  1699  0782                     u2541:
  1700  0782  2FBD               	goto	l512
  1701  0783                     u2540:
  1702  0783                     l3158:
  1703                           
  1704                           ;EWH.c: 56:         {;EWH.c: 57:             EWH_Events[1]=1;
  1705  0783  01BE               	clrf	(_EWH_Events^(0+128)+1)
  1706  0784  0ABE               	incf	(_EWH_Events^(0+128)+1),f
  1707  0785                     l3160:
  1708                           
  1709                           ;EWH.c: 58:             NoPress_Sec_count=0;
  1710  0785  1283               	bcf	3,5	;RP0=0, select bank0
  1711  0786  1303               	bcf	3,6	;RP1=0, select bank0
  1712  0787  01D1               	clrf	_NoPress_Sec_count
  1713  0788                     l3162:
  1714                           
  1715                           ;EWH.c: 59:             EWH_Mode=EWH_SET_TEMP_MODE;
  1716  0788  3002               	movlw	2
  1717  0789  00FF               	movwf	btemp+1
  1718  078A  087F               	movf	btemp+1,w
  1719  078B  1683               	bsf	3,5	;RP0=1, select bank1
  1720  078C  1303               	bcf	3,6	;RP1=0, select bank1
  1721  078D  00CA               	movwf	_EWH_Mode^(0+128)
  1722  078E  2FBD               	goto	l512
  1723  078F                     l3164:
  1724  078F  1283               	bcf	3,5	;RP0=0, select bank0
  1725  0790  1303               	bcf	3,6	;RP1=0, select bank0
  1726  0791  0806               	movf	6,w	;volatile
  1727  0792  1683               	bsf	3,5	;RP0=1, select bank1
  1728  0793  1303               	bcf	3,6	;RP1=0, select bank1
  1729  0794  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  1730  0795  3001               	movlw	1
  1731  0796                     u2555:
  1732  0796  1003               	clrc
  1733  0797  0CAE               	rrf	??_EWH_WakeUP_Mode^(0+128),f
  1734  0798  3EFF               	addlw	-1
  1735  0799  1D03               	skipz
  1736  079A  2F96               	goto	u2555
  1737  079B  182E               	btfsc	??_EWH_WakeUP_Mode^(0+128),0
  1738  079C  2F9E               	goto	u2561
  1739  079D  2F9F               	goto	u2560
  1740  079E                     u2561:
  1741  079E  2FBD               	goto	l512
  1742  079F                     u2560:
  1743  079F                     l3166:
  1744                           
  1745                           ;EWH.c: 63:     {;EWH.c: 64:         _delay((unsigned long)((50)*(4000000/4000.0)));
  1746  079F  3041               	movlw	65
  1747  07A0  1683               	bsf	3,5	;RP0=1, select bank1
  1748  07A1  1303               	bcf	3,6	;RP1=0, select bank1
  1749  07A2  00AF               	movwf	(??_EWH_WakeUP_Mode^(0+128)+1)
  1750  07A3  30ED               	movlw	237
  1751  07A4  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  1752  07A5                     u3757:
  1753  07A5  0BAE               	decfsz	??_EWH_WakeUP_Mode^(0+128),f
  1754  07A6  2FA5               	goto	u3757
  1755  07A7  0BAF               	decfsz	(??_EWH_WakeUP_Mode^(0+128)+1),f
  1756  07A8  2FA5               	goto	u3757
  1757  07A9  2FAA               	nop2
  1758  07AA                     l3168:
  1759                           
  1760                           ;EWH.c: 65:         if((!((PORTB & (1<<1)) >> 1)==SW_PRESSED))
  1761  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  1762  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  1763  07AC  0806               	movf	6,w	;volatile
  1764  07AD  1683               	bsf	3,5	;RP0=1, select bank1
  1765  07AE  1303               	bcf	3,6	;RP1=0, select bank1
  1766  07AF  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  1767  07B0  3001               	movlw	1
  1768  07B1                     u2575:
  1769  07B1  1003               	clrc
  1770  07B2  0CAE               	rrf	??_EWH_WakeUP_Mode^(0+128),f
  1771  07B3  3EFF               	addlw	-1
  1772  07B4  1D03               	skipz
  1773  07B5  2FB1               	goto	u2575
  1774  07B6  182E               	btfsc	??_EWH_WakeUP_Mode^(0+128),0
  1775  07B7  2FB9               	goto	u2581
  1776  07B8  2FBA               	goto	u2580
  1777  07B9                     u2581:
  1778  07B9  2FBD               	goto	l512
  1779  07BA                     u2580:
  1780  07BA                     l3170:
  1781                           
  1782                           ;EWH.c: 66:         {;EWH.c: 67:             EWH_Events[2]=1;
  1783  07BA  01BF               	clrf	(_EWH_Events^(0+128)+2)
  1784  07BB  0ABF               	incf	(_EWH_Events^(0+128)+2),f
  1785  07BC  2F85               	goto	l3160
  1786  07BD                     l512:
  1787  07BD  0008               	return
  1788  07BE                     __end_of_EWH_WakeUP_Mode:
  1789                           
  1790                           	psect	text2
  1791  08C6                     __ptext2:	
  1792 ;; *************** function _EWH_EEPROM_Read *****************
  1793 ;; Defined at:
  1794 ;;		line 265 in file "EWH.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;		None
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;		None
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  1    wreg      unsigned char 
  1801 ;; Registers used:
  1802 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1808 ;;      Params:         0       0       0       0       0
  1809 ;;      Locals:         0       0       0       0       0
  1810 ;;      Temps:          0       0       0       0       0
  1811 ;;      Totals:         0       0       0       0       0
  1812 ;;Total ram usage:        0 bytes
  1813 ;; Hardware stack levels used:    1
  1814 ;; Hardware stack levels required when called:    7
  1815 ;; This function calls:
  1816 ;;		_EEPROM_ReadByte
  1817 ;; This function is called by:
  1818 ;;		_EWH_WakeUP_Mode
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           
  1823                           ;psect for function _EWH_EEPROM_Read
  1824  08C6                     _EWH_EEPROM_Read:
  1825  08C6                     l3010:	
  1826                           ;incstack = 0
  1827 ;; hardware stack exceeded
  1828                           ; Regs used in _EWH_EEPROM_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1829                           
  1830                           
  1831                           ;EWH.c: 267:     return EEPROM_ReadByte(0x0020);
  1832  08C6  3020               	movlw	32
  1833  08C7  1683               	bsf	3,5	;RP0=1, select bank1
  1834  08C8  1303               	bcf	3,6	;RP1=0, select bank1
  1835  08C9  00A2               	movwf	EEPROM_ReadByte@address^(0+128)
  1836  08CA  3000               	movlw	0
  1837  08CB  00A3               	movwf	(EEPROM_ReadByte@address^(0+128)+1)
  1838  08CC  120A  158A  2513  120A  158A  	fcall	_EEPROM_ReadByte
  1839  08D1                     l561:
  1840  08D1  0008               	return
  1841  08D2                     __end_of_EWH_EEPROM_Read:
  1842                           
  1843                           	psect	text3
  1844  0D13                     __ptext3:	
  1845 ;; *************** function _EEPROM_ReadByte *****************
  1846 ;; Defined at:
  1847 ;;		line 36 in file "EEPROM.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  address         2    2[BANK1 ] unsigned short 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;  data            1    6[BANK1 ] unsigned char 
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  1    wreg      unsigned char 
  1854 ;; Registers used:
  1855 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1861 ;;      Params:         0       0       2       0       0
  1862 ;;      Locals:         0       0       1       0       0
  1863 ;;      Temps:          0       0       2       0       0
  1864 ;;      Totals:         0       0       5       0       0
  1865 ;;Total ram usage:        5 bytes
  1866 ;; Hardware stack levels used:    1
  1867 ;; Hardware stack levels required when called:    6
  1868 ;; This function calls:
  1869 ;;		_I2C_Master_ReadByte
  1870 ;;		_I2C_Master_Send_RepeatedStart
  1871 ;;		_I2C_Master_Send_Start
  1872 ;;		_I2C_Master_Send_Stop
  1873 ;;		_I2C_Master_WriteByte
  1874 ;; This function is called by:
  1875 ;;		_EWH_EEPROM_Read
  1876 ;; This function uses a non-reentrant model
  1877 ;;
  1878                           
  1879                           
  1880                           ;psect for function _EEPROM_ReadByte
  1881  0D13                     _EEPROM_ReadByte:
  1882  0D13                     l2708:	
  1883                           ;incstack = 0
  1884 ;; hardware stack exceeded
  1885                           ; Regs used in _EEPROM_ReadByte: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1886                           
  1887                           
  1888                           ;EEPROM.c: 36: uint8_t EEPROM_ReadByte(uint16_t address );EEPROM.c: 37: {;EEPROM.c: 38: 
      +                              uint8_t data;;EEPROM.c: 40:     I2C_Master_Send_Start();
  1889  0D13  120A  158A  2082  120A  158A  	fcall	_I2C_Master_Send_Start
  1890                           
  1891                           ;EEPROM.c: 42:     while(I2C_Master_WriteByte(0xA0 | ((address & 0x0700)>>7)) )
  1892  0D18  2D1E               	goto	l28
  1893  0D19                     l2710:
  1894                           
  1895                           ;EEPROM.c: 43:         I2C_Master_Send_RepeatedStart();
  1896  0D19  120A  158A  2079  120A  158A  	fcall	_I2C_Master_Send_RepeatedStart
  1897  0D1E                     l28:
  1898                           
  1899                           ;EEPROM.c: 42:     while(I2C_Master_WriteByte(0xA0 | ((address & 0x0700)>>7)) )
  1900  0D1E  1683               	bsf	3,5	;RP0=1, select bank1
  1901  0D1F  1303               	bcf	3,6	;RP1=0, select bank1
  1902  0D20  0823               	movf	(EEPROM_ReadByte@address+1)^(0+128),w
  1903  0D21  00A5               	movwf	(??_EEPROM_ReadByte^(0+128)+1)
  1904  0D22  0822               	movf	EEPROM_ReadByte@address^(0+128),w
  1905  0D23  00A4               	movwf	??_EEPROM_ReadByte^(0+128)
  1906  0D24  3007               	movlw	7
  1907  0D25                     u1985:
  1908  0D25  1003               	clrc
  1909  0D26  0CA5               	rrf	(??_EEPROM_ReadByte^(0+128)+1),f
  1910  0D27  0CA4               	rrf	??_EEPROM_ReadByte^(0+128),f
  1911  0D28  3EFF               	addlw	-1
  1912  0D29  1D03               	skipz
  1913  0D2A  2D25               	goto	u1985
  1914  0D2B  0824               	movf	??_EEPROM_ReadByte^(0+128),w
  1915  0D2C  390E               	andlw	14
  1916  0D2D  38A0               	iorlw	160
  1917  0D2E  120A  158A  216A  120A  158A  	fcall	_I2C_Master_WriteByte
  1918  0D33  3A00               	xorlw	0
  1919  0D34  1D03               	skipz
  1920  0D35  2D37               	goto	u1991
  1921  0D36  2D38               	goto	u1990
  1922  0D37                     u1991:
  1923  0D37  2D19               	goto	l2710
  1924  0D38                     u1990:
  1925  0D38                     l2712:
  1926                           
  1927                           ;EEPROM.c: 46:     I2C_Master_WriteByte((uint8_t)address);
  1928  0D38  1683               	bsf	3,5	;RP0=1, select bank1
  1929  0D39  1303               	bcf	3,6	;RP1=0, select bank1
  1930  0D3A  0822               	movf	EEPROM_ReadByte@address^(0+128),w
  1931  0D3B  120A  158A  216A  120A  158A  	fcall	_I2C_Master_WriteByte
  1932                           
  1933                           ;EEPROM.c: 48:     I2C_Master_Send_RepeatedStart();
  1934  0D40  120A  158A  2079  120A  158A  	fcall	_I2C_Master_Send_RepeatedStart
  1935                           
  1936                           ;EEPROM.c: 49:     I2C_Master_WriteByte(0xA1 | ((address & 0x0700)>>7));
  1937  0D45  1683               	bsf	3,5	;RP0=1, select bank1
  1938  0D46  1303               	bcf	3,6	;RP1=0, select bank1
  1939  0D47  0823               	movf	(EEPROM_ReadByte@address+1)^(0+128),w
  1940  0D48  00A5               	movwf	(??_EEPROM_ReadByte^(0+128)+1)
  1941  0D49  0822               	movf	EEPROM_ReadByte@address^(0+128),w
  1942  0D4A  00A4               	movwf	??_EEPROM_ReadByte^(0+128)
  1943  0D4B  3007               	movlw	7
  1944  0D4C                     u2005:
  1945  0D4C  1003               	clrc
  1946  0D4D  0CA5               	rrf	(??_EEPROM_ReadByte^(0+128)+1),f
  1947  0D4E  0CA4               	rrf	??_EEPROM_ReadByte^(0+128),f
  1948  0D4F  3EFF               	addlw	-1
  1949  0D50  1D03               	skipz
  1950  0D51  2D4C               	goto	u2005
  1951  0D52  0824               	movf	??_EEPROM_ReadByte^(0+128),w
  1952  0D53  390E               	andlw	14
  1953  0D54  38A1               	iorlw	161
  1954  0D55  120A  158A  216A  120A  158A  	fcall	_I2C_Master_WriteByte
  1955  0D5A                     l2714:
  1956                           
  1957                           ;EEPROM.c: 51:     data=I2C_Master_ReadByte(I2C_STOP_READING);
  1958  0D5A  3001               	movlw	1
  1959  0D5B  120A  158A  21AF  120A  158A  	fcall	_I2C_Master_ReadByte
  1960  0D60  00FF               	movwf	btemp+1
  1961  0D61  087F               	movf	btemp+1,w
  1962  0D62  1683               	bsf	3,5	;RP0=1, select bank1
  1963  0D63  1303               	bcf	3,6	;RP1=0, select bank1
  1964  0D64  00A6               	movwf	EEPROM_ReadByte@data^(0+128)
  1965  0D65                     l2716:
  1966                           
  1967                           ;EEPROM.c: 52:     I2C_Master_Send_Stop();
  1968  0D65  120A  158A  208B  120A  158A  	fcall	_I2C_Master_Send_Stop
  1969  0D6A                     l2718:
  1970                           
  1971                           ;EEPROM.c: 54:     return data;
  1972  0D6A  1683               	bsf	3,5	;RP0=1, select bank1
  1973  0D6B  1303               	bcf	3,6	;RP1=0, select bank1
  1974  0D6C  0826               	movf	EEPROM_ReadByte@data^(0+128),w
  1975  0D6D                     l31:
  1976  0D6D  0008               	return
  1977  0D6E                     __end_of_EEPROM_ReadByte:
  1978                           
  1979                           	psect	text4
  1980  09AF                     __ptext4:	
  1981 ;; *************** function _I2C_Master_ReadByte *****************
  1982 ;; Defined at:
  1983 ;;		line 105 in file "i2c.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;  Read_State      1    wreg     enum E881
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;  Read_State      1    1[BANK1 ] enum E881
  1988 ;;  data            1    0        unsigned char 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  1    wreg      unsigned char 
  1991 ;; Registers used:
  1992 ;;		wreg, status,2, status,0, pclath, cstack
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1998 ;;      Params:         0       0       0       0       0
  1999 ;;      Locals:         0       0       2       0       0
  2000 ;;      Temps:          0       0       0       0       0
  2001 ;;      Totals:         0       0       2       0       0
  2002 ;;Total ram usage:        2 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; Hardware stack levels required when called:    5
  2005 ;; This function calls:
  2006 ;;		_I2C_Master_Send_ACK
  2007 ;;		_I2C_Master_Send_NACK
  2008 ;;		_I2C_Wait_IDLE
  2009 ;; This function is called by:
  2010 ;;		_EEPROM_ReadByte
  2011 ;;		_EEPROM_ReadPage
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           
  2016                           ;psect for function _I2C_Master_ReadByte
  2017  09AF                     _I2C_Master_ReadByte:
  2018                           
  2019                           ;incstack = 0
  2020 ;; hardware stack exceeded
  2021                           ; Regs used in _I2C_Master_ReadByte: [wreg+status,2+status,0+pclath+cstack]
  2022                           ;I2C_Master_ReadByte@Read_State stored from wreg
  2023  09AF  1683               	bsf	3,5	;RP0=1, select bank1
  2024  09B0  1303               	bcf	3,6	;RP1=0, select bank1
  2025  09B1  00A1               	movwf	I2C_Master_ReadByte@Read_State^(0+128)
  2026  09B2                     l2634:
  2027                           
  2028                           ;i2c.c: 105: uint8_t I2C_Master_ReadByte(tI2C_ReadingState Read_State);i2c.c: 106: {;i2c
      +                          .c: 108:     uint8_t data;;i2c.c: 110:     I2C_Wait_IDLE();
  2029  09B2  120A  158A  20D2  120A  158A  	fcall	_I2C_Wait_IDLE
  2030  09B7                     l2636:
  2031                           
  2032                           ;i2c.c: 111:     RCEN=1;
  2033  09B7  1683               	bsf	3,5	;RP0=1, select bank1
  2034  09B8  1303               	bcf	3,6	;RP1=0, select bank1
  2035  09B9  1591               	bsf	17,3	;volatile
  2036                           
  2037                           ;i2c.c: 112:     I2C_Wait_IDLE();
  2038  09BA  120A  158A  20D2  120A  158A  	fcall	_I2C_Wait_IDLE
  2039  09BF                     l2638:
  2040  09BF  1283               	bcf	3,5	;RP0=0, select bank0
  2041  09C0  1303               	bcf	3,6	;RP1=0, select bank0
  2042  09C1  0813               	movf	19,w	;volatile
  2043  09C2                     l2640:
  2044                           
  2045                           ;i2c.c: 115:     if(Read_State==I2C_STOP_READING)
  2046  09C2  1683               	bsf	3,5	;RP0=1, select bank1
  2047  09C3  1303               	bcf	3,6	;RP1=0, select bank1
  2048  09C4  0321               	decf	I2C_Master_ReadByte@Read_State^(0+128),w
  2049  09C5  1D03               	btfss	3,2
  2050  09C6  29C8               	goto	u1911
  2051  09C7  29C9               	goto	u1910
  2052  09C8                     u1911:
  2053  09C8  29CF               	goto	l2644
  2054  09C9                     u1910:
  2055  09C9                     l2642:
  2056                           
  2057                           ;i2c.c: 116:         I2C_Master_Send_NACK();
  2058  09C9  120A  158A  20A7  120A  158A  	fcall	_I2C_Master_Send_NACK
  2059  09CE  29D4               	goto	l2646
  2060  09CF                     l2644:
  2061                           
  2062                           ;i2c.c: 118:         I2C_Master_Send_ACK();
  2063  09CF  120A  158A  209D  120A  158A  	fcall	_I2C_Master_Send_ACK
  2064  09D4                     l2646:
  2065                           
  2066                           ;i2c.c: 120:     return SSPBUF ;
  2067  09D4  1283               	bcf	3,5	;RP0=0, select bank0
  2068  09D5  1303               	bcf	3,6	;RP1=0, select bank0
  2069  09D6  0813               	movf	19,w	;volatile
  2070  09D7                     l120:
  2071  09D7  0008               	return
  2072  09D8                     __end_of_I2C_Master_ReadByte:
  2073                           
  2074                           	psect	text5
  2075  08A7                     __ptext5:	
  2076 ;; *************** function _I2C_Master_Send_NACK *****************
  2077 ;; Defined at:
  2078 ;;		line 87 in file "i2c.c"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;		None
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;		None
  2083 ;; Return value:  Size  Location     Type
  2084 ;;                  1    wreg      void 
  2085 ;; Registers used:
  2086 ;;		wreg, status,2, status,0, pclath, cstack
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2092 ;;      Params:         0       0       0       0       0
  2093 ;;      Locals:         0       0       0       0       0
  2094 ;;      Temps:          0       0       0       0       0
  2095 ;;      Totals:         0       0       0       0       0
  2096 ;;Total ram usage:        0 bytes
  2097 ;; Hardware stack levels used:    1
  2098 ;; Hardware stack levels required when called:    4
  2099 ;; This function calls:
  2100 ;;		_I2C_Wait_IDLE
  2101 ;; This function is called by:
  2102 ;;		_I2C_Master_ReadByte
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106                           
  2107                           ;psect for function _I2C_Master_Send_NACK
  2108  08A7                     _I2C_Master_Send_NACK:
  2109  08A7                     l2606:	
  2110                           ;incstack = 0
  2111 ;; hardware stack exceeded
  2112                           ; Regs used in _I2C_Master_Send_NACK: [wreg+status,2+status,0+pclath+cstack]
  2113                           
  2114                           
  2115                           ;i2c.c: 90:     I2C_Wait_IDLE();
  2116  08A7  120A  158A  20D2  120A  158A  	fcall	_I2C_Wait_IDLE
  2117  08AC                     l2608:
  2118                           
  2119                           ;i2c.c: 92:     ACKDT=1;
  2120  08AC  1683               	bsf	3,5	;RP0=1, select bank1
  2121  08AD  1303               	bcf	3,6	;RP1=0, select bank1
  2122  08AE  1691               	bsf	17,5	;volatile
  2123  08AF                     l2610:
  2124                           
  2125                           ;i2c.c: 93:     ACKEN=1;
  2126  08AF  1611               	bsf	17,4	;volatile
  2127  08B0                     l109:
  2128  08B0  0008               	return
  2129  08B1                     __end_of_I2C_Master_Send_NACK:
  2130                           
  2131                           	psect	text6
  2132  089D                     __ptext6:	
  2133 ;; *************** function _I2C_Master_Send_ACK *****************
  2134 ;; Defined at:
  2135 ;;		line 79 in file "i2c.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;		None
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;		None
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  1    wreg      void 
  2142 ;; Registers used:
  2143 ;;		wreg, status,2, status,0, pclath, cstack
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2149 ;;      Params:         0       0       0       0       0
  2150 ;;      Locals:         0       0       0       0       0
  2151 ;;      Temps:          0       0       0       0       0
  2152 ;;      Totals:         0       0       0       0       0
  2153 ;;Total ram usage:        0 bytes
  2154 ;; Hardware stack levels used:    1
  2155 ;; Hardware stack levels required when called:    4
  2156 ;; This function calls:
  2157 ;;		_I2C_Wait_IDLE
  2158 ;; This function is called by:
  2159 ;;		_I2C_Master_ReadByte
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           
  2164                           ;psect for function _I2C_Master_Send_ACK
  2165  089D                     _I2C_Master_Send_ACK:
  2166  089D                     l2600:	
  2167                           ;incstack = 0
  2168 ;; hardware stack exceeded
  2169                           ; Regs used in _I2C_Master_Send_ACK: [wreg+status,2+status,0+pclath+cstack]
  2170                           
  2171                           
  2172                           ;i2c.c: 82:     I2C_Wait_IDLE();
  2173  089D  120A  158A  20D2  120A  158A  	fcall	_I2C_Wait_IDLE
  2174  08A2                     l2602:
  2175                           
  2176                           ;i2c.c: 84:     ACKDT=0;
  2177  08A2  1683               	bsf	3,5	;RP0=1, select bank1
  2178  08A3  1303               	bcf	3,6	;RP1=0, select bank1
  2179  08A4  1291               	bcf	17,5	;volatile
  2180  08A5                     l2604:
  2181                           
  2182                           ;i2c.c: 85:     ACKEN=1;
  2183  08A5  1611               	bsf	17,4	;volatile
  2184  08A6                     l106:
  2185  08A6  0008               	return
  2186  08A7                     __end_of_I2C_Master_Send_ACK:
  2187                           
  2188                           	psect	text7
  2189  0A3B                     __ptext7:	
  2190 ;; *************** function _EWH_Sleep_Mode *****************
  2191 ;; Defined at:
  2192 ;;		line 5 in file "EWH.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;		None
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;		None
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2206 ;;      Params:         0       0       0       0       0
  2207 ;;      Locals:         0       0       0       0       0
  2208 ;;      Temps:          0       0       0       0       0
  2209 ;;      Totals:         0       0       0       0       0
  2210 ;;Total ram usage:        0 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; Hardware stack levels required when called:    6
  2213 ;; This function calls:
  2214 ;;		_DD_SetState
  2215 ;;		_EWH_SSD_OFF
  2216 ;;		_TMR1_Stop
  2217 ;; This function is called by:
  2218 ;;		_main
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222                           
  2223                           ;psect for function _EWH_Sleep_Mode
  2224  0A3B                     _EWH_Sleep_Mode:
  2225  0A3B                     l3122:	
  2226                           ;incstack = 0
  2227                           ; Regs used in _EWH_Sleep_Mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2228                           
  2229                           
  2230                           ;EWH.c: 9:     EWH_SSD_OFF();
  2231  0A3B  120A  158A  20DF  120A  158A  	fcall	_EWH_SSD_OFF
  2232                           
  2233                           ;EWH.c: 11:     DD_SetState(HEATER,OFF);
  2234  0A40  1683               	bsf	3,5	;RP0=1, select bank1
  2235  0A41  1303               	bcf	3,6	;RP1=0, select bank1
  2236  0A42  01A0               	clrf	DD_SetState@state^(0+128)
  2237  0A43  3000               	movlw	0
  2238  0A44  120A  158A  245E  120A  158A  	fcall	_DD_SetState
  2239                           
  2240                           ;EWH.c: 13:     DD_SetState(COOLER,OFF);
  2241  0A49  1683               	bsf	3,5	;RP0=1, select bank1
  2242  0A4A  1303               	bcf	3,6	;RP1=0, select bank1
  2243  0A4B  01A0               	clrf	DD_SetState@state^(0+128)
  2244  0A4C  3001               	movlw	1
  2245  0A4D  120A  158A  245E  120A  158A  	fcall	_DD_SetState
  2246                           
  2247                           ;EWH.c: 15:     DD_SetState(HEATER_LED,OFF);
  2248  0A52  1683               	bsf	3,5	;RP0=1, select bank1
  2249  0A53  1303               	bcf	3,6	;RP1=0, select bank1
  2250  0A54  01A0               	clrf	DD_SetState@state^(0+128)
  2251  0A55  3002               	movlw	2
  2252  0A56  120A  158A  245E  120A  158A  	fcall	_DD_SetState
  2253  0A5B                     l3124:
  2254                           
  2255                           ;EWH.c: 17:     TMR1_Stop();
  2256  0A5B  120A  118A  27FB  120A  158A  	fcall	_TMR1_Stop
  2257  0A60                     l3126:
  2258                           
  2259                           ;EWH.c: 19:     EWH_Events[0]=0;
  2260  0A60  1683               	bsf	3,5	;RP0=1, select bank1
  2261  0A61  1303               	bcf	3,6	;RP1=0, select bank1
  2262  0A62  01BD               	clrf	_EWH_Events^(0+128)
  2263  0A63                     l3128:
  2264                           
  2265                           ;EWH.c: 20:     EWH_Events[2]=0;
  2266  0A63  01BF               	clrf	(_EWH_Events^(0+128)+2)
  2267  0A64                     l3130:
  2268                           
  2269                           ;EWH.c: 21:     EWH_Events[1]=0;
  2270  0A64  01BE               	clrf	(_EWH_Events^(0+128)+1)
  2271  0A65                     l3132:
  2272                           
  2273                           ;EWH.c: 22:     EWH_Events[3]=0;
  2274  0A65  01C0               	clrf	(_EWH_Events^(0+128)+3)
  2275  0A66                     l3136:	
  2276                           ;EWH.c: 24:     (OFF)?(PORTB |= (1<<4)) : (PORTB &= ~(1<<4));
  2277                           
  2278  0A66  30EF               	movlw	239
  2279  0A67  00FF               	movwf	btemp+1
  2280  0A68  087F               	movf	btemp+1,w
  2281  0A69  1283               	bcf	3,5	;RP0=0, select bank0
  2282  0A6A  1303               	bcf	3,6	;RP1=0, select bank0
  2283  0A6B  0586               	andwf	6,f	;volatile
  2284  0A6C                     l3140:
  2285  0A6C  30DF               	movlw	223
  2286  0A6D  00FF               	movwf	btemp+1
  2287  0A6E  087F               	movf	btemp+1,w
  2288  0A6F  0586               	andwf	6,f	;volatile
  2289  0A70                     l3144:
  2290  0A70  30BF               	movlw	191
  2291  0A71  00FF               	movwf	btemp+1
  2292  0A72  087F               	movf	btemp+1,w
  2293  0A73  0586               	andwf	6,f	;volatile
  2294  0A74                     l504:
  2295  0A74  0008               	return
  2296  0A75                     __end_of_EWH_Sleep_Mode:
  2297                           
  2298                           	psect	text8
  2299  04CA                     __ptext8:	
  2300 ;; *************** function _EWH_SetTemp_Mode *****************
  2301 ;; Defined at:
  2302 ;;		line 73 in file "EWH.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;		None
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;		None
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  1    wreg      void 
  2309 ;; Registers used:
  2310 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2316 ;;      Params:         0       0       0       0       0
  2317 ;;      Locals:         0       0       0       0       0
  2318 ;;      Temps:          0       0       2       0       0
  2319 ;;      Totals:         0       0       2       0       0
  2320 ;;Total ram usage:        2 bytes
  2321 ;; Hardware stack levels used:    1
  2322 ;; Hardware stack levels required when called:    7
  2323 ;; This function calls:
  2324 ;;		_DD_SetState
  2325 ;;		_EWH_EEPROM_Update
  2326 ;;		_EWH_SSD_OFF
  2327 ;;		_EWH_SSD_Update
  2328 ;;		_TMR1_Start
  2329 ;; This function is called by:
  2330 ;;		_main
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334                           
  2335                           ;psect for function _EWH_SetTemp_Mode
  2336  04CA                     _EWH_SetTemp_Mode:
  2337  04CA                     l3238:	
  2338                           ;incstack = 0
  2339                           ; Regs used in _EWH_SetTemp_Mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2340                           
  2341                           
  2342                           ;EWH.c: 79:     EWH_Events[0]=0;
  2343  04CA  1683               	bsf	3,5	;RP0=1, select bank1
  2344  04CB  1303               	bcf	3,6	;RP1=0, select bank1
  2345  04CC  01BD               	clrf	_EWH_Events^(0+128)
  2346                           
  2347                           ;EWH.c: 80:     EWH_Events[2]=0;
  2348  04CD  01BF               	clrf	(_EWH_Events^(0+128)+2)
  2349                           
  2350                           ;EWH.c: 81:     EWH_Events[1]=0;
  2351  04CE  01BE               	clrf	(_EWH_Events^(0+128)+1)
  2352                           
  2353                           ;EWH.c: 82:     EWH_Events[3]=0;
  2354  04CF  01C0               	clrf	(_EWH_Events^(0+128)+3)
  2355  04D0                     l3240:
  2356                           
  2357                           ;EWH.c: 89:     TMR1_Start();
  2358  04D0  120A  158A  20FC  120A  118A  	fcall	_TMR1_Start
  2359  04D5                     l3242:
  2360                           
  2361                           ;EWH.c: 91:     NoPress_Sec_count=0;
  2362  04D5  1283               	bcf	3,5	;RP0=0, select bank0
  2363  04D6  1303               	bcf	3,6	;RP1=0, select bank0
  2364  04D7  01D1               	clrf	_NoPress_Sec_count
  2365  04D8                     l3244:
  2366                           
  2367                           ;EWH.c: 93:     DD_SetState(HEATER,OFF);
  2368  04D8  1683               	bsf	3,5	;RP0=1, select bank1
  2369  04D9  1303               	bcf	3,6	;RP1=0, select bank1
  2370  04DA  01A0               	clrf	DD_SetState@state^(0+128)
  2371  04DB  3000               	movlw	0
  2372  04DC  120A  158A  245E  120A  118A  	fcall	_DD_SetState
  2373  04E1                     l3246:
  2374                           
  2375                           ;EWH.c: 94:     DD_SetState(COOLER,OFF);
  2376  04E1  1683               	bsf	3,5	;RP0=1, select bank1
  2377  04E2  1303               	bcf	3,6	;RP1=0, select bank1
  2378  04E3  01A0               	clrf	DD_SetState@state^(0+128)
  2379  04E4  3001               	movlw	1
  2380  04E5  120A  158A  245E  120A  118A  	fcall	_DD_SetState
  2381  04EA                     l3248:
  2382                           
  2383                           ;EWH.c: 95:     DD_SetState(HEATER_LED,OFF);
  2384  04EA  1683               	bsf	3,5	;RP0=1, select bank1
  2385  04EB  1303               	bcf	3,6	;RP1=0, select bank1
  2386  04EC  01A0               	clrf	DD_SetState@state^(0+128)
  2387  04ED  3002               	movlw	2
  2388  04EE  120A  158A  245E  120A  118A  	fcall	_DD_SetState
  2389  04F3                     l3250:
  2390                           
  2391                           ;EWH.c: 97:     EWH_SSD_Update(set_Temp);
  2392  04F3  1683               	bsf	3,5	;RP0=1, select bank1
  2393  04F4  1303               	bcf	3,6	;RP1=0, select bank1
  2394  04F5  0849               	movf	_set_Temp^(0+128),w
  2395  04F6  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2396  04F7  01AF               	clrf	(??_EWH_SetTemp_Mode^(0+128)+1)
  2397  04F8  082E               	movf	??_EWH_SetTemp_Mode^(0+128),w
  2398  04F9  00AA               	movwf	EWH_SSD_Update@temp^(0+128)
  2399  04FA  082F               	movf	(??_EWH_SetTemp_Mode+1)^(0+128),w
  2400  04FB  00AB               	movwf	(EWH_SSD_Update@temp+1)^(0+128)
  2401  04FC  120A  158A  256E  120A  118A  	fcall	_EWH_SSD_Update
  2402  0501                     l3252:
  2403                           
  2404                           ;EWH.c: 99:     {;EWH.c: 100:         if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED) && set_T
      +                          emp<75)
  2405  0501  1283               	bcf	3,5	;RP0=0, select bank0
  2406  0502  1303               	bcf	3,6	;RP1=0, select bank0
  2407  0503  0806               	movf	6,w	;volatile
  2408  0504  1683               	bsf	3,5	;RP0=1, select bank1
  2409  0505  1303               	bcf	3,6	;RP1=0, select bank1
  2410  0506  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2411  0507  3002               	movlw	2
  2412  0508                     u2745:
  2413  0508  1003               	clrc
  2414  0509  0CAE               	rrf	??_EWH_SetTemp_Mode^(0+128),f
  2415  050A  3EFF               	addlw	-1
  2416  050B  1D03               	skipz
  2417  050C  2D08               	goto	u2745
  2418  050D  182E               	btfsc	??_EWH_SetTemp_Mode^(0+128),0
  2419  050E  2D10               	goto	u2751
  2420  050F  2D11               	goto	u2750
  2421  0510                     u2751:
  2422  0510  2D3A               	goto	l3264
  2423  0511                     u2750:
  2424  0511                     l3254:
  2425  0511  304B               	movlw	75
  2426  0512  0249               	subwf	_set_Temp^(0+128),w
  2427  0513  1803               	skipnc
  2428  0514  2D16               	goto	u2761
  2429  0515  2D17               	goto	u2760
  2430  0516                     u2761:
  2431  0516  2D3A               	goto	l3264
  2432  0517                     u2760:
  2433  0517                     l3256:
  2434                           
  2435                           ;EWH.c: 101:         {;EWH.c: 102:             _delay((unsigned long)((50)*(4000000/4000
      +                          .0)));
  2436  0517  3041               	movlw	65
  2437  0518  1683               	bsf	3,5	;RP0=1, select bank1
  2438  0519  1303               	bcf	3,6	;RP1=0, select bank1
  2439  051A  00AF               	movwf	(??_EWH_SetTemp_Mode^(0+128)+1)
  2440  051B  30ED               	movlw	237
  2441  051C  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2442  051D                     u3767:
  2443  051D  0BAE               	decfsz	??_EWH_SetTemp_Mode^(0+128),f
  2444  051E  2D1D               	goto	u3767
  2445  051F  0BAF               	decfsz	(??_EWH_SetTemp_Mode^(0+128)+1),f
  2446  0520  2D1D               	goto	u3767
  2447  0521  2D22               	nop2
  2448  0522                     l3258:
  2449                           
  2450                           ;EWH.c: 103:             if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED))
  2451  0522  1283               	bcf	3,5	;RP0=0, select bank0
  2452  0523  1303               	bcf	3,6	;RP1=0, select bank0
  2453  0524  0806               	movf	6,w	;volatile
  2454  0525  1683               	bsf	3,5	;RP0=1, select bank1
  2455  0526  1303               	bcf	3,6	;RP1=0, select bank1
  2456  0527  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2457  0528  3002               	movlw	2
  2458  0529                     u2775:
  2459  0529  1003               	clrc
  2460  052A  0CAE               	rrf	??_EWH_SetTemp_Mode^(0+128),f
  2461  052B  3EFF               	addlw	-1
  2462  052C  1D03               	skipz
  2463  052D  2D29               	goto	u2775
  2464  052E  182E               	btfsc	??_EWH_SetTemp_Mode^(0+128),0
  2465  052F  2D31               	goto	u2781
  2466  0530  2D32               	goto	u2780
  2467  0531                     u2781:
  2468  0531  2D6E               	goto	l3276
  2469  0532                     u2780:
  2470  0532                     l3260:
  2471                           
  2472                           ;EWH.c: 104:             {;EWH.c: 105:                 set_Temp+=5;
  2473  0532  3005               	movlw	5
  2474  0533  00FF               	movwf	btemp+1
  2475  0534  087F               	movf	btemp+1,w
  2476  0535  07C9               	addwf	_set_Temp^(0+128),f
  2477  0536                     l3262:
  2478                           
  2479                           ;EWH.c: 106:                 NoPress_Sec_count=0;
  2480  0536  1283               	bcf	3,5	;RP0=0, select bank0
  2481  0537  1303               	bcf	3,6	;RP1=0, select bank0
  2482  0538  01D1               	clrf	_NoPress_Sec_count
  2483  0539  2D6E               	goto	l3276
  2484  053A                     l3264:
  2485  053A  1283               	bcf	3,5	;RP0=0, select bank0
  2486  053B  1303               	bcf	3,6	;RP1=0, select bank0
  2487  053C  0806               	movf	6,w	;volatile
  2488  053D  1683               	bsf	3,5	;RP0=1, select bank1
  2489  053E  1303               	bcf	3,6	;RP1=0, select bank1
  2490  053F  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2491  0540  3001               	movlw	1
  2492  0541                     u2795:
  2493  0541  1003               	clrc
  2494  0542  0CAE               	rrf	??_EWH_SetTemp_Mode^(0+128),f
  2495  0543  3EFF               	addlw	-1
  2496  0544  1D03               	skipz
  2497  0545  2D41               	goto	u2795
  2498  0546  182E               	btfsc	??_EWH_SetTemp_Mode^(0+128),0
  2499  0547  2D49               	goto	u2801
  2500  0548  2D4A               	goto	u2800
  2501  0549                     u2801:
  2502  0549  2D6E               	goto	l3276
  2503  054A                     u2800:
  2504  054A                     l3266:
  2505  054A  3024               	movlw	36
  2506  054B  0249               	subwf	_set_Temp^(0+128),w
  2507  054C  1C03               	skipc
  2508  054D  2D4F               	goto	u2811
  2509  054E  2D50               	goto	u2810
  2510  054F                     u2811:
  2511  054F  2D6E               	goto	l3276
  2512  0550                     u2810:
  2513  0550                     l3268:
  2514                           
  2515                           ;EWH.c: 110:         {;EWH.c: 111:             _delay((unsigned long)((50)*(4000000/4000
      +                          .0)));
  2516  0550  3041               	movlw	65
  2517  0551  1683               	bsf	3,5	;RP0=1, select bank1
  2518  0552  1303               	bcf	3,6	;RP1=0, select bank1
  2519  0553  00AF               	movwf	(??_EWH_SetTemp_Mode^(0+128)+1)
  2520  0554  30ED               	movlw	237
  2521  0555  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2522  0556                     u3777:
  2523  0556  0BAE               	decfsz	??_EWH_SetTemp_Mode^(0+128),f
  2524  0557  2D56               	goto	u3777
  2525  0558  0BAF               	decfsz	(??_EWH_SetTemp_Mode^(0+128)+1),f
  2526  0559  2D56               	goto	u3777
  2527  055A  2D5B               	nop2
  2528  055B                     l3270:
  2529                           
  2530                           ;EWH.c: 112:             if((!((PORTB & (1<<1)) >> 1)==SW_PRESSED))
  2531  055B  1283               	bcf	3,5	;RP0=0, select bank0
  2532  055C  1303               	bcf	3,6	;RP1=0, select bank0
  2533  055D  0806               	movf	6,w	;volatile
  2534  055E  1683               	bsf	3,5	;RP0=1, select bank1
  2535  055F  1303               	bcf	3,6	;RP1=0, select bank1
  2536  0560  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2537  0561  3001               	movlw	1
  2538  0562                     u2825:
  2539  0562  1003               	clrc
  2540  0563  0CAE               	rrf	??_EWH_SetTemp_Mode^(0+128),f
  2541  0564  3EFF               	addlw	-1
  2542  0565  1D03               	skipz
  2543  0566  2D62               	goto	u2825
  2544  0567  182E               	btfsc	??_EWH_SetTemp_Mode^(0+128),0
  2545  0568  2D6A               	goto	u2831
  2546  0569  2D6B               	goto	u2830
  2547  056A                     u2831:
  2548  056A  2D6E               	goto	l3276
  2549  056B                     u2830:
  2550  056B                     l3272:
  2551                           
  2552                           ;EWH.c: 113:             {;EWH.c: 114:                 set_Temp-=5;
  2553  056B  3005               	movlw	5
  2554  056C  02C9               	subwf	_set_Temp^(0+128),f
  2555  056D  2D36               	goto	l3262
  2556  056E                     l3276:
  2557                           
  2558                           ;EWH.c: 119:         if(SSD_Blink_flag)
  2559  056E  1683               	bsf	3,5	;RP0=1, select bank1
  2560  056F  1303               	bcf	3,6	;RP1=0, select bank1
  2561  0570  0846               	movf	_SSD_Blink_flag^(0+128),w
  2562  0571  1903               	btfsc	3,2
  2563  0572  2D74               	goto	u2841
  2564  0573  2D75               	goto	u2840
  2565  0574                     u2841:
  2566  0574  2D82               	goto	l3280
  2567  0575                     u2840:
  2568  0575                     l3278:
  2569                           
  2570                           ;EWH.c: 120:         {;EWH.c: 121:             EWH_SSD_Update(set_Temp);
  2571  0575  0849               	movf	_set_Temp^(0+128),w
  2572  0576  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2573  0577  01AF               	clrf	(??_EWH_SetTemp_Mode^(0+128)+1)
  2574  0578  082E               	movf	??_EWH_SetTemp_Mode^(0+128),w
  2575  0579  00AA               	movwf	EWH_SSD_Update@temp^(0+128)
  2576  057A  082F               	movf	(??_EWH_SetTemp_Mode+1)^(0+128),w
  2577  057B  00AB               	movwf	(EWH_SSD_Update@temp+1)^(0+128)
  2578  057C  120A  158A  256E  120A  118A  	fcall	_EWH_SSD_Update
  2579                           
  2580                           ;EWH.c: 122:         }
  2581  0581  2D87               	goto	l3282
  2582  0582                     l3280:
  2583                           
  2584                           ;EWH.c: 124:         {;EWH.c: 125:             EWH_SSD_OFF();
  2585  0582  120A  158A  20DF  120A  118A  	fcall	_EWH_SSD_OFF
  2586  0587                     l3282:
  2587                           
  2588                           ;EWH.c: 127:         if(EWH_Events[3] || EWH_Events[0])
  2589  0587  1683               	bsf	3,5	;RP0=1, select bank1
  2590  0588  1303               	bcf	3,6	;RP1=0, select bank1
  2591  0589  0840               	movf	(_EWH_Events^(0+128)+3),w
  2592  058A  1D03               	btfss	3,2
  2593  058B  2D8D               	goto	u2851
  2594  058C  2D8E               	goto	u2850
  2595  058D                     u2851:
  2596  058D  2D93               	goto	l3286
  2597  058E                     u2850:
  2598  058E                     l3284:
  2599  058E  083D               	movf	_EWH_Events^(0+128),w
  2600  058F  1903               	btfsc	3,2
  2601  0590  2D92               	goto	u2861
  2602  0591  2D93               	goto	u2860
  2603  0592                     u2861:
  2604  0592  2D01               	goto	l3252
  2605  0593                     u2860:
  2606  0593                     l3286:
  2607                           
  2608                           ;EWH.c: 128:         {;EWH.c: 130:             EWH_EEPROM_Update(set_Temp);
  2609  0593  0849               	movf	_set_Temp^(0+128),w
  2610  0594  120A  158A  210C  120A  118A  	fcall	_EWH_EEPROM_Update
  2611  0599                     l3288:	
  2612                           ;EWH.c: 132:             break ;
  2613                           
  2614                           
  2615                           ;EWH.c: 137:     if(EWH_Events[3])
  2616  0599  1683               	bsf	3,5	;RP0=1, select bank1
  2617  059A  1303               	bcf	3,6	;RP1=0, select bank1
  2618  059B  0840               	movf	(_EWH_Events^(0+128)+3),w
  2619  059C  1903               	btfsc	3,2
  2620  059D  2D9F               	goto	u2871
  2621  059E  2DA0               	goto	u2870
  2622  059F                     u2871:
  2623  059F  2DA5               	goto	l529
  2624  05A0                     u2870:
  2625  05A0                     l3290:
  2626                           
  2627                           ;EWH.c: 138:     {;EWH.c: 139:         EWH_Events[3]=0;
  2628  05A0  01C0               	clrf	(_EWH_Events^(0+128)+3)
  2629  05A1                     l3292:
  2630                           
  2631                           ;EWH.c: 142:         EWH_Mode=EWH_OPERATING_MODE;
  2632  05A1  3003               	movlw	3
  2633  05A2  00FF               	movwf	btemp+1
  2634  05A3  087F               	movf	btemp+1,w
  2635  05A4  00CA               	movwf	_EWH_Mode^(0+128)
  2636  05A5                     l529:
  2637  05A5  0008               	return
  2638  05A6                     __end_of_EWH_SetTemp_Mode:
  2639                           
  2640                           	psect	text9
  2641  08DF                     __ptext9:	
  2642 ;; *************** function _EWH_SSD_OFF *****************
  2643 ;; Defined at:
  2644 ;;		line 275 in file "EWH.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;		None
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;		None
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  1    wreg      void 
  2651 ;; Registers used:
  2652 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2658 ;;      Params:         0       0       0       0       0
  2659 ;;      Locals:         0       0       0       0       0
  2660 ;;      Temps:          0       0       0       0       0
  2661 ;;      Totals:         0       0       0       0       0
  2662 ;;Total ram usage:        0 bytes
  2663 ;; Hardware stack levels used:    1
  2664 ;; Hardware stack levels required when called:    5
  2665 ;; This function calls:
  2666 ;;		_SSD_OFF
  2667 ;; This function is called by:
  2668 ;;		_EWH_Sleep_Mode
  2669 ;;		_EWH_SetTemp_Mode
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           
  2674                           ;psect for function _EWH_SSD_OFF
  2675  08DF                     _EWH_SSD_OFF:
  2676  08DF                     l3008:	
  2677                           ;incstack = 0
  2678                           ; Regs used in _EWH_SSD_OFF: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2679                           
  2680                           
  2681                           ;EWH.c: 277:     SSD_OFF(3);
  2682  08DF  3003               	movlw	3
  2683  08E0  120A  158A  20BB  120A  158A  	fcall	_SSD_OFF
  2684                           
  2685                           ;EWH.c: 278:     SSD_OFF(4);
  2686  08E5  3004               	movlw	4
  2687  08E6  120A  158A  20BB  120A  158A  	fcall	_SSD_OFF
  2688  08EB                     l567:
  2689  08EB  0008               	return
  2690  08EC                     __end_of_EWH_SSD_OFF:
  2691                           
  2692                           	psect	text10
  2693  090C                     __ptext10:	
  2694 ;; *************** function _EWH_EEPROM_Update *****************
  2695 ;; Defined at:
  2696 ;;		line 261 in file "EWH.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;  newSetTemp      1    wreg     unsigned char 
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;  newSetTemp      1    6[BANK1 ] unsigned char 
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  1    wreg      void 
  2703 ;; Registers used:
  2704 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2710 ;;      Params:         0       0       0       0       0
  2711 ;;      Locals:         0       0       1       0       0
  2712 ;;      Temps:          0       0       0       0       0
  2713 ;;      Totals:         0       0       1       0       0
  2714 ;;Total ram usage:        1 bytes
  2715 ;; Hardware stack levels used:    1
  2716 ;; Hardware stack levels required when called:    6
  2717 ;; This function calls:
  2718 ;;		_EEPROM_WriteByte
  2719 ;; This function is called by:
  2720 ;;		_EWH_SetTemp_Mode
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           
  2725                           ;psect for function _EWH_EEPROM_Update
  2726  090C                     _EWH_EEPROM_Update:
  2727                           
  2728                           ;incstack = 0
  2729                           ; Regs used in _EWH_EEPROM_Update: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2730                           ;EWH_EEPROM_Update@newSetTemp stored from wreg
  2731  090C  1683               	bsf	3,5	;RP0=1, select bank1
  2732  090D  1303               	bcf	3,6	;RP1=0, select bank1
  2733  090E  00A6               	movwf	EWH_EEPROM_Update@newSetTemp^(0+128)
  2734  090F                     l3024:
  2735                           
  2736                           ;EWH.c: 261: void EWH_EEPROM_Update(uint8_t newSetTemp);EWH.c: 262: {;EWH.c: 263:     EE
      +                          PROM_WriteByte(0x0020,newSetTemp);
  2737  090F  3020               	movlw	32
  2738  0910  00A1               	movwf	EEPROM_WriteByte@address^(0+128)
  2739  0911  3000               	movlw	0
  2740  0912  00A2               	movwf	(EEPROM_WriteByte@address^(0+128)+1)
  2741  0913  0826               	movf	EWH_EEPROM_Update@newSetTemp^(0+128),w
  2742  0914  00FF               	movwf	btemp+1
  2743  0915  087F               	movf	btemp+1,w
  2744  0916  00A3               	movwf	EEPROM_WriteByte@data^(0+128)
  2745  0917  120A  158A  2275  120A  158A  	fcall	_EEPROM_WriteByte
  2746  091C                     l558:
  2747  091C  0008               	return
  2748  091D                     __end_of_EWH_EEPROM_Update:
  2749                           
  2750                           	psect	text11
  2751  0398                     __ptext11:	
  2752 ;; *************** function _EWH_Operating_Mode *****************
  2753 ;; Defined at:
  2754 ;;		line 146 in file "EWH.c"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;		None
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;		None
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  1    wreg      void 
  2761 ;; Registers used:
  2762 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2768 ;;      Params:         0       0       0       0       0
  2769 ;;      Locals:         0       0       0       0       0
  2770 ;;      Temps:          0       0       3       0       0
  2771 ;;      Totals:         0       0       3       0       0
  2772 ;;Total ram usage:        3 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:    6
  2775 ;; This function calls:
  2776 ;;		_DD_SetState
  2777 ;;		_EWH_SSD_Update
  2778 ;;		_EWH_getAvrgTempReading
  2779 ;;		_TMR1_Start
  2780 ;;		_TMR1_Stop
  2781 ;;		___awmod
  2782 ;; This function is called by:
  2783 ;;		_main
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           
  2788                           ;psect for function _EWH_Operating_Mode
  2789  0398                     _EWH_Operating_Mode:
  2790  0398                     l3176:	
  2791                           ;incstack = 0
  2792                           ; Regs used in _EWH_Operating_Mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2793                           
  2794                           
  2795                           ;EWH.c: 152:     EWH_Events[0]=0;
  2796  0398  1683               	bsf	3,5	;RP0=1, select bank1
  2797  0399  1303               	bcf	3,6	;RP1=0, select bank1
  2798  039A  01BD               	clrf	_EWH_Events^(0+128)
  2799                           
  2800                           ;EWH.c: 153:     EWH_Events[2]=0;
  2801  039B  01BF               	clrf	(_EWH_Events^(0+128)+2)
  2802                           
  2803                           ;EWH.c: 154:     EWH_Events[1]=0;
  2804  039C  01BE               	clrf	(_EWH_Events^(0+128)+1)
  2805                           
  2806                           ;EWH.c: 155:     EWH_Events[3]=0;
  2807  039D  01C0               	clrf	(_EWH_Events^(0+128)+3)
  2808  039E                     l3178:
  2809                           
  2810                           ;EWH.c: 157:     EWH_Mode=EWH_OPERATING_MODE;
  2811  039E  3003               	movlw	3
  2812  039F  00FF               	movwf	btemp+1
  2813  03A0  087F               	movf	btemp+1,w
  2814  03A1  00CA               	movwf	_EWH_Mode^(0+128)
  2815  03A2                     l3180:
  2816                           
  2817                           ;EWH.c: 159:     TMR1_Start();
  2818  03A2  120A  158A  20FC  120A  118A  	fcall	_TMR1_Start
  2819  03A7                     l3182:
  2820                           
  2821                           ;EWH.c: 162:     {;EWH.c: 163:         EWH_SSD_Update(current_Temp);
  2822  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  2823  03A8  1303               	bcf	3,6	;RP1=0, select bank1
  2824  03A9  0848               	movf	_current_Temp^(0+128),w
  2825  03AA  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  2826  03AB  01B1               	clrf	(??_EWH_Operating_Mode^(0+128)+1)
  2827  03AC  0830               	movf	??_EWH_Operating_Mode^(0+128),w
  2828  03AD  00AA               	movwf	EWH_SSD_Update@temp^(0+128)
  2829  03AE  0831               	movf	(??_EWH_Operating_Mode+1)^(0+128),w
  2830  03AF  00AB               	movwf	(EWH_SSD_Update@temp+1)^(0+128)
  2831  03B0  120A  158A  256E  120A  118A  	fcall	_EWH_SSD_Update
  2832  03B5                     l3184:
  2833                           
  2834                           ;EWH.c: 164:         ReadingBuffer[TempReading_count]=current_Temp;
  2835  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  2836  03B6  1303               	bcf	3,6	;RP1=0, select bank1
  2837  03B7  0848               	movf	_current_Temp^(0+128),w
  2838  03B8  00FF               	movwf	btemp+1
  2839  03B9  0847               	movf	_TempReading_count^(0+128),w
  2840  03BA  3ECB               	addlw	(low (_ReadingBuffer| 0))& (0+255)
  2841  03BB  0084               	movwf	4
  2842  03BC  087F               	movf	btemp+1,w
  2843  03BD  1383               	bcf	3,7	;select IRP bank1
  2844  03BE  0080               	movwf	0
  2845  03BF                     l3186:
  2846                           
  2847                           ;EWH.c: 165:         TempReading_count++;
  2848  03BF  3001               	movlw	1
  2849  03C0  00FF               	movwf	btemp+1
  2850  03C1  087F               	movf	btemp+1,w
  2851  03C2  07C7               	addwf	_TempReading_count^(0+128),f
  2852  03C3                     l3188:
  2853                           
  2854                           ;EWH.c: 166:         TempReading_count= TempReading_count%10;
  2855  03C3  300A               	movlw	10
  2856  03C4  00A0               	movwf	___awmod@divisor^(0+128)
  2857  03C5  3000               	movlw	0
  2858  03C6  00A1               	movwf	(___awmod@divisor^(0+128)+1)
  2859  03C7  0847               	movf	_TempReading_count^(0+128),w
  2860  03C8  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  2861  03C9  01B1               	clrf	(??_EWH_Operating_Mode^(0+128)+1)
  2862  03CA  0830               	movf	??_EWH_Operating_Mode^(0+128),w
  2863  03CB  00A2               	movwf	___awmod@dividend^(0+128)
  2864  03CC  0831               	movf	(??_EWH_Operating_Mode+1)^(0+128),w
  2865  03CD  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  2866  03CE  120A  158A  24B8  120A  118A  	fcall	___awmod
  2867  03D3  1683               	bsf	3,5	;RP0=1, select bank1
  2868  03D4  1303               	bcf	3,6	;RP1=0, select bank1
  2869  03D5  0820               	movf	?___awmod^(0+128),w
  2870  03D6  00FF               	movwf	btemp+1
  2871  03D7  087F               	movf	btemp+1,w
  2872  03D8  00C7               	movwf	_TempReading_count^(0+128)
  2873  03D9                     l3190:
  2874                           
  2875                           ;EWH.c: 167:         if(TempReading_count==9)
  2876  03D9  3009               	movlw	9
  2877  03DA  0647               	xorwf	_TempReading_count^(0+128),w
  2878  03DB  1D03               	btfss	3,2
  2879  03DC  2BDE               	goto	u2591
  2880  03DD  2BDF               	goto	u2590
  2881  03DE                     u2591:
  2882  03DE  2BF0               	goto	l3196
  2883  03DF                     u2590:
  2884  03DF                     l3192:
  2885                           
  2886                           ;EWH.c: 168:         {;EWH.c: 169:             TempavgReading= EWH_getAvrgTempReading(Re
      +                          adingBuffer,10);
  2887  03DF  300A               	movlw	10
  2888  03E0  00FF               	movwf	btemp+1
  2889  03E1  087F               	movf	btemp+1,w
  2890  03E2  00A7               	movwf	EWH_getAvrgTempReading@length^(0+128)
  2891  03E3  30CB               	movlw	(low (_ReadingBuffer| 0))& (0+255)
  2892  03E4  120A  158A  2203  120A  118A  	fcall	_EWH_getAvrgTempReading
  2893  03E9  00FF               	movwf	btemp+1
  2894  03EA  087F               	movf	btemp+1,w
  2895  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  2896  03EC  1303               	bcf	3,6	;RP1=0, select bank1
  2897  03ED  00C4               	movwf	_TempavgReading^(0+128)
  2898  03EE                     l3194:
  2899                           
  2900                           ;EWH.c: 170:             ReadingBufferFull=TRUE;
  2901  03EE  01C5               	clrf	_ReadingBufferFull^(0+128)
  2902  03EF  0AC5               	incf	_ReadingBufferFull^(0+128),f
  2903  03F0                     l3196:
  2904                           
  2905                           ;EWH.c: 172:         if(ReadingBufferFull)
  2906  03F0  0845               	movf	_ReadingBufferFull^(0+128),w
  2907  03F1  1903               	btfsc	3,2
  2908  03F2  2BF4               	goto	u2601
  2909  03F3  2BF5               	goto	u2600
  2910  03F4                     u2601:
  2911  03F4  2C44               	goto	l3206
  2912  03F5                     u2600:
  2913  03F5                     l3198:
  2914                           
  2915                           ;EWH.c: 173:         {;EWH.c: 174:             if(TempavgReading>=(set_Temp+5))
  2916  03F5  0849               	movf	_set_Temp^(0+128),w
  2917  03F6  3E05               	addlw	5
  2918  03F7  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  2919  03F8  3000               	movlw	0
  2920  03F9  1803               	skipnc
  2921  03FA  3001               	movlw	1
  2922  03FB  00B1               	movwf	(??_EWH_Operating_Mode^(0+128)+1)
  2923  03FC  0831               	movf	(??_EWH_Operating_Mode+1)^(0+128),w
  2924  03FD  3A80               	xorlw	128
  2925  03FE  3C80               	sublw	128
  2926  03FF  1D03               	skipz
  2927  0400  2C03               	goto	u2615
  2928  0401  0830               	movf	??_EWH_Operating_Mode^(0+128),w
  2929  0402  0244               	subwf	_TempavgReading^(0+128),w
  2930  0403                     u2615:
  2931  0403  1C03               	skipc
  2932  0404  2C06               	goto	u2611
  2933  0405  2C07               	goto	u2610
  2934  0406                     u2611:
  2935  0406  2C1B               	goto	l3202
  2936  0407                     u2610:
  2937  0407                     l3200:
  2938                           
  2939                           ;EWH.c: 175:             {;EWH.c: 176:                 DD_SetState(HEATER,OFF);
  2940  0407  1683               	bsf	3,5	;RP0=1, select bank1
  2941  0408  1303               	bcf	3,6	;RP1=0, select bank1
  2942  0409  01A0               	clrf	DD_SetState@state^(0+128)
  2943  040A  3000               	movlw	0
  2944  040B  120A  158A  245E  120A  118A  	fcall	_DD_SetState
  2945                           
  2946                           ;EWH.c: 177:                 DD_SetState(COOLER,ON);
  2947  0410  1683               	bsf	3,5	;RP0=1, select bank1
  2948  0411  1303               	bcf	3,6	;RP1=0, select bank1
  2949  0412  01A0               	clrf	DD_SetState@state^(0+128)
  2950  0413  0AA0               	incf	DD_SetState@state^(0+128),f
  2951  0414  3001               	movlw	1
  2952  0415  120A  158A  245E  120A  118A  	fcall	_DD_SetState
  2953                           
  2954                           ;EWH.c: 178:             }
  2955  041A  2C44               	goto	l3206
  2956  041B                     l3202:
  2957  041B  1683               	bsf	3,5	;RP0=1, select bank1
  2958  041C  1303               	bcf	3,6	;RP1=0, select bank1
  2959  041D  0849               	movf	_set_Temp^(0+128),w
  2960  041E  3EFB               	addlw	251
  2961  041F  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  2962  0420  30FF               	movlw	255
  2963  0421  1803               	skipnc
  2964  0422  3000               	movlw	0
  2965  0423  00B1               	movwf	(??_EWH_Operating_Mode^(0+128)+1)
  2966  0424  0831               	movf	(??_EWH_Operating_Mode+1)^(0+128),w
  2967  0425  3A80               	xorlw	128
  2968  0426  00B2               	movwf	(??_EWH_Operating_Mode+2)^(0+128)
  2969  0427  3080               	movlw	128
  2970  0428  0232               	subwf	(??_EWH_Operating_Mode+2)^(0+128),w
  2971  0429  1D03               	skipz
  2972  042A  2C2D               	goto	u2625
  2973  042B  0844               	movf	_TempavgReading^(0+128),w
  2974  042C  0230               	subwf	??_EWH_Operating_Mode^(0+128),w
  2975  042D                     u2625:
  2976  042D  1C03               	skipc
  2977  042E  2C30               	goto	u2621
  2978  042F  2C31               	goto	u2620
  2979  0430                     u2621:
  2980  0430  2C44               	goto	l3206
  2981  0431                     u2620:
  2982  0431                     l3204:
  2983                           
  2984                           ;EWH.c: 180:             {;EWH.c: 181:                 DD_SetState(HEATER,ON);
  2985  0431  1683               	bsf	3,5	;RP0=1, select bank1
  2986  0432  1303               	bcf	3,6	;RP1=0, select bank1
  2987  0433  01A0               	clrf	DD_SetState@state^(0+128)
  2988  0434  0AA0               	incf	DD_SetState@state^(0+128),f
  2989  0435  3000               	movlw	0
  2990  0436  120A  158A  245E  120A  118A  	fcall	_DD_SetState
  2991                           
  2992                           ;EWH.c: 182:                 DD_SetState(COOLER,OFF);
  2993  043B  1683               	bsf	3,5	;RP0=1, select bank1
  2994  043C  1303               	bcf	3,6	;RP1=0, select bank1
  2995  043D  01A0               	clrf	DD_SetState@state^(0+128)
  2996  043E  3001               	movlw	1
  2997  043F  120A  158A  245E  120A  118A  	fcall	_DD_SetState
  2998  0444                     l3206:
  2999                           
  3000                           ;EWH.c: 185:         if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED) || (!((PORTB & (1<<1)) >>
      +                           1)==SW_PRESSED) )
  3001  0444  1283               	bcf	3,5	;RP0=0, select bank0
  3002  0445  1303               	bcf	3,6	;RP1=0, select bank0
  3003  0446  0806               	movf	6,w	;volatile
  3004  0447  1683               	bsf	3,5	;RP0=1, select bank1
  3005  0448  1303               	bcf	3,6	;RP1=0, select bank1
  3006  0449  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  3007  044A  3002               	movlw	2
  3008  044B                     u2635:
  3009  044B  1003               	clrc
  3010  044C  0CB0               	rrf	??_EWH_Operating_Mode^(0+128),f
  3011  044D  3EFF               	addlw	-1
  3012  044E  1D03               	skipz
  3013  044F  2C4B               	goto	u2635
  3014  0450  1C30               	btfss	??_EWH_Operating_Mode^(0+128),0
  3015  0451  2C53               	goto	u2641
  3016  0452  2C54               	goto	u2640
  3017  0453                     u2641:
  3018  0453  2C64               	goto	l3210
  3019  0454                     u2640:
  3020  0454                     l3208:
  3021  0454  1283               	bcf	3,5	;RP0=0, select bank0
  3022  0455  1303               	bcf	3,6	;RP1=0, select bank0
  3023  0456  0806               	movf	6,w	;volatile
  3024  0457  1683               	bsf	3,5	;RP0=1, select bank1
  3025  0458  1303               	bcf	3,6	;RP1=0, select bank1
  3026  0459  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  3027  045A  3001               	movlw	1
  3028  045B                     u2655:
  3029  045B  1003               	clrc
  3030  045C  0CB0               	rrf	??_EWH_Operating_Mode^(0+128),f
  3031  045D  3EFF               	addlw	-1
  3032  045E  1D03               	skipz
  3033  045F  2C5B               	goto	u2655
  3034  0460  1830               	btfsc	??_EWH_Operating_Mode^(0+128),0
  3035  0461  2C63               	goto	u2661
  3036  0462  2C64               	goto	u2660
  3037  0463                     u2661:
  3038  0463  2C94               	goto	l3216
  3039  0464                     u2660:
  3040  0464                     l3210:
  3041                           
  3042                           ;EWH.c: 186:         {;EWH.c: 187:             _delay((unsigned long)((50)*(4000000/4000
      +                          .0)));
  3043  0464  3041               	movlw	65
  3044  0465  1683               	bsf	3,5	;RP0=1, select bank1
  3045  0466  1303               	bcf	3,6	;RP1=0, select bank1
  3046  0467  00B1               	movwf	(??_EWH_Operating_Mode^(0+128)+1)
  3047  0468  30ED               	movlw	237
  3048  0469  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  3049  046A                     u3787:
  3050  046A  0BB0               	decfsz	??_EWH_Operating_Mode^(0+128),f
  3051  046B  2C6A               	goto	u3787
  3052  046C  0BB1               	decfsz	(??_EWH_Operating_Mode^(0+128)+1),f
  3053  046D  2C6A               	goto	u3787
  3054  046E  2C6F               	nop2
  3055  046F                     l3212:
  3056                           
  3057                           ;EWH.c: 188:            if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED) || (!((PORTB & (1<<1))
      +                           >> 1)==SW_PRESSED) )
  3058  046F  1283               	bcf	3,5	;RP0=0, select bank0
  3059  0470  1303               	bcf	3,6	;RP1=0, select bank0
  3060  0471  0806               	movf	6,w	;volatile
  3061  0472  1683               	bsf	3,5	;RP0=1, select bank1
  3062  0473  1303               	bcf	3,6	;RP1=0, select bank1
  3063  0474  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  3064  0475  3002               	movlw	2
  3065  0476                     u2675:
  3066  0476  1003               	clrc
  3067  0477  0CB0               	rrf	??_EWH_Operating_Mode^(0+128),f
  3068  0478  3EFF               	addlw	-1
  3069  0479  1D03               	skipz
  3070  047A  2C76               	goto	u2675
  3071  047B  1C30               	btfss	??_EWH_Operating_Mode^(0+128),0
  3072  047C  2C7E               	goto	u2681
  3073  047D  2C7F               	goto	u2680
  3074  047E                     u2681:
  3075  047E  2C8F               	goto	l543
  3076  047F                     u2680:
  3077  047F                     l3214:
  3078  047F  1283               	bcf	3,5	;RP0=0, select bank0
  3079  0480  1303               	bcf	3,6	;RP1=0, select bank0
  3080  0481  0806               	movf	6,w	;volatile
  3081  0482  1683               	bsf	3,5	;RP0=1, select bank1
  3082  0483  1303               	bcf	3,6	;RP1=0, select bank1
  3083  0484  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  3084  0485  3001               	movlw	1
  3085  0486                     u2695:
  3086  0486  1003               	clrc
  3087  0487  0CB0               	rrf	??_EWH_Operating_Mode^(0+128),f
  3088  0488  3EFF               	addlw	-1
  3089  0489  1D03               	skipz
  3090  048A  2C86               	goto	u2695
  3091  048B  1830               	btfsc	??_EWH_Operating_Mode^(0+128),0
  3092  048C  2C8E               	goto	u2701
  3093  048D  2C8F               	goto	u2700
  3094  048E                     u2701:
  3095  048E  2C94               	goto	l3216
  3096  048F                     u2700:
  3097  048F                     l543:
  3098                           
  3099                           ;EWH.c: 189:            {;EWH.c: 190:             EWH_Events[2]=1;
  3100  048F  01BF               	clrf	(_EWH_Events^(0+128)+2)
  3101  0490  0ABF               	incf	(_EWH_Events^(0+128)+2),f
  3102                           
  3103                           ;EWH.c: 191:             EWH_Events[1]=1;
  3104  0491  01BE               	clrf	(_EWH_Events^(0+128)+1)
  3105  0492  0ABE               	incf	(_EWH_Events^(0+128)+1),f
  3106                           
  3107                           ;EWH.c: 192:             break;
  3108  0493  2CA7               	goto	l3222
  3109  0494                     l3216:
  3110                           
  3111                           ;EWH.c: 195:         if(EWH_Events[0]==1)
  3112  0494  033D               	decf	_EWH_Events^(0+128),w
  3113  0495  1D03               	btfss	3,2
  3114  0496  2C98               	goto	u2711
  3115  0497  2C99               	goto	u2710
  3116  0498                     u2711:
  3117  0498  2C9A               	goto	l3220
  3118  0499                     u2710:
  3119  0499  2CA7               	goto	l3222
  3120  049A                     l3220:
  3121                           
  3122                           ;EWH.c: 198:          EWH_SSD_Update(current_Temp);
  3123  049A  0848               	movf	_current_Temp^(0+128),w
  3124  049B  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  3125  049C  01B1               	clrf	(??_EWH_Operating_Mode^(0+128)+1)
  3126  049D  0830               	movf	??_EWH_Operating_Mode^(0+128),w
  3127  049E  00AA               	movwf	EWH_SSD_Update@temp^(0+128)
  3128  049F  0831               	movf	(??_EWH_Operating_Mode+1)^(0+128),w
  3129  04A0  00AB               	movwf	(EWH_SSD_Update@temp+1)^(0+128)
  3130  04A1  120A  158A  256E  120A  118A  	fcall	_EWH_SSD_Update
  3131  04A6  2BA7               	goto	l3182
  3132  04A7                     l3222:
  3133                           
  3134                           ;EWH.c: 201:     if(EWH_Events[1] )
  3135  04A7  083E               	movf	(_EWH_Events^(0+128)+1),w
  3136  04A8  1903               	btfsc	3,2
  3137  04A9  2CAB               	goto	u2721
  3138  04AA  2CAC               	goto	u2720
  3139  04AB                     u2721:
  3140  04AB  2CB8               	goto	l3230
  3141  04AC                     u2720:
  3142  04AC                     l3224:
  3143                           
  3144                           ;EWH.c: 202:         {;EWH.c: 203:             EWH_Events[1]=0;
  3145  04AC  01BE               	clrf	(_EWH_Events^(0+128)+1)
  3146  04AD                     l3226:
  3147                           
  3148                           ;EWH.c: 204:             TMR1_Stop();
  3149  04AD  120A  118A  27FB  120A  118A  	fcall	_TMR1_Stop
  3150  04B2                     l3228:
  3151                           
  3152                           ;EWH.c: 206:             EWH_Mode=EWH_SET_TEMP_MODE;
  3153  04B2  3002               	movlw	2
  3154  04B3  00FF               	movwf	btemp+1
  3155  04B4  087F               	movf	btemp+1,w
  3156  04B5  1683               	bsf	3,5	;RP0=1, select bank1
  3157  04B6  1303               	bcf	3,6	;RP1=0, select bank1
  3158  04B7  00CA               	movwf	_EWH_Mode^(0+128)
  3159  04B8                     l3230:
  3160                           
  3161                           ;EWH.c: 208:     if( EWH_Events[2])
  3162  04B8  083F               	movf	(_EWH_Events^(0+128)+2),w
  3163  04B9  1903               	btfsc	3,2
  3164  04BA  2CBC               	goto	u2731
  3165  04BB  2CBD               	goto	u2730
  3166  04BC                     u2731:
  3167  04BC  2CC9               	goto	l549
  3168  04BD                     u2730:
  3169  04BD                     l3232:
  3170                           
  3171                           ;EWH.c: 209:         {;EWH.c: 210:              EWH_Events[2]=0;
  3172  04BD  01BF               	clrf	(_EWH_Events^(0+128)+2)
  3173  04BE                     l3234:
  3174                           
  3175                           ;EWH.c: 211:              TMR1_Stop();
  3176  04BE  120A  118A  27FB  120A  118A  	fcall	_TMR1_Stop
  3177  04C3                     l3236:
  3178                           
  3179                           ;EWH.c: 212:              EWH_Mode=EWH_SET_TEMP_MODE;
  3180  04C3  3002               	movlw	2
  3181  04C4  00FF               	movwf	btemp+1
  3182  04C5  087F               	movf	btemp+1,w
  3183  04C6  1683               	bsf	3,5	;RP0=1, select bank1
  3184  04C7  1303               	bcf	3,6	;RP1=0, select bank1
  3185  04C8  00CA               	movwf	_EWH_Mode^(0+128)
  3186  04C9                     l549:
  3187  04C9  0008               	return
  3188  04CA                     __end_of_EWH_Operating_Mode:
  3189                           
  3190                           	psect	text12
  3191  0CB8                     __ptext12:	
  3192 ;; *************** function ___awmod *****************
  3193 ;; Defined at:
  3194 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;  divisor         2    0[BANK1 ] int 
  3197 ;;  dividend        2    2[BANK1 ] int 
  3198 ;; Auto vars:     Size  Location     Type
  3199 ;;  sign            1    5[BANK1 ] unsigned char 
  3200 ;;  counter         1    4[BANK1 ] unsigned char 
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  2    0[BANK1 ] int 
  3203 ;; Registers used:
  3204 ;;		wreg, status,2, status,0, btemp+1
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3210 ;;      Params:         0       0       4       0       0
  3211 ;;      Locals:         0       0       2       0       0
  3212 ;;      Temps:          0       0       0       0       0
  3213 ;;      Totals:         0       0       6       0       0
  3214 ;;Total ram usage:        6 bytes
  3215 ;; Hardware stack levels used:    1
  3216 ;; Hardware stack levels required when called:    3
  3217 ;; This function calls:
  3218 ;;		Nothing
  3219 ;; This function is called by:
  3220 ;;		_EWH_Operating_Mode
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224                           
  3225                           ;psect for function ___awmod
  3226  0CB8                     ___awmod:
  3227  0CB8                     l3042:	
  3228                           ;incstack = 0
  3229                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  3230                           
  3231  0CB8  1683               	bsf	3,5	;RP0=1, select bank1
  3232  0CB9  1303               	bcf	3,6	;RP1=0, select bank1
  3233  0CBA  01A5               	clrf	___awmod@sign^(0+128)
  3234  0CBB                     l3044:
  3235  0CBB  1FA3               	btfss	(___awmod@dividend+1)^(0+128),7
  3236  0CBC  2CBE               	goto	u2391
  3237  0CBD  2CBF               	goto	u2390
  3238  0CBE                     u2391:
  3239  0CBE  2CC6               	goto	l3050
  3240  0CBF                     u2390:
  3241  0CBF                     l3046:
  3242  0CBF  09A2               	comf	___awmod@dividend^(0+128),f
  3243  0CC0  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  3244  0CC1  0AA2               	incf	___awmod@dividend^(0+128),f
  3245  0CC2  1903               	skipnz
  3246  0CC3  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  3247  0CC4                     l3048:
  3248  0CC4  01A5               	clrf	___awmod@sign^(0+128)
  3249  0CC5  0AA5               	incf	___awmod@sign^(0+128),f
  3250  0CC6                     l3050:
  3251  0CC6  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  3252  0CC7  2CC9               	goto	u2401
  3253  0CC8  2CCA               	goto	u2400
  3254  0CC9                     u2401:
  3255  0CC9  2CCF               	goto	l3054
  3256  0CCA                     u2400:
  3257  0CCA                     l3052:
  3258  0CCA  09A0               	comf	___awmod@divisor^(0+128),f
  3259  0CCB  09A1               	comf	(___awmod@divisor+1)^(0+128),f
  3260  0CCC  0AA0               	incf	___awmod@divisor^(0+128),f
  3261  0CCD  1903               	skipnz
  3262  0CCE  0AA1               	incf	(___awmod@divisor+1)^(0+128),f
  3263  0CCF                     l3054:
  3264  0CCF  0820               	movf	___awmod@divisor^(0+128),w
  3265  0CD0  0421               	iorwf	(___awmod@divisor+1)^(0+128),w
  3266  0CD1  1903               	btfsc	3,2
  3267  0CD2  2CD4               	goto	u2411
  3268  0CD3  2CD5               	goto	u2410
  3269  0CD4                     u2411:
  3270  0CD4  2D04               	goto	l3072
  3271  0CD5                     u2410:
  3272  0CD5                     l3056:
  3273  0CD5  01A4               	clrf	___awmod@counter^(0+128)
  3274  0CD6  0AA4               	incf	___awmod@counter^(0+128),f
  3275  0CD7  2CE3               	goto	l3062
  3276  0CD8                     l3058:
  3277  0CD8  3001               	movlw	1
  3278  0CD9                     u2425:
  3279  0CD9  1003               	clrc
  3280  0CDA  0DA0               	rlf	___awmod@divisor^(0+128),f
  3281  0CDB  0DA1               	rlf	(___awmod@divisor+1)^(0+128),f
  3282  0CDC  3EFF               	addlw	-1
  3283  0CDD  1D03               	skipz
  3284  0CDE  2CD9               	goto	u2425
  3285  0CDF                     l3060:
  3286  0CDF  3001               	movlw	1
  3287  0CE0  00FF               	movwf	btemp+1
  3288  0CE1  087F               	movf	btemp+1,w
  3289  0CE2  07A4               	addwf	___awmod@counter^(0+128),f
  3290  0CE3                     l3062:
  3291  0CE3  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  3292  0CE4  2CE6               	goto	u2431
  3293  0CE5  2CE7               	goto	u2430
  3294  0CE6                     u2431:
  3295  0CE6  2CD8               	goto	l3058
  3296  0CE7                     u2430:
  3297  0CE7                     l3064:
  3298  0CE7  0821               	movf	(___awmod@divisor+1)^(0+128),w
  3299  0CE8  0223               	subwf	(___awmod@dividend+1)^(0+128),w
  3300  0CE9  1D03               	skipz
  3301  0CEA  2CED               	goto	u2445
  3302  0CEB  0820               	movf	___awmod@divisor^(0+128),w
  3303  0CEC  0222               	subwf	___awmod@dividend^(0+128),w
  3304  0CED                     u2445:
  3305  0CED  1C03               	skipc
  3306  0CEE  2CF0               	goto	u2441
  3307  0CEF  2CF1               	goto	u2440
  3308  0CF0                     u2441:
  3309  0CF0  2CF7               	goto	l3068
  3310  0CF1                     u2440:
  3311  0CF1                     l3066:
  3312  0CF1  0820               	movf	___awmod@divisor^(0+128),w
  3313  0CF2  02A2               	subwf	___awmod@dividend^(0+128),f
  3314  0CF3  0821               	movf	(___awmod@divisor+1)^(0+128),w
  3315  0CF4  1C03               	skipc
  3316  0CF5  03A3               	decf	(___awmod@dividend+1)^(0+128),f
  3317  0CF6  02A3               	subwf	(___awmod@dividend+1)^(0+128),f
  3318  0CF7                     l3068:
  3319  0CF7  3001               	movlw	1
  3320  0CF8                     u2455:
  3321  0CF8  1003               	clrc
  3322  0CF9  0CA1               	rrf	(___awmod@divisor+1)^(0+128),f
  3323  0CFA  0CA0               	rrf	___awmod@divisor^(0+128),f
  3324  0CFB  3EFF               	addlw	-1
  3325  0CFC  1D03               	skipz
  3326  0CFD  2CF8               	goto	u2455
  3327  0CFE                     l3070:
  3328  0CFE  3001               	movlw	1
  3329  0CFF  02A4               	subwf	___awmod@counter^(0+128),f
  3330  0D00  1D03               	btfss	3,2
  3331  0D01  2D03               	goto	u2461
  3332  0D02  2D04               	goto	u2460
  3333  0D03                     u2461:
  3334  0D03  2CE7               	goto	l3064
  3335  0D04                     u2460:
  3336  0D04                     l3072:
  3337  0D04  0825               	movf	___awmod@sign^(0+128),w
  3338  0D05  1903               	btfsc	3,2
  3339  0D06  2D08               	goto	u2471
  3340  0D07  2D09               	goto	u2470
  3341  0D08                     u2471:
  3342  0D08  2D0E               	goto	l3076
  3343  0D09                     u2470:
  3344  0D09                     l3074:
  3345  0D09  09A2               	comf	___awmod@dividend^(0+128),f
  3346  0D0A  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  3347  0D0B  0AA2               	incf	___awmod@dividend^(0+128),f
  3348  0D0C  1903               	skipnz
  3349  0D0D  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  3350  0D0E                     l3076:
  3351  0D0E  0823               	movf	(___awmod@dividend+1)^(0+128),w
  3352  0D0F  00A1               	movwf	(?___awmod+1)^(0+128)
  3353  0D10  0822               	movf	___awmod@dividend^(0+128),w
  3354  0D11  00A0               	movwf	?___awmod^(0+128)
  3355  0D12                     l918:
  3356  0D12  0008               	return
  3357  0D13                     __end_of___awmod:
  3358                           
  3359                           	psect	text13
  3360  07FB                     __ptext13:	
  3361 ;; *************** function _TMR1_Stop *****************
  3362 ;; Defined at:
  3363 ;;		line 44 in file "TMR1.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;		None
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;		None
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  1    wreg      void 
  3370 ;; Registers used:
  3371 ;;		None
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3377 ;;      Params:         0       0       0       0       0
  3378 ;;      Locals:         0       0       0       0       0
  3379 ;;      Temps:          0       0       0       0       0
  3380 ;;      Totals:         0       0       0       0       0
  3381 ;;Total ram usage:        0 bytes
  3382 ;; Hardware stack levels used:    1
  3383 ;; Hardware stack levels required when called:    3
  3384 ;; This function calls:
  3385 ;;		Nothing
  3386 ;; This function is called by:
  3387 ;;		_EWH_Sleep_Mode
  3388 ;;		_EWH_Operating_Mode
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           
  3393                           ;psect for function _TMR1_Stop
  3394  07FB                     _TMR1_Stop:
  3395  07FB                     l2988:	
  3396                           ;incstack = 0
  3397                           ; Regs used in _TMR1_Stop: []
  3398                           
  3399                           
  3400                           ;TMR1.c: 46:     (TMR1ON = 0);
  3401  07FB  1283               	bcf	3,5	;RP0=0, select bank0
  3402  07FC  1303               	bcf	3,6	;RP1=0, select bank0
  3403  07FD  1010               	bcf	16,0	;volatile
  3404  07FE                     l357:
  3405  07FE  0008               	return
  3406  07FF                     __end_of_TMR1_Stop:
  3407                           
  3408                           	psect	text14
  3409  08FC                     __ptext14:	
  3410 ;; *************** function _TMR1_Start *****************
  3411 ;; Defined at:
  3412 ;;		line 31 in file "TMR1.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;		None
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;		None
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      void 
  3419 ;; Registers used:
  3420 ;;		None
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3426 ;;      Params:         0       0       0       0       0
  3427 ;;      Locals:         0       0       0       0       0
  3428 ;;      Temps:          0       0       0       0       0
  3429 ;;      Totals:         0       0       0       0       0
  3430 ;;Total ram usage:        0 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; Hardware stack levels required when called:    3
  3433 ;; This function calls:
  3434 ;;		Nothing
  3435 ;; This function is called by:
  3436 ;;		_EWH_SetTemp_Mode
  3437 ;;		_EWH_Operating_Mode
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440                           
  3441                           
  3442                           ;psect for function _TMR1_Start
  3443  08FC                     _TMR1_Start:
  3444  08FC                     l2986:	
  3445                           ;incstack = 0
  3446                           ; Regs used in _TMR1_Start: []
  3447                           
  3448                           
  3449                           ;TMR1.c: 33:     (TMR1IF = 0);
  3450  08FC  1283               	bcf	3,5	;RP0=0, select bank0
  3451  08FD  1303               	bcf	3,6	;RP1=0, select bank0
  3452  08FE  100C               	bcf	12,0	;volatile
  3453                           
  3454                           ;TMR1.c: 34:     (TMR1IE = 1);
  3455  08FF  1683               	bsf	3,5	;RP0=1, select bank1
  3456  0900  1303               	bcf	3,6	;RP1=0, select bank1
  3457  0901  140C               	bsf	12,0	;volatile
  3458                           
  3459                           ;TMR1.c: 35:     (PEIE = 1);
  3460  0902  170B               	bsf	11,6	;volatile
  3461                           
  3462                           ;TMR1.c: 36:     (GIE = 1);
  3463  0903  178B               	bsf	11,7	;volatile
  3464                           
  3465                           ;TMR1.c: 37:     TMR1=40536;
  3466  0904  309E               	movlw	158
  3467  0905  1283               	bcf	3,5	;RP0=0, select bank0
  3468  0906  1303               	bcf	3,6	;RP1=0, select bank0
  3469  0907  008F               	movwf	15	;volatile
  3470  0908  3058               	movlw	88
  3471  0909  008E               	movwf	14	;volatile
  3472                           
  3473                           ;TMR1.c: 38:     (TMR1ON = 1);
  3474  090A  1410               	bsf	16,0	;volatile
  3475  090B                     l351:
  3476  090B  0008               	return
  3477  090C                     __end_of_TMR1_Start:
  3478                           
  3479                           	psect	text15
  3480  0A03                     __ptext15:	
  3481 ;; *************** function _EWH_getAvrgTempReading *****************
  3482 ;; Defined at:
  3483 ;;		line 290 in file "EWH.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;  buffer          1    wreg     PTR unsigned char 
  3486 ;;		 -> ReadingBuffer(10), 
  3487 ;;  length          1    7[BANK1 ] unsigned char 
  3488 ;; Auto vars:     Size  Location     Type
  3489 ;;  buffer          1   14[BANK1 ] PTR unsigned char 
  3490 ;;		 -> ReadingBuffer(10), 
  3491 ;;  i               1   15[BANK1 ] unsigned char 
  3492 ;;  sumOfReading    2   11[BANK1 ] unsigned short 
  3493 ;;  averageReadi    1   13[BANK1 ] unsigned char 
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  1    wreg      unsigned char 
  3496 ;; Registers used:
  3497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3503 ;;      Params:         0       0       1       0       0
  3504 ;;      Locals:         0       0       5       0       0
  3505 ;;      Temps:          0       0       3       0       0
  3506 ;;      Totals:         0       0       9       0       0
  3507 ;;Total ram usage:        9 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; Hardware stack levels required when called:    4
  3510 ;; This function calls:
  3511 ;;		___lwdiv
  3512 ;; This function is called by:
  3513 ;;		_EWH_Operating_Mode
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           
  3518                           ;psect for function _EWH_getAvrgTempReading
  3519  0A03                     _EWH_getAvrgTempReading:
  3520                           
  3521                           ;incstack = 0
  3522                           ; Regs used in _EWH_getAvrgTempReading: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  3523                           ;EWH_getAvrgTempReading@buffer stored from wreg
  3524  0A03  1683               	bsf	3,5	;RP0=1, select bank1
  3525  0A04  1303               	bcf	3,6	;RP1=0, select bank1
  3526  0A05  00AE               	movwf	EWH_getAvrgTempReading@buffer^(0+128)
  3527  0A06                     l3026:
  3528                           
  3529                           ;EWH.c: 290: uint8_t EWH_getAvrgTempReading(uint8_t *buffer, uint8_t length);EWH.c: 291:
      +                           {;EWH.c: 292:     uint16_t sumOfReadings=0;
  3530  0A06  01AB               	clrf	EWH_getAvrgTempReading@sumOfReadings^(0+128)
  3531  0A07  01AC               	clrf	(EWH_getAvrgTempReading@sumOfReadings+1)^(0+128)
  3532                           
  3533                           ;EWH.c: 293:     for(uint8_t i=0 ; i<length ; i++)
  3534  0A08  01AF               	clrf	EWH_getAvrgTempReading@i^(0+128)
  3535  0A09  2A1D               	goto	l3032
  3536  0A0A                     l3028:
  3537                           
  3538                           ;EWH.c: 294:     {;EWH.c: 295:         sumOfReadings += buffer[i];
  3539  0A0A  082F               	movf	EWH_getAvrgTempReading@i^(0+128),w
  3540  0A0B  072E               	addwf	EWH_getAvrgTempReading@buffer^(0+128),w
  3541  0A0C  00A8               	movwf	??_EWH_getAvrgTempReading^(0+128)
  3542  0A0D  0828               	movf	??_EWH_getAvrgTempReading^(0+128),w
  3543  0A0E  0084               	movwf	4
  3544  0A0F  1383               	bcf	3,7	;select IRP bank0
  3545  0A10  0800               	movf	0,w
  3546  0A11  00A9               	movwf	(??_EWH_getAvrgTempReading+1)^(0+128)
  3547  0A12  01AA               	clrf	((??_EWH_getAvrgTempReading+1)^(0+128)+1)
  3548  0A13  0829               	movf	(??_EWH_getAvrgTempReading+1)^(0+128),w
  3549  0A14  07AB               	addwf	EWH_getAvrgTempReading@sumOfReadings^(0+128),f
  3550  0A15  1803               	skipnc
  3551  0A16  0AAC               	incf	(EWH_getAvrgTempReading@sumOfReadings+1)^(0+128),f
  3552  0A17  082A               	movf	(??_EWH_getAvrgTempReading+2)^(0+128),w
  3553  0A18  07AC               	addwf	(EWH_getAvrgTempReading@sumOfReadings+1)^(0+128),f
  3554  0A19                     l3030:
  3555                           
  3556                           ;EWH.c: 296:     }
  3557  0A19  3001               	movlw	1
  3558  0A1A  00FF               	movwf	btemp+1
  3559  0A1B  087F               	movf	btemp+1,w
  3560  0A1C  07AF               	addwf	EWH_getAvrgTempReading@i^(0+128),f
  3561  0A1D                     l3032:
  3562  0A1D  0827               	movf	EWH_getAvrgTempReading@length^(0+128),w
  3563  0A1E  022F               	subwf	EWH_getAvrgTempReading@i^(0+128),w
  3564  0A1F  1C03               	skipc
  3565  0A20  2A22               	goto	u2381
  3566  0A21  2A23               	goto	u2380
  3567  0A22                     u2381:
  3568  0A22  2A0A               	goto	l3028
  3569  0A23                     u2380:
  3570  0A23                     l3034:
  3571                           
  3572                           ;EWH.c: 297:     uint8_t averageReading= sumOfReadings/length;
  3573  0A23  0827               	movf	EWH_getAvrgTempReading@length^(0+128),w
  3574  0A24  00A8               	movwf	??_EWH_getAvrgTempReading^(0+128)
  3575  0A25  01A9               	clrf	(??_EWH_getAvrgTempReading^(0+128)+1)
  3576  0A26  0828               	movf	??_EWH_getAvrgTempReading^(0+128),w
  3577  0A27  00A0               	movwf	___lwdiv@divisor^(0+128)
  3578  0A28  0829               	movf	(??_EWH_getAvrgTempReading+1)^(0+128),w
  3579  0A29  00A1               	movwf	(___lwdiv@divisor+1)^(0+128)
  3580  0A2A  082C               	movf	(EWH_getAvrgTempReading@sumOfReadings+1)^(0+128),w
  3581  0A2B  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  3582  0A2C  082B               	movf	EWH_getAvrgTempReading@sumOfReadings^(0+128),w
  3583  0A2D  00A2               	movwf	___lwdiv@dividend^(0+128)
  3584  0A2E  120A  158A  2330  120A  158A  	fcall	___lwdiv
  3585  0A33  1683               	bsf	3,5	;RP0=1, select bank1
  3586  0A34  1303               	bcf	3,6	;RP1=0, select bank1
  3587  0A35  0820               	movf	?___lwdiv^(0+128),w
  3588  0A36  00FF               	movwf	btemp+1
  3589  0A37  087F               	movf	btemp+1,w
  3590  0A38  00AD               	movwf	EWH_getAvrgTempReading@averageReading^(0+128)
  3591  0A39                     l3036:
  3592                           
  3593                           ;EWH.c: 298:     return averageReading;
  3594  0A39  082D               	movf	EWH_getAvrgTempReading@averageReading^(0+128),w
  3595  0A3A                     l576:
  3596  0A3A  0008               	return
  3597  0A3B                     __end_of_EWH_getAvrgTempReading:
  3598                           
  3599                           	psect	text16
  3600  0B30                     __ptext16:	
  3601 ;; *************** function ___lwdiv *****************
  3602 ;; Defined at:
  3603 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;  divisor         2    0[BANK1 ] unsigned int 
  3606 ;;  dividend        2    2[BANK1 ] unsigned int 
  3607 ;; Auto vars:     Size  Location     Type
  3608 ;;  quotient        2    4[BANK1 ] unsigned int 
  3609 ;;  counter         1    6[BANK1 ] unsigned char 
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  2    0[BANK1 ] unsigned int 
  3612 ;; Registers used:
  3613 ;;		wreg, status,2, status,0, btemp+1
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3619 ;;      Params:         0       0       4       0       0
  3620 ;;      Locals:         0       0       3       0       0
  3621 ;;      Temps:          0       0       0       0       0
  3622 ;;      Totals:         0       0       7       0       0
  3623 ;;Total ram usage:        7 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; Hardware stack levels required when called:    3
  3626 ;; This function calls:
  3627 ;;		Nothing
  3628 ;; This function is called by:
  3629 ;;		_EWH_getAvrgTempReading
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           
  3633                           
  3634                           ;psect for function ___lwdiv
  3635  0B30                     ___lwdiv:
  3636  0B30                     l2806:	
  3637                           ;incstack = 0
  3638                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  3639                           
  3640  0B30  1683               	bsf	3,5	;RP0=1, select bank1
  3641  0B31  1303               	bcf	3,6	;RP1=0, select bank1
  3642  0B32  01A4               	clrf	___lwdiv@quotient^(0+128)
  3643  0B33  01A5               	clrf	(___lwdiv@quotient+1)^(0+128)
  3644  0B34                     l2808:
  3645  0B34  0820               	movf	___lwdiv@divisor^(0+128),w
  3646  0B35  0421               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  3647  0B36  1903               	btfsc	3,2
  3648  0B37  2B39               	goto	u2191
  3649  0B38  2B3A               	goto	u2190
  3650  0B39                     u2191:
  3651  0B39  2B71               	goto	l2828
  3652  0B3A                     u2190:
  3653  0B3A                     l2810:
  3654  0B3A  01A6               	clrf	___lwdiv@counter^(0+128)
  3655  0B3B  0AA6               	incf	___lwdiv@counter^(0+128),f
  3656  0B3C  2B48               	goto	l2816
  3657  0B3D                     l2812:
  3658  0B3D  3001               	movlw	1
  3659  0B3E                     u2205:
  3660  0B3E  1003               	clrc
  3661  0B3F  0DA0               	rlf	___lwdiv@divisor^(0+128),f
  3662  0B40  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
  3663  0B41  3EFF               	addlw	-1
  3664  0B42  1D03               	skipz
  3665  0B43  2B3E               	goto	u2205
  3666  0B44                     l2814:
  3667  0B44  3001               	movlw	1
  3668  0B45  00FF               	movwf	btemp+1
  3669  0B46  087F               	movf	btemp+1,w
  3670  0B47  07A6               	addwf	___lwdiv@counter^(0+128),f
  3671  0B48                     l2816:
  3672  0B48  1FA1               	btfss	(___lwdiv@divisor+1)^(0+128),7
  3673  0B49  2B4B               	goto	u2211
  3674  0B4A  2B4C               	goto	u2210
  3675  0B4B                     u2211:
  3676  0B4B  2B3D               	goto	l2812
  3677  0B4C                     u2210:
  3678  0B4C                     l2818:
  3679  0B4C  3001               	movlw	1
  3680  0B4D                     u2225:
  3681  0B4D  1003               	clrc
  3682  0B4E  0DA4               	rlf	___lwdiv@quotient^(0+128),f
  3683  0B4F  0DA5               	rlf	(___lwdiv@quotient+1)^(0+128),f
  3684  0B50  3EFF               	addlw	-1
  3685  0B51  1D03               	skipz
  3686  0B52  2B4D               	goto	u2225
  3687  0B53  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  3688  0B54  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
  3689  0B55  1D03               	skipz
  3690  0B56  2B59               	goto	u2235
  3691  0B57  0820               	movf	___lwdiv@divisor^(0+128),w
  3692  0B58  0222               	subwf	___lwdiv@dividend^(0+128),w
  3693  0B59                     u2235:
  3694  0B59  1C03               	skipc
  3695  0B5A  2B5C               	goto	u2231
  3696  0B5B  2B5D               	goto	u2230
  3697  0B5C                     u2231:
  3698  0B5C  2B64               	goto	l2824
  3699  0B5D                     u2230:
  3700  0B5D                     l2820:
  3701  0B5D  0820               	movf	___lwdiv@divisor^(0+128),w
  3702  0B5E  02A2               	subwf	___lwdiv@dividend^(0+128),f
  3703  0B5F  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  3704  0B60  1C03               	skipc
  3705  0B61  03A3               	decf	(___lwdiv@dividend+1)^(0+128),f
  3706  0B62  02A3               	subwf	(___lwdiv@dividend+1)^(0+128),f
  3707  0B63                     l2822:
  3708  0B63  1424               	bsf	___lwdiv@quotient^(0+128),0
  3709  0B64                     l2824:
  3710  0B64  3001               	movlw	1
  3711  0B65                     u2245:
  3712  0B65  1003               	clrc
  3713  0B66  0CA1               	rrf	(___lwdiv@divisor+1)^(0+128),f
  3714  0B67  0CA0               	rrf	___lwdiv@divisor^(0+128),f
  3715  0B68  3EFF               	addlw	-1
  3716  0B69  1D03               	skipz
  3717  0B6A  2B65               	goto	u2245
  3718  0B6B                     l2826:
  3719  0B6B  3001               	movlw	1
  3720  0B6C  02A6               	subwf	___lwdiv@counter^(0+128),f
  3721  0B6D  1D03               	btfss	3,2
  3722  0B6E  2B70               	goto	u2251
  3723  0B6F  2B71               	goto	u2250
  3724  0B70                     u2251:
  3725  0B70  2B4C               	goto	l2818
  3726  0B71                     u2250:
  3727  0B71                     l2828:
  3728  0B71  0825               	movf	(___lwdiv@quotient+1)^(0+128),w
  3729  0B72  00A1               	movwf	(?___lwdiv+1)^(0+128)
  3730  0B73  0824               	movf	___lwdiv@quotient^(0+128),w
  3731  0B74  00A0               	movwf	?___lwdiv^(0+128)
  3732  0B75                     l1024:
  3733  0B75  0008               	return
  3734  0B76                     __end_of___lwdiv:
  3735                           
  3736                           	psect	text17
  3737  0D6E                     __ptext17:	
  3738 ;; *************** function _EWH_SSD_Update *****************
  3739 ;; Defined at:
  3740 ;;		line 280 in file "EWH.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;  temp            2   10[BANK1 ] unsigned short 
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;		None
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  1    wreg      void 
  3747 ;; Registers used:
  3748 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3754 ;;      Params:         0       0       2       0       0
  3755 ;;      Locals:         0       0       0       0       0
  3756 ;;      Temps:          0       0       2       0       0
  3757 ;;      Totals:         0       0       4       0       0
  3758 ;;Total ram usage:        4 bytes
  3759 ;; Hardware stack levels used:    1
  3760 ;; Hardware stack levels required when called:    5
  3761 ;; This function calls:
  3762 ;;		_SSD_OFF
  3763 ;;		_SSD_Write
  3764 ;;		___awdiv
  3765 ;;		___lwmod
  3766 ;; This function is called by:
  3767 ;;		_EWH_WakeUP_Mode
  3768 ;;		_EWH_SetTemp_Mode
  3769 ;;		_EWH_Operating_Mode
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772                           
  3773                           
  3774                           ;psect for function _EWH_SSD_Update
  3775  0D6E                     _EWH_SSD_Update:
  3776  0D6E                     l3014:	
  3777                           ;incstack = 0
  3778                           ; Regs used in _EWH_SSD_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3779                           
  3780                           
  3781                           ;EWH.c: 280: void EWH_SSD_Update(uint16_t temp);EWH.c: 281: {;EWH.c: 282:     SSD_OFF(3)
      +                          ;
  3782  0D6E  3003               	movlw	3
  3783  0D6F  120A  158A  20BB  120A  158A  	fcall	_SSD_OFF
  3784                           
  3785                           ;EWH.c: 283:     SSD_Write(4,temp%10);
  3786  0D74  300A               	movlw	10
  3787  0D75  1683               	bsf	3,5	;RP0=1, select bank1
  3788  0D76  1303               	bcf	3,6	;RP1=0, select bank1
  3789  0D77  00A0               	movwf	___lwmod@divisor^(0+128)
  3790  0D78  3000               	movlw	0
  3791  0D79  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  3792  0D7A  082B               	movf	(EWH_SSD_Update@temp+1)^(0+128),w
  3793  0D7B  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  3794  0D7C  082A               	movf	EWH_SSD_Update@temp^(0+128),w
  3795  0D7D  00A2               	movwf	___lwmod@dividend^(0+128)
  3796  0D7E  120A  158A  22B0  120A  158A  	fcall	___lwmod
  3797  0D83  1683               	bsf	3,5	;RP0=1, select bank1
  3798  0D84  1303               	bcf	3,6	;RP1=0, select bank1
  3799  0D85  0820               	movf	?___lwmod^(0+128),w
  3800  0D86  00FF               	movwf	btemp+1
  3801  0D87  087F               	movf	btemp+1,w
  3802  0D88  00A8               	movwf	SSD_Write@Number^(0+128)
  3803  0D89  3004               	movlw	4
  3804  0D8A  120A  158A  214D  120A  158A  	fcall	_SSD_Write
  3805  0D8F                     l3016:
  3806                           
  3807                           ;EWH.c: 284:     _delay((unsigned long)((30)*(4000000/4000.0)));
  3808  0D8F  3027               	movlw	39
  3809  0D90  1683               	bsf	3,5	;RP0=1, select bank1
  3810  0D91  1303               	bcf	3,6	;RP1=0, select bank1
  3811  0D92  00AD               	movwf	(??_EWH_SSD_Update^(0+128)+1)
  3812  0D93  30F4               	movlw	244
  3813  0D94  00AC               	movwf	??_EWH_SSD_Update^(0+128)
  3814  0D95                     u3797:
  3815  0D95  0BAC               	decfsz	??_EWH_SSD_Update^(0+128),f
  3816  0D96  2D95               	goto	u3797
  3817  0D97  0BAD               	decfsz	(??_EWH_SSD_Update^(0+128)+1),f
  3818  0D98  2D95               	goto	u3797
  3819  0D99  0000               	nop
  3820  0D9A                     l3018:
  3821                           
  3822                           ;EWH.c: 285:     SSD_OFF(4);
  3823  0D9A  3004               	movlw	4
  3824  0D9B  120A  158A  20BB  120A  158A  	fcall	_SSD_OFF
  3825  0DA0                     l3020:
  3826                           
  3827                           ;EWH.c: 286:     SSD_Write(3,(uint8_t)temp/10);
  3828  0DA0  300A               	movlw	10
  3829  0DA1  1683               	bsf	3,5	;RP0=1, select bank1
  3830  0DA2  1303               	bcf	3,6	;RP1=0, select bank1
  3831  0DA3  00A0               	movwf	___awdiv@divisor^(0+128)
  3832  0DA4  3000               	movlw	0
  3833  0DA5  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
  3834  0DA6  082A               	movf	EWH_SSD_Update@temp^(0+128),w
  3835  0DA7  00AC               	movwf	??_EWH_SSD_Update^(0+128)
  3836  0DA8  01AD               	clrf	(??_EWH_SSD_Update^(0+128)+1)
  3837  0DA9  082C               	movf	??_EWH_SSD_Update^(0+128),w
  3838  0DAA  00A2               	movwf	___awdiv@dividend^(0+128)
  3839  0DAB  082D               	movf	(??_EWH_SSD_Update+1)^(0+128),w
  3840  0DAC  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
  3841  0DAD  120A  158A  2632  120A  158A  	fcall	___awdiv
  3842  0DB2  1683               	bsf	3,5	;RP0=1, select bank1
  3843  0DB3  1303               	bcf	3,6	;RP1=0, select bank1
  3844  0DB4  0820               	movf	?___awdiv^(0+128),w
  3845  0DB5  00FF               	movwf	btemp+1
  3846  0DB6  087F               	movf	btemp+1,w
  3847  0DB7  00A8               	movwf	SSD_Write@Number^(0+128)
  3848  0DB8  3003               	movlw	3
  3849  0DB9  120A  158A  214D  120A  158A  	fcall	_SSD_Write
  3850  0DBE                     l3022:
  3851                           
  3852                           ;EWH.c: 287:     _delay((unsigned long)((30)*(4000000/4000.0)));
  3853  0DBE  3027               	movlw	39
  3854  0DBF  1683               	bsf	3,5	;RP0=1, select bank1
  3855  0DC0  1303               	bcf	3,6	;RP1=0, select bank1
  3856  0DC1  00AD               	movwf	(??_EWH_SSD_Update^(0+128)+1)
  3857  0DC2  30F4               	movlw	244
  3858  0DC3  00AC               	movwf	??_EWH_SSD_Update^(0+128)
  3859  0DC4                     u3807:
  3860  0DC4  0BAC               	decfsz	??_EWH_SSD_Update^(0+128),f
  3861  0DC5  2DC4               	goto	u3807
  3862  0DC6  0BAD               	decfsz	(??_EWH_SSD_Update^(0+128)+1),f
  3863  0DC7  2DC4               	goto	u3807
  3864  0DC8  0000               	nop
  3865  0DC9                     l570:
  3866  0DC9  0008               	return
  3867  0DCA                     __end_of_EWH_SSD_Update:
  3868                           
  3869                           	psect	text18
  3870  0AB0                     __ptext18:	
  3871 ;; *************** function ___lwmod *****************
  3872 ;; Defined at:
  3873 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;  divisor         2    0[BANK1 ] unsigned int 
  3876 ;;  dividend        2    2[BANK1 ] unsigned int 
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;  counter         1    4[BANK1 ] unsigned char 
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  2    0[BANK1 ] unsigned int 
  3881 ;; Registers used:
  3882 ;;		wreg, status,2, status,0, btemp+1
  3883 ;; Tracked objects:
  3884 ;;		On entry : 0/0
  3885 ;;		On exit  : 0/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3888 ;;      Params:         0       0       4       0       0
  3889 ;;      Locals:         0       0       1       0       0
  3890 ;;      Temps:          0       0       0       0       0
  3891 ;;      Totals:         0       0       5       0       0
  3892 ;;Total ram usage:        5 bytes
  3893 ;; Hardware stack levels used:    1
  3894 ;; Hardware stack levels required when called:    3
  3895 ;; This function calls:
  3896 ;;		Nothing
  3897 ;; This function is called by:
  3898 ;;		_EWH_SSD_Update
  3899 ;;		_Heater_Display
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902                           
  3903                           
  3904                           ;psect for function ___lwmod
  3905  0AB0                     ___lwmod:
  3906  0AB0                     l2832:	
  3907                           ;incstack = 0
  3908                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  3909                           
  3910  0AB0  1683               	bsf	3,5	;RP0=1, select bank1
  3911  0AB1  1303               	bcf	3,6	;RP1=0, select bank1
  3912  0AB2  0820               	movf	___lwmod@divisor^(0+128),w
  3913  0AB3  0421               	iorwf	(___lwmod@divisor+1)^(0+128),w
  3914  0AB4  1903               	btfsc	3,2
  3915  0AB5  2AB7               	goto	u2261
  3916  0AB6  2AB8               	goto	u2260
  3917  0AB7                     u2261:
  3918  0AB7  2AE7               	goto	l2850
  3919  0AB8                     u2260:
  3920  0AB8                     l2834:
  3921  0AB8  01A4               	clrf	___lwmod@counter^(0+128)
  3922  0AB9  0AA4               	incf	___lwmod@counter^(0+128),f
  3923  0ABA  2AC6               	goto	l2840
  3924  0ABB                     l2836:
  3925  0ABB  3001               	movlw	1
  3926  0ABC                     u2275:
  3927  0ABC  1003               	clrc
  3928  0ABD  0DA0               	rlf	___lwmod@divisor^(0+128),f
  3929  0ABE  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
  3930  0ABF  3EFF               	addlw	-1
  3931  0AC0  1D03               	skipz
  3932  0AC1  2ABC               	goto	u2275
  3933  0AC2                     l2838:
  3934  0AC2  3001               	movlw	1
  3935  0AC3  00FF               	movwf	btemp+1
  3936  0AC4  087F               	movf	btemp+1,w
  3937  0AC5  07A4               	addwf	___lwmod@counter^(0+128),f
  3938  0AC6                     l2840:
  3939  0AC6  1FA1               	btfss	(___lwmod@divisor+1)^(0+128),7
  3940  0AC7  2AC9               	goto	u2281
  3941  0AC8  2ACA               	goto	u2280
  3942  0AC9                     u2281:
  3943  0AC9  2ABB               	goto	l2836
  3944  0ACA                     u2280:
  3945  0ACA                     l2842:
  3946  0ACA  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  3947  0ACB  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
  3948  0ACC  1D03               	skipz
  3949  0ACD  2AD0               	goto	u2295
  3950  0ACE  0820               	movf	___lwmod@divisor^(0+128),w
  3951  0ACF  0222               	subwf	___lwmod@dividend^(0+128),w
  3952  0AD0                     u2295:
  3953  0AD0  1C03               	skipc
  3954  0AD1  2AD3               	goto	u2291
  3955  0AD2  2AD4               	goto	u2290
  3956  0AD3                     u2291:
  3957  0AD3  2ADA               	goto	l2846
  3958  0AD4                     u2290:
  3959  0AD4                     l2844:
  3960  0AD4  0820               	movf	___lwmod@divisor^(0+128),w
  3961  0AD5  02A2               	subwf	___lwmod@dividend^(0+128),f
  3962  0AD6  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  3963  0AD7  1C03               	skipc
  3964  0AD8  03A3               	decf	(___lwmod@dividend+1)^(0+128),f
  3965  0AD9  02A3               	subwf	(___lwmod@dividend+1)^(0+128),f
  3966  0ADA                     l2846:
  3967  0ADA  3001               	movlw	1
  3968  0ADB                     u2305:
  3969  0ADB  1003               	clrc
  3970  0ADC  0CA1               	rrf	(___lwmod@divisor+1)^(0+128),f
  3971  0ADD  0CA0               	rrf	___lwmod@divisor^(0+128),f
  3972  0ADE  3EFF               	addlw	-1
  3973  0ADF  1D03               	skipz
  3974  0AE0  2ADB               	goto	u2305
  3975  0AE1                     l2848:
  3976  0AE1  3001               	movlw	1
  3977  0AE2  02A4               	subwf	___lwmod@counter^(0+128),f
  3978  0AE3  1D03               	btfss	3,2
  3979  0AE4  2AE6               	goto	u2311
  3980  0AE5  2AE7               	goto	u2310
  3981  0AE6                     u2311:
  3982  0AE6  2ACA               	goto	l2842
  3983  0AE7                     u2310:
  3984  0AE7                     l2850:
  3985  0AE7  0823               	movf	(___lwmod@dividend+1)^(0+128),w
  3986  0AE8  00A1               	movwf	(?___lwmod+1)^(0+128)
  3987  0AE9  0822               	movf	___lwmod@dividend^(0+128),w
  3988  0AEA  00A0               	movwf	?___lwmod^(0+128)
  3989  0AEB                     l1034:
  3990  0AEB  0008               	return
  3991  0AEC                     __end_of___lwmod:
  3992                           
  3993                           	psect	text19
  3994  0E32                     __ptext19:	
  3995 ;; *************** function ___awdiv *****************
  3996 ;; Defined at:
  3997 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  3998 ;; Parameters:    Size  Location     Type
  3999 ;;  divisor         2    0[BANK1 ] int 
  4000 ;;  dividend        2    2[BANK1 ] int 
  4001 ;; Auto vars:     Size  Location     Type
  4002 ;;  quotient        2    6[BANK1 ] int 
  4003 ;;  sign            1    5[BANK1 ] unsigned char 
  4004 ;;  counter         1    4[BANK1 ] unsigned char 
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  2    0[BANK1 ] int 
  4007 ;; Registers used:
  4008 ;;		wreg, status,2, status,0, btemp+1
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4014 ;;      Params:         0       0       4       0       0
  4015 ;;      Locals:         0       0       4       0       0
  4016 ;;      Temps:          0       0       0       0       0
  4017 ;;      Totals:         0       0       8       0       0
  4018 ;;Total ram usage:        8 bytes
  4019 ;; Hardware stack levels used:    1
  4020 ;; Hardware stack levels required when called:    3
  4021 ;; This function calls:
  4022 ;;		Nothing
  4023 ;; This function is called by:
  4024 ;;		_EWH_SSD_Update
  4025 ;;		_Heater_Display
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           
  4029                           
  4030                           ;psect for function ___awdiv
  4031  0E32                     ___awdiv:
  4032  0E32                     l2762:	
  4033                           ;incstack = 0
  4034                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  4035                           
  4036  0E32  1683               	bsf	3,5	;RP0=1, select bank1
  4037  0E33  1303               	bcf	3,6	;RP1=0, select bank1
  4038  0E34  01A5               	clrf	___awdiv@sign^(0+128)
  4039  0E35                     l2764:
  4040  0E35  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  4041  0E36  2E38               	goto	u2091
  4042  0E37  2E39               	goto	u2090
  4043  0E38                     u2091:
  4044  0E38  2E40               	goto	l2770
  4045  0E39                     u2090:
  4046  0E39                     l2766:
  4047  0E39  09A0               	comf	___awdiv@divisor^(0+128),f
  4048  0E3A  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
  4049  0E3B  0AA0               	incf	___awdiv@divisor^(0+128),f
  4050  0E3C  1903               	skipnz
  4051  0E3D  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
  4052  0E3E                     l2768:
  4053  0E3E  01A5               	clrf	___awdiv@sign^(0+128)
  4054  0E3F  0AA5               	incf	___awdiv@sign^(0+128),f
  4055  0E40                     l2770:
  4056  0E40  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
  4057  0E41  2E43               	goto	u2101
  4058  0E42  2E44               	goto	u2100
  4059  0E43                     u2101:
  4060  0E43  2E4D               	goto	l2776
  4061  0E44                     u2100:
  4062  0E44                     l2772:
  4063  0E44  09A2               	comf	___awdiv@dividend^(0+128),f
  4064  0E45  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
  4065  0E46  0AA2               	incf	___awdiv@dividend^(0+128),f
  4066  0E47  1903               	skipnz
  4067  0E48  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
  4068  0E49                     l2774:
  4069  0E49  3001               	movlw	1
  4070  0E4A  00FF               	movwf	btemp+1
  4071  0E4B  087F               	movf	btemp+1,w
  4072  0E4C  06A5               	xorwf	___awdiv@sign^(0+128),f
  4073  0E4D                     l2776:
  4074  0E4D  01A6               	clrf	___awdiv@quotient^(0+128)
  4075  0E4E  01A7               	clrf	(___awdiv@quotient+1)^(0+128)
  4076  0E4F                     l2778:
  4077  0E4F  0820               	movf	___awdiv@divisor^(0+128),w
  4078  0E50  0421               	iorwf	(___awdiv@divisor+1)^(0+128),w
  4079  0E51  1903               	btfsc	3,2
  4080  0E52  2E54               	goto	u2111
  4081  0E53  2E55               	goto	u2110
  4082  0E54                     u2111:
  4083  0E54  2E8C               	goto	l2798
  4084  0E55                     u2110:
  4085  0E55                     l2780:
  4086  0E55  01A4               	clrf	___awdiv@counter^(0+128)
  4087  0E56  0AA4               	incf	___awdiv@counter^(0+128),f
  4088  0E57  2E63               	goto	l2786
  4089  0E58                     l2782:
  4090  0E58  3001               	movlw	1
  4091  0E59                     u2125:
  4092  0E59  1003               	clrc
  4093  0E5A  0DA0               	rlf	___awdiv@divisor^(0+128),f
  4094  0E5B  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
  4095  0E5C  3EFF               	addlw	-1
  4096  0E5D  1D03               	skipz
  4097  0E5E  2E59               	goto	u2125
  4098  0E5F                     l2784:
  4099  0E5F  3001               	movlw	1
  4100  0E60  00FF               	movwf	btemp+1
  4101  0E61  087F               	movf	btemp+1,w
  4102  0E62  07A4               	addwf	___awdiv@counter^(0+128),f
  4103  0E63                     l2786:
  4104  0E63  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  4105  0E64  2E66               	goto	u2131
  4106  0E65  2E67               	goto	u2130
  4107  0E66                     u2131:
  4108  0E66  2E58               	goto	l2782
  4109  0E67                     u2130:
  4110  0E67                     l2788:
  4111  0E67  3001               	movlw	1
  4112  0E68                     u2145:
  4113  0E68  1003               	clrc
  4114  0E69  0DA6               	rlf	___awdiv@quotient^(0+128),f
  4115  0E6A  0DA7               	rlf	(___awdiv@quotient+1)^(0+128),f
  4116  0E6B  3EFF               	addlw	-1
  4117  0E6C  1D03               	skipz
  4118  0E6D  2E68               	goto	u2145
  4119  0E6E  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  4120  0E6F  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
  4121  0E70  1D03               	skipz
  4122  0E71  2E74               	goto	u2155
  4123  0E72  0820               	movf	___awdiv@divisor^(0+128),w
  4124  0E73  0222               	subwf	___awdiv@dividend^(0+128),w
  4125  0E74                     u2155:
  4126  0E74  1C03               	skipc
  4127  0E75  2E77               	goto	u2151
  4128  0E76  2E78               	goto	u2150
  4129  0E77                     u2151:
  4130  0E77  2E7F               	goto	l2794
  4131  0E78                     u2150:
  4132  0E78                     l2790:
  4133  0E78  0820               	movf	___awdiv@divisor^(0+128),w
  4134  0E79  02A2               	subwf	___awdiv@dividend^(0+128),f
  4135  0E7A  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  4136  0E7B  1C03               	skipc
  4137  0E7C  03A3               	decf	(___awdiv@dividend+1)^(0+128),f
  4138  0E7D  02A3               	subwf	(___awdiv@dividend+1)^(0+128),f
  4139  0E7E                     l2792:
  4140  0E7E  1426               	bsf	___awdiv@quotient^(0+128),0
  4141  0E7F                     l2794:
  4142  0E7F  3001               	movlw	1
  4143  0E80                     u2165:
  4144  0E80  1003               	clrc
  4145  0E81  0CA1               	rrf	(___awdiv@divisor+1)^(0+128),f
  4146  0E82  0CA0               	rrf	___awdiv@divisor^(0+128),f
  4147  0E83  3EFF               	addlw	-1
  4148  0E84  1D03               	skipz
  4149  0E85  2E80               	goto	u2165
  4150  0E86                     l2796:
  4151  0E86  3001               	movlw	1
  4152  0E87  02A4               	subwf	___awdiv@counter^(0+128),f
  4153  0E88  1D03               	btfss	3,2
  4154  0E89  2E8B               	goto	u2171
  4155  0E8A  2E8C               	goto	u2170
  4156  0E8B                     u2171:
  4157  0E8B  2E67               	goto	l2788
  4158  0E8C                     u2170:
  4159  0E8C                     l2798:
  4160  0E8C  0825               	movf	___awdiv@sign^(0+128),w
  4161  0E8D  1903               	btfsc	3,2
  4162  0E8E  2E90               	goto	u2181
  4163  0E8F  2E91               	goto	u2180
  4164  0E90                     u2181:
  4165  0E90  2E96               	goto	l2802
  4166  0E91                     u2180:
  4167  0E91                     l2800:
  4168  0E91  09A6               	comf	___awdiv@quotient^(0+128),f
  4169  0E92  09A7               	comf	(___awdiv@quotient+1)^(0+128),f
  4170  0E93  0AA6               	incf	___awdiv@quotient^(0+128),f
  4171  0E94  1903               	skipnz
  4172  0E95  0AA7               	incf	(___awdiv@quotient+1)^(0+128),f
  4173  0E96                     l2802:
  4174  0E96  0827               	movf	(___awdiv@quotient+1)^(0+128),w
  4175  0E97  00A1               	movwf	(?___awdiv+1)^(0+128)
  4176  0E98  0826               	movf	___awdiv@quotient^(0+128),w
  4177  0E99  00A0               	movwf	?___awdiv^(0+128)
  4178  0E9A                     l905:
  4179  0E9A  0008               	return
  4180  0E9B                     __end_of___awdiv:
  4181                           
  4182                           	psect	text20
  4183  094D                     __ptext20:	
  4184 ;; *************** function _SSD_Write *****************
  4185 ;; Defined at:
  4186 ;;		line 35 in file "SSD.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;  ID              1    wreg     unsigned char 
  4189 ;;  Number          1    8[BANK1 ] unsigned char 
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;  ID              1    9[BANK1 ] unsigned char 
  4192 ;; Return value:  Size  Location     Type
  4193 ;;                  1    wreg      unsigned char 
  4194 ;; Registers used:
  4195 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4196 ;; Tracked objects:
  4197 ;;		On entry : 0/0
  4198 ;;		On exit  : 0/0
  4199 ;;		Unchanged: 0/0
  4200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4201 ;;      Params:         0       0       1       0       0
  4202 ;;      Locals:         0       0       1       0       0
  4203 ;;      Temps:          0       0       0       0       0
  4204 ;;      Totals:         0       0       2       0       0
  4205 ;;Total ram usage:        2 bytes
  4206 ;; Hardware stack levels used:    1
  4207 ;; Hardware stack levels required when called:    4
  4208 ;; This function calls:
  4209 ;;		_SSD_config
  4210 ;; This function is called by:
  4211 ;;		_EWH_SSD_Update
  4212 ;;		_Heater_Display
  4213 ;; This function uses a non-reentrant model
  4214 ;;
  4215                           
  4216                           
  4217                           ;psect for function _SSD_Write
  4218  094D                     _SSD_Write:
  4219                           
  4220                           ;incstack = 0
  4221                           ; Regs used in _SSD_Write: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4222                           ;SSD_Write@ID stored from wreg
  4223  094D  1683               	bsf	3,5	;RP0=1, select bank1
  4224  094E  1303               	bcf	3,6	;RP1=0, select bank1
  4225  094F  00A9               	movwf	SSD_Write@ID^(0+128)
  4226  0950                     l2724:
  4227                           
  4228                           ;SSD.c: 35: Std_ReturnType SSD_Write(SSD_ID ID ,SSD_Number Number);SSD.c: 36: {;SSD.c: 3
      +                          8:     SSD_config(ID,ON);
  4229  0950  01A0               	clrf	SSD_config@SSD_state^(0+128)
  4230  0951  0AA0               	incf	SSD_config@SSD_state^(0+128),f
  4231  0952  0829               	movf	SSD_Write@ID^(0+128),w
  4232  0953  120A  158A  269B  120A  158A  	fcall	_SSD_config
  4233  0958                     l2726:
  4234                           
  4235                           ;SSD.c: 40:     ((TRISD)=(0u));
  4236  0958  1683               	bsf	3,5	;RP0=1, select bank1
  4237  0959  1303               	bcf	3,6	;RP1=0, select bank1
  4238  095A  0188               	clrf	8	;volatile
  4239  095B                     l2728:
  4240                           
  4241                           ;SSD.c: 42:     if((Number>=0) && (Number<=9))
  4242  095B  300A               	movlw	10
  4243  095C  0228               	subwf	SSD_Write@Number^(0+128),w
  4244  095D  1803               	skipnc
  4245  095E  2960               	goto	u2011
  4246  095F  2961               	goto	u2010
  4247  0960                     u2011:
  4248  0960  2969               	goto	l656
  4249  0961                     u2010:
  4250  0961                     l2730:
  4251                           
  4252                           ;SSD.c: 43:     {;SSD.c: 45:         ((PORTD)=(SSD_code[Number]));
  4253  0961  0828               	movf	SSD_Write@Number^(0+128),w
  4254  0962  3ED5               	addlw	(low (_SSD_code| 0))& (0+255)
  4255  0963  0084               	movwf	4
  4256  0964  1383               	bcf	3,7	;select IRP bank1
  4257  0965  0800               	movf	0,w
  4258  0966  1283               	bcf	3,5	;RP0=0, select bank0
  4259  0967  1303               	bcf	3,6	;RP1=0, select bank0
  4260  0968  0088               	movwf	8	;volatile
  4261  0969                     l656:
  4262  0969  0008               	return
  4263  096A                     __end_of_SSD_Write:
  4264                           
  4265                           	psect	text21
  4266  08BB                     __ptext21:	
  4267 ;; *************** function _SSD_OFF *****************
  4268 ;; Defined at:
  4269 ;;		line 65 in file "SSD.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;  ID              1    wreg     unsigned char 
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;  ID              1    4[BANK1 ] unsigned char 
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  1    wreg      void 
  4276 ;; Registers used:
  4277 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4283 ;;      Params:         0       0       0       0       0
  4284 ;;      Locals:         0       0       1       0       0
  4285 ;;      Temps:          0       0       0       0       0
  4286 ;;      Totals:         0       0       1       0       0
  4287 ;;Total ram usage:        1 bytes
  4288 ;; Hardware stack levels used:    1
  4289 ;; Hardware stack levels required when called:    4
  4290 ;; This function calls:
  4291 ;;		_SSD_config
  4292 ;; This function is called by:
  4293 ;;		_EWH_SSD_OFF
  4294 ;;		_EWH_SSD_Update
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298                           
  4299                           ;psect for function _SSD_OFF
  4300  08BB                     _SSD_OFF:
  4301                           
  4302                           ;incstack = 0
  4303                           ; Regs used in _SSD_OFF: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4304                           ;SSD_OFF@ID stored from wreg
  4305  08BB  1683               	bsf	3,5	;RP0=1, select bank1
  4306  08BC  1303               	bcf	3,6	;RP1=0, select bank1
  4307  08BD  00A4               	movwf	SSD_OFF@ID^(0+128)
  4308  08BE                     l2722:
  4309                           
  4310                           ;SSD.c: 65: void SSD_OFF (SSD_ID ID);SSD.c: 66: {;SSD.c: 67:     SSD_config(ID,OFF);
  4311  08BE  01A0               	clrf	SSD_config@SSD_state^(0+128)
  4312  08BF  0824               	movf	SSD_OFF@ID^(0+128),w
  4313  08C0  120A  158A  269B  120A  158A  	fcall	_SSD_config
  4314  08C5                     l663:
  4315  08C5  0008               	return
  4316  08C6                     __end_of_SSD_OFF:
  4317                           
  4318                           	psect	text22
  4319  0E9B                     __ptext22:	
  4320 ;; *************** function _SSD_config *****************
  4321 ;; Defined at:
  4322 ;;		line 11 in file "SSD.c"
  4323 ;; Parameters:    Size  Location     Type
  4324 ;;  ID              1    wreg     unsigned char 
  4325 ;;  SSD_state       1    0[BANK1 ] enum E13
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;  ID              1    3[BANK1 ] unsigned char 
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  1    wreg      void 
  4330 ;; Registers used:
  4331 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4337 ;;      Params:         0       0       1       0       0
  4338 ;;      Locals:         0       0       1       0       0
  4339 ;;      Temps:          0       0       2       0       0
  4340 ;;      Totals:         0       0       4       0       0
  4341 ;;Total ram usage:        4 bytes
  4342 ;; Hardware stack levels used:    1
  4343 ;; Hardware stack levels required when called:    3
  4344 ;; This function calls:
  4345 ;;		Nothing
  4346 ;; This function is called by:
  4347 ;;		_SSD_Write
  4348 ;;		_SSD_OFF
  4349 ;;		_Heater_Display
  4350 ;;		_SSD_ON
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353                           
  4354                           
  4355                           ;psect for function _SSD_config
  4356  0E9B                     _SSD_config:
  4357                           
  4358                           ;incstack = 0
  4359                           ; Regs used in _SSD_config: [wreg-fsr0h+status,2+status,0+btemp+1]
  4360                           ;SSD_config@ID stored from wreg
  4361  0E9B  1683               	bsf	3,5	;RP0=1, select bank1
  4362  0E9C  1303               	bcf	3,6	;RP1=0, select bank1
  4363  0E9D  00A3               	movwf	SSD_config@ID^(0+128)
  4364  0E9E                     l2650:
  4365                           
  4366                           ;SSD.c: 11: static void SSD_config (SSD_ID ID ,tState SSD_state);SSD.c: 12: {;SSD.c: 15:
      +                               switch(ID)
  4367  0E9E  2EEF               	goto	l2694
  4368  0E9F                     l2654:
  4369  0E9F  30FB               	movlw	251
  4370  0EA0  00FF               	movwf	btemp+1
  4371  0EA1  087F               	movf	btemp+1,w
  4372  0EA2  0585               	andwf	5,f	;volatile
  4373  0EA3                     l2656:
  4374                           
  4375                           ;SSD.c: 19:             (SSD_state)?(PORTA |= (1<<2)) : (PORTA &= ~(1<<2));
  4376  0EA3  0820               	movf	SSD_config@SSD_state^(0+128),w
  4377  0EA4  1903               	btfsc	3,2
  4378  0EA5  2EA7               	goto	u1921
  4379  0EA6  2EA8               	goto	u1920
  4380  0EA7                     u1921:
  4381  0EA7  2EAC               	goto	l2660
  4382  0EA8                     u1920:
  4383  0EA8                     l2658:
  4384  0EA8  1283               	bcf	3,5	;RP0=0, select bank0
  4385  0EA9  1303               	bcf	3,6	;RP1=0, select bank0
  4386  0EAA  1505               	bsf	5,2	;volatile
  4387  0EAB  2F05               	goto	l652
  4388  0EAC                     l2660:
  4389  0EAC  30FB               	movlw	251
  4390  0EAD  00FF               	movwf	btemp+1
  4391  0EAE  087F               	movf	btemp+1,w
  4392  0EAF  1283               	bcf	3,5	;RP0=0, select bank0
  4393  0EB0  1303               	bcf	3,6	;RP1=0, select bank0
  4394  0EB1  0585               	andwf	5,f	;volatile
  4395  0EB2  2F05               	goto	l652
  4396  0EB3                     l2664:
  4397  0EB3  30F7               	movlw	247
  4398  0EB4  00FF               	movwf	btemp+1
  4399  0EB5  087F               	movf	btemp+1,w
  4400  0EB6  0585               	andwf	5,f	;volatile
  4401  0EB7                     l2666:
  4402                           
  4403                           ;SSD.c: 23:             (SSD_state)?(PORTA |= (1<<3)) : (PORTA &= ~(1<<3));
  4404  0EB7  0820               	movf	SSD_config@SSD_state^(0+128),w
  4405  0EB8  1903               	btfsc	3,2
  4406  0EB9  2EBB               	goto	u1931
  4407  0EBA  2EBC               	goto	u1930
  4408  0EBB                     u1931:
  4409  0EBB  2EC0               	goto	l2670
  4410  0EBC                     u1930:
  4411  0EBC                     l2668:
  4412  0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  4413  0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  4414  0EBE  1585               	bsf	5,3	;volatile
  4415  0EBF  2F05               	goto	l652
  4416  0EC0                     l2670:
  4417  0EC0  30F7               	movlw	247
  4418  0EC1  00FF               	movwf	btemp+1
  4419  0EC2  087F               	movf	btemp+1,w
  4420  0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  4421  0EC4  1303               	bcf	3,6	;RP1=0, select bank0
  4422  0EC5  0585               	andwf	5,f	;volatile
  4423  0EC6  2F05               	goto	l652
  4424  0EC7                     l2674:
  4425  0EC7  30EF               	movlw	239
  4426  0EC8  00FF               	movwf	btemp+1
  4427  0EC9  087F               	movf	btemp+1,w
  4428  0ECA  0585               	andwf	5,f	;volatile
  4429  0ECB                     l2676:
  4430                           
  4431                           ;SSD.c: 27:             (SSD_state)?(PORTA |= (1<<4)) : (PORTA &= ~(1<<4));
  4432  0ECB  0820               	movf	SSD_config@SSD_state^(0+128),w
  4433  0ECC  1903               	btfsc	3,2
  4434  0ECD  2ECF               	goto	u1941
  4435  0ECE  2ED0               	goto	u1940
  4436  0ECF                     u1941:
  4437  0ECF  2ED4               	goto	l2680
  4438  0ED0                     u1940:
  4439  0ED0                     l2678:
  4440  0ED0  1283               	bcf	3,5	;RP0=0, select bank0
  4441  0ED1  1303               	bcf	3,6	;RP1=0, select bank0
  4442  0ED2  1605               	bsf	5,4	;volatile
  4443  0ED3  2F05               	goto	l652
  4444  0ED4                     l2680:
  4445  0ED4  30EF               	movlw	239
  4446  0ED5  00FF               	movwf	btemp+1
  4447  0ED6  087F               	movf	btemp+1,w
  4448  0ED7  1283               	bcf	3,5	;RP0=0, select bank0
  4449  0ED8  1303               	bcf	3,6	;RP1=0, select bank0
  4450  0ED9  0585               	andwf	5,f	;volatile
  4451  0EDA  2F05               	goto	l652
  4452  0EDB                     l2684:
  4453  0EDB  30DF               	movlw	223
  4454  0EDC  00FF               	movwf	btemp+1
  4455  0EDD  087F               	movf	btemp+1,w
  4456  0EDE  0585               	andwf	5,f	;volatile
  4457  0EDF                     l2686:
  4458                           
  4459                           ;SSD.c: 31:             (SSD_state)?(PORTA |= (1<<5)) : (PORTA &= ~(1<<5));
  4460  0EDF  0820               	movf	SSD_config@SSD_state^(0+128),w
  4461  0EE0  1903               	btfsc	3,2
  4462  0EE1  2EE3               	goto	u1951
  4463  0EE2  2EE4               	goto	u1950
  4464  0EE3                     u1951:
  4465  0EE3  2EE8               	goto	l2690
  4466  0EE4                     u1950:
  4467  0EE4                     l2688:
  4468  0EE4  1283               	bcf	3,5	;RP0=0, select bank0
  4469  0EE5  1303               	bcf	3,6	;RP1=0, select bank0
  4470  0EE6  1685               	bsf	5,5	;volatile
  4471  0EE7  2F05               	goto	l652
  4472  0EE8                     l2690:
  4473  0EE8  30DF               	movlw	223
  4474  0EE9  00FF               	movwf	btemp+1
  4475  0EEA  087F               	movf	btemp+1,w
  4476  0EEB  1283               	bcf	3,5	;RP0=0, select bank0
  4477  0EEC  1303               	bcf	3,6	;RP1=0, select bank0
  4478  0EED  0585               	andwf	5,f	;volatile
  4479  0EEE  2F05               	goto	l652
  4480  0EEF                     l2694:
  4481  0EEF  0823               	movf	SSD_config@ID^(0+128),w
  4482  0EF0  00A1               	movwf	??_SSD_config^(0+128)
  4483  0EF1  01A2               	clrf	(??_SSD_config^(0+128)+1)
  4484                           
  4485                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4486                           ; Switch size 1, requested type "simple"
  4487                           ; Number of cases is 1, Range of values is 0 to 0
  4488                           ; switch strategies available:
  4489                           ; Name         Instructions Cycles
  4490                           ; simple_byte            4     3 (average)
  4491                           ; direct_byte           11     8 (fixed)
  4492                           ; jumptable            260     6 (fixed)
  4493                           ;	Chosen strategy is simple_byte
  4494  0EF2  0822               	movf	(??_SSD_config+1)^(0+128),w
  4495  0EF3  3A00               	xorlw	0	; case 0
  4496  0EF4  1903               	skipnz
  4497  0EF5  2EF7               	goto	l3924
  4498  0EF6  2F05               	goto	l652
  4499  0EF7                     l3924:
  4500                           
  4501                           ; Switch size 1, requested type "simple"
  4502                           ; Number of cases is 4, Range of values is 2 to 5
  4503                           ; switch strategies available:
  4504                           ; Name         Instructions Cycles
  4505                           ; simple_byte           13     7 (average)
  4506                           ; direct_byte           23    11 (fixed)
  4507                           ; jumptable            263     9 (fixed)
  4508                           ;	Chosen strategy is simple_byte
  4509  0EF7  0821               	movf	??_SSD_config^(0+128),w
  4510  0EF8  3A02               	xorlw	2	; case 2
  4511  0EF9  1903               	skipnz
  4512  0EFA  2E9F               	goto	l2654
  4513  0EFB  3A01               	xorlw	1	; case 3
  4514  0EFC  1903               	skipnz
  4515  0EFD  2EB3               	goto	l2664
  4516  0EFE  3A07               	xorlw	7	; case 4
  4517  0EFF  1903               	skipnz
  4518  0F00  2EC7               	goto	l2674
  4519  0F01  3A01               	xorlw	1	; case 5
  4520  0F02  1903               	skipnz
  4521  0F03  2EDB               	goto	l2684
  4522  0F04  2F05               	goto	l652
  4523  0F05                     l652:
  4524  0F05  0008               	return
  4525  0F06                     __end_of_SSD_config:
  4526                           
  4527                           	psect	text23
  4528  0C5E                     __ptext23:	
  4529 ;; *************** function _DD_SetState *****************
  4530 ;; Defined at:
  4531 ;;		line 28 in file "DD.c"
  4532 ;; Parameters:    Size  Location     Type
  4533 ;;  device          1    wreg     enum E884
  4534 ;;  state           1    0[BANK1 ] enum E13
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;  device          1    3[BANK1 ] enum E884
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  1    wreg      void 
  4539 ;; Registers used:
  4540 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4546 ;;      Params:         0       0       1       0       0
  4547 ;;      Locals:         0       0       1       0       0
  4548 ;;      Temps:          0       0       2       0       0
  4549 ;;      Totals:         0       0       4       0       0
  4550 ;;Total ram usage:        4 bytes
  4551 ;; Hardware stack levels used:    1
  4552 ;; Hardware stack levels required when called:    3
  4553 ;; This function calls:
  4554 ;;		Nothing
  4555 ;; This function is called by:
  4556 ;;		_EWH_Sleep_Mode
  4557 ;;		_EWH_SetTemp_Mode
  4558 ;;		_EWH_Operating_Mode
  4559 ;; This function uses a non-reentrant model
  4560 ;;
  4561                           
  4562                           
  4563                           ;psect for function _DD_SetState
  4564  0C5E                     _DD_SetState:
  4565                           
  4566                           ;incstack = 0
  4567                           ; Regs used in _DD_SetState: [wreg-fsr0h+status,2+status,0+btemp+1]
  4568                           ;DD_SetState@device stored from wreg
  4569  0C5E  1683               	bsf	3,5	;RP0=1, select bank1
  4570  0C5F  1303               	bcf	3,6	;RP1=0, select bank1
  4571  0C60  00A3               	movwf	DD_SetState@device^(0+128)
  4572  0C61                     l2902:
  4573                           
  4574                           ;DD.c: 28: void DD_SetState(tDD device ,tState state);DD.c: 29: {;DD.c: 30:     switch(d
      +                          evice)
  4575  0C61  2CA4               	goto	l2930
  4576  0C62                     l2904:
  4577                           
  4578                           ;DD.c: 33:             (state)?(PORTC |= (1<<5)) : (PORTC &= ~(1<<5));
  4579  0C62  0820               	movf	DD_SetState@state^(0+128),w
  4580  0C63  1903               	btfsc	3,2
  4581  0C64  2C66               	goto	u2331
  4582  0C65  2C67               	goto	u2330
  4583  0C66                     u2331:
  4584  0C66  2C6B               	goto	l2908
  4585  0C67                     u2330:
  4586  0C67                     l2906:
  4587  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  4588  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  4589  0C69  1687               	bsf	7,5	;volatile
  4590  0C6A  2C71               	goto	l2910
  4591  0C6B                     l2908:
  4592  0C6B  30DF               	movlw	223
  4593  0C6C  00FF               	movwf	btemp+1
  4594  0C6D  087F               	movf	btemp+1,w
  4595  0C6E  1283               	bcf	3,5	;RP0=0, select bank0
  4596  0C6F  1303               	bcf	3,6	;RP1=0, select bank0
  4597  0C70  0587               	andwf	7,f	;volatile
  4598  0C71                     l2910:
  4599                           
  4600                           ;DD.c: 34:             Devices_State.HEATER_State=state;
  4601  0C71  1683               	bsf	3,5	;RP0=1, select bank1
  4602  0C72  1303               	bcf	3,6	;RP1=0, select bank1
  4603  0C73  0820               	movf	DD_SetState@state^(0+128),w
  4604  0C74  00FF               	movwf	btemp+1
  4605  0C75  087F               	movf	btemp+1,w
  4606  0C76  00C1               	movwf	_Devices_State^(0+128)
  4607                           
  4608                           ;DD.c: 35:             break;
  4609  0C77  2CB7               	goto	l262
  4610  0C78                     l2912:
  4611                           
  4612                           ;DD.c: 37:             (state)?(PORTC |= (1<<2)) : (PORTC &= ~(1<<2));
  4613  0C78  0820               	movf	DD_SetState@state^(0+128),w
  4614  0C79  1903               	btfsc	3,2
  4615  0C7A  2C7C               	goto	u2341
  4616  0C7B  2C7D               	goto	u2340
  4617  0C7C                     u2341:
  4618  0C7C  2C81               	goto	l2916
  4619  0C7D                     u2340:
  4620  0C7D                     l2914:
  4621  0C7D  1283               	bcf	3,5	;RP0=0, select bank0
  4622  0C7E  1303               	bcf	3,6	;RP1=0, select bank0
  4623  0C7F  1507               	bsf	7,2	;volatile
  4624  0C80  2C87               	goto	l2918
  4625  0C81                     l2916:
  4626  0C81  30FB               	movlw	251
  4627  0C82  00FF               	movwf	btemp+1
  4628  0C83  087F               	movf	btemp+1,w
  4629  0C84  1283               	bcf	3,5	;RP0=0, select bank0
  4630  0C85  1303               	bcf	3,6	;RP1=0, select bank0
  4631  0C86  0587               	andwf	7,f	;volatile
  4632  0C87                     l2918:
  4633                           
  4634                           ;DD.c: 38:             Devices_State.COOLER_State=state;
  4635  0C87  1683               	bsf	3,5	;RP0=1, select bank1
  4636  0C88  1303               	bcf	3,6	;RP1=0, select bank1
  4637  0C89  0820               	movf	DD_SetState@state^(0+128),w
  4638  0C8A  00FF               	movwf	btemp+1
  4639  0C8B  087F               	movf	btemp+1,w
  4640  0C8C  00C3               	movwf	(_Devices_State^(0+128)+2)
  4641                           
  4642                           ;DD.c: 39:             break;
  4643  0C8D  2CB7               	goto	l262
  4644  0C8E                     l2920:
  4645                           
  4646                           ;DD.c: 41:             (state)?(PORTB |= (1<<7)) : (PORTB &= ~(1<<7));
  4647  0C8E  0820               	movf	DD_SetState@state^(0+128),w
  4648  0C8F  1903               	btfsc	3,2
  4649  0C90  2C92               	goto	u2351
  4650  0C91  2C93               	goto	u2350
  4651  0C92                     u2351:
  4652  0C92  2C97               	goto	l2924
  4653  0C93                     u2350:
  4654  0C93                     l2922:
  4655  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  4656  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  4657  0C95  1786               	bsf	6,7	;volatile
  4658  0C96  2C9D               	goto	l2926
  4659  0C97                     l2924:
  4660  0C97  307F               	movlw	127
  4661  0C98  00FF               	movwf	btemp+1
  4662  0C99  087F               	movf	btemp+1,w
  4663  0C9A  1283               	bcf	3,5	;RP0=0, select bank0
  4664  0C9B  1303               	bcf	3,6	;RP1=0, select bank0
  4665  0C9C  0586               	andwf	6,f	;volatile
  4666  0C9D                     l2926:
  4667                           
  4668                           ;DD.c: 42:             Devices_State.HEATER_LED_State=state;
  4669  0C9D  1683               	bsf	3,5	;RP0=1, select bank1
  4670  0C9E  1303               	bcf	3,6	;RP1=0, select bank1
  4671  0C9F  0820               	movf	DD_SetState@state^(0+128),w
  4672  0CA0  00FF               	movwf	btemp+1
  4673  0CA1  087F               	movf	btemp+1,w
  4674  0CA2  00C2               	movwf	(_Devices_State^(0+128)+1)
  4675                           
  4676                           ;DD.c: 43:             break;
  4677  0CA3  2CB7               	goto	l262
  4678  0CA4                     l2930:
  4679  0CA4  0823               	movf	DD_SetState@device^(0+128),w
  4680  0CA5  00A1               	movwf	??_DD_SetState^(0+128)
  4681  0CA6  01A2               	clrf	(??_DD_SetState^(0+128)+1)
  4682                           
  4683                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4684                           ; Switch size 1, requested type "simple"
  4685                           ; Number of cases is 1, Range of values is 0 to 0
  4686                           ; switch strategies available:
  4687                           ; Name         Instructions Cycles
  4688                           ; simple_byte            4     3 (average)
  4689                           ; direct_byte           11     8 (fixed)
  4690                           ; jumptable            260     6 (fixed)
  4691                           ;	Chosen strategy is simple_byte
  4692  0CA7  0822               	movf	(??_DD_SetState+1)^(0+128),w
  4693  0CA8  3A00               	xorlw	0	; case 0
  4694  0CA9  1903               	skipnz
  4695  0CAA  2CAC               	goto	l3926
  4696  0CAB  2CB7               	goto	l262
  4697  0CAC                     l3926:
  4698                           
  4699                           ; Switch size 1, requested type "simple"
  4700                           ; Number of cases is 3, Range of values is 0 to 2
  4701                           ; switch strategies available:
  4702                           ; Name         Instructions Cycles
  4703                           ; simple_byte           10     6 (average)
  4704                           ; direct_byte           17     8 (fixed)
  4705                           ; jumptable            260     6 (fixed)
  4706                           ;	Chosen strategy is simple_byte
  4707  0CAC  0821               	movf	??_DD_SetState^(0+128),w
  4708  0CAD  3A00               	xorlw	0	; case 0
  4709  0CAE  1903               	skipnz
  4710  0CAF  2C62               	goto	l2904
  4711  0CB0  3A01               	xorlw	1	; case 1
  4712  0CB1  1903               	skipnz
  4713  0CB2  2C78               	goto	l2912
  4714  0CB3  3A03               	xorlw	3	; case 2
  4715  0CB4  1903               	skipnz
  4716  0CB5  2C8E               	goto	l2920
  4717  0CB6  2CB7               	goto	l262
  4718  0CB7                     l262:
  4719  0CB7  0008               	return
  4720  0CB8                     __end_of_DD_SetState:
  4721                           
  4722                           	psect	text24
  4723  0AEC                     __ptext24:	
  4724 ;; *************** function _EWH_Init *****************
  4725 ;; Defined at:
  4726 ;;		line 218 in file "EWH.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;		None
  4729 ;; Auto vars:     Size  Location     Type
  4730 ;;  i2c_config      6   17[BANK1 ] struct .
  4731 ;;  adc_config      4   23[BANK1 ] struct .
  4732 ;;  TMR1_cfg        2   15[BANK1 ] struct .
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  1    wreg      void 
  4735 ;; Registers used:
  4736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4742 ;;      Params:         0       0       0       0       0
  4743 ;;      Locals:         0       0      12       0       0
  4744 ;;      Temps:          0       0       0       0       0
  4745 ;;      Totals:         0       0      12       0       0
  4746 ;;Total ram usage:       12 bytes
  4747 ;; Hardware stack levels used:    1
  4748 ;; Hardware stack levels required when called:    7
  4749 ;; This function calls:
  4750 ;;		_ADC_Init
  4751 ;;		_DD_Init
  4752 ;;		_EWH_EEPROM_Init
  4753 ;;		_I2C_Init
  4754 ;;		_SW_Init
  4755 ;;		_TMR1_Init
  4756 ;; This function is called by:
  4757 ;;		_main
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           
  4762                           ;psect for function _EWH_Init
  4763  0AEC                     _EWH_Init:
  4764  0AEC                     l3094:	
  4765                           ;incstack = 0
  4766                           ; Regs used in _EWH_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4767                           
  4768                           
  4769                           ;EWH.c: 221:     tTMR1_Config TMR1_cfg;;EWH.c: 222:     TMR1_cfg.Prescaler=TMR1_PRESCALE
      +                          R_4;
  4770  0AEC  3002               	movlw	2
  4771  0AED  00FF               	movwf	btemp+1
  4772  0AEE  087F               	movf	btemp+1,w
  4773  0AEF  1683               	bsf	3,5	;RP0=1, select bank1
  4774  0AF0  1303               	bcf	3,6	;RP1=0, select bank1
  4775  0AF1  00AF               	movwf	EWH_Init@TMR1_cfg^(0+128)
  4776  0AF2                     l3096:
  4777                           
  4778                           ;EWH.c: 223:     TMR1_cfg.clkSource=EXTERNAL_CLK_SOURCE;
  4779  0AF2  01B0               	clrf	(EWH_Init@TMR1_cfg^(0+128)+1)
  4780  0AF3  0AB0               	incf	(EWH_Init@TMR1_cfg^(0+128)+1),f
  4781  0AF4                     l3098:
  4782                           
  4783                           ;EWH.c: 226:     TMR1_Init(&TMR1_cfg);
  4784  0AF4  30AF               	movlw	(low (EWH_Init@TMR1_cfg| 0))& (0+255)
  4785  0AF5  120A  158A  23C0  120A  158A  	fcall	_TMR1_Init
  4786  0AFA                     l3100:
  4787                           
  4788                           ;EWH.c: 229:     tADC_Config adc_config;;EWH.c: 230:     adc_config.alignment=RIGHT;
  4789  0AFA  1683               	bsf	3,5	;RP0=1, select bank1
  4790  0AFB  1303               	bcf	3,6	;RP1=0, select bank1
  4791  0AFC  01B9               	clrf	(EWH_Init@adc_config^(0+128)+2)
  4792  0AFD  0AB9               	incf	(EWH_Init@adc_config^(0+128)+2),f
  4793  0AFE                     l3102:
  4794                           
  4795                           ;EWH.c: 231:     adc_config.channel=ADC2;
  4796  0AFE  3002               	movlw	2
  4797  0AFF  00FF               	movwf	btemp+1
  4798  0B00  087F               	movf	btemp+1,w
  4799  0B01  00B7               	movwf	EWH_Init@adc_config^(0+128)
  4800  0B02                     l3104:
  4801                           
  4802                           ;EWH.c: 232:     adc_config.clk=FOSC_8;
  4803  0B02  01BA               	clrf	(EWH_Init@adc_config^(0+128)+3)
  4804  0B03  0ABA               	incf	(EWH_Init@adc_config^(0+128)+3),f
  4805  0B04                     l3106:
  4806                           
  4807                           ;EWH.c: 233:     adc_config.mode= POLLING_MODE;
  4808  0B04  01B8               	clrf	(EWH_Init@adc_config^(0+128)+1)
  4809  0B05                     l3108:
  4810                           
  4811                           ;EWH.c: 236:     ADC_Init(&adc_config);
  4812  0B05  30B7               	movlw	(low (EWH_Init@adc_config| 0))& (0+255)
  4813  0B06  120A  158A  2782  120A  158A  	fcall	_ADC_Init
  4814  0B0B                     l3110:
  4815                           
  4816                           ;EWH.c: 239:     tI2C_Config i2c_config;;EWH.c: 240:     i2c_config.BaudRate=100000;
  4817  0B0B  3000               	movlw	0
  4818  0B0C  1683               	bsf	3,5	;RP0=1, select bank1
  4819  0B0D  1303               	bcf	3,6	;RP1=0, select bank1
  4820  0B0E  00B5               	movwf	((EWH_Init@i2c_config+3)^(0+128)+1)
  4821  0B0F  3001               	movlw	1
  4822  0B10  00B4               	movwf	((EWH_Init@i2c_config+2)^(0+128)+1)
  4823  0B11  3086               	movlw	134
  4824  0B12  00B3               	movwf	((EWH_Init@i2c_config+1)^(0+128)+1)
  4825  0B13  30A0               	movlw	160
  4826  0B14  00B2               	movwf	(EWH_Init@i2c_config^(0+128)+1)
  4827  0B15                     l3112:
  4828                           
  4829                           ;EWH.c: 241:     i2c_config.Mode=Master_Mode;
  4830  0B15  3008               	movlw	8
  4831  0B16  00FF               	movwf	btemp+1
  4832  0B17  087F               	movf	btemp+1,w
  4833  0B18  00B1               	movwf	EWH_Init@i2c_config^(0+128)
  4834                           
  4835                           ;EWH.c: 242:     i2c_config.operationMode=POLLING;
  4836  0B19  01B6               	clrf	(EWH_Init@i2c_config^(0+128)+5)
  4837  0B1A                     l3114:
  4838                           
  4839                           ;EWH.c: 245:     I2C_Init(&i2c_config);
  4840  0B1A  30B1               	movlw	(low (EWH_Init@i2c_config| 0))& (0+255)
  4841  0B1B  120A  158A  2376  120A  158A  	fcall	_I2C_Init
  4842  0B20                     l3116:
  4843                           
  4844                           ;EWH.c: 248:     DD_Init();
  4845  0B20  120A  158A  2130  120A  158A  	fcall	_DD_Init
  4846  0B25                     l3118:
  4847                           
  4848                           ;EWH.c: 251:     SW_Init();
  4849  0B25  120A  158A  2094  120A  158A  	fcall	_SW_Init
  4850  0B2A                     l3120:
  4851                           
  4852                           ;EWH.c: 254:     EWH_EEPROM_Init();
  4853  0B2A  120A  158A  20EC  120A  158A  	fcall	_EWH_EEPROM_Init
  4854  0B2F                     l552:
  4855  0B2F  0008               	return
  4856  0B30                     __end_of_EWH_Init:
  4857                           
  4858                           	psect	text25
  4859  0BC0                     __ptext25:	
  4860 ;; *************** function _TMR1_Init *****************
  4861 ;; Defined at:
  4862 ;;		line 3 in file "TMR1.c"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;  config          1    wreg     PTR struct .
  4865 ;;		 -> EWH_Init@TMR1_cfg(2), 
  4866 ;; Auto vars:     Size  Location     Type
  4867 ;;  config          1    2[BANK1 ] PTR struct .
  4868 ;;		 -> EWH_Init@TMR1_cfg(2), 
  4869 ;; Return value:  Size  Location     Type
  4870 ;;                  1    wreg      void 
  4871 ;; Registers used:
  4872 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4878 ;;      Params:         0       0       0       0       0
  4879 ;;      Locals:         0       0       1       0       0
  4880 ;;      Temps:          0       0       2       0       0
  4881 ;;      Totals:         0       0       3       0       0
  4882 ;;Total ram usage:        3 bytes
  4883 ;; Hardware stack levels used:    1
  4884 ;; Hardware stack levels required when called:    3
  4885 ;; This function calls:
  4886 ;;		Nothing
  4887 ;; This function is called by:
  4888 ;;		_EWH_Init
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892                           
  4893                           ;psect for function _TMR1_Init
  4894  0BC0                     _TMR1_Init:
  4895                           
  4896                           ;incstack = 0
  4897                           ; Regs used in _TMR1_Init: [wreg-fsr0h+status,2+status,0]
  4898                           ;TMR1_Init@config stored from wreg
  4899  0BC0  1683               	bsf	3,5	;RP0=1, select bank1
  4900  0BC1  1303               	bcf	3,6	;RP1=0, select bank1
  4901  0BC2  00A2               	movwf	TMR1_Init@config^(0+128)
  4902  0BC3                     l2964:
  4903                           
  4904                           ;TMR1.c: 3: void TMR1_Init(tTMR1_Config *config);TMR1.c: 4: {;TMR1.c: 5:     switch(conf
      +                          ig->Prescaler)
  4905  0BC3  2BD8               	goto	l2968
  4906  0BC4                     l339:	
  4907                           ;TMR1.c: 6:     {;TMR1.c: 7:         case TMR1_PRESCALER_1:
  4908                           
  4909                           
  4910                           ;TMR1.c: 8:             T1CKPS0 = 0; T1CKPS1 = 0;
  4911  0BC4  1283               	bcf	3,5	;RP0=0, select bank0
  4912  0BC5  1303               	bcf	3,6	;RP1=0, select bank0
  4913  0BC6  1210               	bcf	16,4	;volatile
  4914  0BC7  1290               	bcf	16,5	;volatile
  4915                           
  4916                           ;TMR1.c: 9:             break;
  4917  0BC8  2BF5               	goto	l2972
  4918  0BC9                     l341:	
  4919                           ;TMR1.c: 10:         case TMR1_PRESCALER_2:
  4920                           
  4921                           
  4922                           ;TMR1.c: 11:             T1CKPS0 = 1; T1CKPS1 = 0;
  4923  0BC9  1283               	bcf	3,5	;RP0=0, select bank0
  4924  0BCA  1303               	bcf	3,6	;RP1=0, select bank0
  4925  0BCB  1610               	bsf	16,4	;volatile
  4926  0BCC  1290               	bcf	16,5	;volatile
  4927                           
  4928                           ;TMR1.c: 12:             break;
  4929  0BCD  2BF5               	goto	l2972
  4930  0BCE                     l342:	
  4931                           ;TMR1.c: 13:         case TMR1_PRESCALER_4:
  4932                           
  4933                           
  4934                           ;TMR1.c: 14:             T1CKPS0 = 0; T1CKPS1 = 1;
  4935  0BCE  1283               	bcf	3,5	;RP0=0, select bank0
  4936  0BCF  1303               	bcf	3,6	;RP1=0, select bank0
  4937  0BD0  1210               	bcf	16,4	;volatile
  4938  0BD1  1690               	bsf	16,5	;volatile
  4939                           
  4940                           ;TMR1.c: 15:             break;
  4941  0BD2  2BF5               	goto	l2972
  4942  0BD3                     l343:	
  4943                           ;TMR1.c: 16:         case TMR1_PRESCALER_8:
  4944                           
  4945                           
  4946                           ;TMR1.c: 17:             T1CKPS0 = 1; T1CKPS1 = 1;
  4947  0BD3  1283               	bcf	3,5	;RP0=0, select bank0
  4948  0BD4  1303               	bcf	3,6	;RP1=0, select bank0
  4949  0BD5  1610               	bsf	16,4	;volatile
  4950  0BD6  1690               	bsf	16,5	;volatile
  4951                           
  4952                           ;TMR1.c: 18:             break;
  4953  0BD7  2BF5               	goto	l2972
  4954  0BD8                     l2968:
  4955  0BD8  0822               	movf	TMR1_Init@config^(0+128),w
  4956  0BD9  0084               	movwf	4
  4957  0BDA  1383               	bcf	3,7	;select IRP bank0
  4958  0BDB  0800               	movf	0,w
  4959  0BDC  00A0               	movwf	??_TMR1_Init^(0+128)
  4960  0BDD  01A1               	clrf	(??_TMR1_Init^(0+128)+1)
  4961                           
  4962                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4963                           ; Switch size 1, requested type "simple"
  4964                           ; Number of cases is 1, Range of values is 0 to 0
  4965                           ; switch strategies available:
  4966                           ; Name         Instructions Cycles
  4967                           ; simple_byte            4     3 (average)
  4968                           ; direct_byte           11     8 (fixed)
  4969                           ; jumptable            260     6 (fixed)
  4970                           ;	Chosen strategy is simple_byte
  4971  0BDE  0821               	movf	(??_TMR1_Init+1)^(0+128),w
  4972  0BDF  3A00               	xorlw	0	; case 0
  4973  0BE0  1903               	skipnz
  4974  0BE1  2BE3               	goto	l3928
  4975  0BE2  2BF5               	goto	l2972
  4976  0BE3                     l3928:
  4977                           
  4978                           ; Switch size 1, requested type "simple"
  4979                           ; Number of cases is 4, Range of values is 0 to 3
  4980                           ; switch strategies available:
  4981                           ; Name         Instructions Cycles
  4982                           ; simple_byte           13     7 (average)
  4983                           ; direct_byte           20     8 (fixed)
  4984                           ; jumptable            260     6 (fixed)
  4985                           ;	Chosen strategy is simple_byte
  4986  0BE3  0820               	movf	??_TMR1_Init^(0+128),w
  4987  0BE4  3A00               	xorlw	0	; case 0
  4988  0BE5  1903               	skipnz
  4989  0BE6  2BC4               	goto	l339
  4990  0BE7  3A01               	xorlw	1	; case 1
  4991  0BE8  1903               	skipnz
  4992  0BE9  2BC9               	goto	l341
  4993  0BEA  3A03               	xorlw	3	; case 2
  4994  0BEB  1903               	skipnz
  4995  0BEC  2BCE               	goto	l342
  4996  0BED  3A01               	xorlw	1	; case 3
  4997  0BEE  1903               	skipnz
  4998  0BEF  2BD3               	goto	l343
  4999  0BF0  2BF5               	goto	l2972
  5000  0BF1                     l345:	
  5001                           ;TMR1.c: 22:     {;TMR1.c: 23:         case INTERNAL_CLK_SOURCE:
  5002                           
  5003                           
  5004                           ;TMR1.c: 24:             (T0CS = 0);
  5005  0BF1  1281               	bcf	1,5	;volatile
  5006                           
  5007                           ;TMR1.c: 25:             break ;
  5008  0BF2  2C09               	goto	l348
  5009  0BF3                     l347:	
  5010                           ;TMR1.c: 26:         case EXTERNAL_CLK_SOURCE:
  5011                           
  5012                           
  5013                           ;TMR1.c: 27:             (T0CS = 1);
  5014  0BF3  1681               	bsf	1,5	;volatile
  5015                           
  5016                           ;TMR1.c: 28:             break ;
  5017  0BF4  2C09               	goto	l348
  5018  0BF5                     l2972:
  5019  0BF5  1683               	bsf	3,5	;RP0=1, select bank1
  5020  0BF6  1303               	bcf	3,6	;RP1=0, select bank1
  5021  0BF7  0A22               	incf	TMR1_Init@config^(0+128),w
  5022  0BF8  0084               	movwf	4
  5023  0BF9  0800               	movf	0,w
  5024  0BFA  00A0               	movwf	??_TMR1_Init^(0+128)
  5025  0BFB  01A1               	clrf	(??_TMR1_Init^(0+128)+1)
  5026                           
  5027                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5028                           ; Switch size 1, requested type "simple"
  5029                           ; Number of cases is 1, Range of values is 0 to 0
  5030                           ; switch strategies available:
  5031                           ; Name         Instructions Cycles
  5032                           ; simple_byte            4     3 (average)
  5033                           ; direct_byte           11     8 (fixed)
  5034                           ; jumptable            260     6 (fixed)
  5035                           ;	Chosen strategy is simple_byte
  5036  0BFC  0821               	movf	(??_TMR1_Init+1)^(0+128),w
  5037  0BFD  3A00               	xorlw	0	; case 0
  5038  0BFE  1903               	skipnz
  5039  0BFF  2C01               	goto	l3930
  5040  0C00  2C09               	goto	l348
  5041  0C01                     l3930:
  5042                           
  5043                           ; Switch size 1, requested type "simple"
  5044                           ; Number of cases is 2, Range of values is 0 to 1
  5045                           ; switch strategies available:
  5046                           ; Name         Instructions Cycles
  5047                           ; simple_byte            7     4 (average)
  5048                           ; direct_byte           14     8 (fixed)
  5049                           ; jumptable            260     6 (fixed)
  5050                           ;	Chosen strategy is simple_byte
  5051  0C01  0820               	movf	??_TMR1_Init^(0+128),w
  5052  0C02  3A00               	xorlw	0	; case 0
  5053  0C03  1903               	skipnz
  5054  0C04  2BF1               	goto	l345
  5055  0C05  3A01               	xorlw	1	; case 1
  5056  0C06  1903               	skipnz
  5057  0C07  2BF3               	goto	l347
  5058  0C08  2C09               	goto	l348
  5059  0C09                     l348:
  5060  0C09  0008               	return
  5061  0C0A                     __end_of_TMR1_Init:
  5062                           
  5063                           	psect	text26
  5064  0894                     __ptext26:	
  5065 ;; *************** function _SW_Init *****************
  5066 ;; Defined at:
  5067 ;;		line 16 in file "SW.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;		None
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;		None
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  1    wreg      void 
  5074 ;; Registers used:
  5075 ;;		wreg, status,2, status,0, btemp+1
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5081 ;;      Params:         0       0       0       0       0
  5082 ;;      Locals:         0       0       0       0       0
  5083 ;;      Temps:          0       0       0       0       0
  5084 ;;      Totals:         0       0       0       0       0
  5085 ;;Total ram usage:        0 bytes
  5086 ;; Hardware stack levels used:    1
  5087 ;; Hardware stack levels required when called:    3
  5088 ;; This function calls:
  5089 ;;		Nothing
  5090 ;; This function is called by:
  5091 ;;		_EWH_Init
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           
  5096                           ;psect for function _SW_Init
  5097  0894                     _SW_Init:
  5098  0894                     l2990:	
  5099                           ;incstack = 0
  5100                           ; Regs used in _SW_Init: [wreg+status,2+status,0+btemp+1]
  5101                           
  5102  0894  1683               	bsf	3,5	;RP0=1, select bank1
  5103  0895  1303               	bcf	3,6	;RP1=0, select bank1
  5104  0896  1506               	bsf	6,2	;volatile
  5105  0897                     l2994:
  5106  0897  1486               	bsf	6,1	;volatile
  5107  0898                     l2998:
  5108  0898  1406               	bsf	6,0	;volatile
  5109  0899                     l3002:
  5110                           
  5111                           ;SW.c: 24:     INTEDG=0;
  5112  0899  1301               	bcf	1,6	;volatile
  5113  089A                     l3004:
  5114                           
  5115                           ;SW.c: 25:     INTE=1;
  5116  089A  160B               	bsf	11,4	;volatile
  5117  089B                     l3006:
  5118                           
  5119                           ;SW.c: 26:     GIE=1;
  5120  089B  178B               	bsf	11,7	;volatile
  5121  089C                     l388:
  5122  089C  0008               	return
  5123  089D                     __end_of_SW_Init:
  5124                           
  5125                           	psect	text27
  5126  0B76                     __ptext27:	
  5127 ;; *************** function _I2C_Init *****************
  5128 ;; Defined at:
  5129 ;;		line 12 in file "i2c.c"
  5130 ;; Parameters:    Size  Location     Type
  5131 ;;  i2c_config      1    wreg     PTR struct .
  5132 ;;		 -> EWH_Init@i2c_config(6), 
  5133 ;; Auto vars:     Size  Location     Type
  5134 ;;  i2c_config      1   14[BANK1 ] PTR struct .
  5135 ;;		 -> EWH_Init@i2c_config(6), 
  5136 ;; Return value:  Size  Location     Type
  5137 ;;                  1    wreg      void 
  5138 ;; Registers used:
  5139 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5140 ;; Tracked objects:
  5141 ;;		On entry : 0/0
  5142 ;;		On exit  : 0/0
  5143 ;;		Unchanged: 0/0
  5144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5145 ;;      Params:         0       0       0       0       0
  5146 ;;      Locals:         0       0       1       0       0
  5147 ;;      Temps:          0       0       0       0       0
  5148 ;;      Totals:         0       0       1       0       0
  5149 ;;Total ram usage:        1 bytes
  5150 ;; Hardware stack levels used:    1
  5151 ;; Hardware stack levels required when called:    4
  5152 ;; This function calls:
  5153 ;;		___lldiv
  5154 ;; This function is called by:
  5155 ;;		_EWH_Init
  5156 ;; This function uses a non-reentrant model
  5157 ;;
  5158                           
  5159                           
  5160                           ;psect for function _I2C_Init
  5161  0B76                     _I2C_Init:
  5162                           
  5163                           ;incstack = 0
  5164                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5165                           ;I2C_Init@i2c_config stored from wreg
  5166  0B76  1683               	bsf	3,5	;RP0=1, select bank1
  5167  0B77  1303               	bcf	3,6	;RP1=0, select bank1
  5168  0B78  00AE               	movwf	I2C_Init@i2c_config^(0+128)
  5169  0B79                     l2854:
  5170                           
  5171                           ;i2c.c: 12: void I2C_Init(tI2C_Config *i2c_config);i2c.c: 13: {;i2c.c: 15:     SSPCON2=0
      +                          x00;
  5172  0B79  0191               	clrf	17	;volatile
  5173                           
  5174                           ;i2c.c: 16:     SSPSTAT=0x00;
  5175  0B7A  0194               	clrf	20	;volatile
  5176  0B7B                     l2856:
  5177                           
  5178                           ;i2c.c: 18:     SSPCON |= i2c_config->Mode;
  5179  0B7B  082E               	movf	I2C_Init@i2c_config^(0+128),w
  5180  0B7C  0084               	movwf	4
  5181  0B7D  1383               	bcf	3,7	;select IRP bank0
  5182  0B7E  0800               	movf	0,w
  5183  0B7F  00FF               	movwf	btemp+1
  5184  0B80  087F               	movf	btemp+1,w
  5185  0B81  1283               	bcf	3,5	;RP0=0, select bank0
  5186  0B82  1303               	bcf	3,6	;RP1=0, select bank0
  5187  0B83  0494               	iorwf	20,f	;volatile
  5188  0B84                     l2858:
  5189                           
  5190                           ;i2c.c: 22:     SSPADD = (((4000000/4)/i2c_config->BaudRate) - 1);
  5191  0B84  1683               	bsf	3,5	;RP0=1, select bank1
  5192  0B85  1303               	bcf	3,6	;RP1=0, select bank1
  5193  0B86  0A2E               	incf	I2C_Init@i2c_config^(0+128),w
  5194  0B87  0084               	movwf	4
  5195  0B88  0800               	movf	0,w
  5196  0B89  00A0               	movwf	___lldiv@divisor^(0+128)
  5197  0B8A  0A84               	incf	4,f
  5198  0B8B  0800               	movf	0,w
  5199  0B8C  00A1               	movwf	(___lldiv@divisor+1)^(0+128)
  5200  0B8D  0A84               	incf	4,f
  5201  0B8E  0800               	movf	0,w
  5202  0B8F  00A2               	movwf	(___lldiv@divisor+2)^(0+128)
  5203  0B90  0A84               	incf	4,f
  5204  0B91  0800               	movf	0,w
  5205  0B92  00A3               	movwf	(___lldiv@divisor+3)^(0+128)
  5206  0B93  3000               	movlw	0
  5207  0B94  00A7               	movwf	(___lldiv@dividend+3)^(0+128)
  5208  0B95  300F               	movlw	15
  5209  0B96  00A6               	movwf	(___lldiv@dividend+2)^(0+128)
  5210  0B97  3042               	movlw	66
  5211  0B98  00A5               	movwf	(___lldiv@dividend+1)^(0+128)
  5212  0B99  3040               	movlw	64
  5213  0B9A  00A4               	movwf	___lldiv@dividend^(0+128)
  5214  0B9B  120A  158A  25CA  120A  158A  	fcall	___lldiv
  5215  0BA0  1683               	bsf	3,5	;RP0=1, select bank1
  5216  0BA1  1303               	bcf	3,6	;RP1=0, select bank1
  5217  0BA2  0820               	movf	?___lldiv^(0+128),w
  5218  0BA3  3EFF               	addlw	255
  5219  0BA4  0093               	movwf	19	;volatile
  5220  0BA5                     l2860:
  5221                           
  5222                           ;i2c.c: 32:     SSPEN=1;
  5223  0BA5  1283               	bcf	3,5	;RP0=0, select bank0
  5224  0BA6  1303               	bcf	3,6	;RP1=0, select bank0
  5225  0BA7  1694               	bsf	20,5	;volatile
  5226  0BA8                     l2862:
  5227                           
  5228                           ;i2c.c: 38:     (1u)? (TRISC |= (1<<4)) : (TRISC &= ~(1<<4));
  5229  0BA8  3080               	movlw	128
  5230  0BA9  1683               	bsf	3,5	;RP0=1, select bank1
  5231  0BAA  1303               	bcf	3,6	;RP1=0, select bank1
  5232  0BAB  0094               	movwf	20	;volatile
  5233  0BAC                     l2864:
  5234  0BAC  1607               	bsf	7,4	;volatile
  5235  0BAD                     l2868:
  5236  0BAD  1587               	bsf	7,3	;volatile
  5237  0BAE                     l2872:
  5238                           
  5239                           ;i2c.c: 44:     if(i2c_config->operationMode==INTERRUPT)
  5240  0BAE  082E               	movf	I2C_Init@i2c_config^(0+128),w
  5241  0BAF  3E05               	addlw	5
  5242  0BB0  0084               	movwf	4
  5243  0BB1  1383               	bcf	3,7	;select IRP bank0
  5244  0BB2  0300               	decf	0,w
  5245  0BB3  1D03               	btfss	3,2
  5246  0BB4  2BB6               	goto	u2321
  5247  0BB5  2BB7               	goto	u2320
  5248  0BB6                     u2321:
  5249  0BB6  2BBF               	goto	l88
  5250  0BB7                     u2320:
  5251  0BB7                     l2874:
  5252                           
  5253                           ;i2c.c: 45:     {;i2c.c: 46:           GIE = 1;
  5254  0BB7  178B               	bsf	11,7	;volatile
  5255                           
  5256                           ;i2c.c: 47:           PEIE = 1;
  5257  0BB8  170B               	bsf	11,6	;volatile
  5258                           
  5259                           ;i2c.c: 48:           SSPIF = 0;
  5260  0BB9  1283               	bcf	3,5	;RP0=0, select bank0
  5261  0BBA  1303               	bcf	3,6	;RP1=0, select bank0
  5262  0BBB  118C               	bcf	12,3	;volatile
  5263                           
  5264                           ;i2c.c: 49:           SSPIE = 1;
  5265  0BBC  1683               	bsf	3,5	;RP0=1, select bank1
  5266  0BBD  1303               	bcf	3,6	;RP1=0, select bank1
  5267  0BBE  158C               	bsf	12,3	;volatile
  5268  0BBF                     l88:
  5269  0BBF  0008               	return
  5270  0BC0                     __end_of_I2C_Init:
  5271                           
  5272                           	psect	text28
  5273  0DCA                     __ptext28:	
  5274 ;; *************** function ___lldiv *****************
  5275 ;; Defined at:
  5276 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;  divisor         4    0[BANK1 ] unsigned long 
  5279 ;;  dividend        4    4[BANK1 ] unsigned long 
  5280 ;; Auto vars:     Size  Location     Type
  5281 ;;  quotient        4    9[BANK1 ] unsigned long 
  5282 ;;  counter         1   13[BANK1 ] unsigned char 
  5283 ;; Return value:  Size  Location     Type
  5284 ;;                  4    0[BANK1 ] unsigned long 
  5285 ;; Registers used:
  5286 ;;		wreg, status,2, status,0, btemp+1
  5287 ;; Tracked objects:
  5288 ;;		On entry : 0/0
  5289 ;;		On exit  : 0/0
  5290 ;;		Unchanged: 0/0
  5291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5292 ;;      Params:         0       0       8       0       0
  5293 ;;      Locals:         0       0       5       0       0
  5294 ;;      Temps:          0       0       1       0       0
  5295 ;;      Totals:         0       0      14       0       0
  5296 ;;Total ram usage:       14 bytes
  5297 ;; Hardware stack levels used:    1
  5298 ;; Hardware stack levels required when called:    3
  5299 ;; This function calls:
  5300 ;;		Nothing
  5301 ;; This function is called by:
  5302 ;;		_I2C_Init
  5303 ;; This function uses a non-reentrant model
  5304 ;;
  5305                           
  5306                           
  5307                           ;psect for function ___lldiv
  5308  0DCA                     ___lldiv:
  5309  0DCA                     l2736:	
  5310                           ;incstack = 0
  5311                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  5312                           
  5313  0DCA  3000               	movlw	0
  5314  0DCB  1683               	bsf	3,5	;RP0=1, select bank1
  5315  0DCC  1303               	bcf	3,6	;RP1=0, select bank1
  5316  0DCD  00AC               	movwf	(___lldiv@quotient+3)^(0+128)
  5317  0DCE  3000               	movlw	0
  5318  0DCF  00AB               	movwf	(___lldiv@quotient+2)^(0+128)
  5319  0DD0  3000               	movlw	0
  5320  0DD1  00AA               	movwf	(___lldiv@quotient+1)^(0+128)
  5321  0DD2  3000               	movlw	0
  5322  0DD3  00A9               	movwf	___lldiv@quotient^(0+128)
  5323  0DD4  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  5324  0DD5  0422               	iorwf	(___lldiv@divisor+2)^(0+128),w
  5325  0DD6  0421               	iorwf	(___lldiv@divisor+1)^(0+128),w
  5326  0DD7  0420               	iorwf	___lldiv@divisor^(0+128),w
  5327  0DD8  1903               	skipnz
  5328  0DD9  2DDB               	goto	u2021
  5329  0DDA  2DDC               	goto	u2020
  5330  0DDB                     u2021:
  5331  0DDB  2E29               	goto	l2758
  5332  0DDC                     u2020:
  5333  0DDC                     l2738:
  5334  0DDC  01AD               	clrf	___lldiv@counter^(0+128)
  5335  0DDD  0AAD               	incf	___lldiv@counter^(0+128),f
  5336  0DDE  2DEC               	goto	l2744
  5337  0DDF                     l2740:
  5338  0DDF  3001               	movlw	1
  5339  0DE0  00A8               	movwf	??___lldiv^(0+128)
  5340  0DE1                     u2035:
  5341  0DE1  1003               	clrc
  5342  0DE2  0DA0               	rlf	___lldiv@divisor^(0+128),f
  5343  0DE3  0DA1               	rlf	(___lldiv@divisor+1)^(0+128),f
  5344  0DE4  0DA2               	rlf	(___lldiv@divisor+2)^(0+128),f
  5345  0DE5  0DA3               	rlf	(___lldiv@divisor+3)^(0+128),f
  5346  0DE6  0BA8               	decfsz	??___lldiv^(0+128),f
  5347  0DE7  2DE1               	goto	u2035
  5348  0DE8                     l2742:
  5349  0DE8  3001               	movlw	1
  5350  0DE9  00FF               	movwf	btemp+1
  5351  0DEA  087F               	movf	btemp+1,w
  5352  0DEB  07AD               	addwf	___lldiv@counter^(0+128),f
  5353  0DEC                     l2744:
  5354  0DEC  1FA3               	btfss	(___lldiv@divisor+3)^(0+128),7
  5355  0DED  2DEF               	goto	u2041
  5356  0DEE  2DF0               	goto	u2040
  5357  0DEF                     u2041:
  5358  0DEF  2DDF               	goto	l2740
  5359  0DF0                     u2040:
  5360  0DF0                     l2746:
  5361  0DF0  3001               	movlw	1
  5362  0DF1  00A8               	movwf	??___lldiv^(0+128)
  5363  0DF2                     u2055:
  5364  0DF2  1003               	clrc
  5365  0DF3  0DA9               	rlf	___lldiv@quotient^(0+128),f
  5366  0DF4  0DAA               	rlf	(___lldiv@quotient+1)^(0+128),f
  5367  0DF5  0DAB               	rlf	(___lldiv@quotient+2)^(0+128),f
  5368  0DF6  0DAC               	rlf	(___lldiv@quotient+3)^(0+128),f
  5369  0DF7  0BA8               	decfsz	??___lldiv^(0+128),f
  5370  0DF8  2DF2               	goto	u2055
  5371  0DF9                     l2748:
  5372  0DF9  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  5373  0DFA  0227               	subwf	(___lldiv@dividend+3)^(0+128),w
  5374  0DFB  1D03               	skipz
  5375  0DFC  2E07               	goto	u2065
  5376  0DFD  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  5377  0DFE  0226               	subwf	(___lldiv@dividend+2)^(0+128),w
  5378  0DFF  1D03               	skipz
  5379  0E00  2E07               	goto	u2065
  5380  0E01  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  5381  0E02  0225               	subwf	(___lldiv@dividend+1)^(0+128),w
  5382  0E03  1D03               	skipz
  5383  0E04  2E07               	goto	u2065
  5384  0E05  0820               	movf	___lldiv@divisor^(0+128),w
  5385  0E06  0224               	subwf	___lldiv@dividend^(0+128),w
  5386  0E07                     u2065:
  5387  0E07  1C03               	skipc
  5388  0E08  2E0A               	goto	u2061
  5389  0E09  2E0B               	goto	u2060
  5390  0E0A                     u2061:
  5391  0E0A  2E1A               	goto	l2754
  5392  0E0B                     u2060:
  5393  0E0B                     l2750:
  5394  0E0B  0820               	movf	___lldiv@divisor^(0+128),w
  5395  0E0C  02A4               	subwf	___lldiv@dividend^(0+128),f
  5396  0E0D  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  5397  0E0E  1C03               	skipc
  5398  0E0F  0F21               	incfsz	(___lldiv@divisor+1)^(0+128),w
  5399  0E10  02A5               	subwf	(___lldiv@dividend+1)^(0+128),f
  5400  0E11  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  5401  0E12  1C03               	skipc
  5402  0E13  0F22               	incfsz	(___lldiv@divisor+2)^(0+128),w
  5403  0E14  02A6               	subwf	(___lldiv@dividend+2)^(0+128),f
  5404  0E15  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  5405  0E16  1C03               	skipc
  5406  0E17  0F23               	incfsz	(___lldiv@divisor+3)^(0+128),w
  5407  0E18  02A7               	subwf	(___lldiv@dividend+3)^(0+128),f
  5408  0E19                     l2752:
  5409  0E19  1429               	bsf	___lldiv@quotient^(0+128),0
  5410  0E1A                     l2754:
  5411  0E1A  3001               	movlw	1
  5412  0E1B                     u2075:
  5413  0E1B  1003               	clrc
  5414  0E1C  0CA3               	rrf	(___lldiv@divisor+3)^(0+128),f
  5415  0E1D  0CA2               	rrf	(___lldiv@divisor+2)^(0+128),f
  5416  0E1E  0CA1               	rrf	(___lldiv@divisor+1)^(0+128),f
  5417  0E1F  0CA0               	rrf	___lldiv@divisor^(0+128),f
  5418  0E20  3EFF               	addlw	-1
  5419  0E21  1D03               	skipz
  5420  0E22  2E1B               	goto	u2075
  5421  0E23                     l2756:
  5422  0E23  3001               	movlw	1
  5423  0E24  02AD               	subwf	___lldiv@counter^(0+128),f
  5424  0E25  1D03               	btfss	3,2
  5425  0E26  2E28               	goto	u2081
  5426  0E27  2E29               	goto	u2080
  5427  0E28                     u2081:
  5428  0E28  2DF0               	goto	l2746
  5429  0E29                     u2080:
  5430  0E29                     l2758:
  5431  0E29  082C               	movf	(___lldiv@quotient+3)^(0+128),w
  5432  0E2A  00A3               	movwf	(?___lldiv+3)^(0+128)
  5433  0E2B  082B               	movf	(___lldiv@quotient+2)^(0+128),w
  5434  0E2C  00A2               	movwf	(?___lldiv+2)^(0+128)
  5435  0E2D  082A               	movf	(___lldiv@quotient+1)^(0+128),w
  5436  0E2E  00A1               	movwf	(?___lldiv+1)^(0+128)
  5437  0E2F  0829               	movf	___lldiv@quotient^(0+128),w
  5438  0E30  00A0               	movwf	?___lldiv^(0+128)
  5439  0E31                     l788:
  5440  0E31  0008               	return
  5441  0E32                     __end_of___lldiv:
  5442                           
  5443                           	psect	text29
  5444  08EC                     __ptext29:	
  5445 ;; *************** function _EWH_EEPROM_Init *****************
  5446 ;; Defined at:
  5447 ;;		line 257 in file "EWH.c"
  5448 ;; Parameters:    Size  Location     Type
  5449 ;;		None
  5450 ;; Auto vars:     Size  Location     Type
  5451 ;;		None
  5452 ;; Return value:  Size  Location     Type
  5453 ;;                  1    wreg      void 
  5454 ;; Registers used:
  5455 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5456 ;; Tracked objects:
  5457 ;;		On entry : 0/0
  5458 ;;		On exit  : 0/0
  5459 ;;		Unchanged: 0/0
  5460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5461 ;;      Params:         0       0       0       0       0
  5462 ;;      Locals:         0       0       0       0       0
  5463 ;;      Temps:          0       0       0       0       0
  5464 ;;      Totals:         0       0       0       0       0
  5465 ;;Total ram usage:        0 bytes
  5466 ;; Hardware stack levels used:    1
  5467 ;; Hardware stack levels required when called:    6
  5468 ;; This function calls:
  5469 ;;		_EEPROM_WriteByte
  5470 ;; This function is called by:
  5471 ;;		_EWH_Init
  5472 ;; This function uses a non-reentrant model
  5473 ;;
  5474                           
  5475                           
  5476                           ;psect for function _EWH_EEPROM_Init
  5477  08EC                     _EWH_EEPROM_Init:
  5478  08EC                     l3040:	
  5479                           ;incstack = 0
  5480                           ; Regs used in _EWH_EEPROM_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5481                           
  5482                           
  5483                           ;EWH.c: 259:     EEPROM_WriteByte(0x0020,60);
  5484  08EC  3020               	movlw	32
  5485  08ED  1683               	bsf	3,5	;RP0=1, select bank1
  5486  08EE  1303               	bcf	3,6	;RP1=0, select bank1
  5487  08EF  00A1               	movwf	EEPROM_WriteByte@address^(0+128)
  5488  08F0  3000               	movlw	0
  5489  08F1  00A2               	movwf	(EEPROM_WriteByte@address^(0+128)+1)
  5490  08F2  303C               	movlw	60
  5491  08F3  00FF               	movwf	btemp+1
  5492  08F4  087F               	movf	btemp+1,w
  5493  08F5  00A3               	movwf	EEPROM_WriteByte@data^(0+128)
  5494  08F6  120A  158A  2275  120A  158A  	fcall	_EEPROM_WriteByte
  5495  08FB                     l555:
  5496  08FB  0008               	return
  5497  08FC                     __end_of_EWH_EEPROM_Init:
  5498                           
  5499                           	psect	text30
  5500  0A75                     __ptext30:	
  5501 ;; *************** function _EEPROM_WriteByte *****************
  5502 ;; Defined at:
  5503 ;;		line 4 in file "EEPROM.c"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;  address         2    1[BANK1 ] unsigned short 
  5506 ;;  data            1    3[BANK1 ] unsigned char 
  5507 ;; Auto vars:     Size  Location     Type
  5508 ;;		None
  5509 ;; Return value:  Size  Location     Type
  5510 ;;                  1    wreg      void 
  5511 ;; Registers used:
  5512 ;;		wreg, status,2, status,0, pclath, cstack
  5513 ;; Tracked objects:
  5514 ;;		On entry : 0/0
  5515 ;;		On exit  : 0/0
  5516 ;;		Unchanged: 0/0
  5517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5518 ;;      Params:         0       0       3       0       0
  5519 ;;      Locals:         0       0       0       0       0
  5520 ;;      Temps:          0       0       2       0       0
  5521 ;;      Totals:         0       0       5       0       0
  5522 ;;Total ram usage:        5 bytes
  5523 ;; Hardware stack levels used:    1
  5524 ;; Hardware stack levels required when called:    5
  5525 ;; This function calls:
  5526 ;;		_I2C_Master_Send_RepeatedStart
  5527 ;;		_I2C_Master_Send_Start
  5528 ;;		_I2C_Master_Send_Stop
  5529 ;;		_I2C_Master_WriteByte
  5530 ;; This function is called by:
  5531 ;;		_EWH_EEPROM_Init
  5532 ;;		_EWH_EEPROM_Update
  5533 ;; This function uses a non-reentrant model
  5534 ;;
  5535                           
  5536                           
  5537                           ;psect for function _EEPROM_WriteByte
  5538  0A75                     _EEPROM_WriteByte:
  5539  0A75                     l2702:	
  5540                           ;incstack = 0
  5541                           ; Regs used in _EEPROM_WriteByte: [wreg+status,2+status,0+pclath+cstack]
  5542                           
  5543                           
  5544                           ;EEPROM.c: 4: void EEPROM_WriteByte(uint16_t address , uint8_t data);EEPROM.c: 5: {;EEPR
      +                          OM.c: 6:   I2C_Master_Send_Start();
  5545  0A75  120A  158A  2082  120A  158A  	fcall	_I2C_Master_Send_Start
  5546                           
  5547                           ;EEPROM.c: 9:   while(I2C_Master_WriteByte(0xA0 | ((address & 0x0700)>>7)) )
  5548  0A7A  2A80               	goto	l13
  5549  0A7B                     l2704:
  5550                           
  5551                           ;EEPROM.c: 10:         I2C_Master_Send_RepeatedStart();
  5552  0A7B  120A  158A  2079  120A  158A  	fcall	_I2C_Master_Send_RepeatedStart
  5553  0A80                     l13:
  5554                           
  5555                           ;EEPROM.c: 9:   while(I2C_Master_WriteByte(0xA0 | ((address & 0x0700)>>7)) )
  5556  0A80  1683               	bsf	3,5	;RP0=1, select bank1
  5557  0A81  1303               	bcf	3,6	;RP1=0, select bank1
  5558  0A82  0822               	movf	(EEPROM_WriteByte@address+1)^(0+128),w
  5559  0A83  00A5               	movwf	(??_EEPROM_WriteByte^(0+128)+1)
  5560  0A84  0821               	movf	EEPROM_WriteByte@address^(0+128),w
  5561  0A85  00A4               	movwf	??_EEPROM_WriteByte^(0+128)
  5562  0A86  3007               	movlw	7
  5563  0A87                     u1965:
  5564  0A87  1003               	clrc
  5565  0A88  0CA5               	rrf	(??_EEPROM_WriteByte^(0+128)+1),f
  5566  0A89  0CA4               	rrf	??_EEPROM_WriteByte^(0+128),f
  5567  0A8A  3EFF               	addlw	-1
  5568  0A8B  1D03               	skipz
  5569  0A8C  2A87               	goto	u1965
  5570  0A8D  0824               	movf	??_EEPROM_WriteByte^(0+128),w
  5571  0A8E  390E               	andlw	14
  5572  0A8F  38A0               	iorlw	160
  5573  0A90  120A  158A  216A  120A  158A  	fcall	_I2C_Master_WriteByte
  5574  0A95  3A00               	xorlw	0
  5575  0A96  1D03               	skipz
  5576  0A97  2A99               	goto	u1971
  5577  0A98  2A9A               	goto	u1970
  5578  0A99                     u1971:
  5579  0A99  2A7B               	goto	l2704
  5580  0A9A                     u1970:
  5581  0A9A                     l2706:
  5582                           
  5583                           ;EEPROM.c: 13:   I2C_Master_WriteByte((uint8_t)address);
  5584  0A9A  1683               	bsf	3,5	;RP0=1, select bank1
  5585  0A9B  1303               	bcf	3,6	;RP1=0, select bank1
  5586  0A9C  0821               	movf	EEPROM_WriteByte@address^(0+128),w
  5587  0A9D  120A  158A  216A  120A  158A  	fcall	_I2C_Master_WriteByte
  5588                           
  5589                           ;EEPROM.c: 14:   I2C_Master_WriteByte(data);
  5590  0AA2  1683               	bsf	3,5	;RP0=1, select bank1
  5591  0AA3  1303               	bcf	3,6	;RP1=0, select bank1
  5592  0AA4  0823               	movf	EEPROM_WriteByte@data^(0+128),w
  5593  0AA5  120A  158A  216A  120A  158A  	fcall	_I2C_Master_WriteByte
  5594                           
  5595                           ;EEPROM.c: 15:   I2C_Master_Send_Stop();
  5596  0AAA  120A  158A  208B  120A  158A  	fcall	_I2C_Master_Send_Stop
  5597  0AAF                     l16:
  5598  0AAF  0008               	return
  5599  0AB0                     __end_of_EEPROM_WriteByte:
  5600                           
  5601                           	psect	text31
  5602  096A                     __ptext31:	
  5603 ;; *************** function _I2C_Master_WriteByte *****************
  5604 ;; Defined at:
  5605 ;;		line 95 in file "i2c.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;  Data            1    wreg     unsigned char 
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;  Data            1    0[BANK1 ] unsigned char 
  5610 ;; Return value:  Size  Location     Type
  5611 ;;                  1    wreg      unsigned char 
  5612 ;; Registers used:
  5613 ;;		wreg, status,2, status,0, pclath, cstack
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5619 ;;      Params:         0       0       0       0       0
  5620 ;;      Locals:         0       0       1       0       0
  5621 ;;      Temps:          0       0       0       0       0
  5622 ;;      Totals:         0       0       1       0       0
  5623 ;;Total ram usage:        1 bytes
  5624 ;; Hardware stack levels used:    1
  5625 ;; Hardware stack levels required when called:    4
  5626 ;; This function calls:
  5627 ;;		_I2C_Wait_IDLE
  5628 ;; This function is called by:
  5629 ;;		_EEPROM_WriteByte
  5630 ;;		_EEPROM_ReadByte
  5631 ;;		_EEPROM_WritePage
  5632 ;;		_EEPROM_ReadPage
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           
  5637                           ;psect for function _I2C_Master_WriteByte
  5638  096A                     _I2C_Master_WriteByte:
  5639                           
  5640                           ;incstack = 0
  5641                           ; Regs used in _I2C_Master_WriteByte: [wreg+status,2+status,0+pclath+cstack]
  5642                           ;I2C_Master_WriteByte@Data stored from wreg
  5643  096A  1683               	bsf	3,5	;RP0=1, select bank1
  5644  096B  1303               	bcf	3,6	;RP1=0, select bank1
  5645  096C  00A0               	movwf	I2C_Master_WriteByte@Data^(0+128)
  5646  096D                     l2620:
  5647                           
  5648                           ;i2c.c: 95: uint8_t I2C_Master_WriteByte(uint8_t Data);i2c.c: 96: {;i2c.c: 98:     I2C_W
      +                          ait_IDLE();
  5649  096D  120A  158A  20D2  120A  158A  	fcall	_I2C_Wait_IDLE
  5650  0972                     l2622:
  5651                           
  5652                           ;i2c.c: 99:     SSPBUF=Data;
  5653  0972  1683               	bsf	3,5	;RP0=1, select bank1
  5654  0973  1303               	bcf	3,6	;RP1=0, select bank1
  5655  0974  0820               	movf	I2C_Master_WriteByte@Data^(0+128),w
  5656  0975  1283               	bcf	3,5	;RP0=0, select bank0
  5657  0976  1303               	bcf	3,6	;RP1=0, select bank0
  5658  0977  0093               	movwf	19	;volatile
  5659  0978                     l112:	
  5660                           ;i2c.c: 100:     while(!SSPIF);
  5661                           
  5662  0978  1D8C               	btfss	12,3	;volatile
  5663  0979  297B               	goto	u1901
  5664  097A  297C               	goto	u1900
  5665  097B                     u1901:
  5666  097B  2978               	goto	l112
  5667  097C                     u1900:
  5668  097C                     l114:
  5669                           
  5670                           ;i2c.c: 101:     SSPIF=0;
  5671  097C  118C               	bcf	12,3	;volatile
  5672  097D                     l2624:
  5673                           
  5674                           ;i2c.c: 102:     I2C_Wait_IDLE();
  5675  097D  120A  158A  20D2  120A  158A  	fcall	_I2C_Wait_IDLE
  5676  0982                     l2626:
  5677                           
  5678                           ;i2c.c: 103:     return ACKSTAT;
  5679  0982  3000               	movlw	0
  5680  0983  1683               	bsf	3,5	;RP0=1, select bank1
  5681  0984  1303               	bcf	3,6	;RP1=0, select bank1
  5682  0985  1B11               	btfsc	17,6	;volatile
  5683  0986  3001               	movlw	1
  5684  0987                     l115:
  5685  0987  0008               	return
  5686  0988                     __end_of_I2C_Master_WriteByte:
  5687                           
  5688                           	psect	text32
  5689  088B                     __ptext32:	
  5690 ;; *************** function _I2C_Master_Send_Stop *****************
  5691 ;; Defined at:
  5692 ;;		line 67 in file "i2c.c"
  5693 ;; Parameters:    Size  Location     Type
  5694 ;;		None
  5695 ;; Auto vars:     Size  Location     Type
  5696 ;;		None
  5697 ;; Return value:  Size  Location     Type
  5698 ;;                  1    wreg      void 
  5699 ;; Registers used:
  5700 ;;		wreg, status,2, status,0, pclath, cstack
  5701 ;; Tracked objects:
  5702 ;;		On entry : 0/0
  5703 ;;		On exit  : 0/0
  5704 ;;		Unchanged: 0/0
  5705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5706 ;;      Params:         0       0       0       0       0
  5707 ;;      Locals:         0       0       0       0       0
  5708 ;;      Temps:          0       0       0       0       0
  5709 ;;      Totals:         0       0       0       0       0
  5710 ;;Total ram usage:        0 bytes
  5711 ;; Hardware stack levels used:    1
  5712 ;; Hardware stack levels required when called:    4
  5713 ;; This function calls:
  5714 ;;		_I2C_Wait_IDLE
  5715 ;; This function is called by:
  5716 ;;		_EEPROM_WriteByte
  5717 ;;		_EEPROM_ReadByte
  5718 ;;		_EEPROM_WritePage
  5719 ;;		_EEPROM_ReadPage
  5720 ;; This function uses a non-reentrant model
  5721 ;;
  5722                           
  5723                           
  5724                           ;psect for function _I2C_Master_Send_Stop
  5725  088B                     _I2C_Master_Send_Stop:
  5726  088B                     l2630:	
  5727                           ;incstack = 0
  5728                           ; Regs used in _I2C_Master_Send_Stop: [wreg+status,2+status,0+pclath+cstack]
  5729                           
  5730                           
  5731                           ;i2c.c: 70:     I2C_Wait_IDLE();
  5732  088B  120A  158A  20D2  120A  158A  	fcall	_I2C_Wait_IDLE
  5733  0890                     l2632:
  5734                           
  5735                           ;i2c.c: 71:     PEN=1 ;
  5736  0890  1683               	bsf	3,5	;RP0=1, select bank1
  5737  0891  1303               	bcf	3,6	;RP1=0, select bank1
  5738  0892  1511               	bsf	17,2	;volatile
  5739  0893                     l100:
  5740  0893  0008               	return
  5741  0894                     __end_of_I2C_Master_Send_Stop:
  5742                           
  5743                           	psect	text33
  5744  0882                     __ptext33:	
  5745 ;; *************** function _I2C_Master_Send_Start *****************
  5746 ;; Defined at:
  5747 ;;		line 61 in file "i2c.c"
  5748 ;; Parameters:    Size  Location     Type
  5749 ;;		None
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;		None
  5752 ;; Return value:  Size  Location     Type
  5753 ;;                  1    wreg      void 
  5754 ;; Registers used:
  5755 ;;		wreg, status,2, status,0, pclath, cstack
  5756 ;; Tracked objects:
  5757 ;;		On entry : 0/0
  5758 ;;		On exit  : 0/0
  5759 ;;		Unchanged: 0/0
  5760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5761 ;;      Params:         0       0       0       0       0
  5762 ;;      Locals:         0       0       0       0       0
  5763 ;;      Temps:          0       0       0       0       0
  5764 ;;      Totals:         0       0       0       0       0
  5765 ;;Total ram usage:        0 bytes
  5766 ;; Hardware stack levels used:    1
  5767 ;; Hardware stack levels required when called:    4
  5768 ;; This function calls:
  5769 ;;		_I2C_Wait_IDLE
  5770 ;; This function is called by:
  5771 ;;		_EEPROM_WriteByte
  5772 ;;		_EEPROM_ReadByte
  5773 ;;		_EEPROM_WritePage
  5774 ;;		_EEPROM_ReadPage
  5775 ;; This function uses a non-reentrant model
  5776 ;;
  5777                           
  5778                           
  5779                           ;psect for function _I2C_Master_Send_Start
  5780  0882                     _I2C_Master_Send_Start:
  5781  0882                     l2612:	
  5782                           ;incstack = 0
  5783                           ; Regs used in _I2C_Master_Send_Start: [wreg+status,2+status,0+pclath+cstack]
  5784                           
  5785                           
  5786                           ;i2c.c: 64:     I2C_Wait_IDLE();
  5787  0882  120A  158A  20D2  120A  158A  	fcall	_I2C_Wait_IDLE
  5788  0887                     l2614:
  5789                           
  5790                           ;i2c.c: 65:     SEN=1 ;
  5791  0887  1683               	bsf	3,5	;RP0=1, select bank1
  5792  0888  1303               	bcf	3,6	;RP1=0, select bank1
  5793  0889  1411               	bsf	17,0	;volatile
  5794  088A                     l97:
  5795  088A  0008               	return
  5796  088B                     __end_of_I2C_Master_Send_Start:
  5797                           
  5798                           	psect	text34
  5799  0879                     __ptext34:	
  5800 ;; *************** function _I2C_Master_Send_RepeatedStart *****************
  5801 ;; Defined at:
  5802 ;;		line 73 in file "i2c.c"
  5803 ;; Parameters:    Size  Location     Type
  5804 ;;		None
  5805 ;; Auto vars:     Size  Location     Type
  5806 ;;		None
  5807 ;; Return value:  Size  Location     Type
  5808 ;;                  1    wreg      void 
  5809 ;; Registers used:
  5810 ;;		wreg, status,2, status,0, pclath, cstack
  5811 ;; Tracked objects:
  5812 ;;		On entry : 0/0
  5813 ;;		On exit  : 0/0
  5814 ;;		Unchanged: 0/0
  5815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5816 ;;      Params:         0       0       0       0       0
  5817 ;;      Locals:         0       0       0       0       0
  5818 ;;      Temps:          0       0       0       0       0
  5819 ;;      Totals:         0       0       0       0       0
  5820 ;;Total ram usage:        0 bytes
  5821 ;; Hardware stack levels used:    1
  5822 ;; Hardware stack levels required when called:    4
  5823 ;; This function calls:
  5824 ;;		_I2C_Wait_IDLE
  5825 ;; This function is called by:
  5826 ;;		_EEPROM_WriteByte
  5827 ;;		_EEPROM_ReadByte
  5828 ;;		_EEPROM_WritePage
  5829 ;;		_EEPROM_ReadPage
  5830 ;; This function uses a non-reentrant model
  5831 ;;
  5832                           
  5833                           
  5834                           ;psect for function _I2C_Master_Send_RepeatedStart
  5835  0879                     _I2C_Master_Send_RepeatedStart:
  5836  0879                     l2616:	
  5837                           ;incstack = 0
  5838                           ; Regs used in _I2C_Master_Send_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  5839                           
  5840                           
  5841                           ;i2c.c: 76:     I2C_Wait_IDLE();
  5842  0879  120A  158A  20D2  120A  158A  	fcall	_I2C_Wait_IDLE
  5843  087E                     l2618:
  5844                           
  5845                           ;i2c.c: 77:     RSEN=1 ;
  5846  087E  1683               	bsf	3,5	;RP0=1, select bank1
  5847  087F  1303               	bcf	3,6	;RP1=0, select bank1
  5848  0880  1491               	bsf	17,1	;volatile
  5849  0881                     l103:
  5850  0881  0008               	return
  5851  0882                     __end_of_I2C_Master_Send_RepeatedStart:
  5852                           
  5853                           	psect	text35
  5854  08D2                     __ptext35:	
  5855 ;; *************** function _I2C_Wait_IDLE *****************
  5856 ;; Defined at:
  5857 ;;		line 53 in file "i2c.c"
  5858 ;; Parameters:    Size  Location     Type
  5859 ;;		None
  5860 ;; Auto vars:     Size  Location     Type
  5861 ;;		None
  5862 ;; Return value:  Size  Location     Type
  5863 ;;                  1    wreg      void 
  5864 ;; Registers used:
  5865 ;;		wreg, status,2
  5866 ;; Tracked objects:
  5867 ;;		On entry : 0/0
  5868 ;;		On exit  : 0/0
  5869 ;;		Unchanged: 0/0
  5870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5871 ;;      Params:         0       0       0       0       0
  5872 ;;      Locals:         0       0       0       0       0
  5873 ;;      Temps:          0       0       0       0       0
  5874 ;;      Totals:         0       0       0       0       0
  5875 ;;Total ram usage:        0 bytes
  5876 ;; Hardware stack levels used:    1
  5877 ;; Hardware stack levels required when called:    3
  5878 ;; This function calls:
  5879 ;;		Nothing
  5880 ;; This function is called by:
  5881 ;;		_I2C_Master_Send_Start
  5882 ;;		_I2C_Master_Send_Stop
  5883 ;;		_I2C_Master_Send_RepeatedStart
  5884 ;;		_I2C_Master_Send_ACK
  5885 ;;		_I2C_Master_Send_NACK
  5886 ;;		_I2C_Master_WriteByte
  5887 ;;		_I2C_Master_ReadByte
  5888 ;; This function uses a non-reentrant model
  5889 ;;
  5890                           
  5891                           
  5892                           ;psect for function _I2C_Wait_IDLE
  5893  08D2                     _I2C_Wait_IDLE:
  5894  08D2                     l2596:	
  5895                           ;incstack = 0
  5896                           ; Regs used in _I2C_Wait_IDLE: [wreg+status,2]
  5897                           
  5898  08D2                     l91:	
  5899                           ;i2c.c: 58:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  5900                           
  5901  08D2  1683               	bsf	3,5	;RP0=1, select bank1
  5902  08D3  1303               	bcf	3,6	;RP1=0, select bank1
  5903  08D4  1914               	btfsc	20,2	;volatile
  5904  08D5  28D7               	goto	u1881
  5905  08D6  28D8               	goto	u1880
  5906  08D7                     u1881:
  5907  08D7  28D2               	goto	l91
  5908  08D8                     u1880:
  5909  08D8                     l2598:
  5910  08D8  0811               	movf	17,w	;volatile
  5911  08D9  391F               	andlw	31
  5912  08DA  1D03               	btfss	3,2
  5913  08DB  28DD               	goto	u1891
  5914  08DC  28DE               	goto	u1890
  5915  08DD                     u1891:
  5916  08DD  28D2               	goto	l91
  5917  08DE                     u1890:
  5918  08DE                     l94:
  5919  08DE  0008               	return
  5920  08DF                     __end_of_I2C_Wait_IDLE:
  5921                           
  5922                           	psect	text36
  5923  0930                     __ptext36:	
  5924 ;; *************** function _DD_Init *****************
  5925 ;; Defined at:
  5926 ;;		line 14 in file "DD.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;		None
  5929 ;; Auto vars:     Size  Location     Type
  5930 ;;		None
  5931 ;; Return value:  Size  Location     Type
  5932 ;;                  1    wreg      void 
  5933 ;; Registers used:
  5934 ;;		wreg, status,2, status,0, btemp+1
  5935 ;; Tracked objects:
  5936 ;;		On entry : 0/0
  5937 ;;		On exit  : 0/0
  5938 ;;		Unchanged: 0/0
  5939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5940 ;;      Params:         0       0       0       0       0
  5941 ;;      Locals:         0       0       0       0       0
  5942 ;;      Temps:          0       0       0       0       0
  5943 ;;      Totals:         0       0       0       0       0
  5944 ;;Total ram usage:        0 bytes
  5945 ;; Hardware stack levels used:    1
  5946 ;; Hardware stack levels required when called:    3
  5947 ;; This function calls:
  5948 ;;		Nothing
  5949 ;; This function is called by:
  5950 ;;		_EWH_Init
  5951 ;; This function uses a non-reentrant model
  5952 ;;
  5953                           
  5954                           
  5955                           ;psect for function _DD_Init
  5956  0930                     _DD_Init:
  5957  0930                     l2876:	
  5958                           ;incstack = 0
  5959                           ; Regs used in _DD_Init: [wreg+status,2+status,0+btemp+1]
  5960                           
  5961  0930                     l2880:	
  5962                           ;DD.c: 17:     (0u)? (TRISC |= (1<<5)) : (TRISC &= ~(1<<5));
  5963                           
  5964  0930  30DF               	movlw	223
  5965  0931  00FF               	movwf	btemp+1
  5966  0932  087F               	movf	btemp+1,w
  5967  0933  1683               	bsf	3,5	;RP0=1, select bank1
  5968  0934  1303               	bcf	3,6	;RP1=0, select bank1
  5969  0935  0587               	andwf	7,f	;volatile
  5970  0936                     l2884:
  5971  0936  30FB               	movlw	251
  5972  0937  00FF               	movwf	btemp+1
  5973  0938  087F               	movf	btemp+1,w
  5974  0939  0587               	andwf	7,f	;volatile
  5975  093A                     l2888:
  5976  093A  307F               	movlw	127
  5977  093B  00FF               	movwf	btemp+1
  5978  093C  087F               	movf	btemp+1,w
  5979  093D  0586               	andwf	6,f	;volatile
  5980  093E                     l2892:
  5981  093E  30DF               	movlw	223
  5982  093F  00FF               	movwf	btemp+1
  5983  0940  087F               	movf	btemp+1,w
  5984  0941  1283               	bcf	3,5	;RP0=0, select bank0
  5985  0942  1303               	bcf	3,6	;RP1=0, select bank0
  5986  0943  0587               	andwf	7,f	;volatile
  5987  0944                     l2896:
  5988  0944  30FB               	movlw	251
  5989  0945  00FF               	movwf	btemp+1
  5990  0946  087F               	movf	btemp+1,w
  5991  0947  0587               	andwf	7,f	;volatile
  5992  0948                     l2900:
  5993  0948  307F               	movlw	127
  5994  0949  00FF               	movwf	btemp+1
  5995  094A  087F               	movf	btemp+1,w
  5996  094B  0586               	andwf	6,f	;volatile
  5997  094C                     l241:
  5998  094C  0008               	return
  5999  094D                     __end_of_DD_Init:
  6000                           
  6001                           	psect	text37
  6002  0F82                     __ptext37:	
  6003 ;; *************** function _ADC_Init *****************
  6004 ;; Defined at:
  6005 ;;		line 16 in file "adc.c"
  6006 ;; Parameters:    Size  Location     Type
  6007 ;;  config          1    wreg     PTR struct .
  6008 ;;		 -> EWH_Init@adc_config(4), 
  6009 ;; Auto vars:     Size  Location     Type
  6010 ;;  config          1    2[BANK1 ] PTR struct .
  6011 ;;		 -> EWH_Init@adc_config(4), 
  6012 ;; Return value:  Size  Location     Type
  6013 ;;                  1    wreg      void 
  6014 ;; Registers used:
  6015 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  6016 ;; Tracked objects:
  6017 ;;		On entry : 0/0
  6018 ;;		On exit  : 0/0
  6019 ;;		Unchanged: 0/0
  6020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6021 ;;      Params:         0       0       0       0       0
  6022 ;;      Locals:         0       0       1       0       0
  6023 ;;      Temps:          0       0       2       0       0
  6024 ;;      Totals:         0       0       3       0       0
  6025 ;;Total ram usage:        3 bytes
  6026 ;; Hardware stack levels used:    1
  6027 ;; Hardware stack levels required when called:    3
  6028 ;; This function calls:
  6029 ;;		Nothing
  6030 ;; This function is called by:
  6031 ;;		_EWH_Init
  6032 ;; This function uses a non-reentrant model
  6033 ;;
  6034                           
  6035                           
  6036                           ;psect for function _ADC_Init
  6037  0F82                     _ADC_Init:
  6038                           
  6039                           ;incstack = 0
  6040                           ; Regs used in _ADC_Init: [wreg-fsr0h+status,2+status,0+btemp+1]
  6041                           ;ADC_Init@config stored from wreg
  6042  0F82  1683               	bsf	3,5	;RP0=1, select bank1
  6043  0F83  1303               	bcf	3,6	;RP1=0, select bank1
  6044  0F84  00A2               	movwf	ADC_Init@config^(0+128)
  6045  0F85                     l2938:
  6046                           
  6047                           ;adc.c: 16: void ADC_Init(tADC_Config* config);adc.c: 17: {;adc.c: 19:     ADON=1;
  6048  0F85  1283               	bcf	3,5	;RP0=0, select bank0
  6049  0F86  1303               	bcf	3,6	;RP1=0, select bank0
  6050  0F87  141F               	bsf	31,0	;volatile
  6051                           
  6052                           ;adc.c: 21:     switch(config->clk)
  6053  0F88  2FB7               	goto	l2948
  6054  0F89                     l2940:
  6055                           
  6056                           ;adc.c: 24:             ADCON0 &= ~(0xC0);
  6057  0F89  303F               	movlw	63
  6058  0F8A  00FF               	movwf	btemp+1
  6059  0F8B  087F               	movf	btemp+1,w
  6060  0F8C  1283               	bcf	3,5	;RP0=0, select bank0
  6061  0F8D  1303               	bcf	3,6	;RP1=0, select bank0
  6062  0F8E  059F               	andwf	31,f	;volatile
  6063                           
  6064                           ;adc.c: 25:             break;
  6065  0F8F  2FDC               	goto	l2950
  6066  0F90                     l297:	
  6067                           ;adc.c: 26:         case FOSC_8:
  6068                           
  6069                           
  6070                           ;adc.c: 27:             ADCON0 |= (1<<6);
  6071  0F90  1283               	bcf	3,5	;RP0=0, select bank0
  6072  0F91  1303               	bcf	3,6	;RP1=0, select bank0
  6073  0F92  171F               	bsf	31,6	;volatile
  6074                           
  6075                           ;adc.c: 28:             break;
  6076  0F93  2FDC               	goto	l2950
  6077  0F94                     l298:	
  6078                           ;adc.c: 29:         case FOSC_32:
  6079                           
  6080                           
  6081                           ;adc.c: 30:             ADCON0 |= (2<<6);
  6082  0F94  1283               	bcf	3,5	;RP0=0, select bank0
  6083  0F95  1303               	bcf	3,6	;RP1=0, select bank0
  6084  0F96  179F               	bsf	31,7	;volatile
  6085                           
  6086                           ;adc.c: 31:             break;
  6087  0F97  2FDC               	goto	l2950
  6088  0F98                     l2942:
  6089                           
  6090                           ;adc.c: 33:             ADCON0 |= (3<<6);
  6091  0F98  30C0               	movlw	192
  6092  0F99  00FF               	movwf	btemp+1
  6093  0F9A  087F               	movf	btemp+1,w
  6094  0F9B  1283               	bcf	3,5	;RP0=0, select bank0
  6095  0F9C  1303               	bcf	3,6	;RP1=0, select bank0
  6096  0F9D  049F               	iorwf	31,f	;volatile
  6097                           
  6098                           ;adc.c: 34:             break;
  6099  0F9E  2FDC               	goto	l2950
  6100  0F9F                     l2944:
  6101                           
  6102                           ;adc.c: 36:             ADCON0 &= ~(0xC0);
  6103  0F9F  303F               	movlw	63
  6104  0FA0  00FF               	movwf	btemp+1
  6105  0FA1  087F               	movf	btemp+1,w
  6106  0FA2  1283               	bcf	3,5	;RP0=0, select bank0
  6107  0FA3  1303               	bcf	3,6	;RP1=0, select bank0
  6108  0FA4  059F               	andwf	31,f	;volatile
  6109  0FA5                     l2946:
  6110                           
  6111                           ;adc.c: 37:             ADCON1 |= (1<<6);
  6112  0FA5  1683               	bsf	3,5	;RP0=1, select bank1
  6113  0FA6  1303               	bcf	3,6	;RP1=0, select bank1
  6114  0FA7  171F               	bsf	31,6	;volatile
  6115                           
  6116                           ;adc.c: 38:             break;
  6117  0FA8  2FDC               	goto	l2950
  6118  0FA9                     l301:	
  6119                           ;adc.c: 39:         case FOSC_16:
  6120                           
  6121                           
  6122                           ;adc.c: 40:             ADCON0 |= (1<<6);
  6123  0FA9  1283               	bcf	3,5	;RP0=0, select bank0
  6124  0FAA  1303               	bcf	3,6	;RP1=0, select bank0
  6125  0FAB  171F               	bsf	31,6	;volatile
  6126                           
  6127                           ;adc.c: 41:             ADCON1 |= (1<<6);
  6128  0FAC  1683               	bsf	3,5	;RP0=1, select bank1
  6129  0FAD  1303               	bcf	3,6	;RP1=0, select bank1
  6130  0FAE  171F               	bsf	31,6	;volatile
  6131                           
  6132                           ;adc.c: 42:             break;
  6133  0FAF  2FDC               	goto	l2950
  6134  0FB0                     l302:	
  6135                           ;adc.c: 43:         case FOSC_64:
  6136                           
  6137                           
  6138                           ;adc.c: 44:             ADCON0 |= (2<<6);
  6139  0FB0  1283               	bcf	3,5	;RP0=0, select bank0
  6140  0FB1  1303               	bcf	3,6	;RP1=0, select bank0
  6141  0FB2  179F               	bsf	31,7	;volatile
  6142                           
  6143                           ;adc.c: 45:             ADCON1 |= (1<<6);
  6144  0FB3  1683               	bsf	3,5	;RP0=1, select bank1
  6145  0FB4  1303               	bcf	3,6	;RP1=0, select bank1
  6146  0FB5  171F               	bsf	31,6	;volatile
  6147                           
  6148                           ;adc.c: 46:             break;
  6149  0FB6  2FDC               	goto	l2950
  6150  0FB7                     l2948:
  6151  0FB7  1683               	bsf	3,5	;RP0=1, select bank1
  6152  0FB8  1303               	bcf	3,6	;RP1=0, select bank1
  6153  0FB9  0822               	movf	ADC_Init@config^(0+128),w
  6154  0FBA  3E03               	addlw	3
  6155  0FBB  0084               	movwf	4
  6156  0FBC  1383               	bcf	3,7	;select IRP bank0
  6157  0FBD  0800               	movf	0,w
  6158  0FBE  00A0               	movwf	??_ADC_Init^(0+128)
  6159  0FBF  01A1               	clrf	(??_ADC_Init^(0+128)+1)
  6160                           
  6161                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6162                           ; Switch size 1, requested type "simple"
  6163                           ; Number of cases is 1, Range of values is 0 to 0
  6164                           ; switch strategies available:
  6165                           ; Name         Instructions Cycles
  6166                           ; simple_byte            4     3 (average)
  6167                           ; direct_byte           11     8 (fixed)
  6168                           ; jumptable            260     6 (fixed)
  6169                           ;	Chosen strategy is simple_byte
  6170  0FC0  0821               	movf	(??_ADC_Init+1)^(0+128),w
  6171  0FC1  3A00               	xorlw	0	; case 0
  6172  0FC2  1903               	skipnz
  6173  0FC3  2FC5               	goto	l3932
  6174  0FC4  2F90               	goto	l297
  6175  0FC5                     l3932:
  6176                           
  6177                           ; Switch size 1, requested type "simple"
  6178                           ; Number of cases is 7, Range of values is 0 to 6
  6179                           ; switch strategies available:
  6180                           ; Name         Instructions Cycles
  6181                           ; simple_byte           22    12 (average)
  6182                           ; direct_byte           29     8 (fixed)
  6183                           ; jumptable            260     6 (fixed)
  6184                           ;	Chosen strategy is simple_byte
  6185  0FC5  0820               	movf	??_ADC_Init^(0+128),w
  6186  0FC6  3A00               	xorlw	0	; case 0
  6187  0FC7  1903               	skipnz
  6188  0FC8  2F89               	goto	l2940
  6189  0FC9  3A01               	xorlw	1	; case 1
  6190  0FCA  1903               	skipnz
  6191  0FCB  2F90               	goto	l297
  6192  0FCC  3A03               	xorlw	3	; case 2
  6193  0FCD  1903               	skipnz
  6194  0FCE  2F94               	goto	l298
  6195  0FCF  3A01               	xorlw	1	; case 3
  6196  0FD0  1903               	skipnz
  6197  0FD1  2F98               	goto	l2942
  6198  0FD2  3A07               	xorlw	7	; case 4
  6199  0FD3  1903               	skipnz
  6200  0FD4  2F9F               	goto	l2944
  6201  0FD5  3A01               	xorlw	1	; case 5
  6202  0FD6  1903               	skipnz
  6203  0FD7  2FA9               	goto	l301
  6204  0FD8  3A03               	xorlw	3	; case 6
  6205  0FD9  1903               	skipnz
  6206  0FDA  2FB0               	goto	l302
  6207  0FDB  2F90               	goto	l297
  6208  0FDC                     l2950:
  6209                           
  6210                           ;adc.c: 53:     ADCON1 |= ((config->alignment)<<7);
  6211  0FDC  1683               	bsf	3,5	;RP0=1, select bank1
  6212  0FDD  1303               	bcf	3,6	;RP1=0, select bank1
  6213  0FDE  0822               	movf	ADC_Init@config^(0+128),w
  6214  0FDF  3E02               	addlw	2
  6215  0FE0  0084               	movwf	4
  6216  0FE1  0800               	movf	0,w
  6217  0FE2  00A0               	movwf	??_ADC_Init^(0+128)
  6218  0FE3  3006               	movlw	6
  6219  0FE4                     u2365:
  6220  0FE4  1003               	clrc
  6221  0FE5  0DA0               	rlf	??_ADC_Init^(0+128),f
  6222  0FE6  3EFF               	addlw	-1
  6223  0FE7  1D03               	skipz
  6224  0FE8  2FE4               	goto	u2365
  6225  0FE9  1003               	clrc
  6226  0FEA  0D20               	rlf	??_ADC_Init^(0+128),w
  6227  0FEB  00FF               	movwf	btemp+1
  6228  0FEC  087F               	movf	btemp+1,w
  6229  0FED  049F               	iorwf	31,f	;volatile
  6230  0FEE                     l2952:
  6231                           
  6232                           ;adc.c: 56:     ADCON1 = (0x80);
  6233  0FEE  3080               	movlw	128
  6234  0FEF  009F               	movwf	31	;volatile
  6235  0FF0                     l2954:
  6236                           
  6237                           ;adc.c: 60:     if(config->mode==INTERRUPT_MODE)
  6238  0FF0  0A22               	incf	ADC_Init@config^(0+128),w
  6239  0FF1  0084               	movwf	4
  6240  0FF2  0300               	decf	0,w
  6241  0FF3  1D03               	btfss	3,2
  6242  0FF4  2FF6               	goto	u2371
  6243  0FF5  2FF7               	goto	u2370
  6244  0FF6                     u2371:
  6245  0FF6  2FFF               	goto	l305
  6246  0FF7                     u2370:
  6247  0FF7                     l2956:
  6248                           
  6249                           ;adc.c: 61:     {;adc.c: 62:         ADIF = 0;
  6250  0FF7  1283               	bcf	3,5	;RP0=0, select bank0
  6251  0FF8  1303               	bcf	3,6	;RP1=0, select bank0
  6252  0FF9  130C               	bcf	12,6	;volatile
  6253                           
  6254                           ;adc.c: 63:         ADIE = 1;
  6255  0FFA  1683               	bsf	3,5	;RP0=1, select bank1
  6256  0FFB  1303               	bcf	3,6	;RP1=0, select bank1
  6257  0FFC  170C               	bsf	12,6	;volatile
  6258                           
  6259                           ;adc.c: 64:         PEIE = 1;
  6260  0FFD  170B               	bsf	11,6	;volatile
  6261                           
  6262                           ;adc.c: 65:         GIE = 1;
  6263  0FFE  178B               	bsf	11,7	;volatile
  6264  0FFF                     l305:
  6265  0FFF  0008               	return
  6266  1000                     __end_of_ADC_Init:
  6267                           
  6268                           	psect	text38
  6269  05A6                     __ptext38:	
  6270 ;; *************** function _ISR *****************
  6271 ;; Defined at:
  6272 ;;		line 302 in file "EWH.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;		None
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;  Reading         2   40[BANK0 ] unsigned short 
  6277 ;; Return value:  Size  Location     Type
  6278 ;;                  1    wreg      void 
  6279 ;; Registers used:
  6280 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6286 ;;      Params:         0       0       0       0       0
  6287 ;;      Locals:         0       2       0       0       0
  6288 ;;      Temps:          0       4       0       0       0
  6289 ;;      Totals:         0       6       0       0       0
  6290 ;;Total ram usage:        6 bytes
  6291 ;; Hardware stack levels used:    1
  6292 ;; Hardware stack levels required when called:    2
  6293 ;; This function calls:
  6294 ;;		_ADC_ReadChannel
  6295 ;;		_DD_GetState
  6296 ;;		___flmul
  6297 ;;		___fltol
  6298 ;;		___xxtofl
  6299 ;; This function is called by:
  6300 ;;		Interrupt level 1
  6301 ;; This function uses a non-reentrant model
  6302 ;;
  6303                           
  6304                           
  6305                           ;psect for function _ISR
  6306  05A6                     _ISR:
  6307  05A6                     i1l3662:
  6308                           
  6309                           ;EWH.c: 304:     static uint8_t count =0;;EWH.c: 305:     if(INTF==1)
  6310  05A6  1C8B               	btfss	11,1	;volatile
  6311  05A7  2DA9               	goto	u362_21
  6312  05A8  2DAA               	goto	u362_20
  6313  05A9                     u362_21:
  6314  05A9  2DC6               	goto	i1l583
  6315  05AA                     u362_20:
  6316  05AA                     i1l3664:
  6317                           
  6318                           ;EWH.c: 306:     {;EWH.c: 307:         EWH_Events[0]=1;
  6319  05AA  1683               	bsf	3,5	;RP0=1, select bank1
  6320  05AB  1303               	bcf	3,6	;RP1=0, select bank1
  6321  05AC  01BD               	clrf	_EWH_Events^(0+128)
  6322  05AD  0ABD               	incf	_EWH_Events^(0+128),f
  6323  05AE                     i1l3666:
  6324                           
  6325                           ;EWH.c: 309:         if(EWH_State==ON)
  6326  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  6327  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  6328  05B0  0352               	decf	_EWH_State,w
  6329  05B1  1D03               	btfss	3,2
  6330  05B2  2DB4               	goto	u363_21
  6331  05B3  2DB5               	goto	u363_20
  6332  05B4                     u363_21:
  6333  05B4  2DBA               	goto	i1l3670
  6334  05B5                     u363_20:
  6335  05B5                     i1l3668:
  6336                           
  6337                           ;EWH.c: 310:         {;EWH.c: 311:             EWH_State=OFF;
  6338  05B5  01D2               	clrf	_EWH_State
  6339                           
  6340                           ;EWH.c: 312:             EWH_Mode=EWH_SLEEP_MODE;
  6341  05B6  1683               	bsf	3,5	;RP0=1, select bank1
  6342  05B7  1303               	bcf	3,6	;RP1=0, select bank1
  6343  05B8  01CA               	clrf	_EWH_Mode^(0+128)
  6344                           
  6345                           ;EWH.c: 313:         }
  6346  05B9  2DC5               	goto	i1l585
  6347  05BA                     i1l3670:
  6348  05BA  0852               	movf	_EWH_State,w
  6349  05BB  1D03               	btfss	3,2
  6350  05BC  2DBE               	goto	u364_21
  6351  05BD  2DBF               	goto	u364_20
  6352  05BE                     u364_21:
  6353  05BE  2DC5               	goto	i1l585
  6354  05BF                     u364_20:
  6355  05BF                     i1l3672:
  6356                           
  6357                           ;EWH.c: 315:         {;EWH.c: 316:             EWH_State=ON;
  6358  05BF  01D2               	clrf	_EWH_State
  6359  05C0  0AD2               	incf	_EWH_State,f
  6360                           
  6361                           ;EWH.c: 317:             EWH_Mode=EWH_WAKE_UP_MODE;
  6362  05C1  1683               	bsf	3,5	;RP0=1, select bank1
  6363  05C2  1303               	bcf	3,6	;RP1=0, select bank1
  6364  05C3  01CA               	clrf	_EWH_Mode^(0+128)
  6365  05C4  0ACA               	incf	_EWH_Mode^(0+128),f
  6366  05C5                     i1l585:
  6367                           
  6368                           ;EWH.c: 319:         INTF=0;
  6369  05C5  108B               	bcf	11,1	;volatile
  6370  05C6                     i1l583:	
  6371                           ;EWH.c: 320:     }
  6372                           
  6373                           
  6374                           ;EWH.c: 322:     if (TMR1IF)
  6375  05C6  1283               	bcf	3,5	;RP0=0, select bank0
  6376  05C7  1C0C               	btfss	12,0	;volatile
  6377  05C8  2DCA               	goto	u365_21
  6378  05C9  2DCB               	goto	u365_20
  6379  05CA                     u365_21:
  6380  05CA  2E76               	goto	i1l599
  6381  05CB                     u365_20:
  6382  05CB                     i1l3674:
  6383                           
  6384                           ;EWH.c: 323:     {;EWH.c: 324:         count++;
  6385  05CB  3001               	movlw	1
  6386  05CC  00FF               	movwf	btemp+1
  6387  05CD  087F               	movf	btemp+1,w
  6388  05CE  07D0               	addwf	ISR@count,f
  6389  05CF                     i1l3676:
  6390                           
  6391                           ;EWH.c: 325:         if(EWH_Mode==EWH_OPERATING_MODE)
  6392  05CF  3003               	movlw	3
  6393  05D0  1683               	bsf	3,5	;RP0=1, select bank1
  6394  05D1  1303               	bcf	3,6	;RP1=0, select bank1
  6395  05D2  064A               	xorwf	_EWH_Mode^(0+128),w
  6396  05D3  1D03               	btfss	3,2
  6397  05D4  2DD6               	goto	u366_21
  6398  05D5  2DD7               	goto	u366_20
  6399  05D6                     u366_21:
  6400  05D6  2E1D               	goto	i1l3680
  6401  05D7                     u366_20:
  6402  05D7                     i1l3678:
  6403                           
  6404                           ;EWH.c: 326:         {;EWH.c: 327:           uint16_t Reading = ADC_ReadChannel(ADC2);
  6405  05D7  3002               	movlw	2
  6406  05D8  120A  158A  21D8  120A  118A  	fcall	_ADC_ReadChannel
  6407  05DD  0871               	movf	?_ADC_ReadChannel+1,w
  6408  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  6409  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  6410  05E0  00C9               	movwf	ISR@Reading+1
  6411  05E1  0870               	movf	?_ADC_ReadChannel,w
  6412  05E2  00C8               	movwf	ISR@Reading
  6413                           
  6414                           ;EWH.c: 328:           current_Temp=Reading*0.488;
  6415  05E3  0848               	movf	ISR@Reading,w
  6416  05E4  00F0               	movwf	___xxtofl@val
  6417  05E5  0849               	movf	ISR@Reading+1,w
  6418  05E6  00F1               	movwf	___xxtofl@val+1
  6419  05E7  01F2               	clrf	___xxtofl@val+2
  6420  05E8  01F3               	clrf	___xxtofl@val+3
  6421  05E9  3000               	movlw	0
  6422  05EA  120A  118A  2681  120A  118A  	fcall	___xxtofl
  6423  05EF  0873               	movf	?___xxtofl+3,w
  6424  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  6425  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  6426  05F2  00A7               	movwf	___flmul@a+3
  6427  05F3  0872               	movf	?___xxtofl+2,w
  6428  05F4  00A6               	movwf	___flmul@a+2
  6429  05F5  0871               	movf	?___xxtofl+1,w
  6430  05F6  00A5               	movwf	___flmul@a+1
  6431  05F7  0870               	movf	?___xxtofl,w
  6432  05F8  00A4               	movwf	___flmul@a
  6433  05F9  303E               	movlw	62
  6434  05FA  00A3               	movwf	___flmul@b+3
  6435  05FB  30F9               	movlw	249
  6436  05FC  00A2               	movwf	___flmul@b+2
  6437  05FD  30DB               	movlw	219
  6438  05FE  00A1               	movwf	___flmul@b+1
  6439  05FF  3023               	movlw	35
  6440  0600  00A0               	movwf	___flmul@b
  6441  0601  120A  118A  2037  120A  118A  	fcall	___flmul
  6442  0606  1283               	bcf	3,5	;RP0=0, select bank0
  6443  0607  1303               	bcf	3,6	;RP1=0, select bank0
  6444  0608  0823               	movf	?___flmul+3,w
  6445  0609  00BD               	movwf	___fltol@f1+3
  6446  060A  0822               	movf	?___flmul+2,w
  6447  060B  00BC               	movwf	___fltol@f1+2
  6448  060C  0821               	movf	?___flmul+1,w
  6449  060D  00BB               	movwf	___fltol@f1+1
  6450  060E  0820               	movf	?___flmul,w
  6451  060F  00BA               	movwf	___fltol@f1
  6452  0610  120A  158A  2706  120A  118A  	fcall	___fltol
  6453  0615  1283               	bcf	3,5	;RP0=0, select bank0
  6454  0616  1303               	bcf	3,6	;RP1=0, select bank0
  6455  0617  083A               	movf	?___fltol,w
  6456  0618  00FF               	movwf	btemp+1
  6457  0619  087F               	movf	btemp+1,w
  6458  061A  1683               	bsf	3,5	;RP0=1, select bank1
  6459  061B  1303               	bcf	3,6	;RP1=0, select bank1
  6460  061C  00C8               	movwf	_current_Temp^(0+128)
  6461  061D                     i1l3680:
  6462                           
  6463                           ;EWH.c: 331:         if(count==10)
  6464  061D  300A               	movlw	10
  6465  061E  1283               	bcf	3,5	;RP0=0, select bank0
  6466  061F  1303               	bcf	3,6	;RP1=0, select bank0
  6467  0620  0650               	xorwf	ISR@count,w
  6468  0621  1D03               	btfss	3,2
  6469  0622  2E24               	goto	u367_21
  6470  0623  2E25               	goto	u367_20
  6471  0624                     u367_21:
  6472  0624  2E71               	goto	i1l3708
  6473  0625                     u367_20:
  6474  0625                     i1l3682:
  6475                           
  6476                           ;EWH.c: 332:         {;EWH.c: 334:             if(EWH_Mode==EWH_SET_TEMP_MODE)
  6477  0625  3002               	movlw	2
  6478  0626  1683               	bsf	3,5	;RP0=1, select bank1
  6479  0627  1303               	bcf	3,6	;RP1=0, select bank1
  6480  0628  064A               	xorwf	_EWH_Mode^(0+128),w
  6481  0629  1D03               	btfss	3,2
  6482  062A  2E2C               	goto	u368_21
  6483  062B  2E2D               	goto	u368_20
  6484  062C                     u368_21:
  6485  062C  2E3E               	goto	i1l3692
  6486  062D                     u368_20:
  6487  062D                     i1l3684:
  6488                           
  6489                           ;EWH.c: 335:             {;EWH.c: 336:                 SSD_Blink_flag = ~SSD_Blink_flag;
  6490  062D  09C6               	comf	_SSD_Blink_flag^(0+128),f
  6491  062E                     i1l3686:
  6492                           
  6493                           ;EWH.c: 337:                 NoPress_Sec_count++;
  6494  062E  3001               	movlw	1
  6495  062F  00FF               	movwf	btemp+1
  6496  0630  087F               	movf	btemp+1,w
  6497  0631  1283               	bcf	3,5	;RP0=0, select bank0
  6498  0632  1303               	bcf	3,6	;RP1=0, select bank0
  6499  0633  07D1               	addwf	_NoPress_Sec_count,f
  6500  0634                     i1l3688:
  6501                           
  6502                           ;EWH.c: 338:                 if(NoPress_Sec_count==5)
  6503  0634  3005               	movlw	5
  6504  0635  0651               	xorwf	_NoPress_Sec_count,w
  6505  0636  1D03               	btfss	3,2
  6506  0637  2E39               	goto	u369_21
  6507  0638  2E3A               	goto	u369_20
  6508  0639                     u369_21:
  6509  0639  2E3E               	goto	i1l3692
  6510  063A                     u369_20:
  6511  063A                     i1l3690:
  6512                           
  6513                           ;EWH.c: 339:                 {;EWH.c: 340:                     EWH_Events[3]=1;
  6514  063A  1683               	bsf	3,5	;RP0=1, select bank1
  6515  063B  1303               	bcf	3,6	;RP1=0, select bank1
  6516  063C  01C0               	clrf	(_EWH_Events^(0+128)+3)
  6517  063D  0AC0               	incf	(_EWH_Events^(0+128)+3),f
  6518  063E                     i1l3692:
  6519                           
  6520                           ;EWH.c: 344:             if(EWH_Mode==EWH_OPERATING_MODE && DD_GetState(HEATER)==ON)
  6521  063E  3003               	movlw	3
  6522  063F  1683               	bsf	3,5	;RP0=1, select bank1
  6523  0640  1303               	bcf	3,6	;RP1=0, select bank1
  6524  0641  064A               	xorwf	_EWH_Mode^(0+128),w
  6525  0642  1D03               	btfss	3,2
  6526  0643  2E45               	goto	u370_21
  6527  0644  2E46               	goto	u370_20
  6528  0645                     u370_21:
  6529  0645  2E58               	goto	i1l3698
  6530  0646                     u370_20:
  6531  0646                     i1l3694:
  6532  0646  3000               	movlw	0
  6533  0647  120A  118A  27BE  120A  118A  	fcall	_DD_GetState
  6534  064C  3A01               	xorlw	1
  6535  064D  1D03               	skipz
  6536  064E  2E50               	goto	u371_21
  6537  064F  2E51               	goto	u371_20
  6538  0650                     u371_21:
  6539  0650  2E58               	goto	i1l3698
  6540  0651                     u371_20:
  6541  0651                     i1l3696:
  6542                           
  6543                           ;EWH.c: 345:             {;EWH.c: 346:                 (PORTB^=(1<<7));
  6544  0651  3080               	movlw	128
  6545  0652  00FF               	movwf	btemp+1
  6546  0653  087F               	movf	btemp+1,w
  6547  0654  1283               	bcf	3,5	;RP0=0, select bank0
  6548  0655  1303               	bcf	3,6	;RP1=0, select bank0
  6549  0656  0686               	xorwf	6,f	;volatile
  6550                           
  6551                           ;EWH.c: 347:             }
  6552  0657  2E6E               	goto	i1l3706
  6553  0658                     i1l3698:
  6554  0658  3003               	movlw	3
  6555  0659  1683               	bsf	3,5	;RP0=1, select bank1
  6556  065A  1303               	bcf	3,6	;RP1=0, select bank1
  6557  065B  064A               	xorwf	_EWH_Mode^(0+128),w
  6558  065C  1D03               	btfss	3,2
  6559  065D  2E5F               	goto	u372_21
  6560  065E  2E60               	goto	u372_20
  6561  065F                     u372_21:
  6562  065F  2E6E               	goto	i1l3706
  6563  0660                     u372_20:
  6564  0660                     i1l3700:
  6565                           
  6566                           ;EWH.c: 349:             {;EWH.c: 350:                 (ON)?(PORTB |= (1<<7)) : (PORTB &
      +                          = ~(1<<7));
  6567  0660  3001               	movlw	1
  6568  0661  120A  118A  27BE  120A  118A  	fcall	_DD_GetState
  6569  0666  3A01               	xorlw	1
  6570  0667  1D03               	skipz
  6571  0668  2E6A               	goto	u373_21
  6572  0669  2E6B               	goto	u373_20
  6573  066A                     u373_21:
  6574  066A  2E6E               	goto	i1l3706
  6575  066B                     u373_20:
  6576  066B                     i1l3702:
  6577  066B  1283               	bcf	3,5	;RP0=0, select bank0
  6578  066C  1303               	bcf	3,6	;RP1=0, select bank0
  6579  066D  1786               	bsf	6,7	;volatile
  6580  066E                     i1l3706:
  6581                           
  6582                           ;EWH.c: 353:             count = 0;
  6583  066E  1283               	bcf	3,5	;RP0=0, select bank0
  6584  066F  1303               	bcf	3,6	;RP1=0, select bank0
  6585  0670  01D0               	clrf	ISR@count
  6586  0671                     i1l3708:
  6587                           
  6588                           ;EWH.c: 355:     TMR1IF = 0;
  6589  0671  100C               	bcf	12,0	;volatile
  6590  0672                     i1l3710:
  6591                           
  6592                           ;EWH.c: 356:     TMR1=40536;
  6593  0672  309E               	movlw	158
  6594  0673  008F               	movwf	15	;volatile
  6595  0674  3058               	movlw	88
  6596  0675  008E               	movwf	14	;volatile
  6597  0676                     i1l599:
  6598  0676  0847               	movf	??_ISR+3,w
  6599  0677  00FF               	movwf	btemp+1
  6600  0678  0846               	movf	??_ISR+2,w
  6601  0679  008A               	movwf	10
  6602  067A  0845               	movf	??_ISR+1,w
  6603  067B  0084               	movwf	4
  6604  067C  0E44               	swapf	??_ISR^0,w
  6605  067D  0083               	movwf	3
  6606  067E  0EFE               	swapf	btemp,f
  6607  067F  0E7E               	swapf	btemp,w
  6608  0680  0009               	retfie
  6609  0681                     __end_of_ISR:
  6610                           
  6611                           	psect	intentry
  6612  0004                     __pintentry:	
  6613                           ;incstack = 0
  6614 ;; hardware stack exceeded
  6615                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6616                           
  6617  0004                     interrupt_function:
  6618  007E                     saved_w	set	btemp
  6619  0004  00FE               	movwf	btemp
  6620  0005  0E03               	swapf	3,w
  6621  0006  1283               	bcf	3,5	;RP0=0, select bank0
  6622  0007  1303               	bcf	3,6	;RP1=0, select bank0
  6623  0008  00C4               	movwf	??_ISR
  6624  0009  0804               	movf	4,w
  6625  000A  00C5               	movwf	??_ISR+1
  6626  000B  080A               	movf	10,w
  6627  000C  00C6               	movwf	??_ISR+2
  6628  000D  087F               	movf	btemp+1,w
  6629  000E  00C7               	movwf	??_ISR+3
  6630  000F  120A  118A  2DA6   	ljmp	_ISR
  6631                           
  6632                           	psect	text39
  6633  0681                     __ptext39:	
  6634 ;; *************** function ___xxtofl *****************
  6635 ;; Defined at:
  6636 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\xxtofl.c"
  6637 ;; Parameters:    Size  Location     Type
  6638 ;;  sign            1    wreg     unsigned char 
  6639 ;;  val             4    0[COMMON] long 
  6640 ;; Auto vars:     Size  Location     Type
  6641 ;;  sign            1    8[COMMON] unsigned char 
  6642 ;;  arg             4   10[COMMON] unsigned long 
  6643 ;;  exp             1    9[COMMON] unsigned char 
  6644 ;; Return value:  Size  Location     Type
  6645 ;;                  4    0[COMMON] unsigned char 
  6646 ;; Registers used:
  6647 ;;		wreg, status,2, status,0, btemp+1
  6648 ;; Tracked objects:
  6649 ;;		On entry : 0/0
  6650 ;;		On exit  : 0/0
  6651 ;;		Unchanged: 0/0
  6652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6653 ;;      Params:         4       0       0       0       0
  6654 ;;      Locals:         6       0       0       0       0
  6655 ;;      Temps:          4       0       0       0       0
  6656 ;;      Totals:        14       0       0       0       0
  6657 ;;Total ram usage:       14 bytes
  6658 ;; Hardware stack levels used:    1
  6659 ;; This function calls:
  6660 ;;		Nothing
  6661 ;; This function is called by:
  6662 ;;		_ISR
  6663 ;; This function uses a non-reentrant model
  6664 ;;
  6665                           
  6666                           
  6667                           ;psect for function ___xxtofl
  6668  0681                     ___xxtofl:
  6669                           
  6670                           ;incstack = 0
  6671                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  6672                           ;___xxtofl@sign stored from wreg
  6673  0681  00F8               	movwf	___xxtofl@sign
  6674  0682                     i1l3512:
  6675  0682  0878               	movf	___xxtofl@sign,w
  6676  0683  1903               	btfsc	3,2
  6677  0684  2E86               	goto	u340_21
  6678  0685  2E87               	goto	u340_20
  6679  0686                     u340_21:
  6680  0686  2E9B               	goto	i1l3518
  6681  0687                     u340_20:
  6682  0687                     i1l3514:
  6683  0687  1FF3               	btfss	___xxtofl@val+3,7
  6684  0688  2E8A               	goto	u341_21
  6685  0689  2E8B               	goto	u341_20
  6686  068A                     u341_21:
  6687  068A  2E9B               	goto	i1l3518
  6688  068B                     u341_20:
  6689  068B                     i1l3516:
  6690  068B  0970               	comf	___xxtofl@val,w
  6691  068C  00FA               	movwf	___xxtofl@arg
  6692  068D  0971               	comf	___xxtofl@val+1,w
  6693  068E  00FB               	movwf	___xxtofl@arg+1
  6694  068F  0972               	comf	___xxtofl@val+2,w
  6695  0690  00FC               	movwf	___xxtofl@arg+2
  6696  0691  0973               	comf	___xxtofl@val+3,w
  6697  0692  00FD               	movwf	___xxtofl@arg+3
  6698  0693  0AFA               	incf	___xxtofl@arg,f
  6699  0694  1903               	skipnz
  6700  0695  0AFB               	incf	___xxtofl@arg+1,f
  6701  0696  1903               	skipnz
  6702  0697  0AFC               	incf	___xxtofl@arg+2,f
  6703  0698  1903               	skipnz
  6704  0699  0AFD               	incf	___xxtofl@arg+3,f
  6705  069A  2EA3               	goto	i1l1185
  6706  069B                     i1l3518:
  6707  069B  0873               	movf	___xxtofl@val+3,w
  6708  069C  00FD               	movwf	___xxtofl@arg+3
  6709  069D  0872               	movf	___xxtofl@val+2,w
  6710  069E  00FC               	movwf	___xxtofl@arg+2
  6711  069F  0871               	movf	___xxtofl@val+1,w
  6712  06A0  00FB               	movwf	___xxtofl@arg+1
  6713  06A1  0870               	movf	___xxtofl@val,w
  6714  06A2  00FA               	movwf	___xxtofl@arg
  6715  06A3                     i1l1185:
  6716  06A3  0873               	movf	___xxtofl@val+3,w
  6717  06A4  0472               	iorwf	___xxtofl@val+2,w
  6718  06A5  0471               	iorwf	___xxtofl@val+1,w
  6719  06A6  0470               	iorwf	___xxtofl@val,w
  6720  06A7  1D03               	skipz
  6721  06A8  2EAA               	goto	u342_21
  6722  06A9  2EAB               	goto	u342_20
  6723  06AA                     u342_21:
  6724  06AA  2EB4               	goto	i1l3524
  6725  06AB                     u342_20:
  6726  06AB                     i1l3520:
  6727  06AB  3000               	movlw	0
  6728  06AC  00F3               	movwf	?___xxtofl+3
  6729  06AD  3000               	movlw	0
  6730  06AE  00F2               	movwf	?___xxtofl+2
  6731  06AF  3000               	movlw	0
  6732  06B0  00F1               	movwf	?___xxtofl+1
  6733  06B1  3000               	movlw	0
  6734  06B2  00F0               	movwf	?___xxtofl
  6735  06B3  2F3A               	goto	i1l1187
  6736  06B4                     i1l3524:
  6737  06B4  3096               	movlw	150
  6738  06B5  00FF               	movwf	btemp+1
  6739  06B6  087F               	movf	btemp+1,w
  6740  06B7  00F9               	movwf	___xxtofl@exp
  6741  06B8  2EC6               	goto	i1l3530
  6742  06B9                     i1l3526:
  6743  06B9  3001               	movlw	1
  6744  06BA  00FF               	movwf	btemp+1
  6745  06BB  087F               	movf	btemp+1,w
  6746  06BC  07F9               	addwf	___xxtofl@exp,f
  6747  06BD                     i1l3528:
  6748  06BD  3001               	movlw	1
  6749  06BE                     u343_25:
  6750  06BE  1003               	clrc
  6751  06BF  0CFD               	rrf	___xxtofl@arg+3,f
  6752  06C0  0CFC               	rrf	___xxtofl@arg+2,f
  6753  06C1  0CFB               	rrf	___xxtofl@arg+1,f
  6754  06C2  0CFA               	rrf	___xxtofl@arg,f
  6755  06C3  3EFF               	addlw	-1
  6756  06C4  1D03               	skipz
  6757  06C5  2EBE               	goto	u343_25
  6758  06C6                     i1l3530:
  6759  06C6  30FE               	movlw	254
  6760  06C7  057D               	andwf	___xxtofl@arg+3,w
  6761  06C8  1D03               	btfss	3,2
  6762  06C9  2ECB               	goto	u344_21
  6763  06CA  2ECC               	goto	u344_20
  6764  06CB                     u344_21:
  6765  06CB  2EB9               	goto	i1l3526
  6766  06CC                     u344_20:
  6767  06CC  2EE8               	goto	i1l3538
  6768  06CD                     i1l3532:
  6769  06CD  3001               	movlw	1
  6770  06CE  00FF               	movwf	btemp+1
  6771  06CF  087F               	movf	btemp+1,w
  6772  06D0  07F9               	addwf	___xxtofl@exp,f
  6773  06D1                     i1l3534:
  6774  06D1  3001               	movlw	1
  6775  06D2  07FA               	addwf	___xxtofl@arg,f
  6776  06D3  3000               	movlw	0
  6777  06D4  1803               	skipnc
  6778  06D5  3001               	movlw	1
  6779  06D6  07FB               	addwf	___xxtofl@arg+1,f
  6780  06D7  3000               	movlw	0
  6781  06D8  1803               	skipnc
  6782  06D9  3001               	movlw	1
  6783  06DA  07FC               	addwf	___xxtofl@arg+2,f
  6784  06DB  3000               	movlw	0
  6785  06DC  1803               	skipnc
  6786  06DD  3001               	movlw	1
  6787  06DE  07FD               	addwf	___xxtofl@arg+3,f
  6788  06DF                     i1l3536:
  6789  06DF  3001               	movlw	1
  6790  06E0                     u345_25:
  6791  06E0  1003               	clrc
  6792  06E1  0CFD               	rrf	___xxtofl@arg+3,f
  6793  06E2  0CFC               	rrf	___xxtofl@arg+2,f
  6794  06E3  0CFB               	rrf	___xxtofl@arg+1,f
  6795  06E4  0CFA               	rrf	___xxtofl@arg,f
  6796  06E5  3EFF               	addlw	-1
  6797  06E6  1D03               	skipz
  6798  06E7  2EE0               	goto	u345_25
  6799  06E8                     i1l3538:
  6800  06E8  30FF               	movlw	255
  6801  06E9  057D               	andwf	___xxtofl@arg+3,w
  6802  06EA  1D03               	btfss	3,2
  6803  06EB  2EED               	goto	u346_21
  6804  06EC  2EEE               	goto	u346_20
  6805  06ED                     u346_21:
  6806  06ED  2ECD               	goto	i1l3532
  6807  06EE                     u346_20:
  6808  06EE  2EFA               	goto	i1l3542
  6809  06EF                     i1l3540:
  6810  06EF  3001               	movlw	1
  6811  06F0  02F9               	subwf	___xxtofl@exp,f
  6812  06F1  3001               	movlw	1
  6813  06F2  00F4               	movwf	??___xxtofl
  6814  06F3                     u347_25:
  6815  06F3  1003               	clrc
  6816  06F4  0DFA               	rlf	___xxtofl@arg,f
  6817  06F5  0DFB               	rlf	___xxtofl@arg+1,f
  6818  06F6  0DFC               	rlf	___xxtofl@arg+2,f
  6819  06F7  0DFD               	rlf	___xxtofl@arg+3,f
  6820  06F8  0BF4               	decfsz	??___xxtofl,f
  6821  06F9  2EF3               	goto	u347_25
  6822  06FA                     i1l3542:
  6823  06FA  1BFC               	btfsc	___xxtofl@arg+2,7
  6824  06FB  2EFD               	goto	u348_21
  6825  06FC  2EFE               	goto	u348_20
  6826  06FD                     u348_21:
  6827  06FD  2F04               	goto	i1l1198
  6828  06FE                     u348_20:
  6829  06FE                     i1l3544:
  6830  06FE  3002               	movlw	2
  6831  06FF  0279               	subwf	___xxtofl@exp,w
  6832  0700  1803               	skipnc
  6833  0701  2F03               	goto	u349_21
  6834  0702  2F04               	goto	u349_20
  6835  0703                     u349_21:
  6836  0703  2EEF               	goto	i1l3540
  6837  0704                     u349_20:
  6838  0704                     i1l1198:
  6839  0704  1879               	btfsc	___xxtofl@exp,0
  6840  0705  2F07               	goto	u350_21
  6841  0706  2F08               	goto	u350_20
  6842  0707                     u350_21:
  6843  0707  2F10               	goto	i1l1199
  6844  0708                     u350_20:
  6845  0708                     i1l3546:
  6846  0708  30FF               	movlw	255
  6847  0709  05FA               	andwf	___xxtofl@arg,f
  6848  070A  30FF               	movlw	255
  6849  070B  05FB               	andwf	___xxtofl@arg+1,f
  6850  070C  307F               	movlw	127
  6851  070D  05FC               	andwf	___xxtofl@arg+2,f
  6852  070E  30FF               	movlw	255
  6853  070F  05FD               	andwf	___xxtofl@arg+3,f
  6854  0710                     i1l1199:
  6855  0710  1003               	clrc
  6856  0711  0CF9               	rrf	___xxtofl@exp,f
  6857  0712                     i1l3548:
  6858  0712  0879               	movf	___xxtofl@exp,w
  6859  0713  00F4               	movwf	??___xxtofl
  6860  0714  01F5               	clrf	??___xxtofl+1
  6861  0715  01F6               	clrf	??___xxtofl+2
  6862  0716  01F7               	clrf	??___xxtofl+3
  6863  0717  3018               	movlw	24
  6864  0718                     u351_25:
  6865  0718  1003               	clrc
  6866  0719  0DF4               	rlf	??___xxtofl,f
  6867  071A  0DF5               	rlf	??___xxtofl+1,f
  6868  071B  0DF6               	rlf	??___xxtofl+2,f
  6869  071C  0DF7               	rlf	??___xxtofl+3,f
  6870  071D                     u351_20:
  6871  071D  3EFF               	addlw	-1
  6872  071E  1D03               	skipz
  6873  071F  2F18               	goto	u351_25
  6874  0720  0874               	movf	??___xxtofl,w
  6875  0721  04FA               	iorwf	___xxtofl@arg,f
  6876  0722  0875               	movf	??___xxtofl+1,w
  6877  0723  04FB               	iorwf	___xxtofl@arg+1,f
  6878  0724  0876               	movf	??___xxtofl+2,w
  6879  0725  04FC               	iorwf	___xxtofl@arg+2,f
  6880  0726  0877               	movf	??___xxtofl+3,w
  6881  0727  04FD               	iorwf	___xxtofl@arg+3,f
  6882  0728                     i1l3550:
  6883  0728  0878               	movf	___xxtofl@sign,w
  6884  0729  1903               	btfsc	3,2
  6885  072A  2F2C               	goto	u352_21
  6886  072B  2F2D               	goto	u352_20
  6887  072C                     u352_21:
  6888  072C  2F32               	goto	i1l3556
  6889  072D                     u352_20:
  6890  072D                     i1l3552:
  6891  072D  1FF3               	btfss	___xxtofl@val+3,7
  6892  072E  2F30               	goto	u353_21
  6893  072F  2F31               	goto	u353_20
  6894  0730                     u353_21:
  6895  0730  2F32               	goto	i1l3556
  6896  0731                     u353_20:
  6897  0731                     i1l3554:
  6898  0731  17FD               	bsf	___xxtofl@arg+3,7
  6899  0732                     i1l3556:
  6900  0732  087D               	movf	___xxtofl@arg+3,w
  6901  0733  00F3               	movwf	?___xxtofl+3
  6902  0734  087C               	movf	___xxtofl@arg+2,w
  6903  0735  00F2               	movwf	?___xxtofl+2
  6904  0736  087B               	movf	___xxtofl@arg+1,w
  6905  0737  00F1               	movwf	?___xxtofl+1
  6906  0738  087A               	movf	___xxtofl@arg,w
  6907  0739  00F0               	movwf	?___xxtofl
  6908  073A                     i1l1187:
  6909  073A  0008               	return
  6910  073B                     __end_of___xxtofl:
  6911                           
  6912                           	psect	text40
  6913  0F06                     __ptext40:	
  6914 ;; *************** function ___fltol *****************
  6915 ;; Defined at:
  6916 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fltol.c"
  6917 ;; Parameters:    Size  Location     Type
  6918 ;;  f1              4   26[BANK0 ] unsigned char 
  6919 ;; Auto vars:     Size  Location     Type
  6920 ;;  exp1            1   35[BANK0 ] unsigned char 
  6921 ;;  sign1           1   34[BANK0 ] unsigned char 
  6922 ;; Return value:  Size  Location     Type
  6923 ;;                  4   26[BANK0 ] long 
  6924 ;; Registers used:
  6925 ;;		wreg, status,2, status,0, btemp+1
  6926 ;; Tracked objects:
  6927 ;;		On entry : 0/0
  6928 ;;		On exit  : 0/0
  6929 ;;		Unchanged: 0/0
  6930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6931 ;;      Params:         0       4       0       0       0
  6932 ;;      Locals:         0       2       0       0       0
  6933 ;;      Temps:          0       4       0       0       0
  6934 ;;      Totals:         0      10       0       0       0
  6935 ;;Total ram usage:       10 bytes
  6936 ;; Hardware stack levels used:    1
  6937 ;; This function calls:
  6938 ;;		Nothing
  6939 ;; This function is called by:
  6940 ;;		_ISR
  6941 ;; This function uses a non-reentrant model
  6942 ;;
  6943                           
  6944                           
  6945                           ;psect for function ___fltol
  6946  0F06                     ___fltol:
  6947  0F06                     i1l3332:	
  6948                           ;incstack = 0
  6949                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  6950                           
  6951  0F06  1003               	clrc
  6952  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  6953  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  6954  0F09  0D3C               	rlf	___fltol@f1+2,w
  6955  0F0A  0D3D               	rlf	___fltol@f1+3,w
  6956  0F0B  00FF               	movwf	btemp+1
  6957  0F0C  087F               	movf	btemp+1,w
  6958  0F0D  00C3               	movwf	___fltol@exp1
  6959  0F0E  0843               	movf	___fltol@exp1,w
  6960  0F0F  1D03               	btfss	3,2
  6961  0F10  2F12               	goto	u293_21
  6962  0F11  2F13               	goto	u293_20
  6963  0F12                     u293_21:
  6964  0F12  2F1C               	goto	i1l3338
  6965  0F13                     u293_20:
  6966  0F13                     i1l3334:
  6967  0F13  3000               	movlw	0
  6968  0F14  00BD               	movwf	?___fltol+3
  6969  0F15  3000               	movlw	0
  6970  0F16  00BC               	movwf	?___fltol+2
  6971  0F17  3000               	movlw	0
  6972  0F18  00BB               	movwf	?___fltol+1
  6973  0F19  3000               	movlw	0
  6974  0F1A  00BA               	movwf	?___fltol
  6975  0F1B  2F81               	goto	i1l938
  6976  0F1C                     i1l3338:
  6977  0F1C  083A               	movf	___fltol@f1,w
  6978  0F1D  00BE               	movwf	??___fltol
  6979  0F1E  083B               	movf	___fltol@f1+1,w
  6980  0F1F  00BF               	movwf	??___fltol+1
  6981  0F20  083C               	movf	___fltol@f1+2,w
  6982  0F21  00C0               	movwf	??___fltol+2
  6983  0F22  083D               	movf	___fltol@f1+3,w
  6984  0F23  00C1               	movwf	??___fltol+3
  6985  0F24  301F               	movlw	31
  6986  0F25                     u294_25:
  6987  0F25  1003               	clrc
  6988  0F26  0CC1               	rrf	??___fltol+3,f
  6989  0F27  0CC0               	rrf	??___fltol+2,f
  6990  0F28  0CBF               	rrf	??___fltol+1,f
  6991  0F29  0CBE               	rrf	??___fltol,f
  6992  0F2A                     u294_20:
  6993  0F2A  3EFF               	addlw	-1
  6994  0F2B  1D03               	skipz
  6995  0F2C  2F25               	goto	u294_25
  6996  0F2D  083E               	movf	??___fltol,w
  6997  0F2E  00FF               	movwf	btemp+1
  6998  0F2F  087F               	movf	btemp+1,w
  6999  0F30  00C2               	movwf	___fltol@sign1
  7000  0F31                     i1l3340:
  7001  0F31  17BC               	bsf	___fltol@f1+2,7
  7002  0F32                     i1l3342:
  7003  0F32  30FF               	movlw	255
  7004  0F33  05BA               	andwf	___fltol@f1,f
  7005  0F34  30FF               	movlw	255
  7006  0F35  05BB               	andwf	___fltol@f1+1,f
  7007  0F36  30FF               	movlw	255
  7008  0F37  05BC               	andwf	___fltol@f1+2,f
  7009  0F38  3000               	movlw	0
  7010  0F39  05BD               	andwf	___fltol@f1+3,f
  7011  0F3A                     i1l3344:
  7012  0F3A  3096               	movlw	150
  7013  0F3B  02C3               	subwf	___fltol@exp1,f
  7014  0F3C                     i1l3346:
  7015  0F3C  1FC3               	btfss	___fltol@exp1,7
  7016  0F3D  2F3F               	goto	u295_21
  7017  0F3E  2F40               	goto	u295_20
  7018  0F3F                     u295_21:
  7019  0F3F  2F5A               	goto	i1l3358
  7020  0F40                     u295_20:
  7021  0F40                     i1l3348:
  7022  0F40  0843               	movf	___fltol@exp1,w
  7023  0F41  3A80               	xorlw	128
  7024  0F42  3E97               	addlw	151
  7025  0F43  1803               	skipnc
  7026  0F44  2F46               	goto	u296_21
  7027  0F45  2F47               	goto	u296_20
  7028  0F46                     u296_21:
  7029  0F46  2F48               	goto	i1l3354
  7030  0F47                     u296_20:
  7031  0F47  2F13               	goto	i1l3334
  7032  0F48                     i1l3354:
  7033  0F48  3001               	movlw	1
  7034  0F49                     u297_25:
  7035  0F49  1003               	clrc
  7036  0F4A  0CBD               	rrf	___fltol@f1+3,f
  7037  0F4B  0CBC               	rrf	___fltol@f1+2,f
  7038  0F4C  0CBB               	rrf	___fltol@f1+1,f
  7039  0F4D  0CBA               	rrf	___fltol@f1,f
  7040  0F4E  3EFF               	addlw	-1
  7041  0F4F  1D03               	skipz
  7042  0F50  2F49               	goto	u297_25
  7043  0F51                     i1l3356:
  7044  0F51  3001               	movlw	1
  7045  0F52  00FF               	movwf	btemp+1
  7046  0F53  087F               	movf	btemp+1,w
  7047  0F54  07C3               	addwf	___fltol@exp1,f
  7048  0F55  1D03               	btfss	3,2
  7049  0F56  2F58               	goto	u298_21
  7050  0F57  2F59               	goto	u298_20
  7051  0F58                     u298_21:
  7052  0F58  2F48               	goto	i1l3354
  7053  0F59                     u298_20:
  7054  0F59  2F71               	goto	i1l3366
  7055  0F5A                     i1l3358:
  7056  0F5A  3020               	movlw	32
  7057  0F5B  0243               	subwf	___fltol@exp1,w
  7058  0F5C  1C03               	skipc
  7059  0F5D  2F5F               	goto	u299_21
  7060  0F5E  2F60               	goto	u299_20
  7061  0F5F                     u299_21:
  7062  0F5F  2F6C               	goto	i1l945
  7063  0F60                     u299_20:
  7064  0F60  2F13               	goto	i1l3334
  7065  0F61                     i1l3364:
  7066  0F61  3001               	movlw	1
  7067  0F62  00BE               	movwf	??___fltol
  7068  0F63                     u300_25:
  7069  0F63  1003               	clrc
  7070  0F64  0DBA               	rlf	___fltol@f1,f
  7071  0F65  0DBB               	rlf	___fltol@f1+1,f
  7072  0F66  0DBC               	rlf	___fltol@f1+2,f
  7073  0F67  0DBD               	rlf	___fltol@f1+3,f
  7074  0F68  0BBE               	decfsz	??___fltol,f
  7075  0F69  2F63               	goto	u300_25
  7076  0F6A  3001               	movlw	1
  7077  0F6B  02C3               	subwf	___fltol@exp1,f
  7078  0F6C                     i1l945:
  7079  0F6C  0843               	movf	___fltol@exp1,w
  7080  0F6D  1D03               	btfss	3,2
  7081  0F6E  2F70               	goto	u301_21
  7082  0F6F  2F71               	goto	u301_20
  7083  0F70                     u301_21:
  7084  0F70  2F61               	goto	i1l3364
  7085  0F71                     u301_20:
  7086  0F71                     i1l3366:
  7087  0F71  0842               	movf	___fltol@sign1,w
  7088  0F72  1903               	btfsc	3,2
  7089  0F73  2F75               	goto	u302_21
  7090  0F74  2F76               	goto	u302_20
  7091  0F75                     u302_21:
  7092  0F75  2F81               	goto	i1l948
  7093  0F76                     u302_20:
  7094  0F76                     i1l3368:
  7095  0F76  09BA               	comf	___fltol@f1,f
  7096  0F77  09BB               	comf	___fltol@f1+1,f
  7097  0F78  09BC               	comf	___fltol@f1+2,f
  7098  0F79  09BD               	comf	___fltol@f1+3,f
  7099  0F7A  0ABA               	incf	___fltol@f1,f
  7100  0F7B  1903               	skipnz
  7101  0F7C  0ABB               	incf	___fltol@f1+1,f
  7102  0F7D  1903               	skipnz
  7103  0F7E  0ABC               	incf	___fltol@f1+2,f
  7104  0F7F  1903               	skipnz
  7105  0F80  0ABD               	incf	___fltol@f1+3,f
  7106  0F81                     i1l948:
  7107  0F81                     i1l938:
  7108  0F81  0008               	return
  7109  0F82                     __end_of___fltol:
  7110                           
  7111                           	psect	text41
  7112  0037                     __ptext41:	
  7113 ;; *************** function ___flmul *****************
  7114 ;; Defined at:
  7115 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcmul.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;  b               4    0[BANK0 ] long 
  7118 ;;  a               4    4[BANK0 ] long 
  7119 ;; Auto vars:     Size  Location     Type
  7120 ;;  prod            4   20[BANK0 ] struct .
  7121 ;;  grs             4   14[BANK0 ] unsigned long 
  7122 ;;  temp            2   24[BANK0 ] struct .
  7123 ;;  bexp            1   19[BANK0 ] unsigned char 
  7124 ;;  aexp            1   18[BANK0 ] unsigned char 
  7125 ;;  sign            1   13[BANK0 ] unsigned char 
  7126 ;; Return value:  Size  Location     Type
  7127 ;;                  4    0[BANK0 ] unsigned char 
  7128 ;; Registers used:
  7129 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7130 ;; Tracked objects:
  7131 ;;		On entry : 0/0
  7132 ;;		On exit  : 0/0
  7133 ;;		Unchanged: 0/0
  7134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7135 ;;      Params:         0       8       0       0       0
  7136 ;;      Locals:         0      13       0       0       0
  7137 ;;      Temps:          0       5       0       0       0
  7138 ;;      Totals:         0      26       0       0       0
  7139 ;;Total ram usage:       26 bytes
  7140 ;; Hardware stack levels used:    1
  7141 ;; Hardware stack levels required when called:    1
  7142 ;; This function calls:
  7143 ;;		__Umul8_16
  7144 ;; This function is called by:
  7145 ;;		_ISR
  7146 ;; This function uses a non-reentrant model
  7147 ;;
  7148                           
  7149                           
  7150                           ;psect for function ___flmul
  7151  0037                     ___flmul:
  7152  0037                     i1l3370:	
  7153                           ;incstack = 0
  7154 ;; hardware stack exceeded
  7155                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7156                           
  7157  0037  1283               	bcf	3,5	;RP0=0, select bank0
  7158  0038  1303               	bcf	3,6	;RP1=0, select bank0
  7159  0039  0823               	movf	___flmul@b+3,w
  7160  003A  3980               	andlw	128
  7161  003B  00FF               	movwf	btemp+1
  7162  003C  087F               	movf	btemp+1,w
  7163  003D  00AD               	movwf	___flmul@sign
  7164  003E                     i1l3372:
  7165  003E  0823               	movf	___flmul@b+3,w
  7166  003F  00A8               	movwf	??___flmul
  7167  0040  0728               	addwf	??___flmul,w
  7168  0041  00FF               	movwf	btemp+1
  7169  0042  087F               	movf	btemp+1,w
  7170  0043  00B3               	movwf	___flmul@bexp
  7171  0044                     i1l3374:
  7172  0044  1FA2               	btfss	___flmul@b+2,7
  7173  0045  2847               	goto	u303_21
  7174  0046  2848               	goto	u303_20
  7175  0047                     u303_21:
  7176  0047  2849               	goto	i1l3378
  7177  0048                     u303_20:
  7178  0048                     i1l3376:
  7179  0048  1433               	bsf	___flmul@bexp,0
  7180  0049                     i1l3378:
  7181  0049  0833               	movf	___flmul@bexp,w
  7182  004A  1903               	btfsc	3,2
  7183  004B  284D               	goto	u304_21
  7184  004C  284E               	goto	u304_20
  7185  004D                     u304_21:
  7186  004D  285D               	goto	i1l3386
  7187  004E                     u304_20:
  7188  004E                     i1l3380:
  7189  004E  0A33               	incf	___flmul@bexp,w
  7190  004F  1D03               	btfss	3,2
  7191  0050  2852               	goto	u305_21
  7192  0051  2853               	goto	u305_20
  7193  0052                     u305_21:
  7194  0052  285B               	goto	i1l3384
  7195  0053                     u305_20:
  7196  0053                     i1l3382:
  7197  0053  3000               	movlw	0
  7198  0054  00A3               	movwf	___flmul@b+3
  7199  0055  3000               	movlw	0
  7200  0056  00A2               	movwf	___flmul@b+2
  7201  0057  3000               	movlw	0
  7202  0058  00A1               	movwf	___flmul@b+1
  7203  0059  3000               	movlw	0
  7204  005A  00A0               	movwf	___flmul@b
  7205  005B                     i1l3384:
  7206  005B  17A2               	bsf	___flmul@b+2,7
  7207  005C  2865               	goto	i1l3388
  7208  005D                     i1l3386:
  7209  005D  3000               	movlw	0
  7210  005E  00A3               	movwf	___flmul@b+3
  7211  005F  3000               	movlw	0
  7212  0060  00A2               	movwf	___flmul@b+2
  7213  0061  3000               	movlw	0
  7214  0062  00A1               	movwf	___flmul@b+1
  7215  0063  3000               	movlw	0
  7216  0064  00A0               	movwf	___flmul@b
  7217  0065                     i1l3388:
  7218  0065  0827               	movf	___flmul@a+3,w
  7219  0066  3980               	andlw	128
  7220  0067  00FF               	movwf	btemp+1
  7221  0068  087F               	movf	btemp+1,w
  7222  0069  06AD               	xorwf	___flmul@sign,f
  7223  006A                     i1l3390:
  7224  006A  0827               	movf	___flmul@a+3,w
  7225  006B  00A8               	movwf	??___flmul
  7226  006C  0728               	addwf	??___flmul,w
  7227  006D  00FF               	movwf	btemp+1
  7228  006E  087F               	movf	btemp+1,w
  7229  006F  00B2               	movwf	___flmul@aexp
  7230  0070                     i1l3392:
  7231  0070  1FA6               	btfss	___flmul@a+2,7
  7232  0071  2873               	goto	u306_21
  7233  0072  2874               	goto	u306_20
  7234  0073                     u306_21:
  7235  0073  2875               	goto	i1l3396
  7236  0074                     u306_20:
  7237  0074                     i1l3394:
  7238  0074  1432               	bsf	___flmul@aexp,0
  7239  0075                     i1l3396:
  7240  0075  0832               	movf	___flmul@aexp,w
  7241  0076  1903               	btfsc	3,2
  7242  0077  2879               	goto	u307_21
  7243  0078  287A               	goto	u307_20
  7244  0079                     u307_21:
  7245  0079  2889               	goto	i1l3404
  7246  007A                     u307_20:
  7247  007A                     i1l3398:
  7248  007A  0A32               	incf	___flmul@aexp,w
  7249  007B  1D03               	btfss	3,2
  7250  007C  287E               	goto	u308_21
  7251  007D  287F               	goto	u308_20
  7252  007E                     u308_21:
  7253  007E  2887               	goto	i1l3402
  7254  007F                     u308_20:
  7255  007F                     i1l3400:
  7256  007F  3000               	movlw	0
  7257  0080  00A7               	movwf	___flmul@a+3
  7258  0081  3000               	movlw	0
  7259  0082  00A6               	movwf	___flmul@a+2
  7260  0083  3000               	movlw	0
  7261  0084  00A5               	movwf	___flmul@a+1
  7262  0085  3000               	movlw	0
  7263  0086  00A4               	movwf	___flmul@a
  7264  0087                     i1l3402:
  7265  0087  17A6               	bsf	___flmul@a+2,7
  7266  0088  2891               	goto	i1l3406
  7267  0089                     i1l3404:
  7268  0089  3000               	movlw	0
  7269  008A  00A7               	movwf	___flmul@a+3
  7270  008B  3000               	movlw	0
  7271  008C  00A6               	movwf	___flmul@a+2
  7272  008D  3000               	movlw	0
  7273  008E  00A5               	movwf	___flmul@a+1
  7274  008F  3000               	movlw	0
  7275  0090  00A4               	movwf	___flmul@a
  7276  0091                     i1l3406:
  7277  0091  0832               	movf	___flmul@aexp,w
  7278  0092  1903               	btfsc	3,2
  7279  0093  2895               	goto	u309_21
  7280  0094  2896               	goto	u309_20
  7281  0095                     u309_21:
  7282  0095  289B               	goto	i1l3410
  7283  0096                     u309_20:
  7284  0096                     i1l3408:
  7285  0096  0833               	movf	___flmul@bexp,w
  7286  0097  1D03               	btfss	3,2
  7287  0098  289A               	goto	u310_21
  7288  0099  289B               	goto	u310_20
  7289  009A                     u310_21:
  7290  009A  28A4               	goto	i1l3414
  7291  009B                     u310_20:
  7292  009B                     i1l3410:
  7293  009B  3000               	movlw	0
  7294  009C  00A3               	movwf	?___flmul+3
  7295  009D  3000               	movlw	0
  7296  009E  00A2               	movwf	?___flmul+2
  7297  009F  3000               	movlw	0
  7298  00A0  00A1               	movwf	?___flmul+1
  7299  00A1  3000               	movlw	0
  7300  00A2  00A0               	movwf	?___flmul
  7301  00A3  2B97               	goto	i1l1141
  7302  00A4                     i1l3414:
  7303  00A4  0820               	movf	___flmul@b,w
  7304  00A5  00FF               	movwf	btemp+1
  7305  00A6  087F               	movf	btemp+1,w
  7306  00A7  00F0               	movwf	__Umul8_16@multiplicand
  7307  00A8  0826               	movf	___flmul@a+2,w
  7308  00A9  120A  158A  2188  120A  118A  	fcall	__Umul8_16
  7309  00AE  0871               	movf	?__Umul8_16+1,w
  7310  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  7311  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  7312  00B1  00B9               	movwf	___flmul@temp+1
  7313  00B2  0870               	movf	?__Umul8_16,w
  7314  00B3  00B8               	movwf	___flmul@temp
  7315  00B4                     i1l3416:
  7316  00B4  0838               	movf	___flmul@temp,w
  7317  00B5  00A8               	movwf	??___flmul
  7318  00B6  01A9               	clrf	??___flmul+1
  7319  00B7  01AA               	clrf	??___flmul+2
  7320  00B8  01AB               	clrf	??___flmul+3
  7321  00B9  082B               	movf	??___flmul+3,w
  7322  00BA  00B1               	movwf	___flmul@grs+3
  7323  00BB  082A               	movf	??___flmul+2,w
  7324  00BC  00B0               	movwf	___flmul@grs+2
  7325  00BD  0829               	movf	??___flmul+1,w
  7326  00BE  00AF               	movwf	___flmul@grs+1
  7327  00BF  0828               	movf	??___flmul,w
  7328  00C0  00AE               	movwf	___flmul@grs
  7329  00C1                     i1l3418:
  7330  00C1  0839               	movf	___flmul@temp+1,w
  7331  00C2  00A8               	movwf	??___flmul
  7332  00C3  01A9               	clrf	??___flmul+1
  7333  00C4  01AA               	clrf	??___flmul+2
  7334  00C5  01AB               	clrf	??___flmul+3
  7335  00C6  082B               	movf	??___flmul+3,w
  7336  00C7  00B7               	movwf	___flmul@prod+3
  7337  00C8  082A               	movf	??___flmul+2,w
  7338  00C9  00B6               	movwf	___flmul@prod+2
  7339  00CA  0829               	movf	??___flmul+1,w
  7340  00CB  00B5               	movwf	___flmul@prod+1
  7341  00CC  0828               	movf	??___flmul,w
  7342  00CD  00B4               	movwf	___flmul@prod
  7343  00CE  0821               	movf	___flmul@b+1,w
  7344  00CF  00FF               	movwf	btemp+1
  7345  00D0  087F               	movf	btemp+1,w
  7346  00D1  00F0               	movwf	__Umul8_16@multiplicand
  7347  00D2  0825               	movf	___flmul@a+1,w
  7348  00D3  120A  158A  2188  120A  118A  	fcall	__Umul8_16
  7349  00D8  0871               	movf	?__Umul8_16+1,w
  7350  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  7351  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  7352  00DB  00B9               	movwf	___flmul@temp+1
  7353  00DC  0870               	movf	?__Umul8_16,w
  7354  00DD  00B8               	movwf	___flmul@temp
  7355  00DE                     i1l3420:
  7356  00DE  0838               	movf	___flmul@temp,w
  7357  00DF  00A8               	movwf	??___flmul
  7358  00E0  01A9               	clrf	??___flmul+1
  7359  00E1  01AA               	clrf	??___flmul+2
  7360  00E2  01AB               	clrf	??___flmul+3
  7361  00E3  0828               	movf	??___flmul,w
  7362  00E4  07AE               	addwf	___flmul@grs,f
  7363  00E5  0829               	movf	??___flmul+1,w
  7364  00E6  1103               	clrz
  7365  00E7  1803               	skipnc
  7366  00E8  3E01               	addlw	1
  7367  00E9  1903               	skipnz
  7368  00EA  28EC               	goto	u311_21
  7369  00EB  07AF               	addwf	___flmul@grs+1,f
  7370  00EC                     u311_21:
  7371  00EC  082A               	movf	??___flmul+2,w
  7372  00ED  1103               	clrz
  7373  00EE  1803               	skipnc
  7374  00EF  3E01               	addlw	1
  7375  00F0  1903               	skipnz
  7376  00F1  28F3               	goto	u311_22
  7377  00F2  07B0               	addwf	___flmul@grs+2,f
  7378  00F3                     u311_22:
  7379  00F3  082B               	movf	??___flmul+3,w
  7380  00F4  1103               	clrz
  7381  00F5  1803               	skipnc
  7382  00F6  3E01               	addlw	1
  7383  00F7  1903               	skipnz
  7384  00F8  28FA               	goto	u311_23
  7385  00F9  07B1               	addwf	___flmul@grs+3,f
  7386  00FA                     u311_23:
  7387  00FA                     i1l3422:
  7388  00FA  0839               	movf	___flmul@temp+1,w
  7389  00FB  00A8               	movwf	??___flmul
  7390  00FC  01A9               	clrf	??___flmul+1
  7391  00FD  01AA               	clrf	??___flmul+2
  7392  00FE  01AB               	clrf	??___flmul+3
  7393  00FF  0828               	movf	??___flmul,w
  7394  0100  07B4               	addwf	___flmul@prod,f
  7395  0101  0829               	movf	??___flmul+1,w
  7396  0102  1103               	clrz
  7397  0103  1803               	skipnc
  7398  0104  3E01               	addlw	1
  7399  0105  1903               	skipnz
  7400  0106  2908               	goto	u312_21
  7401  0107  07B5               	addwf	___flmul@prod+1,f
  7402  0108                     u312_21:
  7403  0108  082A               	movf	??___flmul+2,w
  7404  0109  1103               	clrz
  7405  010A  1803               	skipnc
  7406  010B  3E01               	addlw	1
  7407  010C  1903               	skipnz
  7408  010D  290F               	goto	u312_22
  7409  010E  07B6               	addwf	___flmul@prod+2,f
  7410  010F                     u312_22:
  7411  010F  082B               	movf	??___flmul+3,w
  7412  0110  1103               	clrz
  7413  0111  1803               	skipnc
  7414  0112  3E01               	addlw	1
  7415  0113  1903               	skipnz
  7416  0114  2916               	goto	u312_23
  7417  0115  07B7               	addwf	___flmul@prod+3,f
  7418  0116                     u312_23:
  7419  0116  0822               	movf	___flmul@b+2,w
  7420  0117  00FF               	movwf	btemp+1
  7421  0118  087F               	movf	btemp+1,w
  7422  0119  00F0               	movwf	__Umul8_16@multiplicand
  7423  011A  0824               	movf	___flmul@a,w
  7424  011B  120A  158A  2188  120A  118A  	fcall	__Umul8_16
  7425  0120  0871               	movf	?__Umul8_16+1,w
  7426  0121  1283               	bcf	3,5	;RP0=0, select bank0
  7427  0122  1303               	bcf	3,6	;RP1=0, select bank0
  7428  0123  00B9               	movwf	___flmul@temp+1
  7429  0124  0870               	movf	?__Umul8_16,w
  7430  0125  00B8               	movwf	___flmul@temp
  7431  0126                     i1l3424:
  7432  0126  0838               	movf	___flmul@temp,w
  7433  0127  00A8               	movwf	??___flmul
  7434  0128  01A9               	clrf	??___flmul+1
  7435  0129  01AA               	clrf	??___flmul+2
  7436  012A  01AB               	clrf	??___flmul+3
  7437  012B  0828               	movf	??___flmul,w
  7438  012C  07AE               	addwf	___flmul@grs,f
  7439  012D  0829               	movf	??___flmul+1,w
  7440  012E  1103               	clrz
  7441  012F  1803               	skipnc
  7442  0130  3E01               	addlw	1
  7443  0131  1903               	skipnz
  7444  0132  2934               	goto	u313_21
  7445  0133  07AF               	addwf	___flmul@grs+1,f
  7446  0134                     u313_21:
  7447  0134  082A               	movf	??___flmul+2,w
  7448  0135  1103               	clrz
  7449  0136  1803               	skipnc
  7450  0137  3E01               	addlw	1
  7451  0138  1903               	skipnz
  7452  0139  293B               	goto	u313_22
  7453  013A  07B0               	addwf	___flmul@grs+2,f
  7454  013B                     u313_22:
  7455  013B  082B               	movf	??___flmul+3,w
  7456  013C  1103               	clrz
  7457  013D  1803               	skipnc
  7458  013E  3E01               	addlw	1
  7459  013F  1903               	skipnz
  7460  0140  2942               	goto	u313_23
  7461  0141  07B1               	addwf	___flmul@grs+3,f
  7462  0142                     u313_23:
  7463  0142                     i1l3426:
  7464  0142  0839               	movf	___flmul@temp+1,w
  7465  0143  00A8               	movwf	??___flmul
  7466  0144  01A9               	clrf	??___flmul+1
  7467  0145  01AA               	clrf	??___flmul+2
  7468  0146  01AB               	clrf	??___flmul+3
  7469  0147  0828               	movf	??___flmul,w
  7470  0148  07B4               	addwf	___flmul@prod,f
  7471  0149  0829               	movf	??___flmul+1,w
  7472  014A  1103               	clrz
  7473  014B  1803               	skipnc
  7474  014C  3E01               	addlw	1
  7475  014D  1903               	skipnz
  7476  014E  2950               	goto	u314_21
  7477  014F  07B5               	addwf	___flmul@prod+1,f
  7478  0150                     u314_21:
  7479  0150  082A               	movf	??___flmul+2,w
  7480  0151  1103               	clrz
  7481  0152  1803               	skipnc
  7482  0153  3E01               	addlw	1
  7483  0154  1903               	skipnz
  7484  0155  2957               	goto	u314_22
  7485  0156  07B6               	addwf	___flmul@prod+2,f
  7486  0157                     u314_22:
  7487  0157  082B               	movf	??___flmul+3,w
  7488  0158  1103               	clrz
  7489  0159  1803               	skipnc
  7490  015A  3E01               	addlw	1
  7491  015B  1903               	skipnz
  7492  015C  295E               	goto	u314_23
  7493  015D  07B7               	addwf	___flmul@prod+3,f
  7494  015E                     u314_23:
  7495  015E                     i1l3428:
  7496  015E  3008               	movlw	8
  7497  015F  00A8               	movwf	??___flmul
  7498  0160                     u315_25:
  7499  0160  1003               	clrc
  7500  0161  0DAE               	rlf	___flmul@grs,f
  7501  0162  0DAF               	rlf	___flmul@grs+1,f
  7502  0163  0DB0               	rlf	___flmul@grs+2,f
  7503  0164  0DB1               	rlf	___flmul@grs+3,f
  7504  0165  0BA8               	decfsz	??___flmul,f
  7505  0166  2960               	goto	u315_25
  7506  0167                     i1l3430:
  7507  0167  0821               	movf	___flmul@b+1,w
  7508  0168  00FF               	movwf	btemp+1
  7509  0169  087F               	movf	btemp+1,w
  7510  016A  00F0               	movwf	__Umul8_16@multiplicand
  7511  016B  0824               	movf	___flmul@a,w
  7512  016C  120A  158A  2188  120A  118A  	fcall	__Umul8_16
  7513  0171  0871               	movf	?__Umul8_16+1,w
  7514  0172  1283               	bcf	3,5	;RP0=0, select bank0
  7515  0173  1303               	bcf	3,6	;RP1=0, select bank0
  7516  0174  00B9               	movwf	___flmul@temp+1
  7517  0175  0870               	movf	?__Umul8_16,w
  7518  0176  00B8               	movwf	___flmul@temp
  7519  0177                     i1l3432:
  7520  0177  0838               	movf	___flmul@temp,w
  7521  0178  00A8               	movwf	??___flmul
  7522  0179  0839               	movf	___flmul@temp+1,w
  7523  017A  00A9               	movwf	??___flmul+1
  7524  017B  01AA               	clrf	??___flmul+2
  7525  017C  01AB               	clrf	??___flmul+3
  7526  017D  0828               	movf	??___flmul,w
  7527  017E  07AE               	addwf	___flmul@grs,f
  7528  017F  0829               	movf	??___flmul+1,w
  7529  0180  1103               	clrz
  7530  0181  1803               	skipnc
  7531  0182  3E01               	addlw	1
  7532  0183  1903               	skipnz
  7533  0184  2986               	goto	u316_21
  7534  0185  07AF               	addwf	___flmul@grs+1,f
  7535  0186                     u316_21:
  7536  0186  082A               	movf	??___flmul+2,w
  7537  0187  1103               	clrz
  7538  0188  1803               	skipnc
  7539  0189  3E01               	addlw	1
  7540  018A  1903               	skipnz
  7541  018B  298D               	goto	u316_22
  7542  018C  07B0               	addwf	___flmul@grs+2,f
  7543  018D                     u316_22:
  7544  018D  082B               	movf	??___flmul+3,w
  7545  018E  1103               	clrz
  7546  018F  1803               	skipnc
  7547  0190  3E01               	addlw	1
  7548  0191  1903               	skipnz
  7549  0192  2994               	goto	u316_23
  7550  0193  07B1               	addwf	___flmul@grs+3,f
  7551  0194                     u316_23:
  7552  0194                     i1l3434:
  7553  0194  0820               	movf	___flmul@b,w
  7554  0195  00FF               	movwf	btemp+1
  7555  0196  087F               	movf	btemp+1,w
  7556  0197  00F0               	movwf	__Umul8_16@multiplicand
  7557  0198  0825               	movf	___flmul@a+1,w
  7558  0199  120A  158A  2188  120A  118A  	fcall	__Umul8_16
  7559  019E  0871               	movf	?__Umul8_16+1,w
  7560  019F  1283               	bcf	3,5	;RP0=0, select bank0
  7561  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  7562  01A1  00B9               	movwf	___flmul@temp+1
  7563  01A2  0870               	movf	?__Umul8_16,w
  7564  01A3  00B8               	movwf	___flmul@temp
  7565  01A4                     i1l3436:
  7566  01A4  0838               	movf	___flmul@temp,w
  7567  01A5  00A8               	movwf	??___flmul
  7568  01A6  0839               	movf	___flmul@temp+1,w
  7569  01A7  00A9               	movwf	??___flmul+1
  7570  01A8  01AA               	clrf	??___flmul+2
  7571  01A9  01AB               	clrf	??___flmul+3
  7572  01AA  0828               	movf	??___flmul,w
  7573  01AB  07AE               	addwf	___flmul@grs,f
  7574  01AC  0829               	movf	??___flmul+1,w
  7575  01AD  1103               	clrz
  7576  01AE  1803               	skipnc
  7577  01AF  3E01               	addlw	1
  7578  01B0  1903               	skipnz
  7579  01B1  29B3               	goto	u317_21
  7580  01B2  07AF               	addwf	___flmul@grs+1,f
  7581  01B3                     u317_21:
  7582  01B3  082A               	movf	??___flmul+2,w
  7583  01B4  1103               	clrz
  7584  01B5  1803               	skipnc
  7585  01B6  3E01               	addlw	1
  7586  01B7  1903               	skipnz
  7587  01B8  29BA               	goto	u317_22
  7588  01B9  07B0               	addwf	___flmul@grs+2,f
  7589  01BA                     u317_22:
  7590  01BA  082B               	movf	??___flmul+3,w
  7591  01BB  1103               	clrz
  7592  01BC  1803               	skipnc
  7593  01BD  3E01               	addlw	1
  7594  01BE  1903               	skipnz
  7595  01BF  29C1               	goto	u317_23
  7596  01C0  07B1               	addwf	___flmul@grs+3,f
  7597  01C1                     u317_23:
  7598  01C1                     i1l3438:
  7599  01C1  3008               	movlw	8
  7600  01C2  00A8               	movwf	??___flmul
  7601  01C3                     u318_25:
  7602  01C3  1003               	clrc
  7603  01C4  0DAE               	rlf	___flmul@grs,f
  7604  01C5  0DAF               	rlf	___flmul@grs+1,f
  7605  01C6  0DB0               	rlf	___flmul@grs+2,f
  7606  01C7  0DB1               	rlf	___flmul@grs+3,f
  7607  01C8  0BA8               	decfsz	??___flmul,f
  7608  01C9  29C3               	goto	u318_25
  7609  01CA  0820               	movf	___flmul@b,w
  7610  01CB  00FF               	movwf	btemp+1
  7611  01CC  087F               	movf	btemp+1,w
  7612  01CD  00F0               	movwf	__Umul8_16@multiplicand
  7613  01CE  0824               	movf	___flmul@a,w
  7614  01CF  120A  158A  2188  120A  118A  	fcall	__Umul8_16
  7615  01D4  0871               	movf	?__Umul8_16+1,w
  7616  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  7617  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  7618  01D7  00B9               	movwf	___flmul@temp+1
  7619  01D8  0870               	movf	?__Umul8_16,w
  7620  01D9  00B8               	movwf	___flmul@temp
  7621  01DA                     i1l3440:
  7622  01DA  0838               	movf	___flmul@temp,w
  7623  01DB  00A8               	movwf	??___flmul
  7624  01DC  0839               	movf	___flmul@temp+1,w
  7625  01DD  00A9               	movwf	??___flmul+1
  7626  01DE  01AA               	clrf	??___flmul+2
  7627  01DF  01AB               	clrf	??___flmul+3
  7628  01E0  0828               	movf	??___flmul,w
  7629  01E1  07AE               	addwf	___flmul@grs,f
  7630  01E2  0829               	movf	??___flmul+1,w
  7631  01E3  1103               	clrz
  7632  01E4  1803               	skipnc
  7633  01E5  3E01               	addlw	1
  7634  01E6  1903               	skipnz
  7635  01E7  29E9               	goto	u319_21
  7636  01E8  07AF               	addwf	___flmul@grs+1,f
  7637  01E9                     u319_21:
  7638  01E9  082A               	movf	??___flmul+2,w
  7639  01EA  1103               	clrz
  7640  01EB  1803               	skipnc
  7641  01EC  3E01               	addlw	1
  7642  01ED  1903               	skipnz
  7643  01EE  29F0               	goto	u319_22
  7644  01EF  07B0               	addwf	___flmul@grs+2,f
  7645  01F0                     u319_22:
  7646  01F0  082B               	movf	??___flmul+3,w
  7647  01F1  1103               	clrz
  7648  01F2  1803               	skipnc
  7649  01F3  3E01               	addlw	1
  7650  01F4  1903               	skipnz
  7651  01F5  29F7               	goto	u319_23
  7652  01F6  07B1               	addwf	___flmul@grs+3,f
  7653  01F7                     u319_23:
  7654  01F7                     i1l3442:
  7655  01F7  0821               	movf	___flmul@b+1,w
  7656  01F8  00FF               	movwf	btemp+1
  7657  01F9  087F               	movf	btemp+1,w
  7658  01FA  00F0               	movwf	__Umul8_16@multiplicand
  7659  01FB  0826               	movf	___flmul@a+2,w
  7660  01FC  120A  158A  2188  120A  118A  	fcall	__Umul8_16
  7661  0201  0871               	movf	?__Umul8_16+1,w
  7662  0202  1283               	bcf	3,5	;RP0=0, select bank0
  7663  0203  1303               	bcf	3,6	;RP1=0, select bank0
  7664  0204  00B9               	movwf	___flmul@temp+1
  7665  0205  0870               	movf	?__Umul8_16,w
  7666  0206  00B8               	movwf	___flmul@temp
  7667  0207  0838               	movf	___flmul@temp,w
  7668  0208  00A8               	movwf	??___flmul
  7669  0209  0839               	movf	___flmul@temp+1,w
  7670  020A  00A9               	movwf	??___flmul+1
  7671  020B  01AA               	clrf	??___flmul+2
  7672  020C  01AB               	clrf	??___flmul+3
  7673  020D  0828               	movf	??___flmul,w
  7674  020E  07B4               	addwf	___flmul@prod,f
  7675  020F  0829               	movf	??___flmul+1,w
  7676  0210  1103               	clrz
  7677  0211  1803               	skipnc
  7678  0212  3E01               	addlw	1
  7679  0213  1903               	skipnz
  7680  0214  2A16               	goto	u320_21
  7681  0215  07B5               	addwf	___flmul@prod+1,f
  7682  0216                     u320_21:
  7683  0216  082A               	movf	??___flmul+2,w
  7684  0217  1103               	clrz
  7685  0218  1803               	skipnc
  7686  0219  3E01               	addlw	1
  7687  021A  1903               	skipnz
  7688  021B  2A1D               	goto	u320_22
  7689  021C  07B6               	addwf	___flmul@prod+2,f
  7690  021D                     u320_22:
  7691  021D  082B               	movf	??___flmul+3,w
  7692  021E  1103               	clrz
  7693  021F  1803               	skipnc
  7694  0220  3E01               	addlw	1
  7695  0221  1903               	skipnz
  7696  0222  2A24               	goto	u320_23
  7697  0223  07B7               	addwf	___flmul@prod+3,f
  7698  0224                     u320_23:
  7699  0224                     i1l3444:
  7700  0224  0822               	movf	___flmul@b+2,w
  7701  0225  00FF               	movwf	btemp+1
  7702  0226  087F               	movf	btemp+1,w
  7703  0227  00F0               	movwf	__Umul8_16@multiplicand
  7704  0228  0825               	movf	___flmul@a+1,w
  7705  0229  120A  158A  2188  120A  118A  	fcall	__Umul8_16
  7706  022E  0871               	movf	?__Umul8_16+1,w
  7707  022F  1283               	bcf	3,5	;RP0=0, select bank0
  7708  0230  1303               	bcf	3,6	;RP1=0, select bank0
  7709  0231  00B9               	movwf	___flmul@temp+1
  7710  0232  0870               	movf	?__Umul8_16,w
  7711  0233  00B8               	movwf	___flmul@temp
  7712  0234                     i1l3446:
  7713  0234  0838               	movf	___flmul@temp,w
  7714  0235  00A8               	movwf	??___flmul
  7715  0236  0839               	movf	___flmul@temp+1,w
  7716  0237  00A9               	movwf	??___flmul+1
  7717  0238  01AA               	clrf	??___flmul+2
  7718  0239  01AB               	clrf	??___flmul+3
  7719  023A  0828               	movf	??___flmul,w
  7720  023B  07B4               	addwf	___flmul@prod,f
  7721  023C  0829               	movf	??___flmul+1,w
  7722  023D  1103               	clrz
  7723  023E  1803               	skipnc
  7724  023F  3E01               	addlw	1
  7725  0240  1903               	skipnz
  7726  0241  2A43               	goto	u321_21
  7727  0242  07B5               	addwf	___flmul@prod+1,f
  7728  0243                     u321_21:
  7729  0243  082A               	movf	??___flmul+2,w
  7730  0244  1103               	clrz
  7731  0245  1803               	skipnc
  7732  0246  3E01               	addlw	1
  7733  0247  1903               	skipnz
  7734  0248  2A4A               	goto	u321_22
  7735  0249  07B6               	addwf	___flmul@prod+2,f
  7736  024A                     u321_22:
  7737  024A  082B               	movf	??___flmul+3,w
  7738  024B  1103               	clrz
  7739  024C  1803               	skipnc
  7740  024D  3E01               	addlw	1
  7741  024E  1903               	skipnz
  7742  024F  2A51               	goto	u321_23
  7743  0250  07B7               	addwf	___flmul@prod+3,f
  7744  0251                     u321_23:
  7745  0251  0822               	movf	___flmul@b+2,w
  7746  0252  00FF               	movwf	btemp+1
  7747  0253  087F               	movf	btemp+1,w
  7748  0254  00F0               	movwf	__Umul8_16@multiplicand
  7749  0255  0826               	movf	___flmul@a+2,w
  7750  0256  120A  158A  2188  120A  118A  	fcall	__Umul8_16
  7751  025B  0871               	movf	?__Umul8_16+1,w
  7752  025C  1283               	bcf	3,5	;RP0=0, select bank0
  7753  025D  1303               	bcf	3,6	;RP1=0, select bank0
  7754  025E  00B9               	movwf	___flmul@temp+1
  7755  025F  0870               	movf	?__Umul8_16,w
  7756  0260  00B8               	movwf	___flmul@temp
  7757  0261                     i1l3448:
  7758  0261  0838               	movf	___flmul@temp,w
  7759  0262  00A8               	movwf	??___flmul
  7760  0263  0839               	movf	___flmul@temp+1,w
  7761  0264  00A9               	movwf	??___flmul+1
  7762  0265  01AA               	clrf	??___flmul+2
  7763  0266  01AB               	clrf	??___flmul+3
  7764  0267  3008               	movlw	8
  7765  0268                     u322_25:
  7766  0268  1003               	clrc
  7767  0269  0DA8               	rlf	??___flmul,f
  7768  026A  0DA9               	rlf	??___flmul+1,f
  7769  026B  0DAA               	rlf	??___flmul+2,f
  7770  026C  0DAB               	rlf	??___flmul+3,f
  7771  026D                     u322_20:
  7772  026D  3EFF               	addlw	-1
  7773  026E  1D03               	skipz
  7774  026F  2A68               	goto	u322_25
  7775  0270  0828               	movf	??___flmul,w
  7776  0271  07B4               	addwf	___flmul@prod,f
  7777  0272  0829               	movf	??___flmul+1,w
  7778  0273  1103               	clrz
  7779  0274  1803               	skipnc
  7780  0275  3E01               	addlw	1
  7781  0276  1903               	skipnz
  7782  0277  2A79               	goto	u323_21
  7783  0278  07B5               	addwf	___flmul@prod+1,f
  7784  0279                     u323_21:
  7785  0279  082A               	movf	??___flmul+2,w
  7786  027A  1103               	clrz
  7787  027B  1803               	skipnc
  7788  027C  3E01               	addlw	1
  7789  027D  1903               	skipnz
  7790  027E  2A80               	goto	u323_22
  7791  027F  07B6               	addwf	___flmul@prod+2,f
  7792  0280                     u323_22:
  7793  0280  082B               	movf	??___flmul+3,w
  7794  0281  1103               	clrz
  7795  0282  1803               	skipnc
  7796  0283  3E01               	addlw	1
  7797  0284  1903               	skipnz
  7798  0285  2A87               	goto	u323_23
  7799  0286  07B7               	addwf	___flmul@prod+3,f
  7800  0287                     u323_23:
  7801  0287                     i1l3450:
  7802  0287  082E               	movf	___flmul@grs,w
  7803  0288  00A8               	movwf	??___flmul
  7804  0289  082F               	movf	___flmul@grs+1,w
  7805  028A  00A9               	movwf	??___flmul+1
  7806  028B  0830               	movf	___flmul@grs+2,w
  7807  028C  00AA               	movwf	??___flmul+2
  7808  028D  0831               	movf	___flmul@grs+3,w
  7809  028E  00AB               	movwf	??___flmul+3
  7810  028F  3018               	movlw	24
  7811  0290                     u324_25:
  7812  0290  1003               	clrc
  7813  0291  0CAB               	rrf	??___flmul+3,f
  7814  0292  0CAA               	rrf	??___flmul+2,f
  7815  0293  0CA9               	rrf	??___flmul+1,f
  7816  0294  0CA8               	rrf	??___flmul,f
  7817  0295                     u324_20:
  7818  0295  3EFF               	addlw	-1
  7819  0296  1D03               	skipz
  7820  0297  2A90               	goto	u324_25
  7821  0298  0828               	movf	??___flmul,w
  7822  0299  07B4               	addwf	___flmul@prod,f
  7823  029A  0829               	movf	??___flmul+1,w
  7824  029B  1103               	clrz
  7825  029C  1803               	skipnc
  7826  029D  3E01               	addlw	1
  7827  029E  1903               	skipnz
  7828  029F  2AA1               	goto	u325_21
  7829  02A0  07B5               	addwf	___flmul@prod+1,f
  7830  02A1                     u325_21:
  7831  02A1  082A               	movf	??___flmul+2,w
  7832  02A2  1103               	clrz
  7833  02A3  1803               	skipnc
  7834  02A4  3E01               	addlw	1
  7835  02A5  1903               	skipnz
  7836  02A6  2AA8               	goto	u325_22
  7837  02A7  07B6               	addwf	___flmul@prod+2,f
  7838  02A8                     u325_22:
  7839  02A8  082B               	movf	??___flmul+3,w
  7840  02A9  1103               	clrz
  7841  02AA  1803               	skipnc
  7842  02AB  3E01               	addlw	1
  7843  02AC  1903               	skipnz
  7844  02AD  2AAF               	goto	u325_23
  7845  02AE  07B7               	addwf	___flmul@prod+3,f
  7846  02AF                     u325_23:
  7847  02AF                     i1l3452:
  7848  02AF  3008               	movlw	8
  7849  02B0  00A8               	movwf	??___flmul
  7850  02B1                     u326_25:
  7851  02B1  1003               	clrc
  7852  02B2  0DAE               	rlf	___flmul@grs,f
  7853  02B3  0DAF               	rlf	___flmul@grs+1,f
  7854  02B4  0DB0               	rlf	___flmul@grs+2,f
  7855  02B5  0DB1               	rlf	___flmul@grs+3,f
  7856  02B6  0BA8               	decfsz	??___flmul,f
  7857  02B7  2AB1               	goto	u326_25
  7858  02B8                     i1l3454:
  7859  02B8  0833               	movf	___flmul@bexp,w
  7860  02B9  0732               	addwf	___flmul@aexp,w
  7861  02BA  00A8               	movwf	??___flmul
  7862  02BB  01A9               	clrf	??___flmul+1
  7863  02BC  0DA9               	rlf	??___flmul+1,f
  7864  02BD  0828               	movf	??___flmul,w
  7865  02BE  3E82               	addlw	130
  7866  02BF  00B8               	movwf	___flmul@temp
  7867  02C0  0829               	movf	??___flmul+1,w
  7868  02C1  1803               	skipnc
  7869  02C2  3E01               	addlw	1
  7870  02C3  3EFF               	addlw	255
  7871  02C4  00B9               	movwf	___flmul@temp+1
  7872  02C5  2AE3               	goto	i1l3466
  7873  02C6                     i1l3456:
  7874  02C6  3001               	movlw	1
  7875  02C7  00A8               	movwf	??___flmul
  7876  02C8                     u327_25:
  7877  02C8  1003               	clrc
  7878  02C9  0DB4               	rlf	___flmul@prod,f
  7879  02CA  0DB5               	rlf	___flmul@prod+1,f
  7880  02CB  0DB6               	rlf	___flmul@prod+2,f
  7881  02CC  0DB7               	rlf	___flmul@prod+3,f
  7882  02CD  0BA8               	decfsz	??___flmul,f
  7883  02CE  2AC8               	goto	u327_25
  7884  02CF                     i1l3458:
  7885  02CF  1FB1               	btfss	___flmul@grs+3,7
  7886  02D0  2AD2               	goto	u328_21
  7887  02D1  2AD3               	goto	u328_20
  7888  02D2                     u328_21:
  7889  02D2  2AD4               	goto	i1l3462
  7890  02D3                     u328_20:
  7891  02D3                     i1l3460:
  7892  02D3  1434               	bsf	___flmul@prod,0
  7893  02D4                     i1l3462:
  7894  02D4  3001               	movlw	1
  7895  02D5  00A8               	movwf	??___flmul
  7896  02D6                     u329_25:
  7897  02D6  1003               	clrc
  7898  02D7  0DAE               	rlf	___flmul@grs,f
  7899  02D8  0DAF               	rlf	___flmul@grs+1,f
  7900  02D9  0DB0               	rlf	___flmul@grs+2,f
  7901  02DA  0DB1               	rlf	___flmul@grs+3,f
  7902  02DB  0BA8               	decfsz	??___flmul,f
  7903  02DC  2AD6               	goto	u329_25
  7904  02DD                     i1l3464:
  7905  02DD  30FF               	movlw	255
  7906  02DE  07B8               	addwf	___flmul@temp,f
  7907  02DF  1803               	skipnc
  7908  02E0  0AB9               	incf	___flmul@temp+1,f
  7909  02E1  30FF               	movlw	255
  7910  02E2  07B9               	addwf	___flmul@temp+1,f
  7911  02E3                     i1l3466:
  7912  02E3  1FB6               	btfss	___flmul@prod+2,7
  7913  02E4  2AE6               	goto	u330_21
  7914  02E5  2AE7               	goto	u330_20
  7915  02E6                     u330_21:
  7916  02E6  2AC6               	goto	i1l3456
  7917  02E7                     u330_20:
  7918  02E7                     i1l3468:
  7919  02E7  01B2               	clrf	___flmul@aexp
  7920  02E8                     i1l3470:
  7921  02E8  1FB1               	btfss	___flmul@grs+3,7
  7922  02E9  2AEB               	goto	u331_21
  7923  02EA  2AEC               	goto	u331_20
  7924  02EB                     u331_21:
  7925  02EB  2B08               	goto	i1l3478
  7926  02EC                     u331_20:
  7927  02EC                     i1l3472:
  7928  02EC  30FF               	movlw	255
  7929  02ED  052E               	andwf	___flmul@grs,w
  7930  02EE  00A8               	movwf	??___flmul
  7931  02EF  30FF               	movlw	255
  7932  02F0  052F               	andwf	___flmul@grs+1,w
  7933  02F1  00A9               	movwf	??___flmul+1
  7934  02F2  30FF               	movlw	255
  7935  02F3  0530               	andwf	___flmul@grs+2,w
  7936  02F4  00AA               	movwf	??___flmul+2
  7937  02F5  307F               	movlw	127
  7938  02F6  0531               	andwf	___flmul@grs+3,w
  7939  02F7  00AB               	movwf	??___flmul+3
  7940  02F8  082B               	movf	??___flmul+3,w
  7941  02F9  042A               	iorwf	??___flmul+2,w
  7942  02FA  0429               	iorwf	??___flmul+1,w
  7943  02FB  0428               	iorwf	??___flmul,w
  7944  02FC  1903               	skipnz
  7945  02FD  2AFF               	goto	u332_21
  7946  02FE  2B00               	goto	u332_20
  7947  02FF                     u332_21:
  7948  02FF  2B03               	goto	i1l1147
  7949  0300                     u332_20:
  7950  0300                     i1l3474:
  7951  0300  01B2               	clrf	___flmul@aexp
  7952  0301  0AB2               	incf	___flmul@aexp,f
  7953  0302  2B08               	goto	i1l3478
  7954  0303                     i1l1147:
  7955  0303  1C34               	btfss	___flmul@prod,0
  7956  0304  2B06               	goto	u333_21
  7957  0305  2B07               	goto	u333_20
  7958  0306                     u333_21:
  7959  0306  2B08               	goto	i1l3478
  7960  0307                     u333_20:
  7961  0307  2B00               	goto	i1l3474
  7962  0308                     i1l3478:
  7963  0308  0832               	movf	___flmul@aexp,w
  7964  0309  1903               	btfsc	3,2
  7965  030A  2B0C               	goto	u334_21
  7966  030B  2B0D               	goto	u334_20
  7967  030C                     u334_21:
  7968  030C  2B3E               	goto	i1l3488
  7969  030D                     u334_20:
  7970  030D                     i1l3480:
  7971  030D  3001               	movlw	1
  7972  030E  07B4               	addwf	___flmul@prod,f
  7973  030F  3000               	movlw	0
  7974  0310  1803               	skipnc
  7975  0311  3001               	movlw	1
  7976  0312  07B5               	addwf	___flmul@prod+1,f
  7977  0313  3000               	movlw	0
  7978  0314  1803               	skipnc
  7979  0315  3001               	movlw	1
  7980  0316  07B6               	addwf	___flmul@prod+2,f
  7981  0317  3000               	movlw	0
  7982  0318  1803               	skipnc
  7983  0319  3001               	movlw	1
  7984  031A  07B7               	addwf	___flmul@prod+3,f
  7985  031B                     i1l3482:
  7986  031B  1C37               	btfss	___flmul@prod+3,0
  7987  031C  2B1E               	goto	u335_21
  7988  031D  2B1F               	goto	u335_20
  7989  031E                     u335_21:
  7990  031E  2B3E               	goto	i1l3488
  7991  031F                     u335_20:
  7992  031F                     i1l3484:
  7993  031F  0834               	movf	___flmul@prod,w
  7994  0320  00A8               	movwf	??___flmul
  7995  0321  0835               	movf	___flmul@prod+1,w
  7996  0322  00A9               	movwf	??___flmul+1
  7997  0323  0836               	movf	___flmul@prod+2,w
  7998  0324  00AA               	movwf	??___flmul+2
  7999  0325  0837               	movf	___flmul@prod+3,w
  8000  0326  00AB               	movwf	??___flmul+3
  8001  0327  3001               	movlw	1
  8002  0328  00AC               	movwf	??___flmul+4
  8003  0329                     u336_25:
  8004  0329  0D2B               	rlf	??___flmul+3,w
  8005  032A  0CAB               	rrf	??___flmul+3,f
  8006  032B  0CAA               	rrf	??___flmul+2,f
  8007  032C  0CA9               	rrf	??___flmul+1,f
  8008  032D  0CA8               	rrf	??___flmul,f
  8009  032E                     u336_20:
  8010  032E  0BAC               	decfsz	??___flmul+4,f
  8011  032F  2B29               	goto	u336_25
  8012  0330  082B               	movf	??___flmul+3,w
  8013  0331  00B7               	movwf	___flmul@prod+3
  8014  0332  082A               	movf	??___flmul+2,w
  8015  0333  00B6               	movwf	___flmul@prod+2
  8016  0334  0829               	movf	??___flmul+1,w
  8017  0335  00B5               	movwf	___flmul@prod+1
  8018  0336  0828               	movf	??___flmul,w
  8019  0337  00B4               	movwf	___flmul@prod
  8020  0338                     i1l3486:
  8021  0338  3001               	movlw	1
  8022  0339  07B8               	addwf	___flmul@temp,f
  8023  033A  1803               	skipnc
  8024  033B  0AB9               	incf	___flmul@temp+1,f
  8025  033C  3000               	movlw	0
  8026  033D  07B9               	addwf	___flmul@temp+1,f
  8027  033E                     i1l3488:
  8028  033E  0839               	movf	___flmul@temp+1,w
  8029  033F  3A80               	xorlw	128
  8030  0340  00FF               	movwf	btemp+1
  8031  0341  3080               	movlw	128
  8032  0342  027F               	subwf	btemp+1,w
  8033  0343  1D03               	skipz
  8034  0344  2B47               	goto	u337_25
  8035  0345  30FF               	movlw	255
  8036  0346  0238               	subwf	___flmul@temp,w
  8037  0347                     u337_25:
  8038  0347  1C03               	skipc
  8039  0348  2B4A               	goto	u337_21
  8040  0349  2B4B               	goto	u337_20
  8041  034A                     u337_21:
  8042  034A  2B56               	goto	i1l3492
  8043  034B                     u337_20:
  8044  034B                     i1l3490:
  8045  034B  307F               	movlw	127
  8046  034C  1283               	bcf	3,5	;RP0=0, select bank0
  8047  034D  1303               	bcf	3,6	;RP1=0, select bank0
  8048  034E  00B7               	movwf	___flmul@prod+3
  8049  034F  3080               	movlw	128
  8050  0350  00B6               	movwf	___flmul@prod+2
  8051  0351  3000               	movlw	0
  8052  0352  00B5               	movwf	___flmul@prod+1
  8053  0353  3000               	movlw	0
  8054  0354  00B4               	movwf	___flmul@prod
  8055  0355  2B8B               	goto	i1l1153
  8056  0356                     i1l3492:
  8057  0356  1283               	bcf	3,5	;RP0=0, select bank0
  8058  0357  1303               	bcf	3,6	;RP1=0, select bank0
  8059  0358  0839               	movf	___flmul@temp+1,w
  8060  0359  3A80               	xorlw	128
  8061  035A  00FF               	movwf	btemp+1
  8062  035B  3080               	movlw	128
  8063  035C  027F               	subwf	btemp+1,w
  8064  035D  1D03               	skipz
  8065  035E  2B61               	goto	u338_25
  8066  035F  3001               	movlw	1
  8067  0360  0238               	subwf	___flmul@temp,w
  8068  0361                     u338_25:
  8069  0361  1803               	skipnc
  8070  0362  2B64               	goto	u338_21
  8071  0363  2B65               	goto	u338_20
  8072  0364                     u338_21:
  8073  0364  2B71               	goto	i1l3498
  8074  0365                     u338_20:
  8075  0365                     i1l3494:
  8076  0365  3000               	movlw	0
  8077  0366  1283               	bcf	3,5	;RP0=0, select bank0
  8078  0367  1303               	bcf	3,6	;RP1=0, select bank0
  8079  0368  00B7               	movwf	___flmul@prod+3
  8080  0369  3000               	movlw	0
  8081  036A  00B6               	movwf	___flmul@prod+2
  8082  036B  3000               	movlw	0
  8083  036C  00B5               	movwf	___flmul@prod+1
  8084  036D  3000               	movlw	0
  8085  036E  00B4               	movwf	___flmul@prod
  8086  036F                     i1l3496:
  8087  036F  01AD               	clrf	___flmul@sign
  8088  0370  2B8B               	goto	i1l1153
  8089  0371                     i1l3498:
  8090  0371  1283               	bcf	3,5	;RP0=0, select bank0
  8091  0372  1303               	bcf	3,6	;RP1=0, select bank0
  8092  0373  0838               	movf	___flmul@temp,w
  8093  0374  00FF               	movwf	btemp+1
  8094  0375  087F               	movf	btemp+1,w
  8095  0376  00B3               	movwf	___flmul@bexp
  8096  0377                     i1l3500:
  8097  0377  30FF               	movlw	255
  8098  0378  05B4               	andwf	___flmul@prod,f
  8099  0379  30FF               	movlw	255
  8100  037A  05B5               	andwf	___flmul@prod+1,f
  8101  037B  307F               	movlw	127
  8102  037C  05B6               	andwf	___flmul@prod+2,f
  8103  037D  3000               	movlw	0
  8104  037E  05B7               	andwf	___flmul@prod+3,f
  8105  037F                     i1l3502:
  8106  037F  1C33               	btfss	___flmul@bexp,0
  8107  0380  2B82               	goto	u339_21
  8108  0381  2B83               	goto	u339_20
  8109  0382                     u339_21:
  8110  0382  2B84               	goto	i1l3506
  8111  0383                     u339_20:
  8112  0383                     i1l3504:
  8113  0383  17B6               	bsf	___flmul@prod+2,7
  8114  0384                     i1l3506:
  8115  0384  0833               	movf	___flmul@bexp,w
  8116  0385  00A8               	movwf	??___flmul
  8117  0386  1003               	clrc
  8118  0387  0C28               	rrf	??___flmul,w
  8119  0388  00FF               	movwf	btemp+1
  8120  0389  087F               	movf	btemp+1,w
  8121  038A  00B7               	movwf	___flmul@prod+3
  8122  038B                     i1l1153:
  8123  038B  082D               	movf	___flmul@sign,w
  8124  038C  00FF               	movwf	btemp+1
  8125  038D  087F               	movf	btemp+1,w
  8126  038E  04B7               	iorwf	___flmul@prod+3,f
  8127  038F                     i1l3508:
  8128  038F  0837               	movf	___flmul@prod+3,w
  8129  0390  00A3               	movwf	?___flmul+3
  8130  0391  0836               	movf	___flmul@prod+2,w
  8131  0392  00A2               	movwf	?___flmul+2
  8132  0393  0835               	movf	___flmul@prod+1,w
  8133  0394  00A1               	movwf	?___flmul+1
  8134  0395  0834               	movf	___flmul@prod,w
  8135  0396  00A0               	movwf	?___flmul
  8136  0397                     i1l1141:
  8137  0397  0008               	return
  8138  0398                     __end_of___flmul:
  8139                           
  8140                           	psect	text42
  8141  0988                     __ptext42:	
  8142 ;; *************** function __Umul8_16 *****************
  8143 ;; Defined at:
  8144 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8_16.c"
  8145 ;; Parameters:    Size  Location     Type
  8146 ;;  multiplier      1    wreg     unsigned char 
  8147 ;;  multiplicand    1    0[COMMON] unsigned char 
  8148 ;; Auto vars:     Size  Location     Type
  8149 ;;  multiplier      1    8[COMMON] unsigned char 
  8150 ;;  word_mpld       2    6[COMMON] unsigned int 
  8151 ;;  product         2    4[COMMON] unsigned int 
  8152 ;; Return value:  Size  Location     Type
  8153 ;;                  2    0[COMMON] unsigned int 
  8154 ;; Registers used:
  8155 ;;		wreg, status,2, status,0
  8156 ;; Tracked objects:
  8157 ;;		On entry : 0/0
  8158 ;;		On exit  : 0/0
  8159 ;;		Unchanged: 0/0
  8160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8161 ;;      Params:         2       0       0       0       0
  8162 ;;      Locals:         5       0       0       0       0
  8163 ;;      Temps:          2       0       0       0       0
  8164 ;;      Totals:         9       0       0       0       0
  8165 ;;Total ram usage:        9 bytes
  8166 ;; Hardware stack levels used:    1
  8167 ;; This function calls:
  8168 ;;		Nothing
  8169 ;; This function is called by:
  8170 ;;		___flmul
  8171 ;; This function uses a non-reentrant model
  8172 ;;
  8173                           
  8174                           
  8175                           ;psect for function __Umul8_16
  8176  0988                     __Umul8_16:
  8177                           
  8178                           ;incstack = 0
  8179 ;; hardware stack exceeded
  8180                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8181                           ;__Umul8_16@multiplier stored from wreg
  8182  0988  00F8               	movwf	__Umul8_16@multiplier
  8183  0989                     i1l3080:
  8184  0989  01F4               	clrf	__Umul8_16@product
  8185  098A  01F5               	clrf	__Umul8_16@product+1
  8186  098B                     i1l3082:
  8187  098B  0870               	movf	__Umul8_16@multiplicand,w
  8188  098C  00F2               	movwf	??__Umul8_16
  8189  098D  01F3               	clrf	??__Umul8_16+1
  8190  098E  0872               	movf	??__Umul8_16,w
  8191  098F  00F6               	movwf	__Umul8_16@word_mpld
  8192  0990  0873               	movf	??__Umul8_16+1,w
  8193  0991  00F7               	movwf	__Umul8_16@word_mpld+1
  8194  0992                     i1l3084:
  8195  0992  1C78               	btfss	__Umul8_16@multiplier,0
  8196  0993  2995               	goto	u248_21
  8197  0994  2996               	goto	u248_20
  8198  0995                     u248_21:
  8199  0995  299C               	goto	i1l1160
  8200  0996                     u248_20:
  8201  0996                     i1l3086:
  8202  0996  0876               	movf	__Umul8_16@word_mpld,w
  8203  0997  07F4               	addwf	__Umul8_16@product,f
  8204  0998  1803               	skipnc
  8205  0999  0AF5               	incf	__Umul8_16@product+1,f
  8206  099A  0877               	movf	__Umul8_16@word_mpld+1,w
  8207  099B  07F5               	addwf	__Umul8_16@product+1,f
  8208  099C                     i1l1160:
  8209  099C  3001               	movlw	1
  8210  099D                     u249_25:
  8211  099D  1003               	clrc
  8212  099E  0DF6               	rlf	__Umul8_16@word_mpld,f
  8213  099F  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  8214  09A0  3EFF               	addlw	-1
  8215  09A1  1D03               	skipz
  8216  09A2  299D               	goto	u249_25
  8217  09A3  1003               	clrc
  8218  09A4  0CF8               	rrf	__Umul8_16@multiplier,f
  8219  09A5                     i1l3088:
  8220  09A5  0878               	movf	__Umul8_16@multiplier,w
  8221  09A6  1D03               	btfss	3,2
  8222  09A7  29A9               	goto	u250_21
  8223  09A8  29AA               	goto	u250_20
  8224  09A9                     u250_21:
  8225  09A9  2992               	goto	i1l3084
  8226  09AA                     u250_20:
  8227  09AA                     i1l3090:
  8228  09AA  0875               	movf	__Umul8_16@product+1,w
  8229  09AB  00F1               	movwf	?__Umul8_16+1
  8230  09AC  0874               	movf	__Umul8_16@product,w
  8231  09AD  00F0               	movwf	?__Umul8_16
  8232  09AE                     i1l1162:
  8233  09AE  0008               	return
  8234  09AF                     __end_of__Umul8_16:
  8235                           
  8236                           	psect	text43
  8237  07BE                     __ptext43:	
  8238 ;; *************** function _DD_GetState *****************
  8239 ;; Defined at:
  8240 ;;		line 50 in file "DD.c"
  8241 ;; Parameters:    Size  Location     Type
  8242 ;;  device          1    wreg     enum E884
  8243 ;; Auto vars:     Size  Location     Type
  8244 ;;  device          1    2[COMMON] enum E884
  8245 ;; Return value:  Size  Location     Type
  8246 ;;                  1    wreg      enum E13
  8247 ;; Registers used:
  8248 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8249 ;; Tracked objects:
  8250 ;;		On entry : 0/0
  8251 ;;		On exit  : 0/0
  8252 ;;		Unchanged: 0/0
  8253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8254 ;;      Params:         0       0       0       0       0
  8255 ;;      Locals:         1       0       0       0       0
  8256 ;;      Temps:          2       0       0       0       0
  8257 ;;      Totals:         3       0       0       0       0
  8258 ;;Total ram usage:        3 bytes
  8259 ;; Hardware stack levels used:    1
  8260 ;; This function calls:
  8261 ;;		Nothing
  8262 ;; This function is called by:
  8263 ;;		_ISR
  8264 ;; This function uses a non-reentrant model
  8265 ;;
  8266                           
  8267                           
  8268                           ;psect for function _DD_GetState
  8269  07BE                     _DD_GetState:
  8270                           
  8271                           ;incstack = 0
  8272                           ; Regs used in _DD_GetState: [wreg-fsr0h+status,2+status,0]
  8273                           ;DD_GetState@device stored from wreg
  8274  07BE  00F2               	movwf	DD_GetState@device
  8275  07BF                     i1l3294:
  8276                           
  8277                           ;DD.c: 50: tState DD_GetState(tDD device);DD.c: 51: {;DD.c: 52:     switch(device)
  8278  07BF  2FE7               	goto	i1l3316
  8279  07C0                     i1l3296:
  8280                           
  8281                           ;DD.c: 55:             return ((PORTC & (1<<5)) >> 5);
  8282  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  8283  07C1  1303               	bcf	3,6	;RP1=0, select bank0
  8284  07C2  0807               	movf	7,w	;volatile
  8285  07C3  00F0               	movwf	??_DD_GetState
  8286  07C4  3005               	movlw	5
  8287  07C5                     u288_25:
  8288  07C5  1003               	clrc
  8289  07C6  0CF0               	rrf	??_DD_GetState,f
  8290  07C7  3EFF               	addlw	-1
  8291  07C8  1D03               	skipz
  8292  07C9  2FC5               	goto	u288_25
  8293  07CA  0870               	movf	??_DD_GetState,w
  8294  07CB  3901               	andlw	1
  8295  07CC  2FFA               	goto	i1l267
  8296  07CD                     i1l3302:
  8297                           
  8298                           ;DD.c: 58:             return ((PORTC & (1<<2)) >> 2);
  8299  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  8300  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  8301  07CF  0807               	movf	7,w	;volatile
  8302  07D0  00F0               	movwf	??_DD_GetState
  8303  07D1  3002               	movlw	2
  8304  07D2                     u289_25:
  8305  07D2  1003               	clrc
  8306  07D3  0CF0               	rrf	??_DD_GetState,f
  8307  07D4  3EFF               	addlw	-1
  8308  07D5  1D03               	skipz
  8309  07D6  2FD2               	goto	u289_25
  8310  07D7  0870               	movf	??_DD_GetState,w
  8311  07D8  3901               	andlw	1
  8312  07D9  2FFA               	goto	i1l267
  8313  07DA                     i1l3308:
  8314                           
  8315                           ;DD.c: 61:             return ((PORTB & (1<<7)) >> 7);
  8316  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  8317  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  8318  07DC  0806               	movf	6,w	;volatile
  8319  07DD  00F0               	movwf	??_DD_GetState
  8320  07DE  3007               	movlw	7
  8321  07DF                     u290_25:
  8322  07DF  1003               	clrc
  8323  07E0  0CF0               	rrf	??_DD_GetState,f
  8324  07E1  3EFF               	addlw	-1
  8325  07E2  1D03               	skipz
  8326  07E3  2FDF               	goto	u290_25
  8327  07E4  0870               	movf	??_DD_GetState,w
  8328  07E5  3901               	andlw	1
  8329  07E6  2FFA               	goto	i1l267
  8330  07E7                     i1l3316:
  8331  07E7  0872               	movf	DD_GetState@device,w
  8332  07E8  00F0               	movwf	??_DD_GetState
  8333  07E9  01F1               	clrf	??_DD_GetState+1
  8334                           
  8335                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8336                           ; Switch size 1, requested type "simple"
  8337                           ; Number of cases is 1, Range of values is 0 to 0
  8338                           ; switch strategies available:
  8339                           ; Name         Instructions Cycles
  8340                           ; simple_byte            4     3 (average)
  8341                           ; direct_byte           11     8 (fixed)
  8342                           ; jumptable            260     6 (fixed)
  8343                           ;	Chosen strategy is simple_byte
  8344  07EA  0871               	movf	??_DD_GetState+1,w
  8345  07EB  3A00               	xorlw	0	; case 0
  8346  07EC  1903               	skipnz
  8347  07ED  2FEF               	goto	i1l3934
  8348  07EE  2FFA               	goto	i1l267
  8349  07EF                     i1l3934:
  8350                           
  8351                           ; Switch size 1, requested type "simple"
  8352                           ; Number of cases is 3, Range of values is 0 to 2
  8353                           ; switch strategies available:
  8354                           ; Name         Instructions Cycles
  8355                           ; simple_byte           10     6 (average)
  8356                           ; direct_byte           17     8 (fixed)
  8357                           ; jumptable            260     6 (fixed)
  8358                           ;	Chosen strategy is simple_byte
  8359  07EF  0870               	movf	??_DD_GetState,w
  8360  07F0  3A00               	xorlw	0	; case 0
  8361  07F1  1903               	skipnz
  8362  07F2  2FC0               	goto	i1l3296
  8363  07F3  3A01               	xorlw	1	; case 1
  8364  07F4  1903               	skipnz
  8365  07F5  2FCD               	goto	i1l3302
  8366  07F6  3A03               	xorlw	3	; case 2
  8367  07F7  1903               	skipnz
  8368  07F8  2FDA               	goto	i1l3308
  8369  07F9  2FFA               	goto	i1l267
  8370  07FA                     i1l267:
  8371  07FA  0008               	return
  8372  07FB                     __end_of_DD_GetState:
  8373                           
  8374                           	psect	text44
  8375  09D8                     __ptext44:	
  8376 ;; *************** function _ADC_ReadChannel *****************
  8377 ;; Defined at:
  8378 ;;		line 69 in file "adc.c"
  8379 ;; Parameters:    Size  Location     Type
  8380 ;;  channel         1    wreg     enum E869
  8381 ;; Auto vars:     Size  Location     Type
  8382 ;;  channel         1    5[COMMON] enum E869
  8383 ;;  result          2    3[COMMON] unsigned short 
  8384 ;; Return value:  Size  Location     Type
  8385 ;;                  2    0[COMMON] unsigned short 
  8386 ;; Registers used:
  8387 ;;		wreg, status,2, status,0, btemp+1
  8388 ;; Tracked objects:
  8389 ;;		On entry : 0/0
  8390 ;;		On exit  : 0/0
  8391 ;;		Unchanged: 0/0
  8392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8393 ;;      Params:         2       0       0       0       0
  8394 ;;      Locals:         3       0       0       0       0
  8395 ;;      Temps:          1       0       0       0       0
  8396 ;;      Totals:         6       0       0       0       0
  8397 ;;Total ram usage:        6 bytes
  8398 ;; Hardware stack levels used:    1
  8399 ;; This function calls:
  8400 ;;		Nothing
  8401 ;; This function is called by:
  8402 ;;		_ISR
  8403 ;; This function uses a non-reentrant model
  8404 ;;
  8405                           
  8406                           
  8407                           ;psect for function _ADC_ReadChannel
  8408  09D8                     _ADC_ReadChannel:
  8409                           
  8410                           ;incstack = 0
  8411                           ; Regs used in _ADC_ReadChannel: [wreg+status,2+status,0+btemp+1]
  8412                           ;ADC_ReadChannel@channel stored from wreg
  8413  09D8  00F5               	movwf	ADC_ReadChannel@channel
  8414  09D9                     i1l3322:
  8415                           
  8416                           ;adc.c: 69: uint16_t ADC_ReadChannel(tADC_Channel_Select channel);adc.c: 70: {;adc.c: 72
      +                          :     ADCON0 &= ~(7<<3);
  8417  09D9  30C7               	movlw	199
  8418  09DA  00FF               	movwf	btemp+1
  8419  09DB  087F               	movf	btemp+1,w
  8420  09DC  1283               	bcf	3,5	;RP0=0, select bank0
  8421  09DD  1303               	bcf	3,6	;RP1=0, select bank0
  8422  09DE  059F               	andwf	31,f	;volatile
  8423                           
  8424                           ;adc.c: 75:     ADCON0 |= ((channel)<<3);
  8425  09DF  0875               	movf	ADC_ReadChannel@channel,w	;volatile
  8426  09E0  00F2               	movwf	??_ADC_ReadChannel
  8427  09E1  3002               	movlw	2
  8428  09E2                     u291_25:
  8429  09E2  1003               	clrc
  8430  09E3  0DF2               	rlf	??_ADC_ReadChannel,f
  8431  09E4  3EFF               	addlw	-1
  8432  09E5  1D03               	skipz
  8433  09E6  29E2               	goto	u291_25
  8434  09E7  1003               	clrc
  8435  09E8  0D72               	rlf	??_ADC_ReadChannel,w
  8436  09E9  00FF               	movwf	btemp+1
  8437  09EA  087F               	movf	btemp+1,w
  8438  09EB  049F               	iorwf	31,f	;volatile
  8439  09EC                     i1l3324:
  8440                           
  8441                           ;adc.c: 78:     _delay((unsigned long)((30)*(4000000/4000000.0)));
  8442  09EC  3009               	movlw	9
  8443  09ED  00F2               	movwf	??_ADC_ReadChannel
  8444  09EE                     u381_27:
  8445  09EE  0BF2               	decfsz	??_ADC_ReadChannel,f
  8446  09EF  29EE               	goto	u381_27
  8447  09F0  29F1               	nop2
  8448  09F1                     i1l3326:
  8449                           
  8450                           ;adc.c: 81:     (ADCON0|=(1<<2));
  8451  09F1  1283               	bcf	3,5	;RP0=0, select bank0
  8452  09F2  1303               	bcf	3,6	;RP1=0, select bank0
  8453  09F3  151F               	bsf	31,2	;volatile
  8454  09F4                     i1l308:	
  8455                           ;adc.c: 84:     while((ADCON0 & (1<<2)));
  8456                           
  8457  09F4  191F               	btfsc	31,2	;volatile
  8458  09F5  29F7               	goto	u292_21
  8459  09F6  29F8               	goto	u292_20
  8460  09F7                     u292_21:
  8461  09F7  29F4               	goto	i1l308
  8462  09F8                     u292_20:
  8463  09F8                     i1l3328:
  8464                           
  8465                           ;adc.c: 87:     uint16_t result =((ADRESH<<8) + ADRESL) ;
  8466  09F8  081E               	movf	30,w	;volatile
  8467  09F9  00F4               	movwf	ADC_ReadChannel@result+1
  8468  09FA  1683               	bsf	3,5	;RP0=1, select bank1
  8469  09FB  1303               	bcf	3,6	;RP1=0, select bank1
  8470  09FC  081E               	movf	30,w	;volatile
  8471  09FD  00F3               	movwf	ADC_ReadChannel@result
  8472                           
  8473                           ;adc.c: 89:     return result;
  8474  09FE  0874               	movf	ADC_ReadChannel@result+1,w
  8475  09FF  00F1               	movwf	?_ADC_ReadChannel+1
  8476  0A00  0873               	movf	ADC_ReadChannel@result,w
  8477  0A01  00F0               	movwf	?_ADC_ReadChannel
  8478  0A02                     i1l311:
  8479  0A02  0008               	return
  8480  0A03                     __end_of_ADC_ReadChannel:
  8481  007E                     btemp	set	126	;btemp
  8482  007E                     wtemp0	set	126
  8483                           
  8484                           	psect	config
  8485                           
  8486                           ;Config register CONFIG @ 0x2007
  8487                           ;	Oscillator Selection bits
  8488                           ;	FOSC = XT, XT oscillator
  8489                           ;	Watchdog Timer Enable bit
  8490                           ;	WDTE = OFF, WDT disabled
  8491                           ;	Power-up Timer Enable bit
  8492                           ;	PWRTE = ON, PWRT enabled
  8493                           ;	Brown-out Reset Enable bit
  8494                           ;	BOREN = ON, BOR enabled
  8495                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  8496                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  8497                           ;	Data EEPROM Memory Code Protection bit
  8498                           ;	CPD = OFF, Data EEPROM code protection off
  8499                           ;	Flash Program Memory Write Enable bits
  8500                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  8501                           ;	In-Circuit Debugger Mode bit
  8502                           ;	DEBUG = 0x1, unprogrammed default
  8503                           ;	Flash Program Memory Code Protection bit
  8504                           ;	CP = OFF, Code protection off
  8505  2007                     	org	8199
  8506  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     42      51
    BANK1            80     29      63
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    EWH_getAvrgTempReading@buffer	PTR unsigned char  size(1) Largest target is 10
		 -> ReadingBuffer(BANK1[10]), 

    TMR1_Init@config	PTR struct . size(1) Largest target is 2
		 -> EWH_Init@TMR1_cfg(BANK1[2]), 

    ADC_Init@config	PTR struct . size(1) Largest target is 4
		 -> EWH_Init@adc_config(BANK1[4]), 

    I2C_Init@i2c_config	PTR struct . size(1) Largest target is 6
		 -> EWH_Init@i2c_config(BANK1[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    _main->_EWH_Init
    _EWH_WakeUP_Mode->_EWH_SSD_Update
    _EWH_EEPROM_Read->_EEPROM_ReadByte
    _EEPROM_ReadByte->_I2C_Master_ReadByte
    _EWH_SetTemp_Mode->_EWH_SSD_Update
    _EWH_SSD_OFF->_SSD_OFF
    _EWH_EEPROM_Update->_EEPROM_WriteByte
    _EWH_Operating_Mode->_EWH_getAvrgTempReading
    _EWH_getAvrgTempReading->___lwdiv
    _EWH_SSD_Update->_SSD_Write
    _SSD_Write->___awdiv
    _SSD_OFF->_SSD_config
    _EWH_Init->_I2C_Init
    _I2C_Init->___lldiv
    _EWH_EEPROM_Init->_EEPROM_WriteByte
    _EEPROM_WriteByte->_I2C_Master_WriteByte

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   15211
                                             27 BANK1      2     2      0
                           _EWH_Init
                 _EWH_Operating_Mode
                   _EWH_SetTemp_Mode
                     _EWH_Sleep_Mode
                    _EWH_WakeUP_Mode
 ---------------------------------------------------------------------------------
 (1) _EWH_WakeUP_Mode                                      2     2      0    3073
                                             14 BANK1      2     2      0
                    _EWH_EEPROM_Read
                     _EWH_SSD_Update
 ---------------------------------------------------------------------------------
 (2) _EWH_EEPROM_Read                                      0     0      0     210
                    _EEPROM_ReadByte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_ReadByte                                      5     3      2     210
                                              2 BANK1      5     3      2
                _I2C_Master_ReadByte
      _I2C_Master_Send_RepeatedStart
              _I2C_Master_Send_Start
               _I2C_Master_Send_Stop
               _I2C_Master_WriteByte
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_ReadByte                                  2     2      0      23
                                              0 BANK1      2     2      0
                _I2C_Master_Send_ACK
               _I2C_Master_Send_NACK
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Send_NACK                                 0     0      0       0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Send_ACK                                  0     0      0       0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (1) _EWH_Sleep_Mode                                       0     0      0    1426
                        _DD_SetState
                        _EWH_SSD_OFF
                          _TMR1_Stop
 ---------------------------------------------------------------------------------
 (1) _EWH_SetTemp_Mode                                     2     2      0    4703
                                             14 BANK1      2     2      0
                        _DD_SetState
                  _EWH_EEPROM_Update
                        _EWH_SSD_OFF
                     _EWH_SSD_Update
                         _TMR1_Start
 ---------------------------------------------------------------------------------
 (2) _EWH_SSD_OFF                                          0     0      0     512
                            _SSD_OFF
 ---------------------------------------------------------------------------------
 (2) _EWH_EEPROM_Update                                    1     1      0     414
                                              6 BANK1      1     1      0
                   _EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (1) _EWH_Operating_Mode                                   3     3      0    4807
                                             16 BANK1      3     3      0
                        _DD_SetState
                     _EWH_SSD_Update
             _EWH_getAvrgTempReading
                         _TMR1_Start
                          _TMR1_Stop
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) _TMR1_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EWH_getAvrgTempReading                               9     8      1     582
                                              7 BANK1      9     8      1
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (2) _EWH_SSD_Update                                       4     2      2    2863
                                             10 BANK1      4     2      2
                            _SSD_OFF
                          _SSD_Write
                            ___awdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     463
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (3) _SSD_Write                                            2     1      1     860
                                              8 BANK1      2     1      1
                         _SSD_config
                            ___awdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _SSD_OFF                                              1     1      0     512
                                              4 BANK1      1     1      0
                         _SSD_config
 ---------------------------------------------------------------------------------
 (4) _SSD_config                                           4     3      1     490
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (2) _DD_SetState                                          4     3      1     914
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (1) _EWH_Init                                            12    12      0    1202
                                             15 BANK1     12    12      0
                           _ADC_Init
                            _DD_Init
                    _EWH_EEPROM_Init
                           _I2C_Init
                            _SW_Init
                          _TMR1_Init
 ---------------------------------------------------------------------------------
 (2) _TMR1_Init                                            3     3      0      77
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _SW_Init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             1     1      0     413
                                             14 BANK1      1     1      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (2) _EWH_EEPROM_Init                                      0     0      0     392
                   _EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_WriteByte                                     5     2      3     392
                                              1 BANK1      5     2      3
      _I2C_Master_Send_RepeatedStart
              _I2C_Master_Send_Start
               _I2C_Master_Send_Stop
               _I2C_Master_WriteByte
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_WriteByte                                 1     1      0      22
                                              0 BANK1      1     1      0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Send_Stop                                 0     0      0       0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Send_Start                                0     0      0       0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Send_RepeatedStart                        0     0      0       0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (5) _I2C_Wait_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DD_Init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             3     3      0      99
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  6     6      0    3210
                                             36 BANK0      6     6      0
                    _ADC_ReadChannel
                        _DD_GetState
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (8) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (8) ___fltol                                             10     6      4     305
                                             26 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             26    18      8    2417
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (9) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (8) _DD_GetState                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (8) _ADC_ReadChannel                                      6     4      2      45
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EWH_Init
     _ADC_Init
     _DD_Init
     _EWH_EEPROM_Init
       _EEPROM_WriteByte
         _I2C_Master_Send_RepeatedStart
           _I2C_Wait_IDLE
         _I2C_Master_Send_Start
           _I2C_Wait_IDLE
         _I2C_Master_Send_Stop
           _I2C_Wait_IDLE
         _I2C_Master_WriteByte
           _I2C_Wait_IDLE
     _I2C_Init
       ___lldiv
     _SW_Init
     _TMR1_Init
   _EWH_Operating_Mode
     _DD_SetState
     _EWH_SSD_Update
       _SSD_OFF
         _SSD_config
       _SSD_Write
         _SSD_config
         ___awdiv (ARG)
         ___lwmod (ARG)
       ___awdiv
       ___lwmod
     _EWH_getAvrgTempReading
       ___lwdiv
     _TMR1_Start
     _TMR1_Stop
     ___awmod
   _EWH_SetTemp_Mode
     _DD_SetState
     _EWH_EEPROM_Update
       _EEPROM_WriteByte
         _I2C_Master_Send_RepeatedStart
           _I2C_Wait_IDLE
         _I2C_Master_Send_Start
           _I2C_Wait_IDLE
         _I2C_Master_Send_Stop
           _I2C_Wait_IDLE
         _I2C_Master_WriteByte
           _I2C_Wait_IDLE
     _EWH_SSD_OFF
       _SSD_OFF
         _SSD_config
     _EWH_SSD_Update
       _SSD_OFF
         _SSD_config
       _SSD_Write
         _SSD_config
         ___awdiv (ARG)
         ___lwmod (ARG)
       ___awdiv
       ___lwmod
     _TMR1_Start
   _EWH_Sleep_Mode
     _DD_SetState
     _EWH_SSD_OFF
       _SSD_OFF
         _SSD_config
     _TMR1_Stop
   _EWH_WakeUP_Mode
     _EWH_EEPROM_Read
       _EEPROM_ReadByte
         _I2C_Master_ReadByte
           _I2C_Master_Send_ACK
             _I2C_Wait_IDLE
           _I2C_Master_Send_NACK
             _I2C_Wait_IDLE
           _I2C_Wait_IDLE
         _I2C_Master_Send_RepeatedStart
           _I2C_Wait_IDLE
         _I2C_Master_Send_Start
           _I2C_Wait_IDLE
         _I2C_Master_Send_Stop
           _I2C_Wait_IDLE
         _I2C_Master_WriteByte
           _I2C_Wait_IDLE
     _EWH_SSD_Update
       _SSD_OFF
         _SSD_config
       _SSD_Write
         _SSD_config
         ___awdiv (ARG)
         ___lwmod (ARG)
       ___awdiv
       ___lwmod

 _ISR (ROOT)
   _ADC_ReadChannel
   _DD_GetState
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1D      3F       7       78.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2A      33       5       63.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      80      12        0.0%
ABS                  0      0      80       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Jul 11 06:41:52 2020

                          ?_DD_SetState 00A0                                       pc 0002  
                                    l13 0A80                                      l31 0D6D  
                                    l16 0AAF            __size_of_I2C_Master_ReadByte 0029  
                                    l28 0D1E                                      l91 08D2  
                                    l94 08DE                                      l88 0BBF  
                                    l97 088A                            ___awdiv@sign 00A5  
                                    fsr 0004                              _SSD_config 0E9B  
          __size_of_I2C_Master_Send_ACK 000A                     __Umul8_16@word_mpld 0076  
                 _I2C_Master_Send_Start 0882                                     l100 0893  
                                   l103 0881                                     l112 0978  
                                   l120 09D7                                     l114 097C  
                                   l106 08A6                                     l115 0987  
                                   l301 0FA9                                     l109 08B0  
                                   l302 0FB0                                     l305 0FFF  
                                   l241 094C                                     l341 0BC9  
                                   l342 0BCE                                     l262 0CB7  
                                   l343 0BD3                                     l351 090B  
                                   l504 0A74                                     l512 07BD  
                                   l345 0BF1                                     l347 0BF3  
                                   l339 0BC4                                     l348 0C09  
                                   l357 07FE                                     l543 048F  
                                   l552 0B2F                                     l297 0F90  
                                   l529 05A5                                     l561 08D1  
                                   l298 0F94                                     l570 0DC9  
                                   l555 08FB                                     l388 089C  
                                   l652 0F05                                     l549 04C9  
                                   l558 091C                                     l663 08C5  
                                   l567 08EB                                     l656 0969  
                                   l576 0A3A                                     l905 0E9A  
                                   l918 0D12                                     l788 0E31  
                                   _GIE 005F                                     _PEN 048A  
                                   _ISR 05A6                                     _SEN 0488  
                                   fsr0 0004                                     indf 0000  
                          ___awmod@sign 00A5                         TMR1_Init@config 00A2  
            __size_of_EWH_EEPROM_Update 0011                      I2C_Init@i2c_config 00AE  
                          ___flmul@aexp 0032                            ___flmul@bexp 0033  
                          ___flmul@sign 002D                            ___flmul@temp 0038  
                          ___flmul@prod 0034           __size_of_I2C_Master_Send_NACK 000A  
                       __end_of_DD_Init 094D                                    ?_ISR 0070  
                          ___fltol@exp1 0043                                    l1024 0B75  
                                  l1034 0AEB                                    l3002 0899  
                                  l3010 08C6                                    l3004 089A  
                                  l3100 0AFA                                    l3020 0DA0  
                                  l3006 089B                                    l3110 0B0B  
                                  l3102 0AFE                                    l3022 0DBE  
                                  l3014 0D6E                                    l3030 0A19  
                                  l3040 08EC                                    l3120 0B2A  
                                  l3112 0B15                                    l3104 0B02  
                                  l3016 0D8F                                    l3032 0A1D  
                                  l3200 0407                                    l3024 090F  
                                  l3008 08DF                                    l3114 0B1A  
                                  l3106 0B04                                    l3018 0D9A  
                                  l3034 0A23                                    l3026 0A06  
                                  l3050 0CC6                                    l3042 0CB8  
                                  l3210 0464                                    l3202 041B  
                                  l3130 0A64                                    l3122 0A3B  
                                  l3116 0B20                                    l3108 0B05  
                                  l3036 0A39                                    l3028 0A0A  
                                  l3060 0CDF                                    l3052 0CCA  
                                  l3044 0CBB                                    l3220 049A  
                                  l3212 046F                                    l3204 0431  
                                  l3140 0A6C                                    l3132 0A65  
                                  l3124 0A5B                                    l3118 0B25  
                                  l3070 0CFE                                    l3062 0CE3  
                                  l3054 0CCF                                    l3046 0CBF  
                                  l3230 04B8                                    l3222 04A7  
                                  l3214 047F                                    l3206 0444  
                                  l3126 0A60                                    l3150 074C  
                                  l3064 0CE7                                    l3056 0CD5  
                                  l3072 0D04                                    l3048 0CC4  
                                  l3232 04BD                                    l3224 04AC  
                                  l3216 0494                                    l3208 0454  
                                  l3240 04D0                                    l3144 0A70  
                                  l3136 0A66                                    l3128 0A63  
                                  l2600 089D                                    l3160 0785  
                                  l3152 0758                                    l3074 0D09  
                                  l3066 0CF1                                    l3058 0CD8  
                                  l3234 04BE                                    l3226 04AD  
                                  l3250 04F3                                    l3242 04D5  
                                  l2602 08A2                                    l2610 08AF  
                                  l3170 07BA                                    l3162 0788  
                                  l3154 0768                                    l3146 073B  
                                  l2612 0882                                    l2620 096D  
                                  l3076 0D0E                                    l3068 0CF7  
                                  l3236 04C3                                    l3228 04B2  
                                  l3180 03A2                                    l3260 0532  
                                  l3252 0501                                    l3244 04D8  
                                  l2604 08A5                                    l3156 0773  
                                  l3164 078F                                    l3148 0742  
                                  l2614 0887                                    l2630 088B  
                                  l2622 0972                                    l2702 0A75  
                                  l3094 0AEC                                    l3190 03D9  
                                  l3182 03A7                                    l3270 055B  
                                  l3262 0536                                    l3254 0511  
                                  l3246 04E1                                    l3238 04CA  
                                  l2606 08A7                                    l2710 0D19  
                                  l3166 079F                                    l3158 0783  
                                  l2616 0879                                    l2632 0890  
                                  l2624 097D                                    l2704 0A7B  
                                  l3096 0AF2                                    l2800 0E91  
                                  l3192 03DF                                    l3184 03B5  
                                  l3176 0398                                    l3280 0582  
                                  l3272 056B                                    l3256 0517  
                                  l3264 053A                                    l3248 04EA  
                                  l2608 08AC                                    l2640 09C2  
                                  l2712 0D38                                    l3168 07AA  
                                  l2618 087E                                    l2626 0982  
                                  l2706 0A9A                                    l3098 0AF4  
                                  l2650 0E9E                                    l2722 08BE  
                                  l2730 0961                                    l2802 0E96  
                                  l2810 0B3A                                    l3194 03EE  
                                  l3186 03BF                                    l3178 039E  
                                  l3290 05A0                                    l3282 0587  
                                  l3266 054A                                    l3258 0522  
                                  l2642 09C9                                    l2634 09B2  
                                  l2714 0D5A                                    l3610 0C1D  
                                  l3602 0C15                                    l2900 0948  
                                  l2740 0DDF                                    l2660 0EAC  
                                  l2724 0950                                    l2820 0B5D  
                                  l2812 0B3D                                    l3196 03F0  
                                  l3188 03C3                                    l3292 05A1  
                                  l3284 058E                                    l3268 0550  
                                  l3276 056E                                    l2644 09CF  
                                  l2636 09B7                                    l2716 0D65  
                                  l2708 0D13                                    l3620 0C2C  
                                  l2750 0E0B                                    l2742 0DE8  
                                  l2910 0C71                                    l2902 0C61  
                                  l2670 0EC0                                    l2654 0E9F  
                                  l2726 0958                                    l2822 0B63  
                                  l2814 0B44                                    l2806 0B30  
                                  l3198 03F5                                    l3286 0593  
                                  l3278 0575                                    l2646 09D4  
                                  l2638 09BF                                    l2718 0D6A  
                                  l3622 0C32                                    l3630 0C43  
                                  l3614 0C23                                    l3606 0C19  
                                  l2752 0E19                                    l2744 0DEC  
                                  l2736 0DCA                                    l2920 0C8E  
                                  l2912 0C78                                    l2904 0C62  
                                  l2680 0ED4                                    l2664 0EB3  
                                  l2656 0EA3                                    l2728 095B  
                                  l2840 0AC6                                    l2832 0AB0  
                                  l2824 0B64                                    l2816 0B48  
                                  l2808 0B34                                    l3288 0599  
                                  l3624 0C38                                    l2754 0E1A  
                                  l2746 0DF0                                    l2738 0DDC  
                                  l2922 0C93                                    l2914 0C7D  
                                  l2906 0C67                                    l2930 0CA4  
                                  l2690 0EE8                                    l2674 0EC7  
                                  l2666 0EB7                                    l2658 0EA8  
                                  l2770 0E40                                    l2762 0E32  
                                  l2842 0ACA                                    l2834 0AB8  
                                  l2850 0AE7                                    l2826 0B6B  
                                  l2818 0B4C                                    l3626 0C3E  
                                  l3618 0C27                                    l2940 0F89  
                                  l2596 08D2                                    l2756 0E23  
                                  l2748 0DF9                                    l2860 0BA5  
                                  l2924 0C97                                    l2916 0C81  
                                  l2908 0C6B                                    l2684 0EDB  
                                  l2676 0ECB                                    l2668 0EBC  
                                  l2780 0E55                                    l2772 0E44  
                                  l2764 0E35                                    l2844 0AD4  
                                  l2836 0ABB                                    l2828 0B71  
                                  l2942 0F98                                    l2950 0FDC  
                                  l2598 08D8                                    l2758 0E29  
                                  l2862 0BA8                                    l2854 0B79  
                                  l2926 0C9D                                    l2918 0C87  
                                  l2686 0EDF                                    l2678 0ED0  
                                  l2694 0EEF                                    l2790 0E78  
                                  l2782 0E58                                    l2774 0E49  
                                  l2766 0E39                                    l2846 0ADA  
                                  l2838 0AC2                                    l2952 0FEE  
                                  l2944 0F9F                                    l2880 0930  
                                  l2872 0BAE                                    l2864 0BAC  
                                  l2856 0B7B                                    l2688 0EE4  
                                  l2792 0E7E                                    l2784 0E5F  
                                  l2776 0E4D                                    l2768 0E3E  
                                  l2848 0AE1                                    l2954 0FF0  
                                  l2946 0FA5                                    l2938 0F85  
                                  l2874 0BB7                                    l2858 0B84  
                                  l3930 0C01                                    l2794 0E7F  
                                  l2786 0E63                                    l2778 0E4F  
                                  l3922 0C4D                                    l3594 0C0A  
                                  l2956 0FF7                                    l3932 0FC5  
                                  l2948 0FB7                                    l2892 093E  
                                  l2884 0936                                    l2876 0930  
                                  l2868 0BAD                                    l2972 0BF5  
                                  l2964 0BC3                                    l3924 0EF7  
                                  l2796 0E86                                    l2788 0E67  
                                  l2990 0894                                    l3926 0CAC  
                                  l2798 0E8C                                    l3598 0C0F  
                                  l2896 0944                                    l2888 093A  
                                  l3928 0BE3                                    l2968 0BD8  
                                  l2994 0897                                    l2986 08FC  
                                  l2988 07FB                                    l2998 0898  
                                  _ADIE 0466                                    _ADIF 0066  
                                  _ADON 00F8           __size_of_I2C_Master_Send_Stop 0009  
                                  _T0CS 040D                                    u2010 0961  
                                  u2011 0960                                    u2020 0DDC  
                                  u2100 0E44                                    u2021 0DDB  
                                  u2101 0E43                                    u2005 0D4C  
                                  u2110 0E55                                    u2111 0E54  
                                  u2040 0DF0                                    u2041 0DEF  
                                  u2130 0E67                                    u2210 0B4C  
                                  u2035 0DE1                                    u2131 0E66  
                                  u2211 0B4B                                    u2060 0E0B  
                                  u2061 0E0A                                    u2125 0E59  
                                  u2205 0B3E                                    u2150 0E78  
                                  u2310 0AE7                                    u2230 0B5D  
                                  u2055 0DF2                                    u2151 0E77  
                                  u2311 0AE6                                    u2231 0B5C  
                                  u2080 0E29                                    u2320 0BB7  
                                  u2400 0CCA                                    u2081 0E28  
                                  u2065 0E07                                    u2321 0BB6  
                                  u2145 0E68                                    u2305 0ADB  
                                  u2225 0B4D                                    u2401 0CC9  
                                  u2330 0C67                                    u2170 0E8C  
                                  u2090 0E39                                    u2250 0B71  
                                  u2410 0CD5                                    u2075 0E1B  
                                  u2331 0C66                                    u2171 0E8B  
                                  u2155 0E74                                    u2091 0E38  
                                  u2251 0B70                                    u2235 0B59  
                                  u2411 0CD4                                    u2340 0C7D  
                                  u2180 0E91                                    u2260 0AB8  
                                  u2341 0C7C                                    u2181 0E90  
                                  u2165 0E80                                    u2261 0AB7  
                                  u2245 0B65                                    u2350 0C93  
                                  u2190 0B3A                                    u2430 0CE7  
                                  u2351 0C92                                    u2191 0B39  
                                  u2431 0CE6                                    u2280 0ACA  
                                  u2440 0CF1                                    u2600 03F5  
                                  u2520 0768                                    u2281 0AC9  
                                  u2441 0CF0                                    u2425 0CD9  
                                  u2601 03F4                                    u2521 0767  
                                  u2370 0FF7                                    u2290 0AD4  
                                  u2610 0407                                    u2371 0FF6  
                                  u2291 0AD3                                    u2275 0ABC  
                                  u2611 0406                                    u2515 075F  
                                  u1900 097C                                    u2380 0A23  
                                  u2460 0D04                                    u2700 048F  
                                  u2620 0431                                    u2540 0783  
                                  u2365 0FE4                                    u1901 097B  
                                  u2381 0A22                                    u2461 0D03  
                                  u2445 0CED                                    u2701 048E  
                                  u2621 0430                                    u2541 0782  
                                  u2470 0D09                                    u2390 0CBF  
                                  u2710 0499                                    u1910 09C9  
                                  u2295 0AD0                                    u2471 0D08  
                                  u2455 0CF8                                    u2391 0CBE  
                                  u2711 0498                                    u2615 0403  
                                  u1911 09C8                                    u2535 077A  
                                  u1920 0EA8                                    u2720 04AC  
                                  u2640 0454                                    u2800 054A  
                                  u2560 079F                                    u1921 0EA7  
                                  u2721 04AB                                    u2641 0453  
                                  u2625 042D                                    u2801 0549  
                                  u2561 079E                                    u1930 0EBC  
                                  u2730 04BD                                    u2810 0550  
                                  u1931 0EBB                                    u2731 04BC  
                                  u2635 044B                                    u2811 054F  
                                  u2555 0796                                    u1940 0ED0  
                                  u2660 0464                                    u2580 07BA  
                                  u1941 0ECF                                    u2661 0463  
                                  u2581 07B9                                    u1950 0EE4  
                                  u2590 03DF                                    u2830 056B  
                                  u2750 0511                                    u1951 0EE3  
                                  u2655 045B                                    u2591 03DE  
                                  u2831 056A                                    u2751 0510  
                                  u2575 07B1                                    u1880 08D8  
                                  u2680 047F                                    u2840 0575  
                                  u2760 0517                                    u1881 08D7  
                                  u2681 047E                                    u2841 0574  
                                  u2825 0562                                    u2761 0516  
                                  u2745 0508                                    u1890 08DE  
                                  u1970 0A9A                                    u2850 058E  
                                  u1891 08DD                                    u1971 0A99  
                                  u2675 0476                                    u2851 058D  
                                  _PEIE 005E                                    u2860 0593  
                                  u2780 0532                                    u1965 0A87  
                                  u2861 0592                                    u2781 0531  
                                  _INTE 005C                                    u2870 05A0  
                                  u1990 0D38                                    _INTF 0059  
                                  u3807 0DC4                                    u2695 0486  
                                  u2871 059F                                    u2775 0529  
                                  u1991 0D37                                    u1985 0D25  
                                  u2795 0541                                    u3747 076E  
                                  _RCEN 048B                                    u3757 07A5  
                                  u3767 051D                                    u3777 0556  
                                  u3787 046A                                    u3797 0D95  
                                  _TMR1 000E                                    _RSEN 0489  
                                  _main 0C0A                         __end_of_SSD_OFF 08C6  
                      __end_of_I2C_Init 0BC0                                    btemp 007E  
                  EEPROM_WriteByte@data 00A3                        __end_of_ADC_Init 1000  
                _EWH_getAvrgTempReading 0A03                                    start 0012  
              __size_of_EEPROM_ReadByte 005B                __size_of_EWH_EEPROM_Init 0010  
              __size_of_EWH_EEPROM_Read 000C                         __end_of_SW_Init 089D  
                          ?_EWH_SSD_OFF 0070                         _ADC_ReadChannel 09D8  
                                 ??_ISR 0044                           ___fltol@sign1 0042  
                                 ?_main 0070                                   _ACKEN 048C  
                                 _ACKDT 048D                         __end_of___awdiv 0E9B  
                       __end_of___awmod 0D13                        __end_of_EWH_Init 0B30  
                       __end_of___flmul 0398                         __end_of___fltol 0F82  
                       __end_of___lldiv 0E32                         ___awdiv@divisor 00A0  
                       __end_of___lwdiv 0B76                                   i1l311 0A02  
                                 i1l308 09F4                         __end_of___lwmod 0AEC  
                                 i1l267 07FA                                   i1l583 05C6  
                                 i1l585 05C5                                   i1l599 0676  
                                 i1l945 0F6C                                   i1l938 0F81  
                                 i1l948 0F81                         ___awdiv@counter 00A4  
         __size_of_I2C_Master_WriteByte 001E                                   _PORTA 0005  
                                 _PORTB 0006                                   _PORTC 0007  
                                 _PORTD 0008                                   _TRISA 0085  
                                 _TRISB 0086                                   _TRISC 0087  
                                 _TRISD 0088                                   _SSPIE 0463  
                                 _SSPEN 00A5                                   _SSPIF 0063  
                    __size_of_TMR1_Init 004A                             ?_TMR1_Start 0070  
                    __size_of_TMR1_Stop 0004                                   pclath 000A  
                                 status 0003                                   wtemp0 007E  
                    __size_of_SSD_Write 001D                  __size_of_I2C_Wait_IDLE 000D  
                       __initialization 0015               __size_of_EWH_SetTemp_Mode 00DC  
                          __end_of_main 0C5E                  ?_I2C_Master_Send_Start 0070  
                           ?_SSD_config 00A0                                  ??_main 00BB  
                             ??_DD_Init 00A0                         _EWH_WakeUP_Mode 073B  
                                _ADCON0 001F                                  _ADCON1 009F  
                             ??_SSD_OFF 00A4                                  _ADRESH 001E  
                                _ADRESL 009E                        ___awdiv@dividend 00A2  
                                i1l1141 0397                                  i1l1160 099C  
                                i1l1153 038B                                  i1l1162 09AE  
                                i1l1147 0303                                  i1l1185 06A3  
                                i1l1187 073A                                  i1l3302 07CD  
                                i1l1198 0704                                  i1l1199 0710  
                                i1l3080 0989                                  i1l3400 007F  
                                i1l3322 09D9                                  i1l3090 09AA  
                                i1l3082 098B                                  i1l3410 009B  
                                i1l3402 0087                                  i1l3324 09EC  
                                i1l3308 07DA                                  i1l3316 07E7  
                                i1l3084 0992                                  i1l3500 0377  
                                i1l3420 00DE                                  i1l3404 0089  
                                i1l3340 0F31                                  i1l3332 0F06  
                                i1l3326 09F1                                  i1l3086 0996  
                                i1l3502 037F                                  i1l3430 0167  
                                i1l3422 00FA                                  i1l3414 00A4  
                                i1l3406 0091                                  i1l3342 0F32  
                                i1l3334 0F13                                  i1l3328 09F8  
                                i1l3088 09A5                                  i1l3504 0383  
                                i1l3440 01DA                                  i1l3432 0177  
                                i1l3424 0126                                  i1l3416 00B4  
                                i1l3408 0096                                  i1l3344 0F3A  
                                i1l3520 06AB                                  i1l3512 0682  
                                i1l3506 0384                                  i1l3450 0287  
                                i1l3442 01F7                                  i1l3434 0194  
                                i1l3426 0142                                  i1l3418 00C1  
                                i1l3370 0037                                  i1l3354 0F48  
                                i1l3346 0F3C                                  i1l3338 0F1C  
                                i1l3530 06C6                                  i1l3514 0687  
                                i1l3508 038F                                  i1l3460 02D3  
                                i1l3452 02AF                                  i1l3444 0224  
                                i1l3436 01A4                                  i1l3428 015E  
                                i1l3380 004E                                  i1l3372 003E  
                                i1l3364 0F61                                  i1l3356 0F51  
                                i1l3348 0F40                                  i1l3540 06EF  
                                i1l3532 06CD                                  i1l3524 06B4  
                                i1l3516 068B                                  i1l3700 0660  
                                i1l3294 07BF                                  i1l3470 02E8  
                                i1l3462 02D4                                  i1l3454 02B8  
                                i1l3446 0234                                  i1l3438 01C1  
                                i1l3390 006A                                  i1l3382 0053  
                                i1l3374 0044                                  i1l3366 0F71  
                                i1l3358 0F5A                                  i1l3550 0728  
                                i1l3542 06FA                                  i1l3534 06D1  
                                i1l3526 06B9                                  i1l3518 069B  
                                i1l3710 0672                                  i1l3702 066B  
                                i1l3296 07C0                                  i1l3480 030D  
                                i1l3472 02EC                                  i1l3464 02DD  
                                i1l3456 02C6                                  i1l3448 0261  
                                i1l3392 0070                                  i1l3384 005B  
                                i1l3376 0048                                  i1l3368 0F76  
                                i1l3552 072D                                  i1l3544 06FE  
                                i1l3536 06DF                                  i1l3528 06BD  
                                i1l3490 034B                                  i1l3482 031B  
                                i1l3474 0300                                  i1l3458 02CF  
                                i1l3466 02E3                                  i1l3394 0074  
                                i1l3386 005D                                  i1l3378 0049  
                                i1l3554 0731                                  i1l3546 0708  
                                i1l3538 06E8                                  i1l3706 066E  
                                i1l3492 0356                                  i1l3484 031F  
                                i1l3468 02E7                                  i1l3396 0075  
                                i1l3388 0065                                  i1l3556 0732  
                                i1l3548 0712                                  i1l3708 0671  
                                i1l3494 0365                                  i1l3486 0338  
                                i1l3478 0308                                  i1l3398 007A  
                                i1l3670 05BA                                  i1l3662 05A6  
                                i1l3496 036F                                  i1l3488 033E  
                                i1l3680 061D                                  i1l3672 05BF  
                                i1l3664 05AA                                  i1l3498 0371  
                                i1l3690 063A                                  i1l3682 0625  
                                i1l3674 05CB                                  i1l3666 05AE  
                                i1l3684 062D                                  i1l3692 063E  
                                i1l3676 05CF                                  i1l3668 05B5  
                                u300_25 0F63                                  i1l3934 07EF  
                                i1l3694 0646                                  i1l3686 062E  
                                i1l3678 05D7                                  u301_20 0F71  
                                i1l3696 0651                                  i1l3688 0634  
                                u301_21 0F70                                  i1l3698 0658  
                                u310_20 009B                                  u302_20 0F76  
                                u310_21 009A                                  u302_21 0F75  
                                _INTEDG 040E                                  u303_20 0048  
                                u311_21 00EC                                  u303_21 0047  
                                u311_22 00F3                                  u311_23 00FA  
                                u304_20 004E                                  u320_21 0216  
                                u312_21 0108                                  u304_21 004D  
                                u320_22 021D                                  u312_22 010F  
                                u320_23 0224                                  u312_23 0116  
                                u305_20 0053                                  u321_21 0243  
                                u313_21 0134                                  u305_21 0052  
                                u321_22 024A                                  u313_22 013B  
                                u321_23 0251                                  u313_23 0142  
                                u250_20 09AA                                  u330_20 02E7  
                                u322_20 026D                                  u306_20 0074  
                                u250_21 09A9                                  u330_21 02E6  
                                u314_21 0150                                  u306_21 0073  
                                u314_22 0157                                  u314_23 015E  
                                u322_25 0268                                  u331_20 02EC  
                                u307_20 007A                                  u331_21 02EB  
                                u323_21 0279                                  u307_21 0079  
                                u323_22 0280                                  u323_23 0287  
                                u315_25 0160                                  u332_20 0300  
                                u324_20 0295                                  u308_20 007F  
                                u340_20 0687                                  u332_21 02FF  
                                u316_21 0186                                  u308_21 007E  
                                u340_21 0686                                  u316_22 018D  
                                u316_23 0194                                  u324_25 0290  
                                u333_20 0307                                  u309_20 0096  
                                u341_20 068B                                  u333_21 0306  
                                u325_21 02A1                                  u317_21 01B3  
                                u309_21 0095                                  u341_21 068A  
                                u325_22 02A8                                  u317_22 01BA  
                                u325_23 02AF                                  u317_23 01C1  
                                u334_20 030D                                  u350_20 0708  
                                u342_20 06AB                                  u334_21 030C  
                                u350_21 0707                                  u342_21 06AA  
                                u326_25 02B1                                  u318_25 01C3  
                                u335_20 031F                                  u351_20 071D  
                                u335_21 031E                                  u319_21 01E9  
                                u319_22 01F0                                  u319_23 01F7  
                                u327_25 02C8                                  u351_25 0718  
                                u343_25 06BE                                  u248_20 0996  
                                u336_20 032E                                  u328_20 02D3  
                                u352_20 072D                                  u344_20 06CC  
                                u248_21 0995                                  u328_21 02D2  
                                u352_21 072C                                  u344_21 06CB  
                                u336_25 0329                                  u337_20 034B  
                                u353_20 0731                                  u337_21 034A  
                                u353_21 0730                                  u249_25 099D  
                                u337_25 0347                                  u329_25 02D6  
                                u345_25 06E0                                  u338_20 0365  
                                u346_20 06EE                                  u370_20 0646  
                                u362_20 05AA                                  u338_21 0364  
                                u346_21 06ED                                  u370_21 0645  
                                u362_21 05A9                                  u290_25 07DF  
                                u338_25 0361                                  u339_20 0383  
                                u371_20 0651                                  u363_20 05B5  
                                u339_21 0382                                  u371_21 0650  
                                u363_21 05B4                                  u291_25 09E2  
                                u347_25 06F3                                  u292_20 09F8  
                                u348_20 06FE                                  u372_20 0660  
                                u364_20 05BF                                  u292_21 09F7  
                                u348_21 06FD                                  u372_21 065F  
                                u364_21 05BE                                  u293_20 0F13  
                                u349_20 0704                                  u373_20 066B  
                                u365_20 05CB                                  u293_21 0F12  
                                u349_21 0703                                  u373_21 066A  
                                u365_21 05CA                                  u381_27 09EE  
                                u294_20 0F2A                                  u366_20 05D7  
                                u366_21 05D6                                  u294_25 0F25  
                                u295_20 0F40                                  u367_20 0625  
                                u295_21 0F3F                                  u367_21 0624  
                                u296_20 0F47                                  u368_20 062D  
                                u296_21 0F46                                  u368_21 062C  
                                u288_25 07C5                                  u369_20 063A  
                                u369_21 0639                                  u289_25 07D2  
                                u297_25 0F49                                  u298_20 0F59  
                                u298_21 0F58                                  u299_20 0F60  
                                u299_21 0F5F                               ??_SW_Init 00A0  
                                _TMR1IE 0460                                  _TMR1IF 0060  
                                _TMR1ON 0080                                  _SSPADD 0093  
                                _SSPCON 0014                                  _SSPBUF 0013  
               __end_of_ADC_ReadChannel 0A03                        __end_of___xxtofl 073B  
                  __size_of_DD_GetState 003D                           _ReadingBuffer 00CB  
                     __end_of_TMR1_Init 0C0A                       __end_of_TMR1_Stop 07FF  
                             ??___awdiv 00A4                               ??___awmod 00A4  
                             ??___flmul 0028                               ??___fltol 003E  
                             ??___lldiv 00A8                     __size_of_TMR1_Start 0010  
                             ??___lwdiv 00A4                               ??___lwmod 00A4  
               __size_of_EWH_SSD_Update 005C                       ??_EEPROM_ReadByte 00A4  
                     ??_EWH_EEPROM_Init 00A6                       ??_EWH_EEPROM_Read 00A7  
                 ADC_ReadChannel@result 0073                    __size_of_DD_SetState 005A  
                      ___awdiv@quotient 00A6                         ___awmod@divisor 00A0  
                       ___awmod@counter 00A4                __end_of_EEPROM_WriteByte 0AB0  
                     __end_of_SSD_Write 096A                               ?_I2C_Init 0070  
                    __size_of__Umul8_16 0027                           _I2C_Wait_IDLE 08D2  
                             ?_ADC_Init 0070                                  saved_w 007E  
                   _I2C_Master_ReadByte 09AF                            ___xxtofl@arg 007A  
                          ___xxtofl@exp 0079                            ___xxtofl@val 0070  
               __end_of__initialization 0033                     _I2C_Master_Send_ACK 089D  
                   __size_of_SSD_config 006B              __end_of_EWH_Operating_Mode 04CA  
                            ___fltol@f1 003A                            SSD_config@ID 00A3  
                             ?_EWH_Init 0070                       _ReadingBufferFull 00C5  
                        _TempavgReading 00C4                          __pcstackCOMMON 0070  
                          __pidataBANK1 08B1                    __size_of_EWH_SSD_OFF 000D  
                  ?_I2C_Master_ReadByte 0070                 __end_of_EWH_WakeUP_Mode 07BE  
                      EWH_Init@TMR1_cfg 00AF                    ?_I2C_Master_Send_ACK 0070  
                    EWH_Init@i2c_config 00B1                          ?_I2C_Wait_IDLE 0070  
                            ??_I2C_Init 00AE                              ??_ADC_Init 00A0  
   EWH_getAvrgTempReading@sumOfReadings 00AB                              __pbssBANK0 004A  
                            __pbssBANK1 00BD                 ?_EWH_getAvrgTempReading 00A7  
                      ?_ADC_ReadChannel 0070                              ??_EWH_Init 00AF  
                   SSD_config@SSD_state 00A0                       __end_of__Umul8_16 09AF  
                            __pmaintext 0C0A            __end_of_I2C_Master_Send_NACK 08B1  
                      _EWH_SetTemp_Mode 04CA            __end_of_I2C_Master_Send_Stop 0894  
                 ??_I2C_Master_ReadByte 00A0                              __pintentry 0004  
                               _ACKSTAT 048E                   ??_I2C_Master_Send_ACK 00A0  
                               _T1CKPS0 0084                                 _T1CKPS1 0085  
                               _DD_Init 0930                               ?___xxtofl 0070  
                          ??_TMR1_Start 00A0          __end_of_EWH_getAvrgTempReading 0A3B  
                               _SSPCON2 0091                                 _SSD_OFF 08BB  
                               _SSPSTAT 0094                               SSD_OFF@ID 00A4  
                               _SW_Init 0894            __end_of_I2C_Master_WriteByte 0988  
               __size_of_EWH_Sleep_Mode 003A                 ??_I2C_Master_Send_Start 00A0  
                               ___awdiv 0E32                                 ___awmod 0CB8  
                               ___flmul 0037                                 ___fltol 0F06  
                               ___lldiv 0DCA                  ADC_ReadChannel@channel 0075  
                               ___lwdiv 0B30                          _EWH_SSD_Update 0D6E  
                               ___lwmod 0AB0                      __end_of_TMR1_Start 090C  
                      ?_EWH_WakeUP_Mode 0070                            ??_SSD_config 00A1  
                       ??_I2C_Wait_IDLE 00A0                                 __ptext1 073B  
                               __ptext2 08C6                                 __ptext3 0D13  
                               __ptext4 09AF                                 __ptext5 08A7  
                               __ptext6 089D                                 __ptext7 0A3B  
                               __ptext8 04CA                                 __ptext9 08DF  
                          __size_of_ISR 00DB                  EEPROM_ReadByte@address 00A2  
                            ??___xxtofl 0074                      EWH_Init@adc_config 00B7  
                      ___awmod@dividend 00A2                 EEPROM_WriteByte@address 00A1  
                               clrloop0 0872                    end_of_initialization 0033  
                    __end_of_SSD_config 0F06                               _EWH_State 0052  
                       _EEPROM_ReadByte 0D13                         _EWH_EEPROM_Init 08EC  
                       _EWH_EEPROM_Read 08C6                         ___lldiv@divisor 00A0  
                       ___lldiv@counter 00AD                  __end_of_EWH_SSD_Update 0DCA  
                      DD_SetState@state 00A0                               _TMR1_Init 0BC0  
                             _TMR1_Stop 07FB                       ?_EEPROM_WriteByte 00A1  
                    ??_EEPROM_WriteByte 00A4                           ___xxtofl@sign 0078  
                     __size_of_I2C_Init 004A                    _I2C_Master_Send_NACK 08A7  
                             _SSD_Write 094D                       __size_of_ADC_Init 007E  
                  _I2C_Master_Send_Stop 088B                           ??_DD_GetState 0070  
                           ___flmul@grs 002E                         ?_EWH_SSD_Update 00AA  
                     __size_of_EWH_Init 0044                           ??_DD_SetState 00A1  
                            ?_TMR1_Init 0070                      _EWH_Operating_Mode 0398  
                            ?_TMR1_Stop 0070                    _I2C_Master_WriteByte 096A  
                   start_initialization 0015                             __end_of_ISR 0681  
                   ?_EWH_Operating_Mode 0070                   ?_I2C_Master_Send_NACK 0070  
              __end_of_EWH_SetTemp_Mode 05A6                              ?_SSD_Write 00A8  
                 ?_I2C_Master_Send_Stop 0070                 __end_of_EEPROM_ReadByte 0D6E  
               __end_of_EWH_EEPROM_Init 08FC                 __end_of_EWH_EEPROM_Read 08D2  
          EWH_getAvrgTempReading@buffer 00AE    EWH_getAvrgTempReading@averageReading 00AD  
          EWH_getAvrgTempReading@length 00A7         ??_I2C_Master_Send_RepeatedStart 00A0  
                     _TempReading_count 00C7                           ??_EWH_SSD_OFF 00A5  
                   __end_of_DD_GetState 07FB                          _EWH_Sleep_Mode 0A3B  
                  ??_EWH_Operating_Mode 00B0                          ADC_Init@config 00A2  
                           SSD_Write@ID 00A9                              init_fetch0 091D  
                             __Umul8_16 0988                             __pdataBANK1 00D5  
                            ISR@Reading 0048                     __end_of_DD_SetState 0CB8  
                 ?_I2C_Master_WriteByte 0070                                ?_DD_Init 0070  
                             ___flmul@a 0024                               ___flmul@b 0020  
                         _Devices_State 00C1                               ___latbits 0002  
                         __pcstackBANK0 0020                           __pcstackBANK1 00A0  
                     __size_of___xxtofl 00BA                                ?_SSD_OFF 0070  
                       _SW_StateControl 004D                                ?_SW_Init 0070  
                          _current_Temp 00C8                  __end_of_EWH_Sleep_Mode 0A75  
           __end_of_I2C_Master_ReadByte 09D8                                ISR@count 0050  
                      ___lwdiv@dividend 00A2             __end_of_I2C_Master_Send_ACK 08A7  
                              ?___awdiv 00A0                                ?___awmod 00A0  
                              ?___flmul 0020                                ?___fltol 003A  
                              ?___lldiv 00A0                              ?__Umul8_16 0070  
              __size_of_ADC_ReadChannel 002B                                ?___lwdiv 00A0  
                              ?___lwmod 00A0          __size_of_I2C_Master_Send_Start 0009  
         __end_of_I2C_Master_Send_Start 088B                     __end_of_EWH_SSD_OFF 08EC  
                           ??_TMR1_Init 00A0                             ??_TMR1_Stop 00A0  
                              _I2C_Init 0B76                                _ADC_Init 0F82  
                ??_I2C_Master_Send_NACK 00A0                  ??_I2C_Master_Send_Stop 00A0  
                     DD_GetState@device 0072                             ??_SSD_Write 00A9  
                      ___lwdiv@quotient 00A4                        ?_EEPROM_ReadByte 00A2  
                      ?_EWH_EEPROM_Init 0070                        ?_EWH_EEPROM_Read 0070  
                           _DD_GetState 07BE                         SSD_Write@Number 00A8  
                     interrupt_function 0004                               clear_ram0 0871  
                       ?_EWH_Sleep_Mode 0070                                _EWH_Init 0AEC  
                              _EWH_Mode 00CA   __end_of_I2C_Master_Send_RepeatedStart 0882  
__size_of_I2C_Master_Send_RepeatedStart 0009           _I2C_Master_Send_RepeatedStart 0879  
                           _DD_SetState 0C5E           I2C_Master_ReadByte@Read_State 00A1  
                ??_I2C_Master_WriteByte 00A0                                _SSD_code 00D5  
                    EWH_SSD_Update@temp 00AA                   __end_of_I2C_Wait_IDLE 08DF  
                      __size_of_DD_Init 001D                __size_of_EWH_WakeUP_Mode 0083  
                              _SW_State 004A                        __size_of_SSD_OFF 000B  
             __size_of_EEPROM_WriteByte 003B                        ??_EWH_SSD_Update 00AC  
                      __size_of_SW_Init 0009                 EWH_getAvrgTempReading@i 00AF  
                           _EWH_SSD_OFF 08DF                             ??__Umul8_16 0072  
                      __size_of___awdiv 0069                        __size_of___awmod 005B  
                      __size_of___flmul 0361                        __size_of___fltol 007C  
                      __size_of___lldiv 0068                        __size_of___lwdiv 0046  
                      __size_of___lwmod 003C             EWH_EEPROM_Update@newSetTemp 00A6  
              ??_EWH_getAvrgTempReading 00A8                       ??_ADC_ReadChannel 0072  
                              ___xxtofl 0681                       _NoPress_Sec_count 0051  
                       ___lwdiv@divisor 00A0                         ___lwdiv@counter 00A6  
                              __ptext10 090C                                __ptext11 0398  
                              __ptext20 094D                                __ptext12 0CB8  
                              __ptext21 08BB                                __ptext13 07FB  
                              __ptext30 0A75                                __ptext22 0E9B  
                              __ptext14 08FC                                __ptext31 096A  
                              __ptext23 0C5E                                __ptext15 0A03  
                              __ptext40 0F06                                __ptext32 088B  
                              __ptext24 0AEC                                __ptext16 0B30  
                              __ptext41 0037                                __ptext33 0882  
                              __ptext25 0BC0                                __ptext17 0D6E  
                              __ptext42 0988                                __ptext34 0879  
                              __ptext26 0894                                __ptext18 0AB0  
                              __ptext43 07BE                                __ptext35 08D2  
                              __ptext27 0B76                                __ptext19 0E32  
                              __ptext44 09D8                                __ptext36 0930  
                              __ptext28 0DCA                                __ptext37 0F82  
                              __ptext29 08EC                                __ptext38 05A6  
                              __ptext39 0681                       _EWH_EEPROM_Update 090C  
                     ?_EWH_SetTemp_Mode 0070                      ?_EWH_EEPROM_Update 0070  
                    ??_EWH_SetTemp_Mode 00AE                           __size_of_main 0054  
                   ??_EWH_EEPROM_Update 00A6                                _set_Temp 00C9  
        ?_I2C_Master_Send_RepeatedStart 0070               __end_of_EWH_EEPROM_Update 091D  
                              init_ram0 0921                              _EWH_Events 00BD  
                              intlevel1 0000                        ___lwmod@dividend 00A2  
                     ??_EWH_WakeUP_Mode 00AE                        ___lldiv@dividend 00A4  
                   EEPROM_ReadByte@data 00A6             __size_of_EWH_Operating_Mode 0132  
                     DD_SetState@device 00A3                  __Umul8_16@multiplicand 0070  
       __size_of_EWH_getAvrgTempReading 0038                        ___lldiv@quotient 00A9  
                       ___lwmod@divisor 00A0                         ___lwmod@counter 00A4  
                        _SSD_Blink_flag 00C6                              _TMR1_Start 08FC  
              I2C_Master_WriteByte@Data 00A0                        ??_EWH_Sleep_Mode 00A5  
                          ?_DD_GetState 0070                        _EEPROM_WriteByte 0A75  
                  __Umul8_16@multiplier 0078                       __Umul8_16@product 0074  
