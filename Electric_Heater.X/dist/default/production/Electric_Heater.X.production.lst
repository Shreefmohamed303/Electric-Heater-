

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Jul 09 14:32:18 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,delta=2
    53                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text42,local,class=CODE,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,merge=1,delta=2
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    60                           	dabs	1,0x7E,2
    61  0000                     
    62                           ; Version 2.20
    63                           ; Generated 12/02/2020 GMT
    64                           ; 
    65                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC16F877A Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     	;# 
    97  0001                     	;# 
    98  0002                     	;# 
    99  0003                     	;# 
   100  0004                     	;# 
   101  0005                     	;# 
   102  0006                     	;# 
   103  0007                     	;# 
   104  0008                     	;# 
   105  0009                     	;# 
   106  000A                     	;# 
   107  000B                     	;# 
   108  000C                     	;# 
   109  000D                     	;# 
   110  000E                     	;# 
   111  000E                     	;# 
   112  000F                     	;# 
   113  0010                     	;# 
   114  0011                     	;# 
   115  0012                     	;# 
   116  0013                     	;# 
   117  0014                     	;# 
   118  0015                     	;# 
   119  0015                     	;# 
   120  0016                     	;# 
   121  0017                     	;# 
   122  0018                     	;# 
   123  0019                     	;# 
   124  001A                     	;# 
   125  001B                     	;# 
   126  001B                     	;# 
   127  001C                     	;# 
   128  001D                     	;# 
   129  001E                     	;# 
   130  001F                     	;# 
   131  0081                     	;# 
   132  0085                     	;# 
   133  0086                     	;# 
   134  0087                     	;# 
   135  0088                     	;# 
   136  0089                     	;# 
   137  008C                     	;# 
   138  008D                     	;# 
   139  008E                     	;# 
   140  0091                     	;# 
   141  0092                     	;# 
   142  0093                     	;# 
   143  0094                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009C                     	;# 
   147  009D                     	;# 
   148  009E                     	;# 
   149  009F                     	;# 
   150  010C                     	;# 
   151  010D                     	;# 
   152  010E                     	;# 
   153  010F                     	;# 
   154  018C                     	;# 
   155  018D                     	;# 
   156  0000                     	;# 
   157  0001                     	;# 
   158  0002                     	;# 
   159  0003                     	;# 
   160  0004                     	;# 
   161  0005                     	;# 
   162  0006                     	;# 
   163  0007                     	;# 
   164  0008                     	;# 
   165  0009                     	;# 
   166  000A                     	;# 
   167  000B                     	;# 
   168  000C                     	;# 
   169  000D                     	;# 
   170  000E                     	;# 
   171  000E                     	;# 
   172  000F                     	;# 
   173  0010                     	;# 
   174  0011                     	;# 
   175  0012                     	;# 
   176  0013                     	;# 
   177  0014                     	;# 
   178  0015                     	;# 
   179  0015                     	;# 
   180  0016                     	;# 
   181  0017                     	;# 
   182  0018                     	;# 
   183  0019                     	;# 
   184  001A                     	;# 
   185  001B                     	;# 
   186  001B                     	;# 
   187  001C                     	;# 
   188  001D                     	;# 
   189  001E                     	;# 
   190  001F                     	;# 
   191  0081                     	;# 
   192  0085                     	;# 
   193  0086                     	;# 
   194  0087                     	;# 
   195  0088                     	;# 
   196  0089                     	;# 
   197  008C                     	;# 
   198  008D                     	;# 
   199  008E                     	;# 
   200  0091                     	;# 
   201  0092                     	;# 
   202  0093                     	;# 
   203  0094                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  000E                     	;# 
   232  000F                     	;# 
   233  0010                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001D                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  0081                     	;# 
   252  0085                     	;# 
   253  0086                     	;# 
   254  0087                     	;# 
   255  0088                     	;# 
   256  0089                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  008E                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  010C                     	;# 
   271  010D                     	;# 
   272  010E                     	;# 
   273  010F                     	;# 
   274  018C                     	;# 
   275  018D                     	;# 
   276  0000                     	;# 
   277  0001                     	;# 
   278  0002                     	;# 
   279  0003                     	;# 
   280  0004                     	;# 
   281  0005                     	;# 
   282  0006                     	;# 
   283  0007                     	;# 
   284  0008                     	;# 
   285  0009                     	;# 
   286  000A                     	;# 
   287  000B                     	;# 
   288  000C                     	;# 
   289  000D                     	;# 
   290  000E                     	;# 
   291  000E                     	;# 
   292  000F                     	;# 
   293  0010                     	;# 
   294  0011                     	;# 
   295  0012                     	;# 
   296  0013                     	;# 
   297  0014                     	;# 
   298  0015                     	;# 
   299  0015                     	;# 
   300  0016                     	;# 
   301  0017                     	;# 
   302  0018                     	;# 
   303  0019                     	;# 
   304  001A                     	;# 
   305  001B                     	;# 
   306  001B                     	;# 
   307  001C                     	;# 
   308  001D                     	;# 
   309  001E                     	;# 
   310  001F                     	;# 
   311  0081                     	;# 
   312  0085                     	;# 
   313  0086                     	;# 
   314  0087                     	;# 
   315  0088                     	;# 
   316  0089                     	;# 
   317  008C                     	;# 
   318  008D                     	;# 
   319  008E                     	;# 
   320  0091                     	;# 
   321  0092                     	;# 
   322  0093                     	;# 
   323  0094                     	;# 
   324  0098                     	;# 
   325  0099                     	;# 
   326  009C                     	;# 
   327  009D                     	;# 
   328  009E                     	;# 
   329  009F                     	;# 
   330  010C                     	;# 
   331  010D                     	;# 
   332  010E                     	;# 
   333  010F                     	;# 
   334  018C                     	;# 
   335  018D                     	;# 
   336  0000                     	;# 
   337  0001                     	;# 
   338  0002                     	;# 
   339  0003                     	;# 
   340  0004                     	;# 
   341  0005                     	;# 
   342  0006                     	;# 
   343  0007                     	;# 
   344  0008                     	;# 
   345  0009                     	;# 
   346  000A                     	;# 
   347  000B                     	;# 
   348  000C                     	;# 
   349  000D                     	;# 
   350  000E                     	;# 
   351  000E                     	;# 
   352  000F                     	;# 
   353  0010                     	;# 
   354  0011                     	;# 
   355  0012                     	;# 
   356  0013                     	;# 
   357  0014                     	;# 
   358  0015                     	;# 
   359  0015                     	;# 
   360  0016                     	;# 
   361  0017                     	;# 
   362  0018                     	;# 
   363  0019                     	;# 
   364  001A                     	;# 
   365  001B                     	;# 
   366  001B                     	;# 
   367  001C                     	;# 
   368  001D                     	;# 
   369  001E                     	;# 
   370  001F                     	;# 
   371  0081                     	;# 
   372  0085                     	;# 
   373  0086                     	;# 
   374  0087                     	;# 
   375  0088                     	;# 
   376  0089                     	;# 
   377  008C                     	;# 
   378  008D                     	;# 
   379  008E                     	;# 
   380  0091                     	;# 
   381  0092                     	;# 
   382  0093                     	;# 
   383  0094                     	;# 
   384  0098                     	;# 
   385  0099                     	;# 
   386  009C                     	;# 
   387  009D                     	;# 
   388  009E                     	;# 
   389  009F                     	;# 
   390  010C                     	;# 
   391  010D                     	;# 
   392  010E                     	;# 
   393  010F                     	;# 
   394  018C                     	;# 
   395  018D                     	;# 
   396  0000                     	;# 
   397  0001                     	;# 
   398  0002                     	;# 
   399  0003                     	;# 
   400  0004                     	;# 
   401  0005                     	;# 
   402  0006                     	;# 
   403  0007                     	;# 
   404  0008                     	;# 
   405  0009                     	;# 
   406  000A                     	;# 
   407  000B                     	;# 
   408  000C                     	;# 
   409  000D                     	;# 
   410  000E                     	;# 
   411  000E                     	;# 
   412  000F                     	;# 
   413  0010                     	;# 
   414  0011                     	;# 
   415  0012                     	;# 
   416  0013                     	;# 
   417  0014                     	;# 
   418  0015                     	;# 
   419  0015                     	;# 
   420  0016                     	;# 
   421  0017                     	;# 
   422  0018                     	;# 
   423  0019                     	;# 
   424  001A                     	;# 
   425  001B                     	;# 
   426  001B                     	;# 
   427  001C                     	;# 
   428  001D                     	;# 
   429  001E                     	;# 
   430  001F                     	;# 
   431  0081                     	;# 
   432  0085                     	;# 
   433  0086                     	;# 
   434  0087                     	;# 
   435  0088                     	;# 
   436  0089                     	;# 
   437  008C                     	;# 
   438  008D                     	;# 
   439  008E                     	;# 
   440  0091                     	;# 
   441  0092                     	;# 
   442  0093                     	;# 
   443  0094                     	;# 
   444  0098                     	;# 
   445  0099                     	;# 
   446  009C                     	;# 
   447  009D                     	;# 
   448  009E                     	;# 
   449  009F                     	;# 
   450  010C                     	;# 
   451  010D                     	;# 
   452  010E                     	;# 
   453  010F                     	;# 
   454  018C                     	;# 
   455  018D                     	;# 
   456  0000                     	;# 
   457  0001                     	;# 
   458  0002                     	;# 
   459  0003                     	;# 
   460  0004                     	;# 
   461  0005                     	;# 
   462  0006                     	;# 
   463  0007                     	;# 
   464  0008                     	;# 
   465  0009                     	;# 
   466  000A                     	;# 
   467  000B                     	;# 
   468  000C                     	;# 
   469  000D                     	;# 
   470  000E                     	;# 
   471  000E                     	;# 
   472  000F                     	;# 
   473  0010                     	;# 
   474  0011                     	;# 
   475  0012                     	;# 
   476  0013                     	;# 
   477  0014                     	;# 
   478  0015                     	;# 
   479  0015                     	;# 
   480  0016                     	;# 
   481  0017                     	;# 
   482  0018                     	;# 
   483  0019                     	;# 
   484  001A                     	;# 
   485  001B                     	;# 
   486  001B                     	;# 
   487  001C                     	;# 
   488  001D                     	;# 
   489  001E                     	;# 
   490  001F                     	;# 
   491  0081                     	;# 
   492  0085                     	;# 
   493  0086                     	;# 
   494  0087                     	;# 
   495  0088                     	;# 
   496  0089                     	;# 
   497  008C                     	;# 
   498  008D                     	;# 
   499  008E                     	;# 
   500  0091                     	;# 
   501  0092                     	;# 
   502  0093                     	;# 
   503  0094                     	;# 
   504  0098                     	;# 
   505  0099                     	;# 
   506  009C                     	;# 
   507  009D                     	;# 
   508  009E                     	;# 
   509  009F                     	;# 
   510  010C                     	;# 
   511  010D                     	;# 
   512  010E                     	;# 
   513  010F                     	;# 
   514  018C                     	;# 
   515  018D                     	;# 
   516  0000                     	;# 
   517  0001                     	;# 
   518  0002                     	;# 
   519  0003                     	;# 
   520  0004                     	;# 
   521  0005                     	;# 
   522  0006                     	;# 
   523  0007                     	;# 
   524  0008                     	;# 
   525  0009                     	;# 
   526  000A                     	;# 
   527  000B                     	;# 
   528  000C                     	;# 
   529  000D                     	;# 
   530  000E                     	;# 
   531  000E                     	;# 
   532  000F                     	;# 
   533  0010                     	;# 
   534  0011                     	;# 
   535  0012                     	;# 
   536  0013                     	;# 
   537  0014                     	;# 
   538  0015                     	;# 
   539  0015                     	;# 
   540  0016                     	;# 
   541  0017                     	;# 
   542  0018                     	;# 
   543  0019                     	;# 
   544  001A                     	;# 
   545  001B                     	;# 
   546  001B                     	;# 
   547  001C                     	;# 
   548  001D                     	;# 
   549  001E                     	;# 
   550  001F                     	;# 
   551  0081                     	;# 
   552  0085                     	;# 
   553  0086                     	;# 
   554  0087                     	;# 
   555  0088                     	;# 
   556  0089                     	;# 
   557  008C                     	;# 
   558  008D                     	;# 
   559  008E                     	;# 
   560  0091                     	;# 
   561  0092                     	;# 
   562  0093                     	;# 
   563  0094                     	;# 
   564  0098                     	;# 
   565  0099                     	;# 
   566  009C                     	;# 
   567  009D                     	;# 
   568  009E                     	;# 
   569  009F                     	;# 
   570  010C                     	;# 
   571  010D                     	;# 
   572  010E                     	;# 
   573  010F                     	;# 
   574  018C                     	;# 
   575  018D                     	;# 
   576  0000                     	;# 
   577  0001                     	;# 
   578  0002                     	;# 
   579  0003                     	;# 
   580  0004                     	;# 
   581  0005                     	;# 
   582  0006                     	;# 
   583  0007                     	;# 
   584  0008                     	;# 
   585  0009                     	;# 
   586  000A                     	;# 
   587  000B                     	;# 
   588  000C                     	;# 
   589  000D                     	;# 
   590  000E                     	;# 
   591  000E                     	;# 
   592  000F                     	;# 
   593  0010                     	;# 
   594  0011                     	;# 
   595  0012                     	;# 
   596  0013                     	;# 
   597  0014                     	;# 
   598  0015                     	;# 
   599  0015                     	;# 
   600  0016                     	;# 
   601  0017                     	;# 
   602  0018                     	;# 
   603  0019                     	;# 
   604  001A                     	;# 
   605  001B                     	;# 
   606  001B                     	;# 
   607  001C                     	;# 
   608  001D                     	;# 
   609  001E                     	;# 
   610  001F                     	;# 
   611  0081                     	;# 
   612  0085                     	;# 
   613  0086                     	;# 
   614  0087                     	;# 
   615  0088                     	;# 
   616  0089                     	;# 
   617  008C                     	;# 
   618  008D                     	;# 
   619  008E                     	;# 
   620  0091                     	;# 
   621  0092                     	;# 
   622  0093                     	;# 
   623  0094                     	;# 
   624  0098                     	;# 
   625  0099                     	;# 
   626  009C                     	;# 
   627  009D                     	;# 
   628  009E                     	;# 
   629  009F                     	;# 
   630  010C                     	;# 
   631  010D                     	;# 
   632  010E                     	;# 
   633  010F                     	;# 
   634  018C                     	;# 
   635  018D                     	;# 
   636  0000                     	;# 
   637  0001                     	;# 
   638  0002                     	;# 
   639  0003                     	;# 
   640  0004                     	;# 
   641  0005                     	;# 
   642  0006                     	;# 
   643  0007                     	;# 
   644  0008                     	;# 
   645  0009                     	;# 
   646  000A                     	;# 
   647  000B                     	;# 
   648  000C                     	;# 
   649  000D                     	;# 
   650  000E                     	;# 
   651  000E                     	;# 
   652  000F                     	;# 
   653  0010                     	;# 
   654  0011                     	;# 
   655  0012                     	;# 
   656  0013                     	;# 
   657  0014                     	;# 
   658  0015                     	;# 
   659  0015                     	;# 
   660  0016                     	;# 
   661  0017                     	;# 
   662  0018                     	;# 
   663  0019                     	;# 
   664  001A                     	;# 
   665  001B                     	;# 
   666  001B                     	;# 
   667  001C                     	;# 
   668  001D                     	;# 
   669  001E                     	;# 
   670  001F                     	;# 
   671  0081                     	;# 
   672  0085                     	;# 
   673  0086                     	;# 
   674  0087                     	;# 
   675  0088                     	;# 
   676  0089                     	;# 
   677  008C                     	;# 
   678  008D                     	;# 
   679  008E                     	;# 
   680  0091                     	;# 
   681  0092                     	;# 
   682  0093                     	;# 
   683  0094                     	;# 
   684  0098                     	;# 
   685  0099                     	;# 
   686  009C                     	;# 
   687  009D                     	;# 
   688  009E                     	;# 
   689  009F                     	;# 
   690  010C                     	;# 
   691  010D                     	;# 
   692  010E                     	;# 
   693  010F                     	;# 
   694  018C                     	;# 
   695  018D                     	;# 
   696                           
   697                           	psect	idataBANK1
   698  08BF                     __pidataBANK1:
   699                           
   700                           ;initializer for _SSD_code
   701  08BF  343F               	retlw	63
   702  08C0  3406               	retlw	6
   703  08C1  345B               	retlw	91
   704  08C2  344F               	retlw	79
   705  08C3  3466               	retlw	102
   706  08C4  346D               	retlw	109
   707  08C5  347D               	retlw	125
   708  08C6  3407               	retlw	7
   709  08C7  347F               	retlw	127
   710  08C8  346F               	retlw	111
   711  000E                     _TMR1	set	14
   712  0008                     _PORTD	set	8
   713  0005                     _PORTA	set	5
   714  001E                     _ADRESH	set	30
   715  001F                     _ADCON0	set	31
   716  0007                     _PORTC	set	7
   717  0006                     _PORTB	set	6
   718  0013                     _SSPBUF	set	19
   719  0014                     _SSPCON	set	20
   720  0059                     _INTF	set	89
   721  005C                     _INTE	set	92
   722  0080                     _TMR1ON	set	128
   723  0060                     _TMR1IF	set	96
   724  0085                     _T1CKPS1	set	133
   725  0084                     _T1CKPS0	set	132
   726  0066                     _ADIF	set	102
   727  00F8                     _ADON	set	248
   728  0063                     _SSPIF	set	99
   729  005E                     _PEIE	set	94
   730  005F                     _GIE	set	95
   731  00A5                     _SSPEN	set	165
   732  0088                     _TRISD	set	136
   733  0085                     _TRISA	set	133
   734  009E                     _ADRESL	set	158
   735  009F                     _ADCON1	set	159
   736  0086                     _TRISB	set	134
   737  0087                     _TRISC	set	135
   738  0093                     _SSPADD	set	147
   739  0094                     _SSPSTAT	set	148
   740  0091                     _SSPCON2	set	145
   741  040E                     _INTEDG	set	1038
   742  0460                     _TMR1IE	set	1120
   743  040D                     _T0CS	set	1037
   744  0466                     _ADIE	set	1126
   745  048B                     _RCEN	set	1163
   746  048E                     _ACKSTAT	set	1166
   747  048C                     _ACKEN	set	1164
   748  048D                     _ACKDT	set	1165
   749  0489                     _RSEN	set	1161
   750  048A                     _PEN	set	1162
   751  0488                     _SEN	set	1160
   752  0463                     _SSPIE	set	1123
   753                           
   754                           	psect	cinit
   755  0015                     start_initialization:	
   756                           ; #config settings
   757                           
   758  0015                     __initialization:
   759                           
   760                           ; Initialize objects allocated to BANK1
   761  0015  1383               	bcf	3,7	;select IRP bank0
   762  0016  30E3               	movlw	low (__pdataBANK1+10)
   763  0017  00FD               	movwf	btemp+-1
   764  0018  3008               	movlw	high __pidataBANK1
   765  0019  00FE               	movwf	btemp
   766  001A  30BF               	movlw	low __pidataBANK1
   767  001B  00FF               	movwf	btemp+1
   768  001C  30D9               	movlw	low __pdataBANK1
   769  001D  0084               	movwf	4
   770  001E  120A  158A  2124  120A  118A  	fcall	init_ram0
   771                           
   772                           ; Clear objects allocated to BANK1
   773  0023  30C1               	movlw	low __pbssBANK1
   774  0024  0084               	movwf	4
   775  0025  30D9               	movlw	low (__pbssBANK1+24)
   776  0026  120A  158A  207F  120A  118A  	fcall	clear_ram0
   777                           
   778                           ; Clear objects allocated to BANK0
   779  002B  304A               	movlw	low __pbssBANK0
   780  002C  0084               	movwf	4
   781  002D  3053               	movlw	low (__pbssBANK0+9)
   782  002E  120A  158A  207F  120A  118A  	fcall	clear_ram0
   783  0033                     end_of_initialization:	
   784                           ;End of C runtime variable initialization code
   785                           
   786  0033                     __end_of__initialization:
   787  0033  0183               	clrf	3
   788  0034  120A  118A  2F3A   	ljmp	_main	;jump to C main() function
   789                           
   790                           	psect	bssBANK0
   791  004A                     __pbssBANK0:
   792  004A                     _SW_State:
   793  004A                     	ds	3
   794  004D                     _SW_StateControl:
   795  004D                     	ds	3
   796  0050                     ISR@count:
   797  0050                     	ds	1
   798  0051                     _NoPress_Sec_count:
   799  0051                     	ds	1
   800  0052                     _EWH_State:
   801  0052                     	ds	1
   802                           
   803                           	psect	bssBANK1
   804  00C1                     __pbssBANK1:
   805  00C1                     _EWH_Events:
   806  00C1                     	ds	4
   807  00C5                     _Devices_State:
   808  00C5                     	ds	3
   809  00C8                     _TempavgReading:
   810  00C8                     	ds	1
   811  00C9                     _ReadingBufferFull:
   812  00C9                     	ds	1
   813  00CA                     _SSD_Blink_flag:
   814  00CA                     	ds	1
   815  00CB                     _TempReading_count:
   816  00CB                     	ds	1
   817  00CC                     _current_Temp:
   818  00CC                     	ds	1
   819  00CD                     _set_Temp:
   820  00CD                     	ds	1
   821  00CE                     _EWH_Mode:
   822  00CE                     	ds	1
   823  00CF                     _ReadingBuffer:
   824  00CF                     	ds	10
   825                           
   826                           	psect	dataBANK1
   827  00D9                     __pdataBANK1:
   828  00D9                     _SSD_code:
   829  00D9                     	ds	10
   830                           
   831                           	psect	inittext
   832  0920                     init_fetch0:	
   833                           ;	Called with low address in FSR and high address in W
   834                           
   835  0920  087E               	movf	btemp,w
   836  0921  008A               	movwf	10
   837  0922  087F               	movf	btemp+1,w
   838  0923  0082               	movwf	2
   839  0924                     init_ram0:	
   840                           ;Called with:
   841                           ;	high address of idata address in btemp 
   842                           ;	low address of idata address in btemp+1 
   843                           ;	low address of data in FSR
   844                           ;	high address + 1 of data in btemp-1
   845                           
   846  0924  120A  158A  2120  120A  158A  	fcall	init_fetch0
   847  0929  0080               	movwf	0
   848  092A  0A84               	incf	4,f
   849  092B  0804               	movf	4,w
   850  092C  067D               	xorwf	btemp+-1,w
   851  092D  1903               	btfsc	3,2
   852  092E  3400               	retlw	0
   853  092F  0AFF               	incf	btemp+1,f
   854  0930  1903               	btfsc	3,2
   855  0931  0AFE               	incf	btemp,f
   856  0932  2924               	goto	init_ram0
   857                           
   858                           	psect	clrtext
   859  087F                     clear_ram0:	
   860                           ;	Called with FSR containing the base address, and
   861                           ;	W with the last address+1
   862                           
   863  087F  0064               	clrwdt	;clear the watchdog before getting into this loop
   864  0880                     clrloop0:
   865  0880  0180               	clrf	0	;clear RAM location pointed to by FSR
   866  0881  0A84               	incf	4,f	;increment pointer
   867  0882  0604               	xorwf	4,w	;XOR with final address
   868  0883  1903               	btfsc	3,2	;have we reached the end yet?
   869  0884  3400               	retlw	0	;all done for this memory range, return
   870  0885  0604               	xorwf	4,w	;XOR again to restore value
   871  0886  2880               	goto	clrloop0	;do the next byte
   872                           
   873                           	psect	cstackBANK1
   874  00A0                     __pcstackBANK1:
   875  00A0                     ??_I2C_Master_Send_Start:
   876  00A0                     ??_I2C_Master_Send_RepeatedStart:	
   877                           ; 1 bytes @ 0x0
   878                           
   879  00A0                     ??_I2C_Master_WriteByte:	
   880                           ; 1 bytes @ 0x0
   881                           
   882  00A0                     ??_I2C_Master_Send_Stop:	
   883                           ; 1 bytes @ 0x0
   884                           
   885  00A0                     ??_I2C_Master_ReadByte:	
   886                           ; 1 bytes @ 0x0
   887                           
   888  00A0                     ??_TMR1_Init:	
   889                           ; 1 bytes @ 0x0
   890                           
   891  00A0                     ??_ADC_Init:	
   892                           ; 1 bytes @ 0x0
   893                           
   894  00A0                     ??_DD_Init:	
   895                           ; 1 bytes @ 0x0
   896                           
   897  00A0                     ??_SW_Init:	
   898                           ; 1 bytes @ 0x0
   899                           
   900  00A0                     ??_I2C_Wait_IDLE:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  00A0                     ??_I2C_Master_Send_ACK:	
   904                           ; 1 bytes @ 0x0
   905                           
   906  00A0                     ??_I2C_Master_Send_NACK:	
   907                           ; 1 bytes @ 0x0
   908                           
   909  00A0                     ?_DD_SetState:	
   910                           ; 1 bytes @ 0x0
   911                           
   912  00A0                     ??_TMR1_Start:	
   913                           ; 1 bytes @ 0x0
   914                           
   915  00A0                     ??_TMR1_Stop:	
   916                           ; 1 bytes @ 0x0
   917                           
   918  00A0                     ?_SSD_config:	
   919                           ; 1 bytes @ 0x0
   920                           
   921  00A0                     ?___awdiv:	
   922                           ; 1 bytes @ 0x0
   923                           
   924  00A0                     ?___awmod:	
   925                           ; 2 bytes @ 0x0
   926                           
   927  00A0                     ?___lwdiv:	
   928                           ; 2 bytes @ 0x0
   929                           
   930  00A0                     ?___lwmod:	
   931                           ; 2 bytes @ 0x0
   932                           
   933  00A0                     ?___lldiv:	
   934                           ; 2 bytes @ 0x0
   935                           
   936  00A0                     I2C_Master_WriteByte@Data:	
   937                           ; 4 bytes @ 0x0
   938                           
   939  00A0                     DD_SetState@state:	
   940                           ; 1 bytes @ 0x0
   941                           
   942  00A0                     SSD_config@SSD_state:	
   943                           ; 1 bytes @ 0x0
   944                           
   945  00A0                     ___awdiv@divisor:	
   946                           ; 1 bytes @ 0x0
   947                           
   948  00A0                     ___awmod@divisor:	
   949                           ; 2 bytes @ 0x0
   950                           
   951  00A0                     ___lwdiv@divisor:	
   952                           ; 2 bytes @ 0x0
   953                           
   954  00A0                     ___lwmod@divisor:	
   955                           ; 2 bytes @ 0x0
   956                           
   957  00A0                     ___lldiv@divisor:	
   958                           ; 2 bytes @ 0x0
   959                           
   960                           
   961                           ; 4 bytes @ 0x0
   962  00A0                     	ds	1
   963  00A1                     ?_EEPROM_WriteByte:
   964  00A1                     ??_DD_SetState:	
   965                           ; 1 bytes @ 0x1
   966                           
   967  00A1                     ??_SSD_config:	
   968                           ; 1 bytes @ 0x1
   969                           
   970  00A1                     I2C_Master_ReadByte@Read_State:	
   971                           ; 1 bytes @ 0x1
   972                           
   973  00A1                     EEPROM_WriteByte@address:	
   974                           ; 1 bytes @ 0x1
   975                           
   976                           
   977                           ; 2 bytes @ 0x1
   978  00A1                     	ds	1
   979  00A2                     ?_EEPROM_ReadByte:
   980  00A2                     ADC_Init@config:	
   981                           ; 1 bytes @ 0x2
   982                           
   983  00A2                     TMR1_Init@config:	
   984                           ; 1 bytes @ 0x2
   985                           
   986  00A2                     EEPROM_ReadByte@address:	
   987                           ; 1 bytes @ 0x2
   988                           
   989  00A2                     ___awdiv@dividend:	
   990                           ; 2 bytes @ 0x2
   991                           
   992  00A2                     ___awmod@dividend:	
   993                           ; 2 bytes @ 0x2
   994                           
   995  00A2                     ___lwdiv@dividend:	
   996                           ; 2 bytes @ 0x2
   997                           
   998  00A2                     ___lwmod@dividend:	
   999                           ; 2 bytes @ 0x2
  1000                           
  1001                           
  1002                           ; 2 bytes @ 0x2
  1003  00A2                     	ds	1
  1004  00A3                     EEPROM_WriteByte@data:
  1005  00A3                     DD_SetState@device:	
  1006                           ; 1 bytes @ 0x3
  1007                           
  1008  00A3                     SSD_config@ID:	
  1009                           ; 1 bytes @ 0x3
  1010                           
  1011                           
  1012                           ; 1 bytes @ 0x3
  1013  00A3                     	ds	1
  1014  00A4                     ??_SSD_OFF:
  1015  00A4                     ??_EEPROM_WriteByte:	
  1016                           ; 1 bytes @ 0x4
  1017                           
  1018  00A4                     ??_EEPROM_ReadByte:	
  1019                           ; 1 bytes @ 0x4
  1020                           
  1021  00A4                     ??___awdiv:	
  1022                           ; 1 bytes @ 0x4
  1023                           
  1024  00A4                     ??___awmod:	
  1025                           ; 1 bytes @ 0x4
  1026                           
  1027  00A4                     ??___lwdiv:	
  1028                           ; 1 bytes @ 0x4
  1029                           
  1030  00A4                     ??___lwmod:	
  1031                           ; 1 bytes @ 0x4
  1032                           
  1033  00A4                     SSD_OFF@ID:	
  1034                           ; 1 bytes @ 0x4
  1035                           
  1036  00A4                     ___awdiv@counter:	
  1037                           ; 1 bytes @ 0x4
  1038                           
  1039  00A4                     ___awmod@counter:	
  1040                           ; 1 bytes @ 0x4
  1041                           
  1042  00A4                     ___lwmod@counter:	
  1043                           ; 1 bytes @ 0x4
  1044                           
  1045  00A4                     ___lwdiv@quotient:	
  1046                           ; 1 bytes @ 0x4
  1047                           
  1048  00A4                     ___lldiv@dividend:	
  1049                           ; 2 bytes @ 0x4
  1050                           
  1051                           
  1052                           ; 4 bytes @ 0x4
  1053  00A4                     	ds	1
  1054  00A5                     ??_EWH_Sleep_Mode:
  1055  00A5                     ??_EWH_SSD_OFF:	
  1056                           ; 1 bytes @ 0x5
  1057                           
  1058  00A5                     ___awdiv@sign:	
  1059                           ; 1 bytes @ 0x5
  1060                           
  1061  00A5                     ___awmod@sign:	
  1062                           ; 1 bytes @ 0x5
  1063                           
  1064                           
  1065                           ; 1 bytes @ 0x5
  1066  00A5                     	ds	1
  1067  00A6                     ??_EWH_EEPROM_Init:
  1068  00A6                     ??_EWH_EEPROM_Update:	
  1069                           ; 1 bytes @ 0x6
  1070                           
  1071  00A6                     EEPROM_ReadByte@data:	
  1072                           ; 1 bytes @ 0x6
  1073                           
  1074  00A6                     EWH_EEPROM_Update@newSetTemp:	
  1075                           ; 1 bytes @ 0x6
  1076                           
  1077  00A6                     ___lwdiv@counter:	
  1078                           ; 1 bytes @ 0x6
  1079                           
  1080  00A6                     ___awdiv@quotient:	
  1081                           ; 1 bytes @ 0x6
  1082                           
  1083                           
  1084                           ; 2 bytes @ 0x6
  1085  00A6                     	ds	1
  1086  00A7                     ??_EWH_EEPROM_Read:
  1087  00A7                     ?_EWH_getAvrgTempReading:	
  1088                           ; 1 bytes @ 0x7
  1089                           
  1090  00A7                     EWH_getAvrgTempReading@length:	
  1091                           ; 1 bytes @ 0x7
  1092                           
  1093                           
  1094                           ; 1 bytes @ 0x7
  1095  00A7                     	ds	1
  1096  00A8                     ?_SSD_Write:
  1097  00A8                     ??_EWH_getAvrgTempReading:	
  1098                           ; 1 bytes @ 0x8
  1099                           
  1100  00A8                     ??___lldiv:	
  1101                           ; 1 bytes @ 0x8
  1102                           
  1103  00A8                     SSD_Write@Number:	
  1104                           ; 1 bytes @ 0x8
  1105                           
  1106                           
  1107                           ; 1 bytes @ 0x8
  1108  00A8                     	ds	1
  1109  00A9                     ??_SSD_Write:
  1110  00A9                     SSD_Write@ID:	
  1111                           ; 1 bytes @ 0x9
  1112                           
  1113  00A9                     ___lldiv@quotient:	
  1114                           ; 1 bytes @ 0x9
  1115                           
  1116                           
  1117                           ; 4 bytes @ 0x9
  1118  00A9                     	ds	1
  1119  00AA                     ?_EWH_SSD_Update:
  1120  00AA                     EWH_SSD_Update@temp:	
  1121                           ; 1 bytes @ 0xA
  1122                           
  1123                           
  1124                           ; 2 bytes @ 0xA
  1125  00AA                     	ds	1
  1126  00AB                     EWH_getAvrgTempReading@sumOfReadings:
  1127                           
  1128                           ; 2 bytes @ 0xB
  1129  00AB                     	ds	1
  1130  00AC                     ??_EWH_SSD_Update:
  1131                           
  1132                           ; 1 bytes @ 0xC
  1133  00AC                     	ds	1
  1134  00AD                     EWH_getAvrgTempReading@averageReading:
  1135  00AD                     ___lldiv@counter:	
  1136                           ; 1 bytes @ 0xD
  1137                           
  1138                           
  1139                           ; 1 bytes @ 0xD
  1140  00AD                     	ds	1
  1141  00AE                     ??_EWH_WakeUP_Mode:
  1142  00AE                     ??_EWH_SetTemp_Mode:	
  1143                           ; 1 bytes @ 0xE
  1144                           
  1145  00AE                     ??_I2C_Init:	
  1146                           ; 1 bytes @ 0xE
  1147                           
  1148  00AE                     I2C_Init@i2c_config:	
  1149                           ; 1 bytes @ 0xE
  1150                           
  1151  00AE                     EWH_getAvrgTempReading@buffer:	
  1152                           ; 1 bytes @ 0xE
  1153                           
  1154                           
  1155                           ; 1 bytes @ 0xE
  1156  00AE                     	ds	1
  1157  00AF                     EWH_getAvrgTempReading@i:
  1158                           
  1159                           ; 1 bytes @ 0xF
  1160  00AF                     	ds	1
  1161  00B0                     ??_EWH_Operating_Mode:
  1162                           
  1163                           ; 1 bytes @ 0x10
  1164  00B0                     	ds	3
  1165  00B3                     ??_main:
  1166                           
  1167                           ; 1 bytes @ 0x13
  1168  00B3                     	ds	2
  1169  00B5                     main@TMR1_cfg:
  1170                           
  1171                           ; 2 bytes @ 0x15
  1172  00B5                     	ds	2
  1173  00B7                     main@i2c_config:
  1174                           
  1175                           ; 6 bytes @ 0x17
  1176  00B7                     	ds	6
  1177  00BD                     main@adc_config:
  1178                           
  1179                           ; 4 bytes @ 0x1D
  1180  00BD                     	ds	4
  1181                           
  1182                           	psect	cstackCOMMON
  1183  0070                     __pcstackCOMMON:
  1184  0070                     ?_I2C_Master_Send_Start:
  1185  0070                     ?_I2C_Master_Send_RepeatedStart:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  0070                     ?_I2C_Master_WriteByte:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0070                     ?_I2C_Master_Send_Stop:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194  0070                     ?_I2C_Master_ReadByte:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197  0070                     ?_TMR1_Init:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200  0070                     ?_ADC_Init:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203  0070                     ?_DD_Init:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  0070                     ?_SW_Init:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209  0070                     ?_EWH_EEPROM_Init:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212  0070                     ?_EWH_Sleep_Mode:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215  0070                     ?_EWH_WakeUP_Mode:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218  0070                     ?_EWH_Operating_Mode:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221  0070                     ?_EWH_SetTemp_Mode:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224  0070                     ?_SSD_OFF:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227  0070                     ?_EWH_EEPROM_Read:	
  1228                           ; 1 bytes @ 0x0
  1229                           
  1230  0070                     ?_EWH_EEPROM_Update:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233  0070                     ?_I2C_Init:	
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236  0070                     ?_I2C_Wait_IDLE:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239  0070                     ?_I2C_Master_Send_ACK:	
  1240                           ; 1 bytes @ 0x0
  1241                           
  1242  0070                     ?_I2C_Master_Send_NACK:	
  1243                           ; 1 bytes @ 0x0
  1244                           
  1245  0070                     ?_main:	
  1246                           ; 1 bytes @ 0x0
  1247                           
  1248  0070                     ?_DD_GetState:	
  1249                           ; 1 bytes @ 0x0
  1250                           
  1251  0070                     ??_DD_GetState:	
  1252                           ; 1 bytes @ 0x0
  1253                           
  1254  0070                     ?_EWH_SSD_OFF:	
  1255                           ; 1 bytes @ 0x0
  1256                           
  1257  0070                     ?_TMR1_Start:	
  1258                           ; 1 bytes @ 0x0
  1259                           
  1260  0070                     ?_TMR1_Stop:	
  1261                           ; 1 bytes @ 0x0
  1262                           
  1263  0070                     ?_ISR:	
  1264                           ; 1 bytes @ 0x0
  1265                           
  1266  0070                     ?__Umul8_16:	
  1267                           ; 1 bytes @ 0x0
  1268                           
  1269  0070                     ?_ADC_ReadChannel:	
  1270                           ; 2 bytes @ 0x0
  1271                           
  1272  0070                     ?___xxtofl:	
  1273                           ; 2 bytes @ 0x0
  1274                           
  1275  0070                     __Umul8_16@multiplicand:	
  1276                           ; 4 bytes @ 0x0
  1277                           
  1278  0070                     ___xxtofl@val:	
  1279                           ; 1 bytes @ 0x0
  1280                           
  1281                           
  1282                           ; 4 bytes @ 0x0
  1283  0070                     	ds	2
  1284  0072                     ??__Umul8_16:
  1285  0072                     ??_ADC_ReadChannel:	
  1286                           ; 1 bytes @ 0x2
  1287                           
  1288  0072                     DD_GetState@device:	
  1289                           ; 1 bytes @ 0x2
  1290                           
  1291                           
  1292                           ; 1 bytes @ 0x2
  1293  0072                     	ds	1
  1294  0073                     ADC_ReadChannel@result:
  1295                           
  1296                           ; 2 bytes @ 0x3
  1297  0073                     	ds	1
  1298  0074                     ??___xxtofl:
  1299  0074                     __Umul8_16@product:	
  1300                           ; 1 bytes @ 0x4
  1301                           
  1302                           
  1303                           ; 2 bytes @ 0x4
  1304  0074                     	ds	1
  1305  0075                     ADC_ReadChannel@channel:
  1306                           
  1307                           ; 1 bytes @ 0x5
  1308  0075                     	ds	1
  1309  0076                     __Umul8_16@word_mpld:
  1310                           
  1311                           ; 2 bytes @ 0x6
  1312  0076                     	ds	2
  1313  0078                     __Umul8_16@multiplier:
  1314  0078                     ___xxtofl@sign:	
  1315                           ; 1 bytes @ 0x8
  1316                           
  1317                           
  1318                           ; 1 bytes @ 0x8
  1319  0078                     	ds	1
  1320  0079                     ___xxtofl@exp:
  1321                           
  1322                           ; 1 bytes @ 0x9
  1323  0079                     	ds	1
  1324  007A                     ___xxtofl@arg:
  1325                           
  1326                           ; 4 bytes @ 0xA
  1327  007A                     	ds	4
  1328                           
  1329                           	psect	cstackBANK0
  1330  0020                     __pcstackBANK0:
  1331  0020                     ?___flmul:
  1332  0020                     ___flmul@b:	
  1333                           ; 4 bytes @ 0x0
  1334                           
  1335                           
  1336                           ; 4 bytes @ 0x0
  1337  0020                     	ds	4
  1338  0024                     ___flmul@a:
  1339                           
  1340                           ; 4 bytes @ 0x4
  1341  0024                     	ds	4
  1342  0028                     ??___flmul:
  1343                           
  1344                           ; 1 bytes @ 0x8
  1345  0028                     	ds	5
  1346  002D                     ___flmul@sign:
  1347                           
  1348                           ; 1 bytes @ 0xD
  1349  002D                     	ds	1
  1350  002E                     ___flmul@grs:
  1351                           
  1352                           ; 4 bytes @ 0xE
  1353  002E                     	ds	4
  1354  0032                     ___flmul@aexp:
  1355                           
  1356                           ; 1 bytes @ 0x12
  1357  0032                     	ds	1
  1358  0033                     ___flmul@bexp:
  1359                           
  1360                           ; 1 bytes @ 0x13
  1361  0033                     	ds	1
  1362  0034                     ___flmul@prod:
  1363                           
  1364                           ; 4 bytes @ 0x14
  1365  0034                     	ds	4
  1366  0038                     ___flmul@temp:
  1367                           
  1368                           ; 2 bytes @ 0x18
  1369  0038                     	ds	2
  1370  003A                     ?___fltol:
  1371  003A                     ___fltol@f1:	
  1372                           ; 4 bytes @ 0x1A
  1373                           
  1374                           
  1375                           ; 4 bytes @ 0x1A
  1376  003A                     	ds	4
  1377  003E                     ??___fltol:
  1378                           
  1379                           ; 1 bytes @ 0x1E
  1380  003E                     	ds	4
  1381  0042                     ___fltol@sign1:
  1382                           
  1383                           ; 1 bytes @ 0x22
  1384  0042                     	ds	1
  1385  0043                     ___fltol@exp1:
  1386                           
  1387                           ; 1 bytes @ 0x23
  1388  0043                     	ds	1
  1389  0044                     ??_ISR:
  1390                           
  1391                           ; 1 bytes @ 0x24
  1392  0044                     	ds	4
  1393  0048                     ISR@Reading:
  1394                           
  1395                           ; 2 bytes @ 0x28
  1396  0048                     	ds	2
  1397                           
  1398                           	psect	maintext
  1399  073A                     __pmaintext:	
  1400 ;;
  1401 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1402 ;;
  1403 ;; *************** function _main *****************
  1404 ;; Defined at:
  1405 ;;		line 5 in file "main.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;		None
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;  i2c_config      6   23[BANK1 ] struct .
  1410 ;;  adc_config      4   29[BANK1 ] struct .
  1411 ;;  TMR1_cfg        2   21[BANK1 ] struct .
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  1    wreg      void 
  1414 ;; Registers used:
  1415 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1416 ;; Tracked objects:
  1417 ;;		On entry : B00/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1421 ;;      Params:         0       0       0       0       0
  1422 ;;      Locals:         0       0      12       0       0
  1423 ;;      Temps:          0       0       2       0       0
  1424 ;;      Totals:         0       0      14       0       0
  1425 ;;Total ram usage:       14 bytes
  1426 ;; Hardware stack levels required when called:    9
  1427 ;; This function calls:
  1428 ;;		_ADC_Init
  1429 ;;		_DD_Init
  1430 ;;		_EWH_EEPROM_Init
  1431 ;;		_EWH_Operating_Mode
  1432 ;;		_EWH_SetTemp_Mode
  1433 ;;		_EWH_Sleep_Mode
  1434 ;;		_EWH_WakeUP_Mode
  1435 ;;		_I2C_Init
  1436 ;;		_SW_Init
  1437 ;;		_TMR1_Init
  1438 ;; This function is called by:
  1439 ;;		Startup code after reset
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           
  1444                           ;psect for function _main
  1445  073A                     _main:
  1446  073A                     l3575:	
  1447                           ;incstack = 0
  1448 ;; hardware stack exceeded
  1449                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1450                           
  1451                           
  1452                           ;main.c: 8:     tTMR1_Config TMR1_cfg;;main.c: 9:     TMR1_cfg.Prescaler=TMR1_PRESCALER_
      +                          4;
  1453  073A  3002               	movlw	2
  1454  073B  00FF               	movwf	btemp+1
  1455  073C  087F               	movf	btemp+1,w
  1456  073D  1683               	bsf	3,5	;RP0=1, select bank1
  1457  073E  1303               	bcf	3,6	;RP1=0, select bank1
  1458  073F  00B5               	movwf	main@TMR1_cfg^(0+128)
  1459  0740                     l3577:
  1460                           
  1461                           ;main.c: 10:     TMR1_cfg.clkSource=EXTERNAL_CLK_SOURCE;
  1462  0740  01B6               	clrf	(main@TMR1_cfg^(0+128)+1)
  1463  0741  0AB6               	incf	(main@TMR1_cfg^(0+128)+1),f
  1464  0742                     l3579:
  1465                           
  1466                           ;main.c: 12:     TMR1_Init(&TMR1_cfg);
  1467  0742  30B5               	movlw	(low (main@TMR1_cfg| 0))& (0+255)
  1468  0743  120A  158A  2391  120A  118A  	fcall	_TMR1_Init
  1469  0748                     l3581:
  1470                           
  1471                           ;main.c: 14:     tADC_Config adc_config;;main.c: 15:     adc_config.alignment=RIGHT;
  1472  0748  1683               	bsf	3,5	;RP0=1, select bank1
  1473  0749  1303               	bcf	3,6	;RP1=0, select bank1
  1474  074A  01BF               	clrf	(main@adc_config^(0+128)+2)
  1475  074B  0ABF               	incf	(main@adc_config^(0+128)+2),f
  1476  074C                     l3583:
  1477                           
  1478                           ;main.c: 16:     adc_config.channel=ADC2;
  1479  074C  3002               	movlw	2
  1480  074D  00FF               	movwf	btemp+1
  1481  074E  087F               	movf	btemp+1,w
  1482  074F  00BD               	movwf	main@adc_config^(0+128)
  1483  0750                     l3585:
  1484                           
  1485                           ;main.c: 17:     adc_config.clk=FOSC_8;
  1486  0750  01C0               	clrf	(main@adc_config^(0+128)+3)
  1487  0751  0AC0               	incf	(main@adc_config^(0+128)+3),f
  1488  0752                     l3587:
  1489                           
  1490                           ;main.c: 18:     adc_config.mode= POLLING_MODE;
  1491  0752  01BE               	clrf	(main@adc_config^(0+128)+1)
  1492  0753                     l3589:
  1493                           
  1494                           ;main.c: 20:     tI2C_Config i2c_config;;main.c: 21:     i2c_config.BaudRate=100000;
  1495  0753  3000               	movlw	0
  1496  0754  00BB               	movwf	((main@i2c_config+3)^(0+128)+1)
  1497  0755  3001               	movlw	1
  1498  0756  00BA               	movwf	((main@i2c_config+2)^(0+128)+1)
  1499  0757  3086               	movlw	134
  1500  0758  00B9               	movwf	((main@i2c_config+1)^(0+128)+1)
  1501  0759  30A0               	movlw	160
  1502  075A  00B8               	movwf	(main@i2c_config^(0+128)+1)
  1503  075B                     l3591:
  1504                           
  1505                           ;main.c: 22:     i2c_config.Mode=Master_Mode;
  1506  075B  3008               	movlw	8
  1507  075C  00FF               	movwf	btemp+1
  1508  075D  087F               	movf	btemp+1,w
  1509  075E  00B7               	movwf	main@i2c_config^(0+128)
  1510  075F                     l3593:
  1511                           
  1512                           ;main.c: 23:     i2c_config.operationMode=POLLING;
  1513  075F  01BC               	clrf	(main@i2c_config^(0+128)+5)
  1514                           
  1515                           ;main.c: 26:     ADC_Init(&adc_config);
  1516  0760  30BD               	movlw	(low (main@adc_config| 0))& (0+255)
  1517  0761  120A  158A  26FF  120A  118A  	fcall	_ADC_Init
  1518  0766                     l3595:
  1519                           
  1520                           ;main.c: 27:     DD_Init();
  1521  0766  120A  158A  2133  120A  118A  	fcall	_DD_Init
  1522  076B                     l3597:
  1523                           
  1524                           ;main.c: 28:     SW_Init();
  1525  076B  120A  158A  20A2  120A  118A  	fcall	_SW_Init
  1526                           
  1527                           ;main.c: 29:     I2C_Init(&i2c_config);
  1528  0770  30B7               	movlw	(low (main@i2c_config| 0))& (0+255)
  1529  0771  120A  158A  2347  120A  118A  	fcall	_I2C_Init
  1530  0776                     l3599:
  1531                           
  1532                           ;main.c: 30:     EWH_EEPROM_Init();
  1533  0776  120A  158A  20EF  120A  118A  	fcall	_EWH_EEPROM_Init
  1534  077B                     l3603:	
  1535                           ;main.c: 32:     (0u)? (TRISB |= (1<<4)) : (TRISB &= ~(1<<4));
  1536                           
  1537  077B  30EF               	movlw	239
  1538  077C  00FF               	movwf	btemp+1
  1539  077D  087F               	movf	btemp+1,w
  1540  077E  1683               	bsf	3,5	;RP0=1, select bank1
  1541  077F  1303               	bcf	3,6	;RP1=0, select bank1
  1542  0780  0586               	andwf	6,f	;volatile
  1543  0781                     l3607:
  1544  0781  30DF               	movlw	223
  1545  0782  00FF               	movwf	btemp+1
  1546  0783  087F               	movf	btemp+1,w
  1547  0784  0586               	andwf	6,f	;volatile
  1548  0785                     l3611:
  1549  0785  30BF               	movlw	191
  1550  0786  00FF               	movwf	btemp+1
  1551  0787  087F               	movf	btemp+1,w
  1552  0788  0586               	andwf	6,f	;volatile
  1553  0789                     l3615:
  1554  0789  30EF               	movlw	239
  1555  078A  00FF               	movwf	btemp+1
  1556  078B  087F               	movf	btemp+1,w
  1557  078C  1283               	bcf	3,5	;RP0=0, select bank0
  1558  078D  1303               	bcf	3,6	;RP1=0, select bank0
  1559  078E  0586               	andwf	6,f	;volatile
  1560  078F                     l3619:
  1561  078F  30DF               	movlw	223
  1562  0790  00FF               	movwf	btemp+1
  1563  0791  087F               	movf	btemp+1,w
  1564  0792  0586               	andwf	6,f	;volatile
  1565  0793                     l3623:
  1566  0793  30BF               	movlw	191
  1567  0794  00FF               	movwf	btemp+1
  1568  0795  087F               	movf	btemp+1,w
  1569  0796  0586               	andwf	6,f	;volatile
  1570  0797  2FAF               	goto	l3635
  1571  0798                     l3625:
  1572                           
  1573                           ;main.c: 44:                 EWH_Sleep_Mode();
  1574  0798  120A  158A  2213  120A  118A  	fcall	_EWH_Sleep_Mode
  1575                           
  1576                           ;main.c: 45:                 break;
  1577  079D  2FAF               	goto	l3635
  1578  079E                     l3627:
  1579                           
  1580                           ;main.c: 47:                 EWH_WakeUP_Mode();
  1581  079E  120A  158A  277D  120A  118A  	fcall	_EWH_WakeUP_Mode
  1582                           
  1583                           ;main.c: 48:                 break;
  1584  07A3  2FAF               	goto	l3635
  1585  07A4                     l3629:
  1586                           
  1587                           ;main.c: 50:                 EWH_Operating_Mode();
  1588  07A4  120A  118A  2398  120A  118A  	fcall	_EWH_Operating_Mode
  1589                           
  1590                           ;main.c: 51:                 break;
  1591  07A9  2FAF               	goto	l3635
  1592  07AA                     l3631:
  1593                           
  1594                           ;main.c: 53:                 EWH_SetTemp_Mode();
  1595  07AA  120A  118A  24CA  120A  118A  	fcall	_EWH_SetTemp_Mode
  1596  07AF                     l3635:	
  1597                           ;main.c: 54:                 break;
  1598                           
  1599  07AF  1683               	bsf	3,5	;RP0=1, select bank1
  1600  07B0  1303               	bcf	3,6	;RP1=0, select bank1
  1601  07B1  084E               	movf	_EWH_Mode^(0+128),w
  1602  07B2  00B3               	movwf	??_main^(0+128)
  1603  07B3  01B4               	clrf	(??_main^(0+128)+1)
  1604                           
  1605                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1606                           ; Switch size 1, requested type "simple"
  1607                           ; Number of cases is 1, Range of values is 0 to 0
  1608                           ; switch strategies available:
  1609                           ; Name         Instructions Cycles
  1610                           ; simple_byte            4     3 (average)
  1611                           ; direct_byte           11     8 (fixed)
  1612                           ; jumptable            260     6 (fixed)
  1613                           ;	Chosen strategy is simple_byte
  1614  07B4  0834               	movf	(??_main+1)^(0+128),w
  1615  07B5  3A00               	xorlw	0	; case 0
  1616  07B6  1903               	skipnz
  1617  07B7  2FB9               	goto	l3927
  1618  07B8  2FAF               	goto	l3635
  1619  07B9                     l3927:
  1620                           
  1621                           ; Switch size 1, requested type "simple"
  1622                           ; Number of cases is 4, Range of values is 0 to 3
  1623                           ; switch strategies available:
  1624                           ; Name         Instructions Cycles
  1625                           ; simple_byte           13     7 (average)
  1626                           ; direct_byte           20     8 (fixed)
  1627                           ; jumptable            260     6 (fixed)
  1628                           ;	Chosen strategy is simple_byte
  1629  07B9  0833               	movf	??_main^(0+128),w
  1630  07BA  3A00               	xorlw	0	; case 0
  1631  07BB  1903               	skipnz
  1632  07BC  2F98               	goto	l3625
  1633  07BD  3A01               	xorlw	1	; case 1
  1634  07BE  1903               	skipnz
  1635  07BF  2F9E               	goto	l3627
  1636  07C0  3A03               	xorlw	3	; case 2
  1637  07C1  1903               	skipnz
  1638  07C2  2FAA               	goto	l3631
  1639  07C3  3A01               	xorlw	1	; case 3
  1640  07C4  1903               	skipnz
  1641  07C5  2FA4               	goto	l3629
  1642  07C6  2FAF               	goto	l3635
  1643  07C7  120A  118A  2812   	ljmp	start
  1644  07CA                     __end_of_main:
  1645                           
  1646                           	psect	text1
  1647  0B91                     __ptext1:	
  1648 ;; *************** function _TMR1_Init *****************
  1649 ;; Defined at:
  1650 ;;		line 3 in file "TMR1.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;  config          1    wreg     PTR struct .
  1653 ;;		 -> main@TMR1_cfg(2), 
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;  config          1    2[BANK1 ] PTR struct .
  1656 ;;		 -> main@TMR1_cfg(2), 
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  1    wreg      void 
  1659 ;; Registers used:
  1660 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1666 ;;      Params:         0       0       0       0       0
  1667 ;;      Locals:         0       0       1       0       0
  1668 ;;      Temps:          0       0       2       0       0
  1669 ;;      Totals:         0       0       3       0       0
  1670 ;;Total ram usage:        3 bytes
  1671 ;; Hardware stack levels used:    1
  1672 ;; Hardware stack levels required when called:    3
  1673 ;; This function calls:
  1674 ;;		Nothing
  1675 ;; This function is called by:
  1676 ;;		_main
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679                           
  1680                           
  1681                           ;psect for function _TMR1_Init
  1682  0B91                     _TMR1_Init:
  1683                           
  1684                           ;incstack = 0
  1685                           ; Regs used in _TMR1_Init: [wreg-fsr0h+status,2+status,0]
  1686                           ;TMR1_Init@config stored from wreg
  1687  0B91  1683               	bsf	3,5	;RP0=1, select bank1
  1688  0B92  1303               	bcf	3,6	;RP1=0, select bank1
  1689  0B93  00A2               	movwf	TMR1_Init@config^(0+128)
  1690  0B94                     l3007:
  1691                           
  1692                           ;TMR1.c: 3: void TMR1_Init(tTMR1_Config *config);TMR1.c: 4: {;TMR1.c: 5:     switch(conf
      +                          ig->Prescaler)
  1693  0B94  2BA9               	goto	l3011
  1694  0B95                     l366:	
  1695                           ;TMR1.c: 6:     {;TMR1.c: 7:         case TMR1_PRESCALER_1:
  1696                           
  1697                           
  1698                           ;TMR1.c: 8:             T1CKPS0 = 0; T1CKPS1 = 0;
  1699  0B95  1283               	bcf	3,5	;RP0=0, select bank0
  1700  0B96  1303               	bcf	3,6	;RP1=0, select bank0
  1701  0B97  1210               	bcf	16,4	;volatile
  1702  0B98  1290               	bcf	16,5	;volatile
  1703                           
  1704                           ;TMR1.c: 9:             break;
  1705  0B99  2BC6               	goto	l3015
  1706  0B9A                     l368:	
  1707                           ;TMR1.c: 10:         case TMR1_PRESCALER_2:
  1708                           
  1709                           
  1710                           ;TMR1.c: 11:             T1CKPS0 = 1; T1CKPS1 = 0;
  1711  0B9A  1283               	bcf	3,5	;RP0=0, select bank0
  1712  0B9B  1303               	bcf	3,6	;RP1=0, select bank0
  1713  0B9C  1610               	bsf	16,4	;volatile
  1714  0B9D  1290               	bcf	16,5	;volatile
  1715                           
  1716                           ;TMR1.c: 12:             break;
  1717  0B9E  2BC6               	goto	l3015
  1718  0B9F                     l369:	
  1719                           ;TMR1.c: 13:         case TMR1_PRESCALER_4:
  1720                           
  1721                           
  1722                           ;TMR1.c: 14:             T1CKPS0 = 0; T1CKPS1 = 1;
  1723  0B9F  1283               	bcf	3,5	;RP0=0, select bank0
  1724  0BA0  1303               	bcf	3,6	;RP1=0, select bank0
  1725  0BA1  1210               	bcf	16,4	;volatile
  1726  0BA2  1690               	bsf	16,5	;volatile
  1727                           
  1728                           ;TMR1.c: 15:             break;
  1729  0BA3  2BC6               	goto	l3015
  1730  0BA4                     l370:	
  1731                           ;TMR1.c: 16:         case TMR1_PRESCALER_8:
  1732                           
  1733                           
  1734                           ;TMR1.c: 17:             T1CKPS0 = 1; T1CKPS1 = 1;
  1735  0BA4  1283               	bcf	3,5	;RP0=0, select bank0
  1736  0BA5  1303               	bcf	3,6	;RP1=0, select bank0
  1737  0BA6  1610               	bsf	16,4	;volatile
  1738  0BA7  1690               	bsf	16,5	;volatile
  1739                           
  1740                           ;TMR1.c: 18:             break;
  1741  0BA8  2BC6               	goto	l3015
  1742  0BA9                     l3011:
  1743  0BA9  0822               	movf	TMR1_Init@config^(0+128),w
  1744  0BAA  0084               	movwf	4
  1745  0BAB  1383               	bcf	3,7	;select IRP bank0
  1746  0BAC  0800               	movf	0,w
  1747  0BAD  00A0               	movwf	??_TMR1_Init^(0+128)
  1748  0BAE  01A1               	clrf	(??_TMR1_Init^(0+128)+1)
  1749                           
  1750                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1751                           ; Switch size 1, requested type "simple"
  1752                           ; Number of cases is 1, Range of values is 0 to 0
  1753                           ; switch strategies available:
  1754                           ; Name         Instructions Cycles
  1755                           ; simple_byte            4     3 (average)
  1756                           ; direct_byte           11     8 (fixed)
  1757                           ; jumptable            260     6 (fixed)
  1758                           ;	Chosen strategy is simple_byte
  1759  0BAF  0821               	movf	(??_TMR1_Init+1)^(0+128),w
  1760  0BB0  3A00               	xorlw	0	; case 0
  1761  0BB1  1903               	skipnz
  1762  0BB2  2BB4               	goto	l3929
  1763  0BB3  2BC6               	goto	l3015
  1764  0BB4                     l3929:
  1765                           
  1766                           ; Switch size 1, requested type "simple"
  1767                           ; Number of cases is 4, Range of values is 0 to 3
  1768                           ; switch strategies available:
  1769                           ; Name         Instructions Cycles
  1770                           ; simple_byte           13     7 (average)
  1771                           ; direct_byte           20     8 (fixed)
  1772                           ; jumptable            260     6 (fixed)
  1773                           ;	Chosen strategy is simple_byte
  1774  0BB4  0820               	movf	??_TMR1_Init^(0+128),w
  1775  0BB5  3A00               	xorlw	0	; case 0
  1776  0BB6  1903               	skipnz
  1777  0BB7  2B95               	goto	l366
  1778  0BB8  3A01               	xorlw	1	; case 1
  1779  0BB9  1903               	skipnz
  1780  0BBA  2B9A               	goto	l368
  1781  0BBB  3A03               	xorlw	3	; case 2
  1782  0BBC  1903               	skipnz
  1783  0BBD  2B9F               	goto	l369
  1784  0BBE  3A01               	xorlw	1	; case 3
  1785  0BBF  1903               	skipnz
  1786  0BC0  2BA4               	goto	l370
  1787  0BC1  2BC6               	goto	l3015
  1788  0BC2                     l372:	
  1789                           ;TMR1.c: 22:     {;TMR1.c: 23:         case INTERNAL_CLK_SOURCE:
  1790                           
  1791                           
  1792                           ;TMR1.c: 24:             (T0CS = 0);
  1793  0BC2  1281               	bcf	1,5	;volatile
  1794                           
  1795                           ;TMR1.c: 25:             break ;
  1796  0BC3  2BDA               	goto	l375
  1797  0BC4                     l374:	
  1798                           ;TMR1.c: 26:         case EXTERNAL_CLK_SOURCE:
  1799                           
  1800                           
  1801                           ;TMR1.c: 27:             (T0CS = 1);
  1802  0BC4  1681               	bsf	1,5	;volatile
  1803                           
  1804                           ;TMR1.c: 28:             break ;
  1805  0BC5  2BDA               	goto	l375
  1806  0BC6                     l3015:
  1807  0BC6  1683               	bsf	3,5	;RP0=1, select bank1
  1808  0BC7  1303               	bcf	3,6	;RP1=0, select bank1
  1809  0BC8  0A22               	incf	TMR1_Init@config^(0+128),w
  1810  0BC9  0084               	movwf	4
  1811  0BCA  0800               	movf	0,w
  1812  0BCB  00A0               	movwf	??_TMR1_Init^(0+128)
  1813  0BCC  01A1               	clrf	(??_TMR1_Init^(0+128)+1)
  1814                           
  1815                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1816                           ; Switch size 1, requested type "simple"
  1817                           ; Number of cases is 1, Range of values is 0 to 0
  1818                           ; switch strategies available:
  1819                           ; Name         Instructions Cycles
  1820                           ; simple_byte            4     3 (average)
  1821                           ; direct_byte           11     8 (fixed)
  1822                           ; jumptable            260     6 (fixed)
  1823                           ;	Chosen strategy is simple_byte
  1824  0BCD  0821               	movf	(??_TMR1_Init+1)^(0+128),w
  1825  0BCE  3A00               	xorlw	0	; case 0
  1826  0BCF  1903               	skipnz
  1827  0BD0  2BD2               	goto	l3931
  1828  0BD1  2BDA               	goto	l375
  1829  0BD2                     l3931:
  1830                           
  1831                           ; Switch size 1, requested type "simple"
  1832                           ; Number of cases is 2, Range of values is 0 to 1
  1833                           ; switch strategies available:
  1834                           ; Name         Instructions Cycles
  1835                           ; simple_byte            7     4 (average)
  1836                           ; direct_byte           14     8 (fixed)
  1837                           ; jumptable            260     6 (fixed)
  1838                           ;	Chosen strategy is simple_byte
  1839  0BD2  0820               	movf	??_TMR1_Init^(0+128),w
  1840  0BD3  3A00               	xorlw	0	; case 0
  1841  0BD4  1903               	skipnz
  1842  0BD5  2BC2               	goto	l372
  1843  0BD6  3A01               	xorlw	1	; case 1
  1844  0BD7  1903               	skipnz
  1845  0BD8  2BC4               	goto	l374
  1846  0BD9  2BDA               	goto	l375
  1847  0BDA                     l375:
  1848  0BDA  0008               	return
  1849  0BDB                     __end_of_TMR1_Init:
  1850                           
  1851                           	psect	text2
  1852  08A2                     __ptext2:	
  1853 ;; *************** function _SW_Init *****************
  1854 ;; Defined at:
  1855 ;;		line 16 in file "SW.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;		None
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;		None
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      void 
  1862 ;; Registers used:
  1863 ;;		wreg, status,2, status,0, btemp+1
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1869 ;;      Params:         0       0       0       0       0
  1870 ;;      Locals:         0       0       0       0       0
  1871 ;;      Temps:          0       0       0       0       0
  1872 ;;      Totals:         0       0       0       0       0
  1873 ;;Total ram usage:        0 bytes
  1874 ;; Hardware stack levels used:    1
  1875 ;; Hardware stack levels required when called:    3
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		_main
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           
  1884                           ;psect for function _SW_Init
  1885  08A2                     _SW_Init:
  1886  08A2                     l3081:	
  1887                           ;incstack = 0
  1888                           ; Regs used in _SW_Init: [wreg+status,2+status,0+btemp+1]
  1889                           
  1890  08A2  1683               	bsf	3,5	;RP0=1, select bank1
  1891  08A3  1303               	bcf	3,6	;RP1=0, select bank1
  1892  08A4  1506               	bsf	6,2	;volatile
  1893  08A5                     l3085:
  1894  08A5  1486               	bsf	6,1	;volatile
  1895  08A6                     l3089:
  1896  08A6  1406               	bsf	6,0	;volatile
  1897  08A7                     l3093:
  1898                           
  1899                           ;SW.c: 24:     INTEDG=0;
  1900  08A7  1301               	bcf	1,6	;volatile
  1901  08A8                     l3095:
  1902                           
  1903                           ;SW.c: 25:     INTE=1;
  1904  08A8  160B               	bsf	11,4	;volatile
  1905  08A9                     l3097:
  1906                           
  1907                           ;SW.c: 26:     GIE=1;
  1908  08A9  178B               	bsf	11,7	;volatile
  1909  08AA                     l415:
  1910  08AA  0008               	return
  1911  08AB                     __end_of_SW_Init:
  1912                           
  1913                           	psect	text3
  1914  0B47                     __ptext3:	
  1915 ;; *************** function _I2C_Init *****************
  1916 ;; Defined at:
  1917 ;;		line 12 in file "i2c.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;  i2c_config      1    wreg     PTR struct .
  1920 ;;		 -> main@i2c_config(6), 
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;  i2c_config      1   14[BANK1 ] PTR struct .
  1923 ;;		 -> main@i2c_config(6), 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      void 
  1926 ;; Registers used:
  1927 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1933 ;;      Params:         0       0       0       0       0
  1934 ;;      Locals:         0       0       1       0       0
  1935 ;;      Temps:          0       0       0       0       0
  1936 ;;      Totals:         0       0       1       0       0
  1937 ;;Total ram usage:        1 bytes
  1938 ;; Hardware stack levels used:    1
  1939 ;; Hardware stack levels required when called:    4
  1940 ;; This function calls:
  1941 ;;		___lldiv
  1942 ;; This function is called by:
  1943 ;;		_main
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           
  1948                           ;psect for function _I2C_Init
  1949  0B47                     _I2C_Init:
  1950                           
  1951                           ;incstack = 0
  1952                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1953                           ;I2C_Init@i2c_config stored from wreg
  1954  0B47  1683               	bsf	3,5	;RP0=1, select bank1
  1955  0B48  1303               	bcf	3,6	;RP1=0, select bank1
  1956  0B49  00AE               	movwf	I2C_Init@i2c_config^(0+128)
  1957  0B4A                     l2985:
  1958                           
  1959                           ;i2c.c: 12: void I2C_Init(tI2C_Config *i2c_config);i2c.c: 13: {;i2c.c: 15:     SSPCON2=0
      +                          x00;
  1960  0B4A  0191               	clrf	17	;volatile
  1961                           
  1962                           ;i2c.c: 16:     SSPSTAT=0x00;
  1963  0B4B  0194               	clrf	20	;volatile
  1964  0B4C                     l2987:
  1965                           
  1966                           ;i2c.c: 18:     SSPCON |= i2c_config->Mode;
  1967  0B4C  082E               	movf	I2C_Init@i2c_config^(0+128),w
  1968  0B4D  0084               	movwf	4
  1969  0B4E  1383               	bcf	3,7	;select IRP bank0
  1970  0B4F  0800               	movf	0,w
  1971  0B50  00FF               	movwf	btemp+1
  1972  0B51  087F               	movf	btemp+1,w
  1973  0B52  1283               	bcf	3,5	;RP0=0, select bank0
  1974  0B53  1303               	bcf	3,6	;RP1=0, select bank0
  1975  0B54  0494               	iorwf	20,f	;volatile
  1976  0B55                     l2989:
  1977                           
  1978                           ;i2c.c: 22:     SSPADD = (((4000000/4)/i2c_config->BaudRate) - 1);
  1979  0B55  1683               	bsf	3,5	;RP0=1, select bank1
  1980  0B56  1303               	bcf	3,6	;RP1=0, select bank1
  1981  0B57  0A2E               	incf	I2C_Init@i2c_config^(0+128),w
  1982  0B58  0084               	movwf	4
  1983  0B59  0800               	movf	0,w
  1984  0B5A  00A0               	movwf	___lldiv@divisor^(0+128)
  1985  0B5B  0A84               	incf	4,f
  1986  0B5C  0800               	movf	0,w
  1987  0B5D  00A1               	movwf	(___lldiv@divisor+1)^(0+128)
  1988  0B5E  0A84               	incf	4,f
  1989  0B5F  0800               	movf	0,w
  1990  0B60  00A2               	movwf	(___lldiv@divisor+2)^(0+128)
  1991  0B61  0A84               	incf	4,f
  1992  0B62  0800               	movf	0,w
  1993  0B63  00A3               	movwf	(___lldiv@divisor+3)^(0+128)
  1994  0B64  3000               	movlw	0
  1995  0B65  00A7               	movwf	(___lldiv@dividend+3)^(0+128)
  1996  0B66  300F               	movlw	15
  1997  0B67  00A6               	movwf	(___lldiv@dividend+2)^(0+128)
  1998  0B68  3042               	movlw	66
  1999  0B69  00A5               	movwf	(___lldiv@dividend+1)^(0+128)
  2000  0B6A  3040               	movlw	64
  2001  0B6B  00A4               	movwf	___lldiv@dividend^(0+128)
  2002  0B6C  120A  158A  2547  120A  158A  	fcall	___lldiv
  2003  0B71  1683               	bsf	3,5	;RP0=1, select bank1
  2004  0B72  1303               	bcf	3,6	;RP1=0, select bank1
  2005  0B73  0820               	movf	?___lldiv^(0+128),w
  2006  0B74  3EFF               	addlw	255
  2007  0B75  0093               	movwf	19	;volatile
  2008  0B76                     l2991:
  2009                           
  2010                           ;i2c.c: 32:     SSPEN=1;
  2011  0B76  1283               	bcf	3,5	;RP0=0, select bank0
  2012  0B77  1303               	bcf	3,6	;RP1=0, select bank0
  2013  0B78  1694               	bsf	20,5	;volatile
  2014  0B79                     l2993:
  2015                           
  2016                           ;i2c.c: 38:     (1u)? (TRISC |= (1<<4)) : (TRISC &= ~(1<<4));
  2017  0B79  3080               	movlw	128
  2018  0B7A  1683               	bsf	3,5	;RP0=1, select bank1
  2019  0B7B  1303               	bcf	3,6	;RP1=0, select bank1
  2020  0B7C  0094               	movwf	20	;volatile
  2021  0B7D                     l2995:
  2022  0B7D  1607               	bsf	7,4	;volatile
  2023  0B7E                     l2999:
  2024  0B7E  1587               	bsf	7,3	;volatile
  2025  0B7F                     l3003:
  2026                           
  2027                           ;i2c.c: 44:     if(i2c_config->operationMode==INTERRUPT)
  2028  0B7F  082E               	movf	I2C_Init@i2c_config^(0+128),w
  2029  0B80  3E05               	addlw	5
  2030  0B81  0084               	movwf	4
  2031  0B82  1383               	bcf	3,7	;select IRP bank0
  2032  0B83  0300               	decf	0,w
  2033  0B84  1D03               	btfss	3,2
  2034  0B85  2B87               	goto	u2481
  2035  0B86  2B88               	goto	u2480
  2036  0B87                     u2481:
  2037  0B87  2B90               	goto	l88
  2038  0B88                     u2480:
  2039  0B88                     l3005:
  2040                           
  2041                           ;i2c.c: 45:     {;i2c.c: 46:           GIE = 1;
  2042  0B88  178B               	bsf	11,7	;volatile
  2043                           
  2044                           ;i2c.c: 47:           PEIE = 1;
  2045  0B89  170B               	bsf	11,6	;volatile
  2046                           
  2047                           ;i2c.c: 48:           SSPIF = 0;
  2048  0B8A  1283               	bcf	3,5	;RP0=0, select bank0
  2049  0B8B  1303               	bcf	3,6	;RP1=0, select bank0
  2050  0B8C  118C               	bcf	12,3	;volatile
  2051                           
  2052                           ;i2c.c: 49:           SSPIE = 1;
  2053  0B8D  1683               	bsf	3,5	;RP0=1, select bank1
  2054  0B8E  1303               	bcf	3,6	;RP1=0, select bank1
  2055  0B8F  158C               	bsf	12,3	;volatile
  2056  0B90                     l88:
  2057  0B90  0008               	return
  2058  0B91                     __end_of_I2C_Init:
  2059                           
  2060                           	psect	text4
  2061  0D47                     __ptext4:	
  2062 ;; *************** function ___lldiv *****************
  2063 ;; Defined at:
  2064 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;  divisor         4    0[BANK1 ] unsigned long 
  2067 ;;  dividend        4    4[BANK1 ] unsigned long 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;  quotient        4    9[BANK1 ] unsigned long 
  2070 ;;  counter         1   13[BANK1 ] unsigned char 
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  4    0[BANK1 ] unsigned long 
  2073 ;; Registers used:
  2074 ;;		wreg, status,2, status,0, btemp+1
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2080 ;;      Params:         0       0       8       0       0
  2081 ;;      Locals:         0       0       5       0       0
  2082 ;;      Temps:          0       0       1       0       0
  2083 ;;      Totals:         0       0      14       0       0
  2084 ;;Total ram usage:       14 bytes
  2085 ;; Hardware stack levels used:    1
  2086 ;; Hardware stack levels required when called:    3
  2087 ;; This function calls:
  2088 ;;		Nothing
  2089 ;; This function is called by:
  2090 ;;		_I2C_Init
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           
  2095                           ;psect for function ___lldiv
  2096  0D47                     ___lldiv:
  2097  0D47                     l2907:	
  2098                           ;incstack = 0
  2099                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  2100                           
  2101  0D47  3000               	movlw	0
  2102  0D48  1683               	bsf	3,5	;RP0=1, select bank1
  2103  0D49  1303               	bcf	3,6	;RP1=0, select bank1
  2104  0D4A  00AC               	movwf	(___lldiv@quotient+3)^(0+128)
  2105  0D4B  3000               	movlw	0
  2106  0D4C  00AB               	movwf	(___lldiv@quotient+2)^(0+128)
  2107  0D4D  3000               	movlw	0
  2108  0D4E  00AA               	movwf	(___lldiv@quotient+1)^(0+128)
  2109  0D4F  3000               	movlw	0
  2110  0D50  00A9               	movwf	___lldiv@quotient^(0+128)
  2111  0D51  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  2112  0D52  0422               	iorwf	(___lldiv@divisor+2)^(0+128),w
  2113  0D53  0421               	iorwf	(___lldiv@divisor+1)^(0+128),w
  2114  0D54  0420               	iorwf	___lldiv@divisor^(0+128),w
  2115  0D55  1903               	skipnz
  2116  0D56  2D58               	goto	u2291
  2117  0D57  2D59               	goto	u2290
  2118  0D58                     u2291:
  2119  0D58  2DA6               	goto	l2929
  2120  0D59                     u2290:
  2121  0D59                     l2909:
  2122  0D59  01AD               	clrf	___lldiv@counter^(0+128)
  2123  0D5A  0AAD               	incf	___lldiv@counter^(0+128),f
  2124  0D5B  2D69               	goto	l2915
  2125  0D5C                     l2911:
  2126  0D5C  3001               	movlw	1
  2127  0D5D  00A8               	movwf	??___lldiv^(0+128)
  2128  0D5E                     u2305:
  2129  0D5E  1003               	clrc
  2130  0D5F  0DA0               	rlf	___lldiv@divisor^(0+128),f
  2131  0D60  0DA1               	rlf	(___lldiv@divisor+1)^(0+128),f
  2132  0D61  0DA2               	rlf	(___lldiv@divisor+2)^(0+128),f
  2133  0D62  0DA3               	rlf	(___lldiv@divisor+3)^(0+128),f
  2134  0D63  0BA8               	decfsz	??___lldiv^(0+128),f
  2135  0D64  2D5E               	goto	u2305
  2136  0D65                     l2913:
  2137  0D65  3001               	movlw	1
  2138  0D66  00FF               	movwf	btemp+1
  2139  0D67  087F               	movf	btemp+1,w
  2140  0D68  07AD               	addwf	___lldiv@counter^(0+128),f
  2141  0D69                     l2915:
  2142  0D69  1FA3               	btfss	(___lldiv@divisor+3)^(0+128),7
  2143  0D6A  2D6C               	goto	u2311
  2144  0D6B  2D6D               	goto	u2310
  2145  0D6C                     u2311:
  2146  0D6C  2D5C               	goto	l2911
  2147  0D6D                     u2310:
  2148  0D6D                     l2917:
  2149  0D6D  3001               	movlw	1
  2150  0D6E  00A8               	movwf	??___lldiv^(0+128)
  2151  0D6F                     u2325:
  2152  0D6F  1003               	clrc
  2153  0D70  0DA9               	rlf	___lldiv@quotient^(0+128),f
  2154  0D71  0DAA               	rlf	(___lldiv@quotient+1)^(0+128),f
  2155  0D72  0DAB               	rlf	(___lldiv@quotient+2)^(0+128),f
  2156  0D73  0DAC               	rlf	(___lldiv@quotient+3)^(0+128),f
  2157  0D74  0BA8               	decfsz	??___lldiv^(0+128),f
  2158  0D75  2D6F               	goto	u2325
  2159  0D76                     l2919:
  2160  0D76  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  2161  0D77  0227               	subwf	(___lldiv@dividend+3)^(0+128),w
  2162  0D78  1D03               	skipz
  2163  0D79  2D84               	goto	u2335
  2164  0D7A  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  2165  0D7B  0226               	subwf	(___lldiv@dividend+2)^(0+128),w
  2166  0D7C  1D03               	skipz
  2167  0D7D  2D84               	goto	u2335
  2168  0D7E  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  2169  0D7F  0225               	subwf	(___lldiv@dividend+1)^(0+128),w
  2170  0D80  1D03               	skipz
  2171  0D81  2D84               	goto	u2335
  2172  0D82  0820               	movf	___lldiv@divisor^(0+128),w
  2173  0D83  0224               	subwf	___lldiv@dividend^(0+128),w
  2174  0D84                     u2335:
  2175  0D84  1C03               	skipc
  2176  0D85  2D87               	goto	u2331
  2177  0D86  2D88               	goto	u2330
  2178  0D87                     u2331:
  2179  0D87  2D97               	goto	l2925
  2180  0D88                     u2330:
  2181  0D88                     l2921:
  2182  0D88  0820               	movf	___lldiv@divisor^(0+128),w
  2183  0D89  02A4               	subwf	___lldiv@dividend^(0+128),f
  2184  0D8A  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  2185  0D8B  1C03               	skipc
  2186  0D8C  0F21               	incfsz	(___lldiv@divisor+1)^(0+128),w
  2187  0D8D  02A5               	subwf	(___lldiv@dividend+1)^(0+128),f
  2188  0D8E  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  2189  0D8F  1C03               	skipc
  2190  0D90  0F22               	incfsz	(___lldiv@divisor+2)^(0+128),w
  2191  0D91  02A6               	subwf	(___lldiv@dividend+2)^(0+128),f
  2192  0D92  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  2193  0D93  1C03               	skipc
  2194  0D94  0F23               	incfsz	(___lldiv@divisor+3)^(0+128),w
  2195  0D95  02A7               	subwf	(___lldiv@dividend+3)^(0+128),f
  2196  0D96                     l2923:
  2197  0D96  1429               	bsf	___lldiv@quotient^(0+128),0
  2198  0D97                     l2925:
  2199  0D97  3001               	movlw	1
  2200  0D98                     u2345:
  2201  0D98  1003               	clrc
  2202  0D99  0CA3               	rrf	(___lldiv@divisor+3)^(0+128),f
  2203  0D9A  0CA2               	rrf	(___lldiv@divisor+2)^(0+128),f
  2204  0D9B  0CA1               	rrf	(___lldiv@divisor+1)^(0+128),f
  2205  0D9C  0CA0               	rrf	___lldiv@divisor^(0+128),f
  2206  0D9D  3EFF               	addlw	-1
  2207  0D9E  1D03               	skipz
  2208  0D9F  2D98               	goto	u2345
  2209  0DA0                     l2927:
  2210  0DA0  3001               	movlw	1
  2211  0DA1  02AD               	subwf	___lldiv@counter^(0+128),f
  2212  0DA2  1D03               	btfss	3,2
  2213  0DA3  2DA5               	goto	u2351
  2214  0DA4  2DA6               	goto	u2350
  2215  0DA5                     u2351:
  2216  0DA5  2D6D               	goto	l2917
  2217  0DA6                     u2350:
  2218  0DA6                     l2929:
  2219  0DA6  082C               	movf	(___lldiv@quotient+3)^(0+128),w
  2220  0DA7  00A3               	movwf	(?___lldiv+3)^(0+128)
  2221  0DA8  082B               	movf	(___lldiv@quotient+2)^(0+128),w
  2222  0DA9  00A2               	movwf	(?___lldiv+2)^(0+128)
  2223  0DAA  082A               	movf	(___lldiv@quotient+1)^(0+128),w
  2224  0DAB  00A1               	movwf	(?___lldiv+1)^(0+128)
  2225  0DAC  0829               	movf	___lldiv@quotient^(0+128),w
  2226  0DAD  00A0               	movwf	?___lldiv^(0+128)
  2227  0DAE                     l785:
  2228  0DAE  0008               	return
  2229  0DAF                     __end_of___lldiv:
  2230                           
  2231                           	psect	text5
  2232  0F7D                     __ptext5:	
  2233 ;; *************** function _EWH_WakeUP_Mode *****************
  2234 ;; Defined at:
  2235 ;;		line 28 in file "EWH.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;		None
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;		None
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  1    wreg      void 
  2242 ;; Registers used:
  2243 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2249 ;;      Params:         0       0       0       0       0
  2250 ;;      Locals:         0       0       0       0       0
  2251 ;;      Temps:          0       0       2       0       0
  2252 ;;      Totals:         0       0       2       0       0
  2253 ;;Total ram usage:        2 bytes
  2254 ;; Hardware stack levels used:    1
  2255 ;; Hardware stack levels required when called:    8
  2256 ;; This function calls:
  2257 ;;		_EWH_EEPROM_Read
  2258 ;;		_EWH_SSD_Update
  2259 ;; This function is called by:
  2260 ;;		_main
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           
  2265                           ;psect for function _EWH_WakeUP_Mode
  2266  0F7D                     _EWH_WakeUP_Mode:
  2267  0F7D                     l3127:	
  2268                           ;incstack = 0
  2269 ;; hardware stack exceeded
  2270                           ; Regs used in _EWH_WakeUP_Mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2271                           
  2272                           
  2273                           ;EWH.c: 34:     EWH_Events[0]=0;
  2274  0F7D  1683               	bsf	3,5	;RP0=1, select bank1
  2275  0F7E  1303               	bcf	3,6	;RP1=0, select bank1
  2276  0F7F  01C1               	clrf	_EWH_Events^(0+128)
  2277                           
  2278                           ;EWH.c: 35:     EWH_Events[2]=0;
  2279  0F80  01C3               	clrf	(_EWH_Events^(0+128)+2)
  2280                           
  2281                           ;EWH.c: 36:     EWH_Events[1]=0;
  2282  0F81  01C2               	clrf	(_EWH_Events^(0+128)+1)
  2283                           
  2284                           ;EWH.c: 37:     EWH_Events[3]=0;
  2285  0F82  01C4               	clrf	(_EWH_Events^(0+128)+3)
  2286                           
  2287                           ;EWH.c: 40:     EWH_Events[0]=0;
  2288  0F83  01C1               	clrf	_EWH_Events^(0+128)
  2289  0F84                     l3129:
  2290                           
  2291                           ;EWH.c: 45:     set_Temp = EWH_EEPROM_Read();
  2292  0F84  120A  158A  20C9  120A  158A  	fcall	_EWH_EEPROM_Read
  2293  0F89  00FF               	movwf	btemp+1
  2294  0F8A  087F               	movf	btemp+1,w
  2295  0F8B  1683               	bsf	3,5	;RP0=1, select bank1
  2296  0F8C  1303               	bcf	3,6	;RP1=0, select bank1
  2297  0F8D  00CD               	movwf	_set_Temp^(0+128)
  2298  0F8E                     l3131:
  2299                           
  2300                           ;EWH.c: 48:     EWH_SSD_Update(set_Temp);
  2301  0F8E  084D               	movf	_set_Temp^(0+128),w
  2302  0F8F  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  2303  0F90  01AF               	clrf	(??_EWH_WakeUP_Mode^(0+128)+1)
  2304  0F91  082E               	movf	??_EWH_WakeUP_Mode^(0+128),w
  2305  0F92  00AA               	movwf	EWH_SSD_Update@temp^(0+128)
  2306  0F93  082F               	movf	(??_EWH_WakeUP_Mode+1)^(0+128),w
  2307  0F94  00AB               	movwf	(EWH_SSD_Update@temp+1)^(0+128)
  2308  0F95  120A  158A  24EB  120A  158A  	fcall	_EWH_SSD_Update
  2309  0F9A                     l3133:
  2310                           
  2311                           ;EWH.c: 50:     if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED))
  2312  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  2313  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  2314  0F9C  0806               	movf	6,w	;volatile
  2315  0F9D  1683               	bsf	3,5	;RP0=1, select bank1
  2316  0F9E  1303               	bcf	3,6	;RP1=0, select bank1
  2317  0F9F  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  2318  0FA0  3002               	movlw	2
  2319  0FA1                     u2515:
  2320  0FA1  1003               	clrc
  2321  0FA2  0CAE               	rrf	??_EWH_WakeUP_Mode^(0+128),f
  2322  0FA3  3EFF               	addlw	-1
  2323  0FA4  1D03               	skipz
  2324  0FA5  2FA1               	goto	u2515
  2325  0FA6  182E               	btfsc	??_EWH_WakeUP_Mode^(0+128),0
  2326  0FA7  2FA9               	goto	u2521
  2327  0FA8  2FAA               	goto	u2520
  2328  0FA9                     u2521:
  2329  0FA9  2FD1               	goto	l3145
  2330  0FAA                     u2520:
  2331  0FAA                     l3135:
  2332                           
  2333                           ;EWH.c: 51:     {;EWH.c: 52:         _delay((unsigned long)((50)*(4000000/4000.0)));
  2334  0FAA  3041               	movlw	65
  2335  0FAB  1683               	bsf	3,5	;RP0=1, select bank1
  2336  0FAC  1303               	bcf	3,6	;RP1=0, select bank1
  2337  0FAD  00AF               	movwf	(??_EWH_WakeUP_Mode^(0+128)+1)
  2338  0FAE  30ED               	movlw	237
  2339  0FAF  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  2340  0FB0                     u3747:
  2341  0FB0  0BAE               	decfsz	??_EWH_WakeUP_Mode^(0+128),f
  2342  0FB1  2FB0               	goto	u3747
  2343  0FB2  0BAF               	decfsz	(??_EWH_WakeUP_Mode^(0+128)+1),f
  2344  0FB3  2FB0               	goto	u3747
  2345  0FB4  2FB5               	nop2
  2346  0FB5                     l3137:
  2347                           
  2348                           ;EWH.c: 53:         if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED))
  2349  0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  2350  0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  2351  0FB7  0806               	movf	6,w	;volatile
  2352  0FB8  1683               	bsf	3,5	;RP0=1, select bank1
  2353  0FB9  1303               	bcf	3,6	;RP1=0, select bank1
  2354  0FBA  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  2355  0FBB  3002               	movlw	2
  2356  0FBC                     u2535:
  2357  0FBC  1003               	clrc
  2358  0FBD  0CAE               	rrf	??_EWH_WakeUP_Mode^(0+128),f
  2359  0FBE  3EFF               	addlw	-1
  2360  0FBF  1D03               	skipz
  2361  0FC0  2FBC               	goto	u2535
  2362  0FC1  182E               	btfsc	??_EWH_WakeUP_Mode^(0+128),0
  2363  0FC2  2FC4               	goto	u2541
  2364  0FC3  2FC5               	goto	u2540
  2365  0FC4                     u2541:
  2366  0FC4  2FFF               	goto	l521
  2367  0FC5                     u2540:
  2368  0FC5                     l3139:
  2369                           
  2370                           ;EWH.c: 54:         {;EWH.c: 55:             EWH_Events[1]=1;
  2371  0FC5  01C2               	clrf	(_EWH_Events^(0+128)+1)
  2372  0FC6  0AC2               	incf	(_EWH_Events^(0+128)+1),f
  2373  0FC7                     l3141:
  2374                           
  2375                           ;EWH.c: 56:             NoPress_Sec_count=0;
  2376  0FC7  1283               	bcf	3,5	;RP0=0, select bank0
  2377  0FC8  1303               	bcf	3,6	;RP1=0, select bank0
  2378  0FC9  01D1               	clrf	_NoPress_Sec_count
  2379  0FCA                     l3143:
  2380                           
  2381                           ;EWH.c: 57:             EWH_Mode=EWH_SET_TEMP_MODE;
  2382  0FCA  3002               	movlw	2
  2383  0FCB  00FF               	movwf	btemp+1
  2384  0FCC  087F               	movf	btemp+1,w
  2385  0FCD  1683               	bsf	3,5	;RP0=1, select bank1
  2386  0FCE  1303               	bcf	3,6	;RP1=0, select bank1
  2387  0FCF  00CE               	movwf	_EWH_Mode^(0+128)
  2388  0FD0  2FFF               	goto	l521
  2389  0FD1                     l3145:
  2390  0FD1  1283               	bcf	3,5	;RP0=0, select bank0
  2391  0FD2  1303               	bcf	3,6	;RP1=0, select bank0
  2392  0FD3  0806               	movf	6,w	;volatile
  2393  0FD4  1683               	bsf	3,5	;RP0=1, select bank1
  2394  0FD5  1303               	bcf	3,6	;RP1=0, select bank1
  2395  0FD6  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  2396  0FD7  3001               	movlw	1
  2397  0FD8                     u2555:
  2398  0FD8  1003               	clrc
  2399  0FD9  0CAE               	rrf	??_EWH_WakeUP_Mode^(0+128),f
  2400  0FDA  3EFF               	addlw	-1
  2401  0FDB  1D03               	skipz
  2402  0FDC  2FD8               	goto	u2555
  2403  0FDD  182E               	btfsc	??_EWH_WakeUP_Mode^(0+128),0
  2404  0FDE  2FE0               	goto	u2561
  2405  0FDF  2FE1               	goto	u2560
  2406  0FE0                     u2561:
  2407  0FE0  2FFF               	goto	l521
  2408  0FE1                     u2560:
  2409  0FE1                     l3147:
  2410                           
  2411                           ;EWH.c: 61:     {;EWH.c: 62:         _delay((unsigned long)((50)*(4000000/4000.0)));
  2412  0FE1  3041               	movlw	65
  2413  0FE2  1683               	bsf	3,5	;RP0=1, select bank1
  2414  0FE3  1303               	bcf	3,6	;RP1=0, select bank1
  2415  0FE4  00AF               	movwf	(??_EWH_WakeUP_Mode^(0+128)+1)
  2416  0FE5  30ED               	movlw	237
  2417  0FE6  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  2418  0FE7                     u3757:
  2419  0FE7  0BAE               	decfsz	??_EWH_WakeUP_Mode^(0+128),f
  2420  0FE8  2FE7               	goto	u3757
  2421  0FE9  0BAF               	decfsz	(??_EWH_WakeUP_Mode^(0+128)+1),f
  2422  0FEA  2FE7               	goto	u3757
  2423  0FEB  2FEC               	nop2
  2424  0FEC                     l3149:
  2425                           
  2426                           ;EWH.c: 63:         if((!((PORTB & (1<<1)) >> 1)==SW_PRESSED))
  2427  0FEC  1283               	bcf	3,5	;RP0=0, select bank0
  2428  0FED  1303               	bcf	3,6	;RP1=0, select bank0
  2429  0FEE  0806               	movf	6,w	;volatile
  2430  0FEF  1683               	bsf	3,5	;RP0=1, select bank1
  2431  0FF0  1303               	bcf	3,6	;RP1=0, select bank1
  2432  0FF1  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  2433  0FF2  3001               	movlw	1
  2434  0FF3                     u2575:
  2435  0FF3  1003               	clrc
  2436  0FF4  0CAE               	rrf	??_EWH_WakeUP_Mode^(0+128),f
  2437  0FF5  3EFF               	addlw	-1
  2438  0FF6  1D03               	skipz
  2439  0FF7  2FF3               	goto	u2575
  2440  0FF8  182E               	btfsc	??_EWH_WakeUP_Mode^(0+128),0
  2441  0FF9  2FFB               	goto	u2581
  2442  0FFA  2FFC               	goto	u2580
  2443  0FFB                     u2581:
  2444  0FFB  2FFF               	goto	l521
  2445  0FFC                     u2580:
  2446  0FFC                     l3151:
  2447                           
  2448                           ;EWH.c: 64:         {;EWH.c: 65:             EWH_Events[2]=1;
  2449  0FFC  01C3               	clrf	(_EWH_Events^(0+128)+2)
  2450  0FFD  0AC3               	incf	(_EWH_Events^(0+128)+2),f
  2451  0FFE  2FC7               	goto	l3141
  2452  0FFF                     l521:
  2453  0FFF  0008               	return
  2454  1000                     __end_of_EWH_WakeUP_Mode:
  2455                           
  2456                           	psect	text6
  2457  0A13                     __ptext6:	
  2458 ;; *************** function _EWH_Sleep_Mode *****************
  2459 ;; Defined at:
  2460 ;;		line 5 in file "EWH.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;		None
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;		None
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      void 
  2467 ;; Registers used:
  2468 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2474 ;;      Params:         0       0       0       0       0
  2475 ;;      Locals:         0       0       0       0       0
  2476 ;;      Temps:          0       0       0       0       0
  2477 ;;      Totals:         0       0       0       0       0
  2478 ;;Total ram usage:        0 bytes
  2479 ;; Hardware stack levels used:    1
  2480 ;; Hardware stack levels required when called:    6
  2481 ;; This function calls:
  2482 ;;		_DD_SetState
  2483 ;;		_EWH_SSD_OFF
  2484 ;;		_TMR1_Stop
  2485 ;; This function is called by:
  2486 ;;		_main
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           
  2491                           ;psect for function _EWH_Sleep_Mode
  2492  0A13                     _EWH_Sleep_Mode:
  2493  0A13                     l3101:	
  2494                           ;incstack = 0
  2495                           ; Regs used in _EWH_Sleep_Mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2496                           
  2497                           
  2498                           ;EWH.c: 9:     EWH_SSD_OFF();
  2499  0A13  120A  158A  20E2  120A  158A  	fcall	_EWH_SSD_OFF
  2500                           
  2501                           ;EWH.c: 11:     DD_SetState(HEATER,OFF);
  2502  0A18  1683               	bsf	3,5	;RP0=1, select bank1
  2503  0A19  1303               	bcf	3,6	;RP1=0, select bank1
  2504  0A1A  01A0               	clrf	DD_SetState@state^(0+128)
  2505  0A1B  3000               	movlw	0
  2506  0A1C  120A  158A  23DB  120A  158A  	fcall	_DD_SetState
  2507                           
  2508                           ;EWH.c: 13:     DD_SetState(COOLER,OFF);
  2509  0A21  1683               	bsf	3,5	;RP0=1, select bank1
  2510  0A22  1303               	bcf	3,6	;RP1=0, select bank1
  2511  0A23  01A0               	clrf	DD_SetState@state^(0+128)
  2512  0A24  3001               	movlw	1
  2513  0A25  120A  158A  23DB  120A  158A  	fcall	_DD_SetState
  2514  0A2A                     l3103:
  2515                           
  2516                           ;EWH.c: 15:     TMR1_Stop();
  2517  0A2A  120A  158A  207B  120A  158A  	fcall	_TMR1_Stop
  2518  0A2F                     l3105:
  2519                           
  2520                           ;EWH.c: 17:     DD_SetState(HEATER_LED,OFF);
  2521  0A2F  1683               	bsf	3,5	;RP0=1, select bank1
  2522  0A30  1303               	bcf	3,6	;RP1=0, select bank1
  2523  0A31  01A0               	clrf	DD_SetState@state^(0+128)
  2524  0A32  3002               	movlw	2
  2525  0A33  120A  158A  23DB  120A  158A  	fcall	_DD_SetState
  2526  0A38                     l3107:
  2527                           
  2528                           ;EWH.c: 19:     EWH_Events[0]=0;
  2529  0A38  1683               	bsf	3,5	;RP0=1, select bank1
  2530  0A39  1303               	bcf	3,6	;RP1=0, select bank1
  2531  0A3A  01C1               	clrf	_EWH_Events^(0+128)
  2532  0A3B                     l3109:
  2533                           
  2534                           ;EWH.c: 20:     EWH_Events[2]=0;
  2535  0A3B  01C3               	clrf	(_EWH_Events^(0+128)+2)
  2536  0A3C                     l3111:
  2537                           
  2538                           ;EWH.c: 21:     EWH_Events[1]=0;
  2539  0A3C  01C2               	clrf	(_EWH_Events^(0+128)+1)
  2540  0A3D                     l3113:
  2541                           
  2542                           ;EWH.c: 22:     EWH_Events[3]=0;
  2543  0A3D  01C4               	clrf	(_EWH_Events^(0+128)+3)
  2544  0A3E                     l3117:	
  2545                           ;EWH.c: 24:     (OFF)?(PORTB |= (1<<4)) : (PORTB &= ~(1<<4));
  2546                           
  2547  0A3E  30EF               	movlw	239
  2548  0A3F  00FF               	movwf	btemp+1
  2549  0A40  087F               	movf	btemp+1,w
  2550  0A41  1283               	bcf	3,5	;RP0=0, select bank0
  2551  0A42  1303               	bcf	3,6	;RP1=0, select bank0
  2552  0A43  0586               	andwf	6,f	;volatile
  2553  0A44                     l3121:
  2554  0A44  30DF               	movlw	223
  2555  0A45  00FF               	movwf	btemp+1
  2556  0A46  087F               	movf	btemp+1,w
  2557  0A47  0586               	andwf	6,f	;volatile
  2558  0A48                     l3125:
  2559  0A48  30BF               	movlw	191
  2560  0A49  00FF               	movwf	btemp+1
  2561  0A4A  087F               	movf	btemp+1,w
  2562  0A4B  0586               	andwf	6,f	;volatile
  2563  0A4C                     l513:
  2564  0A4C  0008               	return
  2565  0A4D                     __end_of_EWH_Sleep_Mode:
  2566                           
  2567                           	psect	text7
  2568  04CA                     __ptext7:	
  2569 ;; *************** function _EWH_SetTemp_Mode *****************
  2570 ;; Defined at:
  2571 ;;		line 71 in file "EWH.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;		None
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;		None
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  1    wreg      void 
  2578 ;; Registers used:
  2579 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2585 ;;      Params:         0       0       0       0       0
  2586 ;;      Locals:         0       0       0       0       0
  2587 ;;      Temps:          0       0       2       0       0
  2588 ;;      Totals:         0       0       2       0       0
  2589 ;;Total ram usage:        2 bytes
  2590 ;; Hardware stack levels used:    1
  2591 ;; Hardware stack levels required when called:    8
  2592 ;; This function calls:
  2593 ;;		_DD_SetState
  2594 ;;		_EWH_EEPROM_Read
  2595 ;;		_EWH_EEPROM_Update
  2596 ;;		_EWH_SSD_OFF
  2597 ;;		_EWH_SSD_Update
  2598 ;;		_TMR1_Start
  2599 ;; This function is called by:
  2600 ;;		_main
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           
  2605                           ;psect for function _EWH_SetTemp_Mode
  2606  04CA                     _EWH_SetTemp_Mode:
  2607  04CA                     l3219:	
  2608                           ;incstack = 0
  2609 ;; hardware stack exceeded
  2610                           ; Regs used in _EWH_SetTemp_Mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2611                           
  2612                           
  2613                           ;EWH.c: 77:     EWH_Events[0]=0;
  2614  04CA  1683               	bsf	3,5	;RP0=1, select bank1
  2615  04CB  1303               	bcf	3,6	;RP1=0, select bank1
  2616  04CC  01C1               	clrf	_EWH_Events^(0+128)
  2617                           
  2618                           ;EWH.c: 78:     EWH_Events[2]=0;
  2619  04CD  01C3               	clrf	(_EWH_Events^(0+128)+2)
  2620                           
  2621                           ;EWH.c: 79:     EWH_Events[1]=0;
  2622  04CE  01C2               	clrf	(_EWH_Events^(0+128)+1)
  2623                           
  2624                           ;EWH.c: 80:     EWH_Events[3]=0;
  2625  04CF  01C4               	clrf	(_EWH_Events^(0+128)+3)
  2626  04D0                     l3221:
  2627                           
  2628                           ;EWH.c: 84:     set_Temp = EWH_EEPROM_Read();
  2629  04D0  120A  158A  20C9  120A  118A  	fcall	_EWH_EEPROM_Read
  2630  04D5  00FF               	movwf	btemp+1
  2631  04D6  087F               	movf	btemp+1,w
  2632  04D7  1683               	bsf	3,5	;RP0=1, select bank1
  2633  04D8  1303               	bcf	3,6	;RP1=0, select bank1
  2634  04D9  00CD               	movwf	_set_Temp^(0+128)
  2635  04DA                     l3223:
  2636                           
  2637                           ;EWH.c: 86:     DD_SetState(HEATER,OFF);
  2638  04DA  01A0               	clrf	DD_SetState@state^(0+128)
  2639  04DB  3000               	movlw	0
  2640  04DC  120A  158A  23DB  120A  118A  	fcall	_DD_SetState
  2641  04E1                     l3225:
  2642                           
  2643                           ;EWH.c: 87:     DD_SetState(COOLER,OFF);
  2644  04E1  1683               	bsf	3,5	;RP0=1, select bank1
  2645  04E2  1303               	bcf	3,6	;RP1=0, select bank1
  2646  04E3  01A0               	clrf	DD_SetState@state^(0+128)
  2647  04E4  3001               	movlw	1
  2648  04E5  120A  158A  23DB  120A  118A  	fcall	_DD_SetState
  2649  04EA                     l3227:
  2650                           
  2651                           ;EWH.c: 89:     EWH_SSD_Update(set_Temp);
  2652  04EA  1683               	bsf	3,5	;RP0=1, select bank1
  2653  04EB  1303               	bcf	3,6	;RP1=0, select bank1
  2654  04EC  084D               	movf	_set_Temp^(0+128),w
  2655  04ED  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2656  04EE  01AF               	clrf	(??_EWH_SetTemp_Mode^(0+128)+1)
  2657  04EF  082E               	movf	??_EWH_SetTemp_Mode^(0+128),w
  2658  04F0  00AA               	movwf	EWH_SSD_Update@temp^(0+128)
  2659  04F1  082F               	movf	(??_EWH_SetTemp_Mode+1)^(0+128),w
  2660  04F2  00AB               	movwf	(EWH_SSD_Update@temp+1)^(0+128)
  2661  04F3  120A  158A  24EB  120A  118A  	fcall	_EWH_SSD_Update
  2662  04F8                     l3229:
  2663                           
  2664                           ;EWH.c: 91:     TMR1_Start();
  2665  04F8  120A  158A  20FF  120A  118A  	fcall	_TMR1_Start
  2666  04FD                     l3231:
  2667                           
  2668                           ;EWH.c: 92:     NoPress_Sec_count=0;
  2669  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  2670  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  2671  04FF  01D1               	clrf	_NoPress_Sec_count
  2672  0500                     l3233:
  2673                           
  2674                           ;EWH.c: 94:     {;EWH.c: 95:         if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED) && set_Te
      +                          mp<75)
  2675  0500  1283               	bcf	3,5	;RP0=0, select bank0
  2676  0501  1303               	bcf	3,6	;RP1=0, select bank0
  2677  0502  0806               	movf	6,w	;volatile
  2678  0503  1683               	bsf	3,5	;RP0=1, select bank1
  2679  0504  1303               	bcf	3,6	;RP1=0, select bank1
  2680  0505  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2681  0506  3002               	movlw	2
  2682  0507                     u2745:
  2683  0507  1003               	clrc
  2684  0508  0CAE               	rrf	??_EWH_SetTemp_Mode^(0+128),f
  2685  0509  3EFF               	addlw	-1
  2686  050A  1D03               	skipz
  2687  050B  2D07               	goto	u2745
  2688  050C  182E               	btfsc	??_EWH_SetTemp_Mode^(0+128),0
  2689  050D  2D0F               	goto	u2751
  2690  050E  2D10               	goto	u2750
  2691  050F                     u2751:
  2692  050F  2D39               	goto	l3245
  2693  0510                     u2750:
  2694  0510                     l3235:
  2695  0510  304B               	movlw	75
  2696  0511  024D               	subwf	_set_Temp^(0+128),w
  2697  0512  1803               	skipnc
  2698  0513  2D15               	goto	u2761
  2699  0514  2D16               	goto	u2760
  2700  0515                     u2761:
  2701  0515  2D39               	goto	l3245
  2702  0516                     u2760:
  2703  0516                     l3237:
  2704                           
  2705                           ;EWH.c: 96:         {;EWH.c: 97:             _delay((unsigned long)((50)*(4000000/4000.0
      +                          )));
  2706  0516  3041               	movlw	65
  2707  0517  1683               	bsf	3,5	;RP0=1, select bank1
  2708  0518  1303               	bcf	3,6	;RP1=0, select bank1
  2709  0519  00AF               	movwf	(??_EWH_SetTemp_Mode^(0+128)+1)
  2710  051A  30ED               	movlw	237
  2711  051B  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2712  051C                     u3767:
  2713  051C  0BAE               	decfsz	??_EWH_SetTemp_Mode^(0+128),f
  2714  051D  2D1C               	goto	u3767
  2715  051E  0BAF               	decfsz	(??_EWH_SetTemp_Mode^(0+128)+1),f
  2716  051F  2D1C               	goto	u3767
  2717  0520  2D21               	nop2
  2718  0521                     l3239:
  2719                           
  2720                           ;EWH.c: 98:             if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED))
  2721  0521  1283               	bcf	3,5	;RP0=0, select bank0
  2722  0522  1303               	bcf	3,6	;RP1=0, select bank0
  2723  0523  0806               	movf	6,w	;volatile
  2724  0524  1683               	bsf	3,5	;RP0=1, select bank1
  2725  0525  1303               	bcf	3,6	;RP1=0, select bank1
  2726  0526  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2727  0527  3002               	movlw	2
  2728  0528                     u2775:
  2729  0528  1003               	clrc
  2730  0529  0CAE               	rrf	??_EWH_SetTemp_Mode^(0+128),f
  2731  052A  3EFF               	addlw	-1
  2732  052B  1D03               	skipz
  2733  052C  2D28               	goto	u2775
  2734  052D  182E               	btfsc	??_EWH_SetTemp_Mode^(0+128),0
  2735  052E  2D30               	goto	u2781
  2736  052F  2D31               	goto	u2780
  2737  0530                     u2781:
  2738  0530  2D6D               	goto	l3257
  2739  0531                     u2780:
  2740  0531                     l3241:
  2741                           
  2742                           ;EWH.c: 99:             {;EWH.c: 100:                 set_Temp+=5;
  2743  0531  3005               	movlw	5
  2744  0532  00FF               	movwf	btemp+1
  2745  0533  087F               	movf	btemp+1,w
  2746  0534  07CD               	addwf	_set_Temp^(0+128),f
  2747  0535                     l3243:
  2748                           
  2749                           ;EWH.c: 101:                 NoPress_Sec_count=0;
  2750  0535  1283               	bcf	3,5	;RP0=0, select bank0
  2751  0536  1303               	bcf	3,6	;RP1=0, select bank0
  2752  0537  01D1               	clrf	_NoPress_Sec_count
  2753  0538  2D6D               	goto	l3257
  2754  0539                     l3245:
  2755  0539  1283               	bcf	3,5	;RP0=0, select bank0
  2756  053A  1303               	bcf	3,6	;RP1=0, select bank0
  2757  053B  0806               	movf	6,w	;volatile
  2758  053C  1683               	bsf	3,5	;RP0=1, select bank1
  2759  053D  1303               	bcf	3,6	;RP1=0, select bank1
  2760  053E  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2761  053F  3001               	movlw	1
  2762  0540                     u2795:
  2763  0540  1003               	clrc
  2764  0541  0CAE               	rrf	??_EWH_SetTemp_Mode^(0+128),f
  2765  0542  3EFF               	addlw	-1
  2766  0543  1D03               	skipz
  2767  0544  2D40               	goto	u2795
  2768  0545  182E               	btfsc	??_EWH_SetTemp_Mode^(0+128),0
  2769  0546  2D48               	goto	u2801
  2770  0547  2D49               	goto	u2800
  2771  0548                     u2801:
  2772  0548  2D6D               	goto	l3257
  2773  0549                     u2800:
  2774  0549                     l3247:
  2775  0549  3024               	movlw	36
  2776  054A  024D               	subwf	_set_Temp^(0+128),w
  2777  054B  1C03               	skipc
  2778  054C  2D4E               	goto	u2811
  2779  054D  2D4F               	goto	u2810
  2780  054E                     u2811:
  2781  054E  2D6D               	goto	l3257
  2782  054F                     u2810:
  2783  054F                     l3249:
  2784                           
  2785                           ;EWH.c: 105:         {;EWH.c: 106:             _delay((unsigned long)((50)*(4000000/4000
      +                          .0)));
  2786  054F  3041               	movlw	65
  2787  0550  1683               	bsf	3,5	;RP0=1, select bank1
  2788  0551  1303               	bcf	3,6	;RP1=0, select bank1
  2789  0552  00AF               	movwf	(??_EWH_SetTemp_Mode^(0+128)+1)
  2790  0553  30ED               	movlw	237
  2791  0554  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2792  0555                     u3777:
  2793  0555  0BAE               	decfsz	??_EWH_SetTemp_Mode^(0+128),f
  2794  0556  2D55               	goto	u3777
  2795  0557  0BAF               	decfsz	(??_EWH_SetTemp_Mode^(0+128)+1),f
  2796  0558  2D55               	goto	u3777
  2797  0559  2D5A               	nop2
  2798  055A                     l3251:
  2799                           
  2800                           ;EWH.c: 107:             if((!((PORTB & (1<<1)) >> 1)==SW_PRESSED))
  2801  055A  1283               	bcf	3,5	;RP0=0, select bank0
  2802  055B  1303               	bcf	3,6	;RP1=0, select bank0
  2803  055C  0806               	movf	6,w	;volatile
  2804  055D  1683               	bsf	3,5	;RP0=1, select bank1
  2805  055E  1303               	bcf	3,6	;RP1=0, select bank1
  2806  055F  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2807  0560  3001               	movlw	1
  2808  0561                     u2825:
  2809  0561  1003               	clrc
  2810  0562  0CAE               	rrf	??_EWH_SetTemp_Mode^(0+128),f
  2811  0563  3EFF               	addlw	-1
  2812  0564  1D03               	skipz
  2813  0565  2D61               	goto	u2825
  2814  0566  182E               	btfsc	??_EWH_SetTemp_Mode^(0+128),0
  2815  0567  2D69               	goto	u2831
  2816  0568  2D6A               	goto	u2830
  2817  0569                     u2831:
  2818  0569  2D6D               	goto	l3257
  2819  056A                     u2830:
  2820  056A                     l3253:
  2821                           
  2822                           ;EWH.c: 108:             {;EWH.c: 109:                 set_Temp-=5;
  2823  056A  3005               	movlw	5
  2824  056B  02CD               	subwf	_set_Temp^(0+128),f
  2825  056C  2D35               	goto	l3243
  2826  056D                     l3257:
  2827                           
  2828                           ;EWH.c: 113:         if(EWH_Events[3] || EWH_Events[0])
  2829  056D  1683               	bsf	3,5	;RP0=1, select bank1
  2830  056E  1303               	bcf	3,6	;RP1=0, select bank1
  2831  056F  0844               	movf	(_EWH_Events^(0+128)+3),w
  2832  0570  1D03               	btfss	3,2
  2833  0571  2D73               	goto	u2841
  2834  0572  2D74               	goto	u2840
  2835  0573                     u2841:
  2836  0573  2D79               	goto	l3261
  2837  0574                     u2840:
  2838  0574                     l3259:
  2839  0574  0841               	movf	_EWH_Events^(0+128),w
  2840  0575  1903               	btfsc	3,2
  2841  0576  2D78               	goto	u2851
  2842  0577  2D79               	goto	u2850
  2843  0578                     u2851:
  2844  0578  2D80               	goto	l3263
  2845  0579                     u2850:
  2846  0579                     l3261:
  2847                           
  2848                           ;EWH.c: 114:         {;EWH.c: 116:             EWH_EEPROM_Update(set_Temp);
  2849  0579  084D               	movf	_set_Temp^(0+128),w
  2850  057A  120A  158A  210F  120A  118A  	fcall	_EWH_EEPROM_Update
  2851                           
  2852                           ;EWH.c: 118:             break ;
  2853  057F  2D98               	goto	l3269
  2854  0580                     l3263:
  2855                           
  2856                           ;EWH.c: 121:         if(SSD_Blink_flag)
  2857  0580  084A               	movf	_SSD_Blink_flag^(0+128),w
  2858  0581  1903               	btfsc	3,2
  2859  0582  2D84               	goto	u2861
  2860  0583  2D85               	goto	u2860
  2861  0584                     u2861:
  2862  0584  2D92               	goto	l3267
  2863  0585                     u2860:
  2864  0585                     l3265:
  2865                           
  2866                           ;EWH.c: 122:         {;EWH.c: 123:             EWH_SSD_Update(set_Temp);
  2867  0585  084D               	movf	_set_Temp^(0+128),w
  2868  0586  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2869  0587  01AF               	clrf	(??_EWH_SetTemp_Mode^(0+128)+1)
  2870  0588  082E               	movf	??_EWH_SetTemp_Mode^(0+128),w
  2871  0589  00AA               	movwf	EWH_SSD_Update@temp^(0+128)
  2872  058A  082F               	movf	(??_EWH_SetTemp_Mode+1)^(0+128),w
  2873  058B  00AB               	movwf	(EWH_SSD_Update@temp+1)^(0+128)
  2874  058C  120A  158A  24EB  120A  118A  	fcall	_EWH_SSD_Update
  2875                           
  2876                           ;EWH.c: 124:         }
  2877  0591  2D00               	goto	l3233
  2878  0592                     l3267:
  2879                           
  2880                           ;EWH.c: 126:         {;EWH.c: 127:             EWH_SSD_OFF();
  2881  0592  120A  158A  20E2  120A  118A  	fcall	_EWH_SSD_OFF
  2882  0597  2D00               	goto	l3233
  2883  0598                     l3269:
  2884                           
  2885                           ;EWH.c: 132:     if(EWH_Events[3])
  2886  0598  1683               	bsf	3,5	;RP0=1, select bank1
  2887  0599  1303               	bcf	3,6	;RP1=0, select bank1
  2888  059A  0844               	movf	(_EWH_Events^(0+128)+3),w
  2889  059B  1903               	btfsc	3,2
  2890  059C  2D9E               	goto	u2871
  2891  059D  2D9F               	goto	u2870
  2892  059E                     u2871:
  2893  059E  2DA4               	goto	l538
  2894  059F                     u2870:
  2895  059F                     l3271:
  2896                           
  2897                           ;EWH.c: 133:     {;EWH.c: 134:         EWH_Events[3]=0;
  2898  059F  01C4               	clrf	(_EWH_Events^(0+128)+3)
  2899  05A0                     l3273:
  2900                           
  2901                           ;EWH.c: 137:         EWH_Mode=EWH_OPERATING_MODE;
  2902  05A0  3003               	movlw	3
  2903  05A1  00FF               	movwf	btemp+1
  2904  05A2  087F               	movf	btemp+1,w
  2905  05A3  00CE               	movwf	_EWH_Mode^(0+128)
  2906  05A4                     l538:
  2907  05A4  0008               	return
  2908  05A5                     __end_of_EWH_SetTemp_Mode:
  2909                           
  2910                           	psect	text8
  2911  08E2                     __ptext8:	
  2912 ;; *************** function _EWH_SSD_OFF *****************
  2913 ;; Defined at:
  2914 ;;		line 75 in file "DD.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;		None
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;		None
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  1    wreg      void 
  2921 ;; Registers used:
  2922 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2928 ;;      Params:         0       0       0       0       0
  2929 ;;      Locals:         0       0       0       0       0
  2930 ;;      Temps:          0       0       0       0       0
  2931 ;;      Totals:         0       0       0       0       0
  2932 ;;Total ram usage:        0 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; Hardware stack levels required when called:    5
  2935 ;; This function calls:
  2936 ;;		_SSD_OFF
  2937 ;; This function is called by:
  2938 ;;		_EWH_Sleep_Mode
  2939 ;;		_EWH_SetTemp_Mode
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           
  2944                           ;psect for function _EWH_SSD_OFF
  2945  08E2                     _EWH_SSD_OFF:
  2946  08E2                     l2871:	
  2947                           ;incstack = 0
  2948                           ; Regs used in _EWH_SSD_OFF: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2949                           
  2950                           
  2951                           ;DD.c: 77:     SSD_OFF(3);
  2952  08E2  3003               	movlw	3
  2953  08E3  120A  118A  27F5  120A  158A  	fcall	_SSD_OFF
  2954                           
  2955                           ;DD.c: 78:     SSD_OFF(4);
  2956  08E8  3004               	movlw	4
  2957  08E9  120A  118A  27F5  120A  158A  	fcall	_SSD_OFF
  2958  08EE                     l295:
  2959  08EE  0008               	return
  2960  08EF                     __end_of_EWH_SSD_OFF:
  2961                           
  2962                           	psect	text9
  2963  090F                     __ptext9:	
  2964 ;; *************** function _EWH_EEPROM_Update *****************
  2965 ;; Defined at:
  2966 ;;		line 217 in file "EWH.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;  newSetTemp      1    wreg     unsigned char 
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;  newSetTemp      1    6[BANK1 ] unsigned char 
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  1    wreg      void 
  2973 ;; Registers used:
  2974 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2980 ;;      Params:         0       0       0       0       0
  2981 ;;      Locals:         0       0       1       0       0
  2982 ;;      Temps:          0       0       0       0       0
  2983 ;;      Totals:         0       0       1       0       0
  2984 ;;Total ram usage:        1 bytes
  2985 ;; Hardware stack levels used:    1
  2986 ;; Hardware stack levels required when called:    6
  2987 ;; This function calls:
  2988 ;;		_EEPROM_WriteByte
  2989 ;; This function is called by:
  2990 ;;		_EWH_SetTemp_Mode
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           
  2995                           ;psect for function _EWH_EEPROM_Update
  2996  090F                     _EWH_EEPROM_Update:
  2997                           
  2998                           ;incstack = 0
  2999                           ; Regs used in _EWH_EEPROM_Update: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3000                           ;EWH_EEPROM_Update@newSetTemp stored from wreg
  3001  090F  1683               	bsf	3,5	;RP0=1, select bank1
  3002  0910  1303               	bcf	3,6	;RP1=0, select bank1
  3003  0911  00A6               	movwf	EWH_EEPROM_Update@newSetTemp^(0+128)
  3004  0912                     l2891:
  3005                           
  3006                           ;EWH.c: 217: void EWH_EEPROM_Update(uint8_t newSetTemp);EWH.c: 218: {;EWH.c: 219:     EE
      +                          PROM_WriteByte(0x0020,newSetTemp);
  3007  0912  3020               	movlw	32
  3008  0913  00A1               	movwf	EEPROM_WriteByte@address^(0+128)
  3009  0914  3000               	movlw	0
  3010  0915  00A2               	movwf	(EEPROM_WriteByte@address^(0+128)+1)
  3011  0916  0826               	movf	EWH_EEPROM_Update@newSetTemp^(0+128),w
  3012  0917  00FF               	movwf	btemp+1
  3013  0918  087F               	movf	btemp+1,w
  3014  0919  00A3               	movwf	EEPROM_WriteByte@data^(0+128)
  3015  091A  120A  158A  224D  120A  158A  	fcall	_EEPROM_WriteByte
  3016  091F                     l564:
  3017  091F  0008               	return
  3018  0920                     __end_of_EWH_EEPROM_Update:
  3019                           
  3020                           	psect	text10
  3021  08C9                     __ptext10:	
  3022 ;; *************** function _EWH_EEPROM_Read *****************
  3023 ;; Defined at:
  3024 ;;		line 221 in file "EWH.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;		None
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;		None
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  1    wreg      unsigned char 
  3031 ;; Registers used:
  3032 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3038 ;;      Params:         0       0       0       0       0
  3039 ;;      Locals:         0       0       0       0       0
  3040 ;;      Temps:          0       0       0       0       0
  3041 ;;      Totals:         0       0       0       0       0
  3042 ;;Total ram usage:        0 bytes
  3043 ;; Hardware stack levels used:    1
  3044 ;; Hardware stack levels required when called:    7
  3045 ;; This function calls:
  3046 ;;		_EEPROM_ReadByte
  3047 ;; This function is called by:
  3048 ;;		_EWH_WakeUP_Mode
  3049 ;;		_EWH_SetTemp_Mode
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           
  3054                           ;psect for function _EWH_EEPROM_Read
  3055  08C9                     _EWH_EEPROM_Read:
  3056  08C9                     l2887:	
  3057                           ;incstack = 0
  3058 ;; hardware stack exceeded
  3059                           ; Regs used in _EWH_EEPROM_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3060                           
  3061                           
  3062                           ;EWH.c: 223:     return EEPROM_ReadByte(0x0020);
  3063  08C9  3020               	movlw	32
  3064  08CA  1683               	bsf	3,5	;RP0=1, select bank1
  3065  08CB  1303               	bcf	3,6	;RP1=0, select bank1
  3066  08CC  00A2               	movwf	EEPROM_ReadByte@address^(0+128)
  3067  08CD  3000               	movlw	0
  3068  08CE  00A3               	movwf	(EEPROM_ReadByte@address^(0+128)+1)
  3069  08CF  120A  158A  2490  120A  158A  	fcall	_EEPROM_ReadByte
  3070  08D4                     l567:
  3071  08D4  0008               	return
  3072  08D5                     __end_of_EWH_EEPROM_Read:
  3073                           
  3074                           	psect	text11
  3075  0C90                     __ptext11:	
  3076 ;; *************** function _EEPROM_ReadByte *****************
  3077 ;; Defined at:
  3078 ;;		line 36 in file "EEPROM.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;  address         2    2[BANK1 ] unsigned short 
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;  data            1    6[BANK1 ] unsigned char 
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  1    wreg      unsigned char 
  3085 ;; Registers used:
  3086 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3092 ;;      Params:         0       0       2       0       0
  3093 ;;      Locals:         0       0       1       0       0
  3094 ;;      Temps:          0       0       2       0       0
  3095 ;;      Totals:         0       0       5       0       0
  3096 ;;Total ram usage:        5 bytes
  3097 ;; Hardware stack levels used:    1
  3098 ;; Hardware stack levels required when called:    6
  3099 ;; This function calls:
  3100 ;;		_I2C_Master_ReadByte
  3101 ;;		_I2C_Master_Send_RepeatedStart
  3102 ;;		_I2C_Master_Send_Start
  3103 ;;		_I2C_Master_Send_Stop
  3104 ;;		_I2C_Master_WriteByte
  3105 ;; This function is called by:
  3106 ;;		_EWH_EEPROM_Read
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           
  3111                           ;psect for function _EEPROM_ReadByte
  3112  0C90                     _EEPROM_ReadByte:
  3113  0C90                     l2715:	
  3114                           ;incstack = 0
  3115 ;; hardware stack exceeded
  3116                           ; Regs used in _EEPROM_ReadByte: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3117                           
  3118                           
  3119                           ;EEPROM.c: 36: uint8_t EEPROM_ReadByte(uint16_t address );EEPROM.c: 37: {;EEPROM.c: 38: 
      +                              uint8_t data;;EEPROM.c: 40:     I2C_Master_Send_Start();
  3120  0C90  120A  158A  2090  120A  158A  	fcall	_I2C_Master_Send_Start
  3121                           
  3122                           ;EEPROM.c: 42:     while(I2C_Master_WriteByte(0xA0 | ((address & 0x0700)>>7)) )
  3123  0C95  2C9B               	goto	l28
  3124  0C96                     l2717:
  3125                           
  3126                           ;EEPROM.c: 43:         I2C_Master_Send_RepeatedStart();
  3127  0C96  120A  158A  2087  120A  158A  	fcall	_I2C_Master_Send_RepeatedStart
  3128  0C9B                     l28:
  3129                           
  3130                           ;EEPROM.c: 42:     while(I2C_Master_WriteByte(0xA0 | ((address & 0x0700)>>7)) )
  3131  0C9B  1683               	bsf	3,5	;RP0=1, select bank1
  3132  0C9C  1303               	bcf	3,6	;RP1=0, select bank1
  3133  0C9D  0823               	movf	(EEPROM_ReadByte@address+1)^(0+128),w
  3134  0C9E  00A5               	movwf	(??_EEPROM_ReadByte^(0+128)+1)
  3135  0C9F  0822               	movf	EEPROM_ReadByte@address^(0+128),w
  3136  0CA0  00A4               	movwf	??_EEPROM_ReadByte^(0+128)
  3137  0CA1  3007               	movlw	7
  3138  0CA2                     u1985:
  3139  0CA2  1003               	clrc
  3140  0CA3  0CA5               	rrf	(??_EEPROM_ReadByte^(0+128)+1),f
  3141  0CA4  0CA4               	rrf	??_EEPROM_ReadByte^(0+128),f
  3142  0CA5  3EFF               	addlw	-1
  3143  0CA6  1D03               	skipz
  3144  0CA7  2CA2               	goto	u1985
  3145  0CA8  0824               	movf	??_EEPROM_ReadByte^(0+128),w
  3146  0CA9  390E               	andlw	14
  3147  0CAA  38A0               	iorlw	160
  3148  0CAB  120A  158A  216D  120A  158A  	fcall	_I2C_Master_WriteByte
  3149  0CB0  3A00               	xorlw	0
  3150  0CB1  1D03               	skipz
  3151  0CB2  2CB4               	goto	u1991
  3152  0CB3  2CB5               	goto	u1990
  3153  0CB4                     u1991:
  3154  0CB4  2C96               	goto	l2717
  3155  0CB5                     u1990:
  3156  0CB5                     l2719:
  3157                           
  3158                           ;EEPROM.c: 46:     I2C_Master_WriteByte((uint8_t)address);
  3159  0CB5  1683               	bsf	3,5	;RP0=1, select bank1
  3160  0CB6  1303               	bcf	3,6	;RP1=0, select bank1
  3161  0CB7  0822               	movf	EEPROM_ReadByte@address^(0+128),w
  3162  0CB8  120A  158A  216D  120A  158A  	fcall	_I2C_Master_WriteByte
  3163                           
  3164                           ;EEPROM.c: 48:     I2C_Master_Send_RepeatedStart();
  3165  0CBD  120A  158A  2087  120A  158A  	fcall	_I2C_Master_Send_RepeatedStart
  3166                           
  3167                           ;EEPROM.c: 49:     I2C_Master_WriteByte(0xA1 | ((address & 0x0700)>>7));
  3168  0CC2  1683               	bsf	3,5	;RP0=1, select bank1
  3169  0CC3  1303               	bcf	3,6	;RP1=0, select bank1
  3170  0CC4  0823               	movf	(EEPROM_ReadByte@address+1)^(0+128),w
  3171  0CC5  00A5               	movwf	(??_EEPROM_ReadByte^(0+128)+1)
  3172  0CC6  0822               	movf	EEPROM_ReadByte@address^(0+128),w
  3173  0CC7  00A4               	movwf	??_EEPROM_ReadByte^(0+128)
  3174  0CC8  3007               	movlw	7
  3175  0CC9                     u2005:
  3176  0CC9  1003               	clrc
  3177  0CCA  0CA5               	rrf	(??_EEPROM_ReadByte^(0+128)+1),f
  3178  0CCB  0CA4               	rrf	??_EEPROM_ReadByte^(0+128),f
  3179  0CCC  3EFF               	addlw	-1
  3180  0CCD  1D03               	skipz
  3181  0CCE  2CC9               	goto	u2005
  3182  0CCF  0824               	movf	??_EEPROM_ReadByte^(0+128),w
  3183  0CD0  390E               	andlw	14
  3184  0CD1  38A1               	iorlw	161
  3185  0CD2  120A  158A  216D  120A  158A  	fcall	_I2C_Master_WriteByte
  3186  0CD7                     l2721:
  3187                           
  3188                           ;EEPROM.c: 51:     data=I2C_Master_ReadByte(I2C_STOP_READING);
  3189  0CD7  3001               	movlw	1
  3190  0CD8  120A  158A  21B2  120A  158A  	fcall	_I2C_Master_ReadByte
  3191  0CDD  00FF               	movwf	btemp+1
  3192  0CDE  087F               	movf	btemp+1,w
  3193  0CDF  1683               	bsf	3,5	;RP0=1, select bank1
  3194  0CE0  1303               	bcf	3,6	;RP1=0, select bank1
  3195  0CE1  00A6               	movwf	EEPROM_ReadByte@data^(0+128)
  3196  0CE2                     l2723:
  3197                           
  3198                           ;EEPROM.c: 52:     I2C_Master_Send_Stop();
  3199  0CE2  120A  158A  2099  120A  158A  	fcall	_I2C_Master_Send_Stop
  3200  0CE7                     l2725:
  3201                           
  3202                           ;EEPROM.c: 54:     return data;
  3203  0CE7  1683               	bsf	3,5	;RP0=1, select bank1
  3204  0CE8  1303               	bcf	3,6	;RP1=0, select bank1
  3205  0CE9  0826               	movf	EEPROM_ReadByte@data^(0+128),w
  3206  0CEA                     l31:
  3207  0CEA  0008               	return
  3208  0CEB                     __end_of_EEPROM_ReadByte:
  3209                           
  3210                           	psect	text12
  3211  09B2                     __ptext12:	
  3212 ;; *************** function _I2C_Master_ReadByte *****************
  3213 ;; Defined at:
  3214 ;;		line 105 in file "i2c.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;  Read_State      1    wreg     enum E881
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;  Read_State      1    1[BANK1 ] enum E881
  3219 ;;  data            1    0        unsigned char 
  3220 ;; Return value:  Size  Location     Type
  3221 ;;                  1    wreg      unsigned char 
  3222 ;; Registers used:
  3223 ;;		wreg, status,2, status,0, pclath, cstack
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3229 ;;      Params:         0       0       0       0       0
  3230 ;;      Locals:         0       0       2       0       0
  3231 ;;      Temps:          0       0       0       0       0
  3232 ;;      Totals:         0       0       2       0       0
  3233 ;;Total ram usage:        2 bytes
  3234 ;; Hardware stack levels used:    1
  3235 ;; Hardware stack levels required when called:    5
  3236 ;; This function calls:
  3237 ;;		_I2C_Master_Send_ACK
  3238 ;;		_I2C_Master_Send_NACK
  3239 ;;		_I2C_Wait_IDLE
  3240 ;; This function is called by:
  3241 ;;		_EEPROM_ReadByte
  3242 ;;		_EEPROM_ReadPage
  3243 ;; This function uses a non-reentrant model
  3244 ;;
  3245                           
  3246                           
  3247                           ;psect for function _I2C_Master_ReadByte
  3248  09B2                     _I2C_Master_ReadByte:
  3249                           
  3250                           ;incstack = 0
  3251 ;; hardware stack exceeded
  3252                           ; Regs used in _I2C_Master_ReadByte: [wreg+status,2+status,0+pclath+cstack]
  3253                           ;I2C_Master_ReadByte@Read_State stored from wreg
  3254  09B2  1683               	bsf	3,5	;RP0=1, select bank1
  3255  09B3  1303               	bcf	3,6	;RP1=0, select bank1
  3256  09B4  00A1               	movwf	I2C_Master_ReadByte@Read_State^(0+128)
  3257  09B5                     l2641:
  3258                           
  3259                           ;i2c.c: 105: uint8_t I2C_Master_ReadByte(tI2C_ReadingState Read_State);i2c.c: 106: {;i2c
      +                          .c: 108:     uint8_t data;;i2c.c: 110:     I2C_Wait_IDLE();
  3260  09B5  120A  158A  20D5  120A  158A  	fcall	_I2C_Wait_IDLE
  3261  09BA                     l2643:
  3262                           
  3263                           ;i2c.c: 111:     RCEN=1;
  3264  09BA  1683               	bsf	3,5	;RP0=1, select bank1
  3265  09BB  1303               	bcf	3,6	;RP1=0, select bank1
  3266  09BC  1591               	bsf	17,3	;volatile
  3267                           
  3268                           ;i2c.c: 112:     I2C_Wait_IDLE();
  3269  09BD  120A  158A  20D5  120A  158A  	fcall	_I2C_Wait_IDLE
  3270  09C2                     l2645:
  3271  09C2  1283               	bcf	3,5	;RP0=0, select bank0
  3272  09C3  1303               	bcf	3,6	;RP1=0, select bank0
  3273  09C4  0813               	movf	19,w	;volatile
  3274  09C5                     l2647:
  3275                           
  3276                           ;i2c.c: 115:     if(Read_State==I2C_STOP_READING)
  3277  09C5  1683               	bsf	3,5	;RP0=1, select bank1
  3278  09C6  1303               	bcf	3,6	;RP1=0, select bank1
  3279  09C7  0321               	decf	I2C_Master_ReadByte@Read_State^(0+128),w
  3280  09C8  1D03               	btfss	3,2
  3281  09C9  29CB               	goto	u1911
  3282  09CA  29CC               	goto	u1910
  3283  09CB                     u1911:
  3284  09CB  29D2               	goto	l2651
  3285  09CC                     u1910:
  3286  09CC                     l2649:
  3287                           
  3288                           ;i2c.c: 116:         I2C_Master_Send_NACK();
  3289  09CC  120A  158A  20B5  120A  158A  	fcall	_I2C_Master_Send_NACK
  3290  09D1  29D7               	goto	l2653
  3291  09D2                     l2651:
  3292                           
  3293                           ;i2c.c: 118:         I2C_Master_Send_ACK();
  3294  09D2  120A  158A  20AB  120A  158A  	fcall	_I2C_Master_Send_ACK
  3295  09D7                     l2653:
  3296                           
  3297                           ;i2c.c: 120:     return SSPBUF ;
  3298  09D7  1283               	bcf	3,5	;RP0=0, select bank0
  3299  09D8  1303               	bcf	3,6	;RP1=0, select bank0
  3300  09D9  0813               	movf	19,w	;volatile
  3301  09DA                     l120:
  3302  09DA  0008               	return
  3303  09DB                     __end_of_I2C_Master_ReadByte:
  3304                           
  3305                           	psect	text13
  3306  08B5                     __ptext13:	
  3307 ;; *************** function _I2C_Master_Send_NACK *****************
  3308 ;; Defined at:
  3309 ;;		line 87 in file "i2c.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;		None
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;		None
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  1    wreg      void 
  3316 ;; Registers used:
  3317 ;;		wreg, status,2, status,0, pclath, cstack
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3323 ;;      Params:         0       0       0       0       0
  3324 ;;      Locals:         0       0       0       0       0
  3325 ;;      Temps:          0       0       0       0       0
  3326 ;;      Totals:         0       0       0       0       0
  3327 ;;Total ram usage:        0 bytes
  3328 ;; Hardware stack levels used:    1
  3329 ;; Hardware stack levels required when called:    4
  3330 ;; This function calls:
  3331 ;;		_I2C_Wait_IDLE
  3332 ;; This function is called by:
  3333 ;;		_I2C_Master_ReadByte
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           
  3338                           ;psect for function _I2C_Master_Send_NACK
  3339  08B5                     _I2C_Master_Send_NACK:
  3340  08B5                     l2613:	
  3341                           ;incstack = 0
  3342 ;; hardware stack exceeded
  3343                           ; Regs used in _I2C_Master_Send_NACK: [wreg+status,2+status,0+pclath+cstack]
  3344                           
  3345                           
  3346                           ;i2c.c: 90:     I2C_Wait_IDLE();
  3347  08B5  120A  158A  20D5  120A  158A  	fcall	_I2C_Wait_IDLE
  3348  08BA                     l2615:
  3349                           
  3350                           ;i2c.c: 92:     ACKDT=1;
  3351  08BA  1683               	bsf	3,5	;RP0=1, select bank1
  3352  08BB  1303               	bcf	3,6	;RP1=0, select bank1
  3353  08BC  1691               	bsf	17,5	;volatile
  3354  08BD                     l2617:
  3355                           
  3356                           ;i2c.c: 93:     ACKEN=1;
  3357  08BD  1611               	bsf	17,4	;volatile
  3358  08BE                     l109:
  3359  08BE  0008               	return
  3360  08BF                     __end_of_I2C_Master_Send_NACK:
  3361                           
  3362                           	psect	text14
  3363  08AB                     __ptext14:	
  3364 ;; *************** function _I2C_Master_Send_ACK *****************
  3365 ;; Defined at:
  3366 ;;		line 79 in file "i2c.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;		None
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;		None
  3371 ;; Return value:  Size  Location     Type
  3372 ;;                  1    wreg      void 
  3373 ;; Registers used:
  3374 ;;		wreg, status,2, status,0, pclath, cstack
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3380 ;;      Params:         0       0       0       0       0
  3381 ;;      Locals:         0       0       0       0       0
  3382 ;;      Temps:          0       0       0       0       0
  3383 ;;      Totals:         0       0       0       0       0
  3384 ;;Total ram usage:        0 bytes
  3385 ;; Hardware stack levels used:    1
  3386 ;; Hardware stack levels required when called:    4
  3387 ;; This function calls:
  3388 ;;		_I2C_Wait_IDLE
  3389 ;; This function is called by:
  3390 ;;		_I2C_Master_ReadByte
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           
  3395                           ;psect for function _I2C_Master_Send_ACK
  3396  08AB                     _I2C_Master_Send_ACK:
  3397  08AB                     l2607:	
  3398                           ;incstack = 0
  3399 ;; hardware stack exceeded
  3400                           ; Regs used in _I2C_Master_Send_ACK: [wreg+status,2+status,0+pclath+cstack]
  3401                           
  3402                           
  3403                           ;i2c.c: 82:     I2C_Wait_IDLE();
  3404  08AB  120A  158A  20D5  120A  158A  	fcall	_I2C_Wait_IDLE
  3405  08B0                     l2609:
  3406                           
  3407                           ;i2c.c: 84:     ACKDT=0;
  3408  08B0  1683               	bsf	3,5	;RP0=1, select bank1
  3409  08B1  1303               	bcf	3,6	;RP1=0, select bank1
  3410  08B2  1291               	bcf	17,5	;volatile
  3411  08B3                     l2611:
  3412                           
  3413                           ;i2c.c: 85:     ACKEN=1;
  3414  08B3  1611               	bsf	17,4	;volatile
  3415  08B4                     l106:
  3416  08B4  0008               	return
  3417  08B5                     __end_of_I2C_Master_Send_ACK:
  3418                           
  3419                           	psect	text15
  3420  0398                     __ptext15:	
  3421 ;; *************** function _EWH_Operating_Mode *****************
  3422 ;; Defined at:
  3423 ;;		line 141 in file "EWH.c"
  3424 ;; Parameters:    Size  Location     Type
  3425 ;;		None
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;		None
  3428 ;; Return value:  Size  Location     Type
  3429 ;;                  1    wreg      void 
  3430 ;; Registers used:
  3431 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3432 ;; Tracked objects:
  3433 ;;		On entry : 0/0
  3434 ;;		On exit  : 0/0
  3435 ;;		Unchanged: 0/0
  3436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3437 ;;      Params:         0       0       0       0       0
  3438 ;;      Locals:         0       0       0       0       0
  3439 ;;      Temps:          0       0       3       0       0
  3440 ;;      Totals:         0       0       3       0       0
  3441 ;;Total ram usage:        3 bytes
  3442 ;; Hardware stack levels used:    1
  3443 ;; Hardware stack levels required when called:    6
  3444 ;; This function calls:
  3445 ;;		_DD_SetState
  3446 ;;		_EWH_SSD_Update
  3447 ;;		_EWH_getAvrgTempReading
  3448 ;;		_TMR1_Start
  3449 ;;		_TMR1_Stop
  3450 ;;		___awmod
  3451 ;; This function is called by:
  3452 ;;		_main
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456                           
  3457                           ;psect for function _EWH_Operating_Mode
  3458  0398                     _EWH_Operating_Mode:
  3459  0398                     l3157:	
  3460                           ;incstack = 0
  3461                           ; Regs used in _EWH_Operating_Mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3462                           
  3463                           
  3464                           ;EWH.c: 147:     EWH_Events[0]=0;
  3465  0398  1683               	bsf	3,5	;RP0=1, select bank1
  3466  0399  1303               	bcf	3,6	;RP1=0, select bank1
  3467  039A  01C1               	clrf	_EWH_Events^(0+128)
  3468                           
  3469                           ;EWH.c: 148:     EWH_Events[2]=0;
  3470  039B  01C3               	clrf	(_EWH_Events^(0+128)+2)
  3471                           
  3472                           ;EWH.c: 149:     EWH_Events[1]=0;
  3473  039C  01C2               	clrf	(_EWH_Events^(0+128)+1)
  3474                           
  3475                           ;EWH.c: 150:     EWH_Events[3]=0;
  3476  039D  01C4               	clrf	(_EWH_Events^(0+128)+3)
  3477  039E                     l3159:
  3478                           
  3479                           ;EWH.c: 152:     EWH_Mode=EWH_OPERATING_MODE;
  3480  039E  3003               	movlw	3
  3481  039F  00FF               	movwf	btemp+1
  3482  03A0  087F               	movf	btemp+1,w
  3483  03A1  00CE               	movwf	_EWH_Mode^(0+128)
  3484  03A2                     l3161:
  3485                           
  3486                           ;EWH.c: 154:     TMR1_Start();
  3487  03A2  120A  158A  20FF  120A  118A  	fcall	_TMR1_Start
  3488  03A7                     l3163:
  3489                           
  3490                           ;EWH.c: 157:     {;EWH.c: 158:         EWH_SSD_Update(current_Temp);
  3491  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  3492  03A8  1303               	bcf	3,6	;RP1=0, select bank1
  3493  03A9  084C               	movf	_current_Temp^(0+128),w
  3494  03AA  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  3495  03AB  01B1               	clrf	(??_EWH_Operating_Mode^(0+128)+1)
  3496  03AC  0830               	movf	??_EWH_Operating_Mode^(0+128),w
  3497  03AD  00AA               	movwf	EWH_SSD_Update@temp^(0+128)
  3498  03AE  0831               	movf	(??_EWH_Operating_Mode+1)^(0+128),w
  3499  03AF  00AB               	movwf	(EWH_SSD_Update@temp+1)^(0+128)
  3500  03B0  120A  158A  24EB  120A  118A  	fcall	_EWH_SSD_Update
  3501  03B5                     l3165:
  3502                           
  3503                           ;EWH.c: 159:         ReadingBuffer[TempReading_count]=current_Temp;
  3504  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  3505  03B6  1303               	bcf	3,6	;RP1=0, select bank1
  3506  03B7  084C               	movf	_current_Temp^(0+128),w
  3507  03B8  00FF               	movwf	btemp+1
  3508  03B9  084B               	movf	_TempReading_count^(0+128),w
  3509  03BA  3ECF               	addlw	(low (_ReadingBuffer| 0))& (0+255)
  3510  03BB  0084               	movwf	4
  3511  03BC  087F               	movf	btemp+1,w
  3512  03BD  1383               	bcf	3,7	;select IRP bank1
  3513  03BE  0080               	movwf	0
  3514  03BF                     l3167:
  3515                           
  3516                           ;EWH.c: 160:         TempReading_count++;
  3517  03BF  3001               	movlw	1
  3518  03C0  00FF               	movwf	btemp+1
  3519  03C1  087F               	movf	btemp+1,w
  3520  03C2  07CB               	addwf	_TempReading_count^(0+128),f
  3521  03C3                     l3169:
  3522                           
  3523                           ;EWH.c: 161:         TempReading_count= TempReading_count%10;
  3524  03C3  300A               	movlw	10
  3525  03C4  00A0               	movwf	___awmod@divisor^(0+128)
  3526  03C5  3000               	movlw	0
  3527  03C6  00A1               	movwf	(___awmod@divisor^(0+128)+1)
  3528  03C7  084B               	movf	_TempReading_count^(0+128),w
  3529  03C8  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  3530  03C9  01B1               	clrf	(??_EWH_Operating_Mode^(0+128)+1)
  3531  03CA  0830               	movf	??_EWH_Operating_Mode^(0+128),w
  3532  03CB  00A2               	movwf	___awmod@dividend^(0+128)
  3533  03CC  0831               	movf	(??_EWH_Operating_Mode+1)^(0+128),w
  3534  03CD  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  3535  03CE  120A  158A  2435  120A  118A  	fcall	___awmod
  3536  03D3  1683               	bsf	3,5	;RP0=1, select bank1
  3537  03D4  1303               	bcf	3,6	;RP1=0, select bank1
  3538  03D5  0820               	movf	?___awmod^(0+128),w
  3539  03D6  00FF               	movwf	btemp+1
  3540  03D7  087F               	movf	btemp+1,w
  3541  03D8  00CB               	movwf	_TempReading_count^(0+128)
  3542  03D9                     l3171:
  3543                           
  3544                           ;EWH.c: 162:         if(TempReading_count==9)
  3545  03D9  3009               	movlw	9
  3546  03DA  064B               	xorwf	_TempReading_count^(0+128),w
  3547  03DB  1D03               	btfss	3,2
  3548  03DC  2BDE               	goto	u2591
  3549  03DD  2BDF               	goto	u2590
  3550  03DE                     u2591:
  3551  03DE  2BF0               	goto	l3177
  3552  03DF                     u2590:
  3553  03DF                     l3173:
  3554                           
  3555                           ;EWH.c: 163:         {;EWH.c: 164:             TempavgReading= EWH_getAvrgTempReading(Re
      +                          adingBuffer,10);
  3556  03DF  300A               	movlw	10
  3557  03E0  00FF               	movwf	btemp+1
  3558  03E1  087F               	movf	btemp+1,w
  3559  03E2  00A7               	movwf	EWH_getAvrgTempReading@length^(0+128)
  3560  03E3  30CF               	movlw	(low (_ReadingBuffer| 0))& (0+255)
  3561  03E4  120A  158A  21DB  120A  118A  	fcall	_EWH_getAvrgTempReading
  3562  03E9  00FF               	movwf	btemp+1
  3563  03EA  087F               	movf	btemp+1,w
  3564  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  3565  03EC  1303               	bcf	3,6	;RP1=0, select bank1
  3566  03ED  00C8               	movwf	_TempavgReading^(0+128)
  3567  03EE                     l3175:
  3568                           
  3569                           ;EWH.c: 165:             ReadingBufferFull=TRUE;
  3570  03EE  01C9               	clrf	_ReadingBufferFull^(0+128)
  3571  03EF  0AC9               	incf	_ReadingBufferFull^(0+128),f
  3572  03F0                     l3177:
  3573                           
  3574                           ;EWH.c: 167:         if(ReadingBufferFull)
  3575  03F0  0849               	movf	_ReadingBufferFull^(0+128),w
  3576  03F1  1903               	btfsc	3,2
  3577  03F2  2BF4               	goto	u2601
  3578  03F3  2BF5               	goto	u2600
  3579  03F4                     u2601:
  3580  03F4  2C44               	goto	l3187
  3581  03F5                     u2600:
  3582  03F5                     l3179:
  3583                           
  3584                           ;EWH.c: 168:         {;EWH.c: 169:             if(TempavgReading>(set_Temp+5))
  3585  03F5  084D               	movf	_set_Temp^(0+128),w
  3586  03F6  3E05               	addlw	5
  3587  03F7  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  3588  03F8  3000               	movlw	0
  3589  03F9  1803               	skipnc
  3590  03FA  3001               	movlw	1
  3591  03FB  00B1               	movwf	(??_EWH_Operating_Mode^(0+128)+1)
  3592  03FC  0831               	movf	(??_EWH_Operating_Mode+1)^(0+128),w
  3593  03FD  3A80               	xorlw	128
  3594  03FE  00B2               	movwf	(??_EWH_Operating_Mode+2)^(0+128)
  3595  03FF  3080               	movlw	128
  3596  0400  0232               	subwf	(??_EWH_Operating_Mode+2)^(0+128),w
  3597  0401  1D03               	skipz
  3598  0402  2C05               	goto	u2615
  3599  0403  0848               	movf	_TempavgReading^(0+128),w
  3600  0404  0230               	subwf	??_EWH_Operating_Mode^(0+128),w
  3601  0405                     u2615:
  3602  0405  1803               	skipnc
  3603  0406  2C08               	goto	u2611
  3604  0407  2C09               	goto	u2610
  3605  0408                     u2611:
  3606  0408  2C1D               	goto	l3183
  3607  0409                     u2610:
  3608  0409                     l3181:
  3609                           
  3610                           ;EWH.c: 170:             {;EWH.c: 171:                 DD_SetState(HEATER,OFF);
  3611  0409  1683               	bsf	3,5	;RP0=1, select bank1
  3612  040A  1303               	bcf	3,6	;RP1=0, select bank1
  3613  040B  01A0               	clrf	DD_SetState@state^(0+128)
  3614  040C  3000               	movlw	0
  3615  040D  120A  158A  23DB  120A  118A  	fcall	_DD_SetState
  3616                           
  3617                           ;EWH.c: 172:                 DD_SetState(COOLER,ON);
  3618  0412  1683               	bsf	3,5	;RP0=1, select bank1
  3619  0413  1303               	bcf	3,6	;RP1=0, select bank1
  3620  0414  01A0               	clrf	DD_SetState@state^(0+128)
  3621  0415  0AA0               	incf	DD_SetState@state^(0+128),f
  3622  0416  3001               	movlw	1
  3623  0417  120A  158A  23DB  120A  118A  	fcall	_DD_SetState
  3624                           
  3625                           ;EWH.c: 173:             }
  3626  041C  2C44               	goto	l3187
  3627  041D                     l3183:
  3628  041D  1683               	bsf	3,5	;RP0=1, select bank1
  3629  041E  1303               	bcf	3,6	;RP1=0, select bank1
  3630  041F  084D               	movf	_set_Temp^(0+128),w
  3631  0420  3EFB               	addlw	251
  3632  0421  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  3633  0422  30FF               	movlw	255
  3634  0423  1803               	skipnc
  3635  0424  3000               	movlw	0
  3636  0425  00B1               	movwf	(??_EWH_Operating_Mode^(0+128)+1)
  3637  0426  0831               	movf	(??_EWH_Operating_Mode+1)^(0+128),w
  3638  0427  3A80               	xorlw	128
  3639  0428  3C80               	sublw	128
  3640  0429  1D03               	skipz
  3641  042A  2C2D               	goto	u2625
  3642  042B  0830               	movf	??_EWH_Operating_Mode^(0+128),w
  3643  042C  0248               	subwf	_TempavgReading^(0+128),w
  3644  042D                     u2625:
  3645  042D  1803               	skipnc
  3646  042E  2C30               	goto	u2621
  3647  042F  2C31               	goto	u2620
  3648  0430                     u2621:
  3649  0430  2C44               	goto	l3187
  3650  0431                     u2620:
  3651  0431                     l3185:
  3652                           
  3653                           ;EWH.c: 175:             {;EWH.c: 176:                 DD_SetState(HEATER,ON);
  3654  0431  1683               	bsf	3,5	;RP0=1, select bank1
  3655  0432  1303               	bcf	3,6	;RP1=0, select bank1
  3656  0433  01A0               	clrf	DD_SetState@state^(0+128)
  3657  0434  0AA0               	incf	DD_SetState@state^(0+128),f
  3658  0435  3000               	movlw	0
  3659  0436  120A  158A  23DB  120A  118A  	fcall	_DD_SetState
  3660                           
  3661                           ;EWH.c: 177:                 DD_SetState(COOLER,OFF);
  3662  043B  1683               	bsf	3,5	;RP0=1, select bank1
  3663  043C  1303               	bcf	3,6	;RP1=0, select bank1
  3664  043D  01A0               	clrf	DD_SetState@state^(0+128)
  3665  043E  3001               	movlw	1
  3666  043F  120A  158A  23DB  120A  118A  	fcall	_DD_SetState
  3667  0444                     l3187:
  3668                           
  3669                           ;EWH.c: 180:          if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED) || (!((PORTB & (1<<1)) >
      +                          > 1)==SW_PRESSED) )
  3670  0444  1283               	bcf	3,5	;RP0=0, select bank0
  3671  0445  1303               	bcf	3,6	;RP1=0, select bank0
  3672  0446  0806               	movf	6,w	;volatile
  3673  0447  1683               	bsf	3,5	;RP0=1, select bank1
  3674  0448  1303               	bcf	3,6	;RP1=0, select bank1
  3675  0449  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  3676  044A  3002               	movlw	2
  3677  044B                     u2635:
  3678  044B  1003               	clrc
  3679  044C  0CB0               	rrf	??_EWH_Operating_Mode^(0+128),f
  3680  044D  3EFF               	addlw	-1
  3681  044E  1D03               	skipz
  3682  044F  2C4B               	goto	u2635
  3683  0450  1C30               	btfss	??_EWH_Operating_Mode^(0+128),0
  3684  0451  2C53               	goto	u2641
  3685  0452  2C54               	goto	u2640
  3686  0453                     u2641:
  3687  0453  2C64               	goto	l3191
  3688  0454                     u2640:
  3689  0454                     l3189:
  3690  0454  1283               	bcf	3,5	;RP0=0, select bank0
  3691  0455  1303               	bcf	3,6	;RP1=0, select bank0
  3692  0456  0806               	movf	6,w	;volatile
  3693  0457  1683               	bsf	3,5	;RP0=1, select bank1
  3694  0458  1303               	bcf	3,6	;RP1=0, select bank1
  3695  0459  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  3696  045A  3001               	movlw	1
  3697  045B                     u2655:
  3698  045B  1003               	clrc
  3699  045C  0CB0               	rrf	??_EWH_Operating_Mode^(0+128),f
  3700  045D  3EFF               	addlw	-1
  3701  045E  1D03               	skipz
  3702  045F  2C5B               	goto	u2655
  3703  0460  1830               	btfsc	??_EWH_Operating_Mode^(0+128),0
  3704  0461  2C63               	goto	u2661
  3705  0462  2C64               	goto	u2660
  3706  0463                     u2661:
  3707  0463  2C94               	goto	l3197
  3708  0464                     u2660:
  3709  0464                     l3191:
  3710                           
  3711                           ;EWH.c: 181:          {;EWH.c: 182:              _delay((unsigned long)((50)*(4000000/40
      +                          00.0)));
  3712  0464  3041               	movlw	65
  3713  0465  1683               	bsf	3,5	;RP0=1, select bank1
  3714  0466  1303               	bcf	3,6	;RP1=0, select bank1
  3715  0467  00B1               	movwf	(??_EWH_Operating_Mode^(0+128)+1)
  3716  0468  30ED               	movlw	237
  3717  0469  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  3718  046A                     u3787:
  3719  046A  0BB0               	decfsz	??_EWH_Operating_Mode^(0+128),f
  3720  046B  2C6A               	goto	u3787
  3721  046C  0BB1               	decfsz	(??_EWH_Operating_Mode^(0+128)+1),f
  3722  046D  2C6A               	goto	u3787
  3723  046E  2C6F               	nop2
  3724  046F                     l3193:
  3725                           
  3726                           ;EWH.c: 183:             if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED) || (!((PORTB & (1<<1)
      +                          ) >> 1)==SW_PRESSED) )
  3727  046F  1283               	bcf	3,5	;RP0=0, select bank0
  3728  0470  1303               	bcf	3,6	;RP1=0, select bank0
  3729  0471  0806               	movf	6,w	;volatile
  3730  0472  1683               	bsf	3,5	;RP0=1, select bank1
  3731  0473  1303               	bcf	3,6	;RP1=0, select bank1
  3732  0474  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  3733  0475  3002               	movlw	2
  3734  0476                     u2675:
  3735  0476  1003               	clrc
  3736  0477  0CB0               	rrf	??_EWH_Operating_Mode^(0+128),f
  3737  0478  3EFF               	addlw	-1
  3738  0479  1D03               	skipz
  3739  047A  2C76               	goto	u2675
  3740  047B  1C30               	btfss	??_EWH_Operating_Mode^(0+128),0
  3741  047C  2C7E               	goto	u2681
  3742  047D  2C7F               	goto	u2680
  3743  047E                     u2681:
  3744  047E  2C8F               	goto	l552
  3745  047F                     u2680:
  3746  047F                     l3195:
  3747  047F  1283               	bcf	3,5	;RP0=0, select bank0
  3748  0480  1303               	bcf	3,6	;RP1=0, select bank0
  3749  0481  0806               	movf	6,w	;volatile
  3750  0482  1683               	bsf	3,5	;RP0=1, select bank1
  3751  0483  1303               	bcf	3,6	;RP1=0, select bank1
  3752  0484  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  3753  0485  3001               	movlw	1
  3754  0486                     u2695:
  3755  0486  1003               	clrc
  3756  0487  0CB0               	rrf	??_EWH_Operating_Mode^(0+128),f
  3757  0488  3EFF               	addlw	-1
  3758  0489  1D03               	skipz
  3759  048A  2C86               	goto	u2695
  3760  048B  1830               	btfsc	??_EWH_Operating_Mode^(0+128),0
  3761  048C  2C8E               	goto	u2701
  3762  048D  2C8F               	goto	u2700
  3763  048E                     u2701:
  3764  048E  2C94               	goto	l3197
  3765  048F                     u2700:
  3766  048F                     l552:
  3767                           
  3768                           ;EWH.c: 184:             {;EWH.c: 185:              EWH_Events[2]=1;
  3769  048F  01C3               	clrf	(_EWH_Events^(0+128)+2)
  3770  0490  0AC3               	incf	(_EWH_Events^(0+128)+2),f
  3771                           
  3772                           ;EWH.c: 186:              EWH_Events[1]=1;
  3773  0491  01C2               	clrf	(_EWH_Events^(0+128)+1)
  3774  0492  0AC2               	incf	(_EWH_Events^(0+128)+1),f
  3775                           
  3776                           ;EWH.c: 187:              break;
  3777  0493  2CA7               	goto	l3203
  3778  0494                     l3197:
  3779                           
  3780                           ;EWH.c: 190:         if(EWH_Events[0]==1)
  3781  0494  0341               	decf	_EWH_Events^(0+128),w
  3782  0495  1D03               	btfss	3,2
  3783  0496  2C98               	goto	u2711
  3784  0497  2C99               	goto	u2710
  3785  0498                     u2711:
  3786  0498  2C9A               	goto	l3201
  3787  0499                     u2710:
  3788  0499  2CA7               	goto	l3203
  3789  049A                     l3201:
  3790                           
  3791                           ;EWH.c: 193:          EWH_SSD_Update(current_Temp);
  3792  049A  084C               	movf	_current_Temp^(0+128),w
  3793  049B  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  3794  049C  01B1               	clrf	(??_EWH_Operating_Mode^(0+128)+1)
  3795  049D  0830               	movf	??_EWH_Operating_Mode^(0+128),w
  3796  049E  00AA               	movwf	EWH_SSD_Update@temp^(0+128)
  3797  049F  0831               	movf	(??_EWH_Operating_Mode+1)^(0+128),w
  3798  04A0  00AB               	movwf	(EWH_SSD_Update@temp+1)^(0+128)
  3799  04A1  120A  158A  24EB  120A  118A  	fcall	_EWH_SSD_Update
  3800  04A6  2BA7               	goto	l3163
  3801  04A7                     l3203:
  3802                           
  3803                           ;EWH.c: 196:     if(EWH_Events[1] )
  3804  04A7  0842               	movf	(_EWH_Events^(0+128)+1),w
  3805  04A8  1903               	btfsc	3,2
  3806  04A9  2CAB               	goto	u2721
  3807  04AA  2CAC               	goto	u2720
  3808  04AB                     u2721:
  3809  04AB  2CB8               	goto	l3211
  3810  04AC                     u2720:
  3811  04AC                     l3205:
  3812                           
  3813                           ;EWH.c: 197:         {;EWH.c: 198:             EWH_Events[1]=0;
  3814  04AC  01C2               	clrf	(_EWH_Events^(0+128)+1)
  3815  04AD                     l3207:
  3816                           
  3817                           ;EWH.c: 199:             TMR1_Stop();
  3818  04AD  120A  158A  207B  120A  118A  	fcall	_TMR1_Stop
  3819  04B2                     l3209:
  3820                           
  3821                           ;EWH.c: 201:             EWH_Mode=EWH_SET_TEMP_MODE;
  3822  04B2  3002               	movlw	2
  3823  04B3  00FF               	movwf	btemp+1
  3824  04B4  087F               	movf	btemp+1,w
  3825  04B5  1683               	bsf	3,5	;RP0=1, select bank1
  3826  04B6  1303               	bcf	3,6	;RP1=0, select bank1
  3827  04B7  00CE               	movwf	_EWH_Mode^(0+128)
  3828  04B8                     l3211:
  3829                           
  3830                           ;EWH.c: 203:     if( EWH_Events[2])
  3831  04B8  0843               	movf	(_EWH_Events^(0+128)+2),w
  3832  04B9  1903               	btfsc	3,2
  3833  04BA  2CBC               	goto	u2731
  3834  04BB  2CBD               	goto	u2730
  3835  04BC                     u2731:
  3836  04BC  2CC9               	goto	l558
  3837  04BD                     u2730:
  3838  04BD                     l3213:
  3839                           
  3840                           ;EWH.c: 204:         {;EWH.c: 205:              EWH_Events[2]=0;
  3841  04BD  01C3               	clrf	(_EWH_Events^(0+128)+2)
  3842  04BE                     l3215:
  3843                           
  3844                           ;EWH.c: 206:              TMR1_Stop();
  3845  04BE  120A  158A  207B  120A  118A  	fcall	_TMR1_Stop
  3846  04C3                     l3217:
  3847                           
  3848                           ;EWH.c: 207:              EWH_Mode=EWH_SET_TEMP_MODE;
  3849  04C3  3002               	movlw	2
  3850  04C4  00FF               	movwf	btemp+1
  3851  04C5  087F               	movf	btemp+1,w
  3852  04C6  1683               	bsf	3,5	;RP0=1, select bank1
  3853  04C7  1303               	bcf	3,6	;RP1=0, select bank1
  3854  04C8  00CE               	movwf	_EWH_Mode^(0+128)
  3855  04C9                     l558:
  3856  04C9  0008               	return
  3857  04CA                     __end_of_EWH_Operating_Mode:
  3858                           
  3859                           	psect	text16
  3860  0C35                     __ptext16:	
  3861 ;; *************** function ___awmod *****************
  3862 ;; Defined at:
  3863 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  3864 ;; Parameters:    Size  Location     Type
  3865 ;;  divisor         2    0[BANK1 ] int 
  3866 ;;  dividend        2    2[BANK1 ] int 
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;  sign            1    5[BANK1 ] unsigned char 
  3869 ;;  counter         1    4[BANK1 ] unsigned char 
  3870 ;; Return value:  Size  Location     Type
  3871 ;;                  2    0[BANK1 ] int 
  3872 ;; Registers used:
  3873 ;;		wreg, status,2, status,0, btemp+1
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/0
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3879 ;;      Params:         0       0       4       0       0
  3880 ;;      Locals:         0       0       2       0       0
  3881 ;;      Temps:          0       0       0       0       0
  3882 ;;      Totals:         0       0       6       0       0
  3883 ;;Total ram usage:        6 bytes
  3884 ;; Hardware stack levels used:    1
  3885 ;; Hardware stack levels required when called:    3
  3886 ;; This function calls:
  3887 ;;		Nothing
  3888 ;; This function is called by:
  3889 ;;		_EWH_Operating_Mode
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893                           
  3894                           ;psect for function ___awmod
  3895  0C35                     ___awmod:
  3896  0C35                     l2933:	
  3897                           ;incstack = 0
  3898                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  3899                           
  3900  0C35  1683               	bsf	3,5	;RP0=1, select bank1
  3901  0C36  1303               	bcf	3,6	;RP1=0, select bank1
  3902  0C37  01A5               	clrf	___awmod@sign^(0+128)
  3903  0C38                     l2935:
  3904  0C38  1FA3               	btfss	(___awmod@dividend+1)^(0+128),7
  3905  0C39  2C3B               	goto	u2361
  3906  0C3A  2C3C               	goto	u2360
  3907  0C3B                     u2361:
  3908  0C3B  2C43               	goto	l2941
  3909  0C3C                     u2360:
  3910  0C3C                     l2937:
  3911  0C3C  09A2               	comf	___awmod@dividend^(0+128),f
  3912  0C3D  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  3913  0C3E  0AA2               	incf	___awmod@dividend^(0+128),f
  3914  0C3F  1903               	skipnz
  3915  0C40  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  3916  0C41                     l2939:
  3917  0C41  01A5               	clrf	___awmod@sign^(0+128)
  3918  0C42  0AA5               	incf	___awmod@sign^(0+128),f
  3919  0C43                     l2941:
  3920  0C43  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  3921  0C44  2C46               	goto	u2371
  3922  0C45  2C47               	goto	u2370
  3923  0C46                     u2371:
  3924  0C46  2C4C               	goto	l2945
  3925  0C47                     u2370:
  3926  0C47                     l2943:
  3927  0C47  09A0               	comf	___awmod@divisor^(0+128),f
  3928  0C48  09A1               	comf	(___awmod@divisor+1)^(0+128),f
  3929  0C49  0AA0               	incf	___awmod@divisor^(0+128),f
  3930  0C4A  1903               	skipnz
  3931  0C4B  0AA1               	incf	(___awmod@divisor+1)^(0+128),f
  3932  0C4C                     l2945:
  3933  0C4C  0820               	movf	___awmod@divisor^(0+128),w
  3934  0C4D  0421               	iorwf	(___awmod@divisor+1)^(0+128),w
  3935  0C4E  1903               	btfsc	3,2
  3936  0C4F  2C51               	goto	u2381
  3937  0C50  2C52               	goto	u2380
  3938  0C51                     u2381:
  3939  0C51  2C81               	goto	l2963
  3940  0C52                     u2380:
  3941  0C52                     l2947:
  3942  0C52  01A4               	clrf	___awmod@counter^(0+128)
  3943  0C53  0AA4               	incf	___awmod@counter^(0+128),f
  3944  0C54  2C60               	goto	l2953
  3945  0C55                     l2949:
  3946  0C55  3001               	movlw	1
  3947  0C56                     u2395:
  3948  0C56  1003               	clrc
  3949  0C57  0DA0               	rlf	___awmod@divisor^(0+128),f
  3950  0C58  0DA1               	rlf	(___awmod@divisor+1)^(0+128),f
  3951  0C59  3EFF               	addlw	-1
  3952  0C5A  1D03               	skipz
  3953  0C5B  2C56               	goto	u2395
  3954  0C5C                     l2951:
  3955  0C5C  3001               	movlw	1
  3956  0C5D  00FF               	movwf	btemp+1
  3957  0C5E  087F               	movf	btemp+1,w
  3958  0C5F  07A4               	addwf	___awmod@counter^(0+128),f
  3959  0C60                     l2953:
  3960  0C60  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  3961  0C61  2C63               	goto	u2401
  3962  0C62  2C64               	goto	u2400
  3963  0C63                     u2401:
  3964  0C63  2C55               	goto	l2949
  3965  0C64                     u2400:
  3966  0C64                     l2955:
  3967  0C64  0821               	movf	(___awmod@divisor+1)^(0+128),w
  3968  0C65  0223               	subwf	(___awmod@dividend+1)^(0+128),w
  3969  0C66  1D03               	skipz
  3970  0C67  2C6A               	goto	u2415
  3971  0C68  0820               	movf	___awmod@divisor^(0+128),w
  3972  0C69  0222               	subwf	___awmod@dividend^(0+128),w
  3973  0C6A                     u2415:
  3974  0C6A  1C03               	skipc
  3975  0C6B  2C6D               	goto	u2411
  3976  0C6C  2C6E               	goto	u2410
  3977  0C6D                     u2411:
  3978  0C6D  2C74               	goto	l2959
  3979  0C6E                     u2410:
  3980  0C6E                     l2957:
  3981  0C6E  0820               	movf	___awmod@divisor^(0+128),w
  3982  0C6F  02A2               	subwf	___awmod@dividend^(0+128),f
  3983  0C70  0821               	movf	(___awmod@divisor+1)^(0+128),w
  3984  0C71  1C03               	skipc
  3985  0C72  03A3               	decf	(___awmod@dividend+1)^(0+128),f
  3986  0C73  02A3               	subwf	(___awmod@dividend+1)^(0+128),f
  3987  0C74                     l2959:
  3988  0C74  3001               	movlw	1
  3989  0C75                     u2425:
  3990  0C75  1003               	clrc
  3991  0C76  0CA1               	rrf	(___awmod@divisor+1)^(0+128),f
  3992  0C77  0CA0               	rrf	___awmod@divisor^(0+128),f
  3993  0C78  3EFF               	addlw	-1
  3994  0C79  1D03               	skipz
  3995  0C7A  2C75               	goto	u2425
  3996  0C7B                     l2961:
  3997  0C7B  3001               	movlw	1
  3998  0C7C  02A4               	subwf	___awmod@counter^(0+128),f
  3999  0C7D  1D03               	btfss	3,2
  4000  0C7E  2C80               	goto	u2431
  4001  0C7F  2C81               	goto	u2430
  4002  0C80                     u2431:
  4003  0C80  2C64               	goto	l2955
  4004  0C81                     u2430:
  4005  0C81                     l2963:
  4006  0C81  0825               	movf	___awmod@sign^(0+128),w
  4007  0C82  1903               	btfsc	3,2
  4008  0C83  2C85               	goto	u2441
  4009  0C84  2C86               	goto	u2440
  4010  0C85                     u2441:
  4011  0C85  2C8B               	goto	l2967
  4012  0C86                     u2440:
  4013  0C86                     l2965:
  4014  0C86  09A2               	comf	___awmod@dividend^(0+128),f
  4015  0C87  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  4016  0C88  0AA2               	incf	___awmod@dividend^(0+128),f
  4017  0C89  1903               	skipnz
  4018  0C8A  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  4019  0C8B                     l2967:
  4020  0C8B  0823               	movf	(___awmod@dividend+1)^(0+128),w
  4021  0C8C  00A1               	movwf	(?___awmod+1)^(0+128)
  4022  0C8D  0822               	movf	___awmod@dividend^(0+128),w
  4023  0C8E  00A0               	movwf	?___awmod^(0+128)
  4024  0C8F                     l915:
  4025  0C8F  0008               	return
  4026  0C90                     __end_of___awmod:
  4027                           
  4028                           	psect	text17
  4029  087B                     __ptext17:	
  4030 ;; *************** function _TMR1_Stop *****************
  4031 ;; Defined at:
  4032 ;;		line 44 in file "TMR1.c"
  4033 ;; Parameters:    Size  Location     Type
  4034 ;;		None
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;		None
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  1    wreg      void 
  4039 ;; Registers used:
  4040 ;;		None
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4046 ;;      Params:         0       0       0       0       0
  4047 ;;      Locals:         0       0       0       0       0
  4048 ;;      Temps:          0       0       0       0       0
  4049 ;;      Totals:         0       0       0       0       0
  4050 ;;Total ram usage:        0 bytes
  4051 ;; Hardware stack levels used:    1
  4052 ;; Hardware stack levels required when called:    3
  4053 ;; This function calls:
  4054 ;;		Nothing
  4055 ;; This function is called by:
  4056 ;;		_EWH_Sleep_Mode
  4057 ;;		_EWH_Operating_Mode
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061                           
  4062                           ;psect for function _TMR1_Stop
  4063  087B                     _TMR1_Stop:
  4064  087B                     l2885:	
  4065                           ;incstack = 0
  4066                           ; Regs used in _TMR1_Stop: []
  4067                           
  4068                           
  4069                           ;TMR1.c: 46:     (TMR1ON = 0);
  4070  087B  1283               	bcf	3,5	;RP0=0, select bank0
  4071  087C  1303               	bcf	3,6	;RP1=0, select bank0
  4072  087D  1010               	bcf	16,0	;volatile
  4073  087E                     l384:
  4074  087E  0008               	return
  4075  087F                     __end_of_TMR1_Stop:
  4076                           
  4077                           	psect	text18
  4078  08FF                     __ptext18:	
  4079 ;; *************** function _TMR1_Start *****************
  4080 ;; Defined at:
  4081 ;;		line 31 in file "TMR1.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;		None
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;		None
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  1    wreg      void 
  4088 ;; Registers used:
  4089 ;;		None
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4095 ;;      Params:         0       0       0       0       0
  4096 ;;      Locals:         0       0       0       0       0
  4097 ;;      Temps:          0       0       0       0       0
  4098 ;;      Totals:         0       0       0       0       0
  4099 ;;Total ram usage:        0 bytes
  4100 ;; Hardware stack levels used:    1
  4101 ;; Hardware stack levels required when called:    3
  4102 ;; This function calls:
  4103 ;;		Nothing
  4104 ;; This function is called by:
  4105 ;;		_EWH_SetTemp_Mode
  4106 ;;		_EWH_Operating_Mode
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           
  4111                           ;psect for function _TMR1_Start
  4112  08FF                     _TMR1_Start:
  4113  08FF                     l2883:	
  4114                           ;incstack = 0
  4115                           ; Regs used in _TMR1_Start: []
  4116                           
  4117                           
  4118                           ;TMR1.c: 33:     (TMR1IF = 0);
  4119  08FF  1283               	bcf	3,5	;RP0=0, select bank0
  4120  0900  1303               	bcf	3,6	;RP1=0, select bank0
  4121  0901  100C               	bcf	12,0	;volatile
  4122                           
  4123                           ;TMR1.c: 34:     (TMR1IE = 1);
  4124  0902  1683               	bsf	3,5	;RP0=1, select bank1
  4125  0903  1303               	bcf	3,6	;RP1=0, select bank1
  4126  0904  140C               	bsf	12,0	;volatile
  4127                           
  4128                           ;TMR1.c: 35:     (PEIE = 1);
  4129  0905  170B               	bsf	11,6	;volatile
  4130                           
  4131                           ;TMR1.c: 36:     (GIE = 1);
  4132  0906  178B               	bsf	11,7	;volatile
  4133                           
  4134                           ;TMR1.c: 37:     TMR1=40536;
  4135  0907  309E               	movlw	158
  4136  0908  1283               	bcf	3,5	;RP0=0, select bank0
  4137  0909  1303               	bcf	3,6	;RP1=0, select bank0
  4138  090A  008F               	movwf	15	;volatile
  4139  090B  3058               	movlw	88
  4140  090C  008E               	movwf	14	;volatile
  4141                           
  4142                           ;TMR1.c: 38:     (TMR1ON = 1);
  4143  090D  1410               	bsf	16,0	;volatile
  4144  090E                     l378:
  4145  090E  0008               	return
  4146  090F                     __end_of_TMR1_Start:
  4147                           
  4148                           	psect	text19
  4149  09DB                     __ptext19:	
  4150 ;; *************** function _EWH_getAvrgTempReading *****************
  4151 ;; Defined at:
  4152 ;;		line 226 in file "EWH.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;  buffer          1    wreg     PTR unsigned char 
  4155 ;;		 -> ReadingBuffer(10), 
  4156 ;;  length          1    7[BANK1 ] unsigned char 
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;  buffer          1   14[BANK1 ] PTR unsigned char 
  4159 ;;		 -> ReadingBuffer(10), 
  4160 ;;  i               1   15[BANK1 ] unsigned char 
  4161 ;;  sumOfReading    2   11[BANK1 ] unsigned short 
  4162 ;;  averageReadi    1   13[BANK1 ] unsigned char 
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  1    wreg      unsigned char 
  4165 ;; Registers used:
  4166 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4172 ;;      Params:         0       0       1       0       0
  4173 ;;      Locals:         0       0       5       0       0
  4174 ;;      Temps:          0       0       3       0       0
  4175 ;;      Totals:         0       0       9       0       0
  4176 ;;Total ram usage:        9 bytes
  4177 ;; Hardware stack levels used:    1
  4178 ;; Hardware stack levels required when called:    4
  4179 ;; This function calls:
  4180 ;;		___lwdiv
  4181 ;; This function is called by:
  4182 ;;		_EWH_Operating_Mode
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           
  4187                           ;psect for function _EWH_getAvrgTempReading
  4188  09DB                     _EWH_getAvrgTempReading:
  4189                           
  4190                           ;incstack = 0
  4191                           ; Regs used in _EWH_getAvrgTempReading: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  4192                           ;EWH_getAvrgTempReading@buffer stored from wreg
  4193  09DB  1683               	bsf	3,5	;RP0=1, select bank1
  4194  09DC  1303               	bcf	3,6	;RP1=0, select bank1
  4195  09DD  00AE               	movwf	EWH_getAvrgTempReading@buffer^(0+128)
  4196  09DE                     l2893:
  4197                           
  4198                           ;EWH.c: 226: uint8_t EWH_getAvrgTempReading(uint8_t *buffer, uint8_t length);EWH.c: 227:
      +                           {;EWH.c: 228:     uint16_t sumOfReadings=0;
  4199  09DE  01AB               	clrf	EWH_getAvrgTempReading@sumOfReadings^(0+128)
  4200  09DF  01AC               	clrf	(EWH_getAvrgTempReading@sumOfReadings+1)^(0+128)
  4201                           
  4202                           ;EWH.c: 229:     for(uint8_t i=0 ; i<length ; i++)
  4203  09E0  01AF               	clrf	EWH_getAvrgTempReading@i^(0+128)
  4204  09E1  29F5               	goto	l2899
  4205  09E2                     l2895:
  4206                           
  4207                           ;EWH.c: 230:     {;EWH.c: 231:         sumOfReadings += buffer[i];
  4208  09E2  082F               	movf	EWH_getAvrgTempReading@i^(0+128),w
  4209  09E3  072E               	addwf	EWH_getAvrgTempReading@buffer^(0+128),w
  4210  09E4  00A8               	movwf	??_EWH_getAvrgTempReading^(0+128)
  4211  09E5  0828               	movf	??_EWH_getAvrgTempReading^(0+128),w
  4212  09E6  0084               	movwf	4
  4213  09E7  1383               	bcf	3,7	;select IRP bank0
  4214  09E8  0800               	movf	0,w
  4215  09E9  00A9               	movwf	(??_EWH_getAvrgTempReading+1)^(0+128)
  4216  09EA  01AA               	clrf	((??_EWH_getAvrgTempReading+1)^(0+128)+1)
  4217  09EB  0829               	movf	(??_EWH_getAvrgTempReading+1)^(0+128),w
  4218  09EC  07AB               	addwf	EWH_getAvrgTempReading@sumOfReadings^(0+128),f
  4219  09ED  1803               	skipnc
  4220  09EE  0AAC               	incf	(EWH_getAvrgTempReading@sumOfReadings+1)^(0+128),f
  4221  09EF  082A               	movf	(??_EWH_getAvrgTempReading+2)^(0+128),w
  4222  09F0  07AC               	addwf	(EWH_getAvrgTempReading@sumOfReadings+1)^(0+128),f
  4223  09F1                     l2897:
  4224                           
  4225                           ;EWH.c: 232:     }
  4226  09F1  3001               	movlw	1
  4227  09F2  00FF               	movwf	btemp+1
  4228  09F3  087F               	movf	btemp+1,w
  4229  09F4  07AF               	addwf	EWH_getAvrgTempReading@i^(0+128),f
  4230  09F5                     l2899:
  4231  09F5  0827               	movf	EWH_getAvrgTempReading@length^(0+128),w
  4232  09F6  022F               	subwf	EWH_getAvrgTempReading@i^(0+128),w
  4233  09F7  1C03               	skipc
  4234  09F8  29FA               	goto	u2281
  4235  09F9  29FB               	goto	u2280
  4236  09FA                     u2281:
  4237  09FA  29E2               	goto	l2895
  4238  09FB                     u2280:
  4239  09FB                     l2901:
  4240                           
  4241                           ;EWH.c: 233:     uint8_t averageReading= sumOfReadings/length;
  4242  09FB  0827               	movf	EWH_getAvrgTempReading@length^(0+128),w
  4243  09FC  00A8               	movwf	??_EWH_getAvrgTempReading^(0+128)
  4244  09FD  01A9               	clrf	(??_EWH_getAvrgTempReading^(0+128)+1)
  4245  09FE  0828               	movf	??_EWH_getAvrgTempReading^(0+128),w
  4246  09FF  00A0               	movwf	___lwdiv@divisor^(0+128)
  4247  0A00  0829               	movf	(??_EWH_getAvrgTempReading+1)^(0+128),w
  4248  0A01  00A1               	movwf	(___lwdiv@divisor+1)^(0+128)
  4249  0A02  082C               	movf	(EWH_getAvrgTempReading@sumOfReadings+1)^(0+128),w
  4250  0A03  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  4251  0A04  082B               	movf	EWH_getAvrgTempReading@sumOfReadings^(0+128),w
  4252  0A05  00A2               	movwf	___lwdiv@dividend^(0+128)
  4253  0A06  120A  158A  2301  120A  158A  	fcall	___lwdiv
  4254  0A0B  1683               	bsf	3,5	;RP0=1, select bank1
  4255  0A0C  1303               	bcf	3,6	;RP1=0, select bank1
  4256  0A0D  0820               	movf	?___lwdiv^(0+128),w
  4257  0A0E  00FF               	movwf	btemp+1
  4258  0A0F  087F               	movf	btemp+1,w
  4259  0A10  00AD               	movwf	EWH_getAvrgTempReading@averageReading^(0+128)
  4260  0A11                     l2903:
  4261                           
  4262                           ;EWH.c: 234:     return averageReading;
  4263  0A11  082D               	movf	EWH_getAvrgTempReading@averageReading^(0+128),w
  4264  0A12                     l573:
  4265  0A12  0008               	return
  4266  0A13                     __end_of_EWH_getAvrgTempReading:
  4267                           
  4268                           	psect	text20
  4269  0B01                     __ptext20:	
  4270 ;; *************** function ___lwdiv *****************
  4271 ;; Defined at:
  4272 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;  divisor         2    0[BANK1 ] unsigned int 
  4275 ;;  dividend        2    2[BANK1 ] unsigned int 
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;  quotient        2    4[BANK1 ] unsigned int 
  4278 ;;  counter         1    6[BANK1 ] unsigned char 
  4279 ;; Return value:  Size  Location     Type
  4280 ;;                  2    0[BANK1 ] unsigned int 
  4281 ;; Registers used:
  4282 ;;		wreg, status,2, status,0, btemp+1
  4283 ;; Tracked objects:
  4284 ;;		On entry : 0/0
  4285 ;;		On exit  : 0/0
  4286 ;;		Unchanged: 0/0
  4287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4288 ;;      Params:         0       0       4       0       0
  4289 ;;      Locals:         0       0       3       0       0
  4290 ;;      Temps:          0       0       0       0       0
  4291 ;;      Totals:         0       0       7       0       0
  4292 ;;Total ram usage:        7 bytes
  4293 ;; Hardware stack levels used:    1
  4294 ;; Hardware stack levels required when called:    3
  4295 ;; This function calls:
  4296 ;;		Nothing
  4297 ;; This function is called by:
  4298 ;;		_EWH_getAvrgTempReading
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302                           
  4303                           ;psect for function ___lwdiv
  4304  0B01                     ___lwdiv:
  4305  0B01                     l2787:	
  4306                           ;incstack = 0
  4307                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  4308                           
  4309  0B01  1683               	bsf	3,5	;RP0=1, select bank1
  4310  0B02  1303               	bcf	3,6	;RP1=0, select bank1
  4311  0B03  01A4               	clrf	___lwdiv@quotient^(0+128)
  4312  0B04  01A5               	clrf	(___lwdiv@quotient+1)^(0+128)
  4313  0B05                     l2789:
  4314  0B05  0820               	movf	___lwdiv@divisor^(0+128),w
  4315  0B06  0421               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  4316  0B07  1903               	btfsc	3,2
  4317  0B08  2B0A               	goto	u2121
  4318  0B09  2B0B               	goto	u2120
  4319  0B0A                     u2121:
  4320  0B0A  2B42               	goto	l2809
  4321  0B0B                     u2120:
  4322  0B0B                     l2791:
  4323  0B0B  01A6               	clrf	___lwdiv@counter^(0+128)
  4324  0B0C  0AA6               	incf	___lwdiv@counter^(0+128),f
  4325  0B0D  2B19               	goto	l2797
  4326  0B0E                     l2793:
  4327  0B0E  3001               	movlw	1
  4328  0B0F                     u2135:
  4329  0B0F  1003               	clrc
  4330  0B10  0DA0               	rlf	___lwdiv@divisor^(0+128),f
  4331  0B11  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
  4332  0B12  3EFF               	addlw	-1
  4333  0B13  1D03               	skipz
  4334  0B14  2B0F               	goto	u2135
  4335  0B15                     l2795:
  4336  0B15  3001               	movlw	1
  4337  0B16  00FF               	movwf	btemp+1
  4338  0B17  087F               	movf	btemp+1,w
  4339  0B18  07A6               	addwf	___lwdiv@counter^(0+128),f
  4340  0B19                     l2797:
  4341  0B19  1FA1               	btfss	(___lwdiv@divisor+1)^(0+128),7
  4342  0B1A  2B1C               	goto	u2141
  4343  0B1B  2B1D               	goto	u2140
  4344  0B1C                     u2141:
  4345  0B1C  2B0E               	goto	l2793
  4346  0B1D                     u2140:
  4347  0B1D                     l2799:
  4348  0B1D  3001               	movlw	1
  4349  0B1E                     u2155:
  4350  0B1E  1003               	clrc
  4351  0B1F  0DA4               	rlf	___lwdiv@quotient^(0+128),f
  4352  0B20  0DA5               	rlf	(___lwdiv@quotient+1)^(0+128),f
  4353  0B21  3EFF               	addlw	-1
  4354  0B22  1D03               	skipz
  4355  0B23  2B1E               	goto	u2155
  4356  0B24  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  4357  0B25  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
  4358  0B26  1D03               	skipz
  4359  0B27  2B2A               	goto	u2165
  4360  0B28  0820               	movf	___lwdiv@divisor^(0+128),w
  4361  0B29  0222               	subwf	___lwdiv@dividend^(0+128),w
  4362  0B2A                     u2165:
  4363  0B2A  1C03               	skipc
  4364  0B2B  2B2D               	goto	u2161
  4365  0B2C  2B2E               	goto	u2160
  4366  0B2D                     u2161:
  4367  0B2D  2B35               	goto	l2805
  4368  0B2E                     u2160:
  4369  0B2E                     l2801:
  4370  0B2E  0820               	movf	___lwdiv@divisor^(0+128),w
  4371  0B2F  02A2               	subwf	___lwdiv@dividend^(0+128),f
  4372  0B30  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  4373  0B31  1C03               	skipc
  4374  0B32  03A3               	decf	(___lwdiv@dividend+1)^(0+128),f
  4375  0B33  02A3               	subwf	(___lwdiv@dividend+1)^(0+128),f
  4376  0B34                     l2803:
  4377  0B34  1424               	bsf	___lwdiv@quotient^(0+128),0
  4378  0B35                     l2805:
  4379  0B35  3001               	movlw	1
  4380  0B36                     u2175:
  4381  0B36  1003               	clrc
  4382  0B37  0CA1               	rrf	(___lwdiv@divisor+1)^(0+128),f
  4383  0B38  0CA0               	rrf	___lwdiv@divisor^(0+128),f
  4384  0B39  3EFF               	addlw	-1
  4385  0B3A  1D03               	skipz
  4386  0B3B  2B36               	goto	u2175
  4387  0B3C                     l2807:
  4388  0B3C  3001               	movlw	1
  4389  0B3D  02A6               	subwf	___lwdiv@counter^(0+128),f
  4390  0B3E  1D03               	btfss	3,2
  4391  0B3F  2B41               	goto	u2181
  4392  0B40  2B42               	goto	u2180
  4393  0B41                     u2181:
  4394  0B41  2B1D               	goto	l2799
  4395  0B42                     u2180:
  4396  0B42                     l2809:
  4397  0B42  0825               	movf	(___lwdiv@quotient+1)^(0+128),w
  4398  0B43  00A1               	movwf	(?___lwdiv+1)^(0+128)
  4399  0B44  0824               	movf	___lwdiv@quotient^(0+128),w
  4400  0B45  00A0               	movwf	?___lwdiv^(0+128)
  4401  0B46                     l1021:
  4402  0B46  0008               	return
  4403  0B47                     __end_of___lwdiv:
  4404                           
  4405                           	psect	text21
  4406  0CEB                     __ptext21:	
  4407 ;; *************** function _EWH_SSD_Update *****************
  4408 ;; Defined at:
  4409 ;;		line 81 in file "DD.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;  temp            2   10[BANK1 ] unsigned short 
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;		None
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  1    wreg      void 
  4416 ;; Registers used:
  4417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4423 ;;      Params:         0       0       2       0       0
  4424 ;;      Locals:         0       0       0       0       0
  4425 ;;      Temps:          0       0       2       0       0
  4426 ;;      Totals:         0       0       4       0       0
  4427 ;;Total ram usage:        4 bytes
  4428 ;; Hardware stack levels used:    1
  4429 ;; Hardware stack levels required when called:    5
  4430 ;; This function calls:
  4431 ;;		_SSD_OFF
  4432 ;;		_SSD_Write
  4433 ;;		___awdiv
  4434 ;;		___lwmod
  4435 ;; This function is called by:
  4436 ;;		_EWH_WakeUP_Mode
  4437 ;;		_EWH_SetTemp_Mode
  4438 ;;		_EWH_Operating_Mode
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           
  4443                           ;psect for function _EWH_SSD_Update
  4444  0CEB                     _EWH_SSD_Update:
  4445  0CEB                     l2873:	
  4446                           ;incstack = 0
  4447                           ; Regs used in _EWH_SSD_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4448                           
  4449                           
  4450                           ;DD.c: 81: void EWH_SSD_Update(uint16_t temp);DD.c: 82: {;DD.c: 83:     SSD_OFF(3);
  4451  0CEB  3003               	movlw	3
  4452  0CEC  120A  118A  27F5  120A  158A  	fcall	_SSD_OFF
  4453                           
  4454                           ;DD.c: 84:     SSD_Write(4,temp%10);
  4455  0CF1  300A               	movlw	10
  4456  0CF2  1683               	bsf	3,5	;RP0=1, select bank1
  4457  0CF3  1303               	bcf	3,6	;RP1=0, select bank1
  4458  0CF4  00A0               	movwf	___lwmod@divisor^(0+128)
  4459  0CF5  3000               	movlw	0
  4460  0CF6  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  4461  0CF7  082B               	movf	(EWH_SSD_Update@temp+1)^(0+128),w
  4462  0CF8  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  4463  0CF9  082A               	movf	EWH_SSD_Update@temp^(0+128),w
  4464  0CFA  00A2               	movwf	___lwmod@dividend^(0+128)
  4465  0CFB  120A  158A  2288  120A  158A  	fcall	___lwmod
  4466  0D00  1683               	bsf	3,5	;RP0=1, select bank1
  4467  0D01  1303               	bcf	3,6	;RP1=0, select bank1
  4468  0D02  0820               	movf	?___lwmod^(0+128),w
  4469  0D03  00FF               	movwf	btemp+1
  4470  0D04  087F               	movf	btemp+1,w
  4471  0D05  00A8               	movwf	SSD_Write@Number^(0+128)
  4472  0D06  3004               	movlw	4
  4473  0D07  120A  158A  2150  120A  158A  	fcall	_SSD_Write
  4474  0D0C                     l2875:
  4475                           
  4476                           ;DD.c: 85:     _delay((unsigned long)((30)*(4000000/4000.0)));
  4477  0D0C  3027               	movlw	39
  4478  0D0D  1683               	bsf	3,5	;RP0=1, select bank1
  4479  0D0E  1303               	bcf	3,6	;RP1=0, select bank1
  4480  0D0F  00AD               	movwf	(??_EWH_SSD_Update^(0+128)+1)
  4481  0D10  30F4               	movlw	244
  4482  0D11  00AC               	movwf	??_EWH_SSD_Update^(0+128)
  4483  0D12                     u3797:
  4484  0D12  0BAC               	decfsz	??_EWH_SSD_Update^(0+128),f
  4485  0D13  2D12               	goto	u3797
  4486  0D14  0BAD               	decfsz	(??_EWH_SSD_Update^(0+128)+1),f
  4487  0D15  2D12               	goto	u3797
  4488  0D16  0000               	nop
  4489  0D17                     l2877:
  4490                           
  4491                           ;DD.c: 86:     SSD_OFF(4);
  4492  0D17  3004               	movlw	4
  4493  0D18  120A  118A  27F5  120A  158A  	fcall	_SSD_OFF
  4494  0D1D                     l2879:
  4495                           
  4496                           ;DD.c: 87:     SSD_Write(3,(uint8_t)temp/10);
  4497  0D1D  300A               	movlw	10
  4498  0D1E  1683               	bsf	3,5	;RP0=1, select bank1
  4499  0D1F  1303               	bcf	3,6	;RP1=0, select bank1
  4500  0D20  00A0               	movwf	___awdiv@divisor^(0+128)
  4501  0D21  3000               	movlw	0
  4502  0D22  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
  4503  0D23  082A               	movf	EWH_SSD_Update@temp^(0+128),w
  4504  0D24  00AC               	movwf	??_EWH_SSD_Update^(0+128)
  4505  0D25  01AD               	clrf	(??_EWH_SSD_Update^(0+128)+1)
  4506  0D26  082C               	movf	??_EWH_SSD_Update^(0+128),w
  4507  0D27  00A2               	movwf	___awdiv@dividend^(0+128)
  4508  0D28  082D               	movf	(??_EWH_SSD_Update+1)^(0+128),w
  4509  0D29  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
  4510  0D2A  120A  158A  25AF  120A  158A  	fcall	___awdiv
  4511  0D2F  1683               	bsf	3,5	;RP0=1, select bank1
  4512  0D30  1303               	bcf	3,6	;RP1=0, select bank1
  4513  0D31  0820               	movf	?___awdiv^(0+128),w
  4514  0D32  00FF               	movwf	btemp+1
  4515  0D33  087F               	movf	btemp+1,w
  4516  0D34  00A8               	movwf	SSD_Write@Number^(0+128)
  4517  0D35  3003               	movlw	3
  4518  0D36  120A  158A  2150  120A  158A  	fcall	_SSD_Write
  4519  0D3B                     l2881:
  4520                           
  4521                           ;DD.c: 88:     _delay((unsigned long)((30)*(4000000/4000.0)));
  4522  0D3B  3027               	movlw	39
  4523  0D3C  1683               	bsf	3,5	;RP0=1, select bank1
  4524  0D3D  1303               	bcf	3,6	;RP1=0, select bank1
  4525  0D3E  00AD               	movwf	(??_EWH_SSD_Update^(0+128)+1)
  4526  0D3F  30F4               	movlw	244
  4527  0D40  00AC               	movwf	??_EWH_SSD_Update^(0+128)
  4528  0D41                     u3807:
  4529  0D41  0BAC               	decfsz	??_EWH_SSD_Update^(0+128),f
  4530  0D42  2D41               	goto	u3807
  4531  0D43  0BAD               	decfsz	(??_EWH_SSD_Update^(0+128)+1),f
  4532  0D44  2D41               	goto	u3807
  4533  0D45  0000               	nop
  4534  0D46                     l298:
  4535  0D46  0008               	return
  4536  0D47                     __end_of_EWH_SSD_Update:
  4537                           
  4538                           	psect	text22
  4539  0A88                     __ptext22:	
  4540 ;; *************** function ___lwmod *****************
  4541 ;; Defined at:
  4542 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;  divisor         2    0[BANK1 ] unsigned int 
  4545 ;;  dividend        2    2[BANK1 ] unsigned int 
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;  counter         1    4[BANK1 ] unsigned char 
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  2    0[BANK1 ] unsigned int 
  4550 ;; Registers used:
  4551 ;;		wreg, status,2, status,0, btemp+1
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4557 ;;      Params:         0       0       4       0       0
  4558 ;;      Locals:         0       0       1       0       0
  4559 ;;      Temps:          0       0       0       0       0
  4560 ;;      Totals:         0       0       5       0       0
  4561 ;;Total ram usage:        5 bytes
  4562 ;; Hardware stack levels used:    1
  4563 ;; Hardware stack levels required when called:    3
  4564 ;; This function calls:
  4565 ;;		Nothing
  4566 ;; This function is called by:
  4567 ;;		_EWH_SSD_Update
  4568 ;;		_Heater_Display
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571                           
  4572                           
  4573                           ;psect for function ___lwmod
  4574  0A88                     ___lwmod:
  4575  0A88                     l2813:	
  4576                           ;incstack = 0
  4577                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  4578                           
  4579  0A88  1683               	bsf	3,5	;RP0=1, select bank1
  4580  0A89  1303               	bcf	3,6	;RP1=0, select bank1
  4581  0A8A  0820               	movf	___lwmod@divisor^(0+128),w
  4582  0A8B  0421               	iorwf	(___lwmod@divisor+1)^(0+128),w
  4583  0A8C  1903               	btfsc	3,2
  4584  0A8D  2A8F               	goto	u2191
  4585  0A8E  2A90               	goto	u2190
  4586  0A8F                     u2191:
  4587  0A8F  2ABF               	goto	l2831
  4588  0A90                     u2190:
  4589  0A90                     l2815:
  4590  0A90  01A4               	clrf	___lwmod@counter^(0+128)
  4591  0A91  0AA4               	incf	___lwmod@counter^(0+128),f
  4592  0A92  2A9E               	goto	l2821
  4593  0A93                     l2817:
  4594  0A93  3001               	movlw	1
  4595  0A94                     u2205:
  4596  0A94  1003               	clrc
  4597  0A95  0DA0               	rlf	___lwmod@divisor^(0+128),f
  4598  0A96  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
  4599  0A97  3EFF               	addlw	-1
  4600  0A98  1D03               	skipz
  4601  0A99  2A94               	goto	u2205
  4602  0A9A                     l2819:
  4603  0A9A  3001               	movlw	1
  4604  0A9B  00FF               	movwf	btemp+1
  4605  0A9C  087F               	movf	btemp+1,w
  4606  0A9D  07A4               	addwf	___lwmod@counter^(0+128),f
  4607  0A9E                     l2821:
  4608  0A9E  1FA1               	btfss	(___lwmod@divisor+1)^(0+128),7
  4609  0A9F  2AA1               	goto	u2211
  4610  0AA0  2AA2               	goto	u2210
  4611  0AA1                     u2211:
  4612  0AA1  2A93               	goto	l2817
  4613  0AA2                     u2210:
  4614  0AA2                     l2823:
  4615  0AA2  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  4616  0AA3  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
  4617  0AA4  1D03               	skipz
  4618  0AA5  2AA8               	goto	u2225
  4619  0AA6  0820               	movf	___lwmod@divisor^(0+128),w
  4620  0AA7  0222               	subwf	___lwmod@dividend^(0+128),w
  4621  0AA8                     u2225:
  4622  0AA8  1C03               	skipc
  4623  0AA9  2AAB               	goto	u2221
  4624  0AAA  2AAC               	goto	u2220
  4625  0AAB                     u2221:
  4626  0AAB  2AB2               	goto	l2827
  4627  0AAC                     u2220:
  4628  0AAC                     l2825:
  4629  0AAC  0820               	movf	___lwmod@divisor^(0+128),w
  4630  0AAD  02A2               	subwf	___lwmod@dividend^(0+128),f
  4631  0AAE  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  4632  0AAF  1C03               	skipc
  4633  0AB0  03A3               	decf	(___lwmod@dividend+1)^(0+128),f
  4634  0AB1  02A3               	subwf	(___lwmod@dividend+1)^(0+128),f
  4635  0AB2                     l2827:
  4636  0AB2  3001               	movlw	1
  4637  0AB3                     u2235:
  4638  0AB3  1003               	clrc
  4639  0AB4  0CA1               	rrf	(___lwmod@divisor+1)^(0+128),f
  4640  0AB5  0CA0               	rrf	___lwmod@divisor^(0+128),f
  4641  0AB6  3EFF               	addlw	-1
  4642  0AB7  1D03               	skipz
  4643  0AB8  2AB3               	goto	u2235
  4644  0AB9                     l2829:
  4645  0AB9  3001               	movlw	1
  4646  0ABA  02A4               	subwf	___lwmod@counter^(0+128),f
  4647  0ABB  1D03               	btfss	3,2
  4648  0ABC  2ABE               	goto	u2241
  4649  0ABD  2ABF               	goto	u2240
  4650  0ABE                     u2241:
  4651  0ABE  2AA2               	goto	l2823
  4652  0ABF                     u2240:
  4653  0ABF                     l2831:
  4654  0ABF  0823               	movf	(___lwmod@dividend+1)^(0+128),w
  4655  0AC0  00A1               	movwf	(?___lwmod+1)^(0+128)
  4656  0AC1  0822               	movf	___lwmod@dividend^(0+128),w
  4657  0AC2  00A0               	movwf	?___lwmod^(0+128)
  4658  0AC3                     l1031:
  4659  0AC3  0008               	return
  4660  0AC4                     __end_of___lwmod:
  4661                           
  4662                           	psect	text23
  4663  0DAF                     __ptext23:	
  4664 ;; *************** function ___awdiv *****************
  4665 ;; Defined at:
  4666 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  4667 ;; Parameters:    Size  Location     Type
  4668 ;;  divisor         2    0[BANK1 ] int 
  4669 ;;  dividend        2    2[BANK1 ] int 
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;  quotient        2    6[BANK1 ] int 
  4672 ;;  sign            1    5[BANK1 ] unsigned char 
  4673 ;;  counter         1    4[BANK1 ] unsigned char 
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  2    0[BANK1 ] int 
  4676 ;; Registers used:
  4677 ;;		wreg, status,2, status,0, btemp+1
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4683 ;;      Params:         0       0       4       0       0
  4684 ;;      Locals:         0       0       4       0       0
  4685 ;;      Temps:          0       0       0       0       0
  4686 ;;      Totals:         0       0       8       0       0
  4687 ;;Total ram usage:        8 bytes
  4688 ;; Hardware stack levels used:    1
  4689 ;; Hardware stack levels required when called:    3
  4690 ;; This function calls:
  4691 ;;		Nothing
  4692 ;; This function is called by:
  4693 ;;		_EWH_SSD_Update
  4694 ;;		_Heater_Display
  4695 ;; This function uses a non-reentrant model
  4696 ;;
  4697                           
  4698                           
  4699                           ;psect for function ___awdiv
  4700  0DAF                     ___awdiv:
  4701  0DAF                     l2743:	
  4702                           ;incstack = 0
  4703                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  4704                           
  4705  0DAF  1683               	bsf	3,5	;RP0=1, select bank1
  4706  0DB0  1303               	bcf	3,6	;RP1=0, select bank1
  4707  0DB1  01A5               	clrf	___awdiv@sign^(0+128)
  4708  0DB2                     l2745:
  4709  0DB2  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  4710  0DB3  2DB5               	goto	u2021
  4711  0DB4  2DB6               	goto	u2020
  4712  0DB5                     u2021:
  4713  0DB5  2DBD               	goto	l2751
  4714  0DB6                     u2020:
  4715  0DB6                     l2747:
  4716  0DB6  09A0               	comf	___awdiv@divisor^(0+128),f
  4717  0DB7  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
  4718  0DB8  0AA0               	incf	___awdiv@divisor^(0+128),f
  4719  0DB9  1903               	skipnz
  4720  0DBA  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
  4721  0DBB                     l2749:
  4722  0DBB  01A5               	clrf	___awdiv@sign^(0+128)
  4723  0DBC  0AA5               	incf	___awdiv@sign^(0+128),f
  4724  0DBD                     l2751:
  4725  0DBD  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
  4726  0DBE  2DC0               	goto	u2031
  4727  0DBF  2DC1               	goto	u2030
  4728  0DC0                     u2031:
  4729  0DC0  2DCA               	goto	l2757
  4730  0DC1                     u2030:
  4731  0DC1                     l2753:
  4732  0DC1  09A2               	comf	___awdiv@dividend^(0+128),f
  4733  0DC2  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
  4734  0DC3  0AA2               	incf	___awdiv@dividend^(0+128),f
  4735  0DC4  1903               	skipnz
  4736  0DC5  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
  4737  0DC6                     l2755:
  4738  0DC6  3001               	movlw	1
  4739  0DC7  00FF               	movwf	btemp+1
  4740  0DC8  087F               	movf	btemp+1,w
  4741  0DC9  06A5               	xorwf	___awdiv@sign^(0+128),f
  4742  0DCA                     l2757:
  4743  0DCA  01A6               	clrf	___awdiv@quotient^(0+128)
  4744  0DCB  01A7               	clrf	(___awdiv@quotient+1)^(0+128)
  4745  0DCC                     l2759:
  4746  0DCC  0820               	movf	___awdiv@divisor^(0+128),w
  4747  0DCD  0421               	iorwf	(___awdiv@divisor+1)^(0+128),w
  4748  0DCE  1903               	btfsc	3,2
  4749  0DCF  2DD1               	goto	u2041
  4750  0DD0  2DD2               	goto	u2040
  4751  0DD1                     u2041:
  4752  0DD1  2E09               	goto	l2779
  4753  0DD2                     u2040:
  4754  0DD2                     l2761:
  4755  0DD2  01A4               	clrf	___awdiv@counter^(0+128)
  4756  0DD3  0AA4               	incf	___awdiv@counter^(0+128),f
  4757  0DD4  2DE0               	goto	l2767
  4758  0DD5                     l2763:
  4759  0DD5  3001               	movlw	1
  4760  0DD6                     u2055:
  4761  0DD6  1003               	clrc
  4762  0DD7  0DA0               	rlf	___awdiv@divisor^(0+128),f
  4763  0DD8  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
  4764  0DD9  3EFF               	addlw	-1
  4765  0DDA  1D03               	skipz
  4766  0DDB  2DD6               	goto	u2055
  4767  0DDC                     l2765:
  4768  0DDC  3001               	movlw	1
  4769  0DDD  00FF               	movwf	btemp+1
  4770  0DDE  087F               	movf	btemp+1,w
  4771  0DDF  07A4               	addwf	___awdiv@counter^(0+128),f
  4772  0DE0                     l2767:
  4773  0DE0  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  4774  0DE1  2DE3               	goto	u2061
  4775  0DE2  2DE4               	goto	u2060
  4776  0DE3                     u2061:
  4777  0DE3  2DD5               	goto	l2763
  4778  0DE4                     u2060:
  4779  0DE4                     l2769:
  4780  0DE4  3001               	movlw	1
  4781  0DE5                     u2075:
  4782  0DE5  1003               	clrc
  4783  0DE6  0DA6               	rlf	___awdiv@quotient^(0+128),f
  4784  0DE7  0DA7               	rlf	(___awdiv@quotient+1)^(0+128),f
  4785  0DE8  3EFF               	addlw	-1
  4786  0DE9  1D03               	skipz
  4787  0DEA  2DE5               	goto	u2075
  4788  0DEB  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  4789  0DEC  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
  4790  0DED  1D03               	skipz
  4791  0DEE  2DF1               	goto	u2085
  4792  0DEF  0820               	movf	___awdiv@divisor^(0+128),w
  4793  0DF0  0222               	subwf	___awdiv@dividend^(0+128),w
  4794  0DF1                     u2085:
  4795  0DF1  1C03               	skipc
  4796  0DF2  2DF4               	goto	u2081
  4797  0DF3  2DF5               	goto	u2080
  4798  0DF4                     u2081:
  4799  0DF4  2DFC               	goto	l2775
  4800  0DF5                     u2080:
  4801  0DF5                     l2771:
  4802  0DF5  0820               	movf	___awdiv@divisor^(0+128),w
  4803  0DF6  02A2               	subwf	___awdiv@dividend^(0+128),f
  4804  0DF7  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  4805  0DF8  1C03               	skipc
  4806  0DF9  03A3               	decf	(___awdiv@dividend+1)^(0+128),f
  4807  0DFA  02A3               	subwf	(___awdiv@dividend+1)^(0+128),f
  4808  0DFB                     l2773:
  4809  0DFB  1426               	bsf	___awdiv@quotient^(0+128),0
  4810  0DFC                     l2775:
  4811  0DFC  3001               	movlw	1
  4812  0DFD                     u2095:
  4813  0DFD  1003               	clrc
  4814  0DFE  0CA1               	rrf	(___awdiv@divisor+1)^(0+128),f
  4815  0DFF  0CA0               	rrf	___awdiv@divisor^(0+128),f
  4816  0E00  3EFF               	addlw	-1
  4817  0E01  1D03               	skipz
  4818  0E02  2DFD               	goto	u2095
  4819  0E03                     l2777:
  4820  0E03  3001               	movlw	1
  4821  0E04  02A4               	subwf	___awdiv@counter^(0+128),f
  4822  0E05  1D03               	btfss	3,2
  4823  0E06  2E08               	goto	u2101
  4824  0E07  2E09               	goto	u2100
  4825  0E08                     u2101:
  4826  0E08  2DE4               	goto	l2769
  4827  0E09                     u2100:
  4828  0E09                     l2779:
  4829  0E09  0825               	movf	___awdiv@sign^(0+128),w
  4830  0E0A  1903               	btfsc	3,2
  4831  0E0B  2E0D               	goto	u2111
  4832  0E0C  2E0E               	goto	u2110
  4833  0E0D                     u2111:
  4834  0E0D  2E13               	goto	l2783
  4835  0E0E                     u2110:
  4836  0E0E                     l2781:
  4837  0E0E  09A6               	comf	___awdiv@quotient^(0+128),f
  4838  0E0F  09A7               	comf	(___awdiv@quotient+1)^(0+128),f
  4839  0E10  0AA6               	incf	___awdiv@quotient^(0+128),f
  4840  0E11  1903               	skipnz
  4841  0E12  0AA7               	incf	(___awdiv@quotient+1)^(0+128),f
  4842  0E13                     l2783:
  4843  0E13  0827               	movf	(___awdiv@quotient+1)^(0+128),w
  4844  0E14  00A1               	movwf	(?___awdiv+1)^(0+128)
  4845  0E15  0826               	movf	___awdiv@quotient^(0+128),w
  4846  0E16  00A0               	movwf	?___awdiv^(0+128)
  4847  0E17                     l902:
  4848  0E17  0008               	return
  4849  0E18                     __end_of___awdiv:
  4850                           
  4851                           	psect	text24
  4852  0950                     __ptext24:	
  4853 ;; *************** function _SSD_Write *****************
  4854 ;; Defined at:
  4855 ;;		line 35 in file "SSD.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;  ID              1    wreg     unsigned char 
  4858 ;;  Number          1    8[BANK1 ] unsigned char 
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;  ID              1    9[BANK1 ] unsigned char 
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  1    wreg      unsigned char 
  4863 ;; Registers used:
  4864 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4870 ;;      Params:         0       0       1       0       0
  4871 ;;      Locals:         0       0       1       0       0
  4872 ;;      Temps:          0       0       0       0       0
  4873 ;;      Totals:         0       0       2       0       0
  4874 ;;Total ram usage:        2 bytes
  4875 ;; Hardware stack levels used:    1
  4876 ;; Hardware stack levels required when called:    4
  4877 ;; This function calls:
  4878 ;;		_SSD_config
  4879 ;; This function is called by:
  4880 ;;		_EWH_SSD_Update
  4881 ;;		_Heater_Display
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           
  4885                           
  4886                           ;psect for function _SSD_Write
  4887  0950                     _SSD_Write:
  4888                           
  4889                           ;incstack = 0
  4890                           ; Regs used in _SSD_Write: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4891                           ;SSD_Write@ID stored from wreg
  4892  0950  1683               	bsf	3,5	;RP0=1, select bank1
  4893  0951  1303               	bcf	3,6	;RP1=0, select bank1
  4894  0952  00A9               	movwf	SSD_Write@ID^(0+128)
  4895  0953                     l2731:
  4896                           
  4897                           ;SSD.c: 35: Std_ReturnType SSD_Write(SSD_ID ID ,SSD_Number Number);SSD.c: 36: {;SSD.c: 3
      +                          8:     SSD_config(ID,ON);
  4898  0953  01A0               	clrf	SSD_config@SSD_state^(0+128)
  4899  0954  0AA0               	incf	SSD_config@SSD_state^(0+128),f
  4900  0955  0829               	movf	SSD_Write@ID^(0+128),w
  4901  0956  120A  158A  2618  120A  158A  	fcall	_SSD_config
  4902  095B                     l2733:
  4903                           
  4904                           ;SSD.c: 40:     ((TRISD)=(0u));
  4905  095B  1683               	bsf	3,5	;RP0=1, select bank1
  4906  095C  1303               	bcf	3,6	;RP1=0, select bank1
  4907  095D  0188               	clrf	8	;volatile
  4908  095E                     l2735:
  4909                           
  4910                           ;SSD.c: 42:     if((Number>=0) && (Number<=9))
  4911  095E  300A               	movlw	10
  4912  095F  0228               	subwf	SSD_Write@Number^(0+128),w
  4913  0960  1803               	skipnc
  4914  0961  2963               	goto	u2011
  4915  0962  2964               	goto	u2010
  4916  0963                     u2011:
  4917  0963  296C               	goto	l653
  4918  0964                     u2010:
  4919  0964                     l2737:
  4920                           
  4921                           ;SSD.c: 43:     {;SSD.c: 45:         ((PORTD)=(SSD_code[Number]));
  4922  0964  0828               	movf	SSD_Write@Number^(0+128),w
  4923  0965  3ED9               	addlw	(low (_SSD_code| 0))& (0+255)
  4924  0966  0084               	movwf	4
  4925  0967  1383               	bcf	3,7	;select IRP bank1
  4926  0968  0800               	movf	0,w
  4927  0969  1283               	bcf	3,5	;RP0=0, select bank0
  4928  096A  1303               	bcf	3,6	;RP1=0, select bank0
  4929  096B  0088               	movwf	8	;volatile
  4930  096C                     l653:
  4931  096C  0008               	return
  4932  096D                     __end_of_SSD_Write:
  4933                           
  4934                           	psect	text25
  4935  07F5                     __ptext25:	
  4936 ;; *************** function _SSD_OFF *****************
  4937 ;; Defined at:
  4938 ;;		line 65 in file "SSD.c"
  4939 ;; Parameters:    Size  Location     Type
  4940 ;;  ID              1    wreg     unsigned char 
  4941 ;; Auto vars:     Size  Location     Type
  4942 ;;  ID              1    4[BANK1 ] unsigned char 
  4943 ;; Return value:  Size  Location     Type
  4944 ;;                  1    wreg      void 
  4945 ;; Registers used:
  4946 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4947 ;; Tracked objects:
  4948 ;;		On entry : 0/0
  4949 ;;		On exit  : 0/0
  4950 ;;		Unchanged: 0/0
  4951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4952 ;;      Params:         0       0       0       0       0
  4953 ;;      Locals:         0       0       1       0       0
  4954 ;;      Temps:          0       0       0       0       0
  4955 ;;      Totals:         0       0       1       0       0
  4956 ;;Total ram usage:        1 bytes
  4957 ;; Hardware stack levels used:    1
  4958 ;; Hardware stack levels required when called:    4
  4959 ;; This function calls:
  4960 ;;		_SSD_config
  4961 ;; This function is called by:
  4962 ;;		_EWH_SSD_OFF
  4963 ;;		_EWH_SSD_Update
  4964 ;; This function uses a non-reentrant model
  4965 ;;
  4966                           
  4967                           
  4968                           ;psect for function _SSD_OFF
  4969  07F5                     _SSD_OFF:
  4970                           
  4971                           ;incstack = 0
  4972                           ; Regs used in _SSD_OFF: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4973                           ;SSD_OFF@ID stored from wreg
  4974  07F5  1683               	bsf	3,5	;RP0=1, select bank1
  4975  07F6  1303               	bcf	3,6	;RP1=0, select bank1
  4976  07F7  00A4               	movwf	SSD_OFF@ID^(0+128)
  4977  07F8                     l2729:
  4978                           
  4979                           ;SSD.c: 65: void SSD_OFF (SSD_ID ID);SSD.c: 66: {;SSD.c: 67:     SSD_config(ID,OFF);
  4980  07F8  01A0               	clrf	SSD_config@SSD_state^(0+128)
  4981  07F9  0824               	movf	SSD_OFF@ID^(0+128),w
  4982  07FA  120A  158A  2618  120A  118A  	fcall	_SSD_config
  4983  07FF                     l660:
  4984  07FF  0008               	return
  4985  0800                     __end_of_SSD_OFF:
  4986                           
  4987                           	psect	text26
  4988  0E18                     __ptext26:	
  4989 ;; *************** function _SSD_config *****************
  4990 ;; Defined at:
  4991 ;;		line 11 in file "SSD.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;  ID              1    wreg     unsigned char 
  4994 ;;  SSD_state       1    0[BANK1 ] enum E13
  4995 ;; Auto vars:     Size  Location     Type
  4996 ;;  ID              1    3[BANK1 ] unsigned char 
  4997 ;; Return value:  Size  Location     Type
  4998 ;;                  1    wreg      void 
  4999 ;; Registers used:
  5000 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5001 ;; Tracked objects:
  5002 ;;		On entry : 0/0
  5003 ;;		On exit  : 0/0
  5004 ;;		Unchanged: 0/0
  5005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5006 ;;      Params:         0       0       1       0       0
  5007 ;;      Locals:         0       0       1       0       0
  5008 ;;      Temps:          0       0       2       0       0
  5009 ;;      Totals:         0       0       4       0       0
  5010 ;;Total ram usage:        4 bytes
  5011 ;; Hardware stack levels used:    1
  5012 ;; Hardware stack levels required when called:    3
  5013 ;; This function calls:
  5014 ;;		Nothing
  5015 ;; This function is called by:
  5016 ;;		_SSD_Write
  5017 ;;		_SSD_OFF
  5018 ;;		_Heater_Display
  5019 ;;		_SSD_ON
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023                           
  5024                           ;psect for function _SSD_config
  5025  0E18                     _SSD_config:
  5026                           
  5027                           ;incstack = 0
  5028                           ; Regs used in _SSD_config: [wreg-fsr0h+status,2+status,0+btemp+1]
  5029                           ;SSD_config@ID stored from wreg
  5030  0E18  1683               	bsf	3,5	;RP0=1, select bank1
  5031  0E19  1303               	bcf	3,6	;RP1=0, select bank1
  5032  0E1A  00A3               	movwf	SSD_config@ID^(0+128)
  5033  0E1B                     l2657:
  5034                           
  5035                           ;SSD.c: 11: static void SSD_config (SSD_ID ID ,tState SSD_state);SSD.c: 12: {;SSD.c: 15:
      +                               switch(ID)
  5036  0E1B  2E6C               	goto	l2701
  5037  0E1C                     l2661:
  5038  0E1C  30FB               	movlw	251
  5039  0E1D  00FF               	movwf	btemp+1
  5040  0E1E  087F               	movf	btemp+1,w
  5041  0E1F  0585               	andwf	5,f	;volatile
  5042  0E20                     l2663:
  5043                           
  5044                           ;SSD.c: 19:             (SSD_state)?(PORTA |= (1<<2)) : (PORTA &= ~(1<<2));
  5045  0E20  0820               	movf	SSD_config@SSD_state^(0+128),w
  5046  0E21  1903               	btfsc	3,2
  5047  0E22  2E24               	goto	u1921
  5048  0E23  2E25               	goto	u1920
  5049  0E24                     u1921:
  5050  0E24  2E29               	goto	l2667
  5051  0E25                     u1920:
  5052  0E25                     l2665:
  5053  0E25  1283               	bcf	3,5	;RP0=0, select bank0
  5054  0E26  1303               	bcf	3,6	;RP1=0, select bank0
  5055  0E27  1505               	bsf	5,2	;volatile
  5056  0E28  2E82               	goto	l649
  5057  0E29                     l2667:
  5058  0E29  30FB               	movlw	251
  5059  0E2A  00FF               	movwf	btemp+1
  5060  0E2B  087F               	movf	btemp+1,w
  5061  0E2C  1283               	bcf	3,5	;RP0=0, select bank0
  5062  0E2D  1303               	bcf	3,6	;RP1=0, select bank0
  5063  0E2E  0585               	andwf	5,f	;volatile
  5064  0E2F  2E82               	goto	l649
  5065  0E30                     l2671:
  5066  0E30  30F7               	movlw	247
  5067  0E31  00FF               	movwf	btemp+1
  5068  0E32  087F               	movf	btemp+1,w
  5069  0E33  0585               	andwf	5,f	;volatile
  5070  0E34                     l2673:
  5071                           
  5072                           ;SSD.c: 23:             (SSD_state)?(PORTA |= (1<<3)) : (PORTA &= ~(1<<3));
  5073  0E34  0820               	movf	SSD_config@SSD_state^(0+128),w
  5074  0E35  1903               	btfsc	3,2
  5075  0E36  2E38               	goto	u1931
  5076  0E37  2E39               	goto	u1930
  5077  0E38                     u1931:
  5078  0E38  2E3D               	goto	l2677
  5079  0E39                     u1930:
  5080  0E39                     l2675:
  5081  0E39  1283               	bcf	3,5	;RP0=0, select bank0
  5082  0E3A  1303               	bcf	3,6	;RP1=0, select bank0
  5083  0E3B  1585               	bsf	5,3	;volatile
  5084  0E3C  2E82               	goto	l649
  5085  0E3D                     l2677:
  5086  0E3D  30F7               	movlw	247
  5087  0E3E  00FF               	movwf	btemp+1
  5088  0E3F  087F               	movf	btemp+1,w
  5089  0E40  1283               	bcf	3,5	;RP0=0, select bank0
  5090  0E41  1303               	bcf	3,6	;RP1=0, select bank0
  5091  0E42  0585               	andwf	5,f	;volatile
  5092  0E43  2E82               	goto	l649
  5093  0E44                     l2681:
  5094  0E44  30EF               	movlw	239
  5095  0E45  00FF               	movwf	btemp+1
  5096  0E46  087F               	movf	btemp+1,w
  5097  0E47  0585               	andwf	5,f	;volatile
  5098  0E48                     l2683:
  5099                           
  5100                           ;SSD.c: 27:             (SSD_state)?(PORTA |= (1<<4)) : (PORTA &= ~(1<<4));
  5101  0E48  0820               	movf	SSD_config@SSD_state^(0+128),w
  5102  0E49  1903               	btfsc	3,2
  5103  0E4A  2E4C               	goto	u1941
  5104  0E4B  2E4D               	goto	u1940
  5105  0E4C                     u1941:
  5106  0E4C  2E51               	goto	l2687
  5107  0E4D                     u1940:
  5108  0E4D                     l2685:
  5109  0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  5110  0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  5111  0E4F  1605               	bsf	5,4	;volatile
  5112  0E50  2E82               	goto	l649
  5113  0E51                     l2687:
  5114  0E51  30EF               	movlw	239
  5115  0E52  00FF               	movwf	btemp+1
  5116  0E53  087F               	movf	btemp+1,w
  5117  0E54  1283               	bcf	3,5	;RP0=0, select bank0
  5118  0E55  1303               	bcf	3,6	;RP1=0, select bank0
  5119  0E56  0585               	andwf	5,f	;volatile
  5120  0E57  2E82               	goto	l649
  5121  0E58                     l2691:
  5122  0E58  30DF               	movlw	223
  5123  0E59  00FF               	movwf	btemp+1
  5124  0E5A  087F               	movf	btemp+1,w
  5125  0E5B  0585               	andwf	5,f	;volatile
  5126  0E5C                     l2693:
  5127                           
  5128                           ;SSD.c: 31:             (SSD_state)?(PORTA |= (1<<5)) : (PORTA &= ~(1<<5));
  5129  0E5C  0820               	movf	SSD_config@SSD_state^(0+128),w
  5130  0E5D  1903               	btfsc	3,2
  5131  0E5E  2E60               	goto	u1951
  5132  0E5F  2E61               	goto	u1950
  5133  0E60                     u1951:
  5134  0E60  2E65               	goto	l2697
  5135  0E61                     u1950:
  5136  0E61                     l2695:
  5137  0E61  1283               	bcf	3,5	;RP0=0, select bank0
  5138  0E62  1303               	bcf	3,6	;RP1=0, select bank0
  5139  0E63  1685               	bsf	5,5	;volatile
  5140  0E64  2E82               	goto	l649
  5141  0E65                     l2697:
  5142  0E65  30DF               	movlw	223
  5143  0E66  00FF               	movwf	btemp+1
  5144  0E67  087F               	movf	btemp+1,w
  5145  0E68  1283               	bcf	3,5	;RP0=0, select bank0
  5146  0E69  1303               	bcf	3,6	;RP1=0, select bank0
  5147  0E6A  0585               	andwf	5,f	;volatile
  5148  0E6B  2E82               	goto	l649
  5149  0E6C                     l2701:
  5150  0E6C  0823               	movf	SSD_config@ID^(0+128),w
  5151  0E6D  00A1               	movwf	??_SSD_config^(0+128)
  5152  0E6E  01A2               	clrf	(??_SSD_config^(0+128)+1)
  5153                           
  5154                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5155                           ; Switch size 1, requested type "simple"
  5156                           ; Number of cases is 1, Range of values is 0 to 0
  5157                           ; switch strategies available:
  5158                           ; Name         Instructions Cycles
  5159                           ; simple_byte            4     3 (average)
  5160                           ; direct_byte           11     8 (fixed)
  5161                           ; jumptable            260     6 (fixed)
  5162                           ;	Chosen strategy is simple_byte
  5163  0E6F  0822               	movf	(??_SSD_config+1)^(0+128),w
  5164  0E70  3A00               	xorlw	0	; case 0
  5165  0E71  1903               	skipnz
  5166  0E72  2E74               	goto	l3933
  5167  0E73  2E82               	goto	l649
  5168  0E74                     l3933:
  5169                           
  5170                           ; Switch size 1, requested type "simple"
  5171                           ; Number of cases is 4, Range of values is 2 to 5
  5172                           ; switch strategies available:
  5173                           ; Name         Instructions Cycles
  5174                           ; simple_byte           13     7 (average)
  5175                           ; direct_byte           23    11 (fixed)
  5176                           ; jumptable            263     9 (fixed)
  5177                           ;	Chosen strategy is simple_byte
  5178  0E74  0821               	movf	??_SSD_config^(0+128),w
  5179  0E75  3A02               	xorlw	2	; case 2
  5180  0E76  1903               	skipnz
  5181  0E77  2E1C               	goto	l2661
  5182  0E78  3A01               	xorlw	1	; case 3
  5183  0E79  1903               	skipnz
  5184  0E7A  2E30               	goto	l2671
  5185  0E7B  3A07               	xorlw	7	; case 4
  5186  0E7C  1903               	skipnz
  5187  0E7D  2E44               	goto	l2681
  5188  0E7E  3A01               	xorlw	1	; case 5
  5189  0E7F  1903               	skipnz
  5190  0E80  2E58               	goto	l2691
  5191  0E81  2E82               	goto	l649
  5192  0E82                     l649:
  5193  0E82  0008               	return
  5194  0E83                     __end_of_SSD_config:
  5195                           
  5196                           	psect	text27
  5197  0BDB                     __ptext27:	
  5198 ;; *************** function _DD_SetState *****************
  5199 ;; Defined at:
  5200 ;;		line 29 in file "DD.c"
  5201 ;; Parameters:    Size  Location     Type
  5202 ;;  device          1    wreg     enum E884
  5203 ;;  state           1    0[BANK1 ] enum E13
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;  device          1    3[BANK1 ] enum E884
  5206 ;; Return value:  Size  Location     Type
  5207 ;;                  1    wreg      void 
  5208 ;; Registers used:
  5209 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5210 ;; Tracked objects:
  5211 ;;		On entry : 0/0
  5212 ;;		On exit  : 0/0
  5213 ;;		Unchanged: 0/0
  5214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5215 ;;      Params:         0       0       1       0       0
  5216 ;;      Locals:         0       0       1       0       0
  5217 ;;      Temps:          0       0       2       0       0
  5218 ;;      Totals:         0       0       4       0       0
  5219 ;;Total ram usage:        4 bytes
  5220 ;; Hardware stack levels used:    1
  5221 ;; Hardware stack levels required when called:    3
  5222 ;; This function calls:
  5223 ;;		Nothing
  5224 ;; This function is called by:
  5225 ;;		_EWH_Sleep_Mode
  5226 ;;		_EWH_SetTemp_Mode
  5227 ;;		_EWH_Operating_Mode
  5228 ;; This function uses a non-reentrant model
  5229 ;;
  5230                           
  5231                           
  5232                           ;psect for function _DD_SetState
  5233  0BDB                     _DD_SetState:
  5234                           
  5235                           ;incstack = 0
  5236                           ; Regs used in _DD_SetState: [wreg-fsr0h+status,2+status,0+btemp+1]
  5237                           ;DD_SetState@device stored from wreg
  5238  0BDB  1683               	bsf	3,5	;RP0=1, select bank1
  5239  0BDC  1303               	bcf	3,6	;RP1=0, select bank1
  5240  0BDD  00A3               	movwf	DD_SetState@device^(0+128)
  5241  0BDE                     l2835:
  5242                           
  5243                           ;DD.c: 29: void DD_SetState(tDD device ,tState state);DD.c: 30: {;DD.c: 31:     switch(d
      +                          evice)
  5244  0BDE  2C21               	goto	l2863
  5245  0BDF                     l2837:
  5246                           
  5247                           ;DD.c: 34:             (state)?(PORTC |= (1<<5)) : (PORTC &= ~(1<<5));
  5248  0BDF  0820               	movf	DD_SetState@state^(0+128),w
  5249  0BE0  1903               	btfsc	3,2
  5250  0BE1  2BE3               	goto	u2251
  5251  0BE2  2BE4               	goto	u2250
  5252  0BE3                     u2251:
  5253  0BE3  2BE8               	goto	l2841
  5254  0BE4                     u2250:
  5255  0BE4                     l2839:
  5256  0BE4  1283               	bcf	3,5	;RP0=0, select bank0
  5257  0BE5  1303               	bcf	3,6	;RP1=0, select bank0
  5258  0BE6  1687               	bsf	7,5	;volatile
  5259  0BE7  2BEE               	goto	l2843
  5260  0BE8                     l2841:
  5261  0BE8  30DF               	movlw	223
  5262  0BE9  00FF               	movwf	btemp+1
  5263  0BEA  087F               	movf	btemp+1,w
  5264  0BEB  1283               	bcf	3,5	;RP0=0, select bank0
  5265  0BEC  1303               	bcf	3,6	;RP1=0, select bank0
  5266  0BED  0587               	andwf	7,f	;volatile
  5267  0BEE                     l2843:
  5268                           
  5269                           ;DD.c: 35:             Devices_State.HEATER_State=state;
  5270  0BEE  1683               	bsf	3,5	;RP0=1, select bank1
  5271  0BEF  1303               	bcf	3,6	;RP1=0, select bank1
  5272  0BF0  0820               	movf	DD_SetState@state^(0+128),w
  5273  0BF1  00FF               	movwf	btemp+1
  5274  0BF2  087F               	movf	btemp+1,w
  5275  0BF3  00C5               	movwf	_Devices_State^(0+128)
  5276                           
  5277                           ;DD.c: 36:             break;
  5278  0BF4  2C34               	goto	l280
  5279  0BF5                     l2845:
  5280                           
  5281                           ;DD.c: 38:             (state)?(PORTC |= (1<<2)) : (PORTC &= ~(1<<2));
  5282  0BF5  0820               	movf	DD_SetState@state^(0+128),w
  5283  0BF6  1903               	btfsc	3,2
  5284  0BF7  2BF9               	goto	u2261
  5285  0BF8  2BFA               	goto	u2260
  5286  0BF9                     u2261:
  5287  0BF9  2BFE               	goto	l2849
  5288  0BFA                     u2260:
  5289  0BFA                     l2847:
  5290  0BFA  1283               	bcf	3,5	;RP0=0, select bank0
  5291  0BFB  1303               	bcf	3,6	;RP1=0, select bank0
  5292  0BFC  1507               	bsf	7,2	;volatile
  5293  0BFD  2C04               	goto	l2851
  5294  0BFE                     l2849:
  5295  0BFE  30FB               	movlw	251
  5296  0BFF  00FF               	movwf	btemp+1
  5297  0C00  087F               	movf	btemp+1,w
  5298  0C01  1283               	bcf	3,5	;RP0=0, select bank0
  5299  0C02  1303               	bcf	3,6	;RP1=0, select bank0
  5300  0C03  0587               	andwf	7,f	;volatile
  5301  0C04                     l2851:
  5302                           
  5303                           ;DD.c: 39:             Devices_State.COOLER_State=state;
  5304  0C04  1683               	bsf	3,5	;RP0=1, select bank1
  5305  0C05  1303               	bcf	3,6	;RP1=0, select bank1
  5306  0C06  0820               	movf	DD_SetState@state^(0+128),w
  5307  0C07  00FF               	movwf	btemp+1
  5308  0C08  087F               	movf	btemp+1,w
  5309  0C09  00C7               	movwf	(_Devices_State^(0+128)+2)
  5310                           
  5311                           ;DD.c: 40:             break;
  5312  0C0A  2C34               	goto	l280
  5313  0C0B                     l2853:
  5314                           
  5315                           ;DD.c: 42:             (state)?(PORTB |= (1<<7)) : (PORTB &= ~(1<<7));
  5316  0C0B  0820               	movf	DD_SetState@state^(0+128),w
  5317  0C0C  1903               	btfsc	3,2
  5318  0C0D  2C0F               	goto	u2271
  5319  0C0E  2C10               	goto	u2270
  5320  0C0F                     u2271:
  5321  0C0F  2C14               	goto	l2857
  5322  0C10                     u2270:
  5323  0C10                     l2855:
  5324  0C10  1283               	bcf	3,5	;RP0=0, select bank0
  5325  0C11  1303               	bcf	3,6	;RP1=0, select bank0
  5326  0C12  1786               	bsf	6,7	;volatile
  5327  0C13  2C1A               	goto	l2859
  5328  0C14                     l2857:
  5329  0C14  307F               	movlw	127
  5330  0C15  00FF               	movwf	btemp+1
  5331  0C16  087F               	movf	btemp+1,w
  5332  0C17  1283               	bcf	3,5	;RP0=0, select bank0
  5333  0C18  1303               	bcf	3,6	;RP1=0, select bank0
  5334  0C19  0586               	andwf	6,f	;volatile
  5335  0C1A                     l2859:
  5336                           
  5337                           ;DD.c: 43:             Devices_State.HEATER_LED_State=state;
  5338  0C1A  1683               	bsf	3,5	;RP0=1, select bank1
  5339  0C1B  1303               	bcf	3,6	;RP1=0, select bank1
  5340  0C1C  0820               	movf	DD_SetState@state^(0+128),w
  5341  0C1D  00FF               	movwf	btemp+1
  5342  0C1E  087F               	movf	btemp+1,w
  5343  0C1F  00C6               	movwf	(_Devices_State^(0+128)+1)
  5344                           
  5345                           ;DD.c: 44:             break;
  5346  0C20  2C34               	goto	l280
  5347  0C21                     l2863:
  5348  0C21  0823               	movf	DD_SetState@device^(0+128),w
  5349  0C22  00A1               	movwf	??_DD_SetState^(0+128)
  5350  0C23  01A2               	clrf	(??_DD_SetState^(0+128)+1)
  5351                           
  5352                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5353                           ; Switch size 1, requested type "simple"
  5354                           ; Number of cases is 1, Range of values is 0 to 0
  5355                           ; switch strategies available:
  5356                           ; Name         Instructions Cycles
  5357                           ; simple_byte            4     3 (average)
  5358                           ; direct_byte           11     8 (fixed)
  5359                           ; jumptable            260     6 (fixed)
  5360                           ;	Chosen strategy is simple_byte
  5361  0C24  0822               	movf	(??_DD_SetState+1)^(0+128),w
  5362  0C25  3A00               	xorlw	0	; case 0
  5363  0C26  1903               	skipnz
  5364  0C27  2C29               	goto	l3935
  5365  0C28  2C34               	goto	l280
  5366  0C29                     l3935:
  5367                           
  5368                           ; Switch size 1, requested type "simple"
  5369                           ; Number of cases is 3, Range of values is 0 to 2
  5370                           ; switch strategies available:
  5371                           ; Name         Instructions Cycles
  5372                           ; simple_byte           10     6 (average)
  5373                           ; direct_byte           17     8 (fixed)
  5374                           ; jumptable            260     6 (fixed)
  5375                           ;	Chosen strategy is simple_byte
  5376  0C29  0821               	movf	??_DD_SetState^(0+128),w
  5377  0C2A  3A00               	xorlw	0	; case 0
  5378  0C2B  1903               	skipnz
  5379  0C2C  2BDF               	goto	l2837
  5380  0C2D  3A01               	xorlw	1	; case 1
  5381  0C2E  1903               	skipnz
  5382  0C2F  2BF5               	goto	l2845
  5383  0C30  3A03               	xorlw	3	; case 2
  5384  0C31  1903               	skipnz
  5385  0C32  2C0B               	goto	l2853
  5386  0C33  2C34               	goto	l280
  5387  0C34                     l280:
  5388  0C34  0008               	return
  5389  0C35                     __end_of_DD_SetState:
  5390                           
  5391                           	psect	text28
  5392  08EF                     __ptext28:	
  5393 ;; *************** function _EWH_EEPROM_Init *****************
  5394 ;; Defined at:
  5395 ;;		line 213 in file "EWH.c"
  5396 ;; Parameters:    Size  Location     Type
  5397 ;;		None
  5398 ;; Auto vars:     Size  Location     Type
  5399 ;;		None
  5400 ;; Return value:  Size  Location     Type
  5401 ;;                  1    wreg      void 
  5402 ;; Registers used:
  5403 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5404 ;; Tracked objects:
  5405 ;;		On entry : 0/0
  5406 ;;		On exit  : 0/0
  5407 ;;		Unchanged: 0/0
  5408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5409 ;;      Params:         0       0       0       0       0
  5410 ;;      Locals:         0       0       0       0       0
  5411 ;;      Temps:          0       0       0       0       0
  5412 ;;      Totals:         0       0       0       0       0
  5413 ;;Total ram usage:        0 bytes
  5414 ;; Hardware stack levels used:    1
  5415 ;; Hardware stack levels required when called:    6
  5416 ;; This function calls:
  5417 ;;		_EEPROM_WriteByte
  5418 ;; This function is called by:
  5419 ;;		_main
  5420 ;; This function uses a non-reentrant model
  5421 ;;
  5422                           
  5423                           
  5424                           ;psect for function _EWH_EEPROM_Init
  5425  08EF                     _EWH_EEPROM_Init:
  5426  08EF                     l3099:	
  5427                           ;incstack = 0
  5428                           ; Regs used in _EWH_EEPROM_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5429                           
  5430                           
  5431                           ;EWH.c: 215:     EEPROM_WriteByte(0x0020,60);
  5432  08EF  3020               	movlw	32
  5433  08F0  1683               	bsf	3,5	;RP0=1, select bank1
  5434  08F1  1303               	bcf	3,6	;RP1=0, select bank1
  5435  08F2  00A1               	movwf	EEPROM_WriteByte@address^(0+128)
  5436  08F3  3000               	movlw	0
  5437  08F4  00A2               	movwf	(EEPROM_WriteByte@address^(0+128)+1)
  5438  08F5  303C               	movlw	60
  5439  08F6  00FF               	movwf	btemp+1
  5440  08F7  087F               	movf	btemp+1,w
  5441  08F8  00A3               	movwf	EEPROM_WriteByte@data^(0+128)
  5442  08F9  120A  158A  224D  120A  158A  	fcall	_EEPROM_WriteByte
  5443  08FE                     l561:
  5444  08FE  0008               	return
  5445  08FF                     __end_of_EWH_EEPROM_Init:
  5446                           
  5447                           	psect	text29
  5448  0A4D                     __ptext29:	
  5449 ;; *************** function _EEPROM_WriteByte *****************
  5450 ;; Defined at:
  5451 ;;		line 4 in file "EEPROM.c"
  5452 ;; Parameters:    Size  Location     Type
  5453 ;;  address         2    1[BANK1 ] unsigned short 
  5454 ;;  data            1    3[BANK1 ] unsigned char 
  5455 ;; Auto vars:     Size  Location     Type
  5456 ;;		None
  5457 ;; Return value:  Size  Location     Type
  5458 ;;                  1    wreg      void 
  5459 ;; Registers used:
  5460 ;;		wreg, status,2, status,0, pclath, cstack
  5461 ;; Tracked objects:
  5462 ;;		On entry : 0/0
  5463 ;;		On exit  : 0/0
  5464 ;;		Unchanged: 0/0
  5465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5466 ;;      Params:         0       0       3       0       0
  5467 ;;      Locals:         0       0       0       0       0
  5468 ;;      Temps:          0       0       2       0       0
  5469 ;;      Totals:         0       0       5       0       0
  5470 ;;Total ram usage:        5 bytes
  5471 ;; Hardware stack levels used:    1
  5472 ;; Hardware stack levels required when called:    5
  5473 ;; This function calls:
  5474 ;;		_I2C_Master_Send_RepeatedStart
  5475 ;;		_I2C_Master_Send_Start
  5476 ;;		_I2C_Master_Send_Stop
  5477 ;;		_I2C_Master_WriteByte
  5478 ;; This function is called by:
  5479 ;;		_EWH_EEPROM_Init
  5480 ;;		_EWH_EEPROM_Update
  5481 ;; This function uses a non-reentrant model
  5482 ;;
  5483                           
  5484                           
  5485                           ;psect for function _EEPROM_WriteByte
  5486  0A4D                     _EEPROM_WriteByte:
  5487  0A4D                     l2709:	
  5488                           ;incstack = 0
  5489                           ; Regs used in _EEPROM_WriteByte: [wreg+status,2+status,0+pclath+cstack]
  5490                           
  5491                           
  5492                           ;EEPROM.c: 4: void EEPROM_WriteByte(uint16_t address , uint8_t data);EEPROM.c: 5: {;EEPR
      +                          OM.c: 6:   I2C_Master_Send_Start();
  5493  0A4D  120A  158A  2090  120A  158A  	fcall	_I2C_Master_Send_Start
  5494                           
  5495                           ;EEPROM.c: 9:   while(I2C_Master_WriteByte(0xA0 | ((address & 0x0700)>>7)) )
  5496  0A52  2A58               	goto	l13
  5497  0A53                     l2711:
  5498                           
  5499                           ;EEPROM.c: 10:         I2C_Master_Send_RepeatedStart();
  5500  0A53  120A  158A  2087  120A  158A  	fcall	_I2C_Master_Send_RepeatedStart
  5501  0A58                     l13:
  5502                           
  5503                           ;EEPROM.c: 9:   while(I2C_Master_WriteByte(0xA0 | ((address & 0x0700)>>7)) )
  5504  0A58  1683               	bsf	3,5	;RP0=1, select bank1
  5505  0A59  1303               	bcf	3,6	;RP1=0, select bank1
  5506  0A5A  0822               	movf	(EEPROM_WriteByte@address+1)^(0+128),w
  5507  0A5B  00A5               	movwf	(??_EEPROM_WriteByte^(0+128)+1)
  5508  0A5C  0821               	movf	EEPROM_WriteByte@address^(0+128),w
  5509  0A5D  00A4               	movwf	??_EEPROM_WriteByte^(0+128)
  5510  0A5E  3007               	movlw	7
  5511  0A5F                     u1965:
  5512  0A5F  1003               	clrc
  5513  0A60  0CA5               	rrf	(??_EEPROM_WriteByte^(0+128)+1),f
  5514  0A61  0CA4               	rrf	??_EEPROM_WriteByte^(0+128),f
  5515  0A62  3EFF               	addlw	-1
  5516  0A63  1D03               	skipz
  5517  0A64  2A5F               	goto	u1965
  5518  0A65  0824               	movf	??_EEPROM_WriteByte^(0+128),w
  5519  0A66  390E               	andlw	14
  5520  0A67  38A0               	iorlw	160
  5521  0A68  120A  158A  216D  120A  158A  	fcall	_I2C_Master_WriteByte
  5522  0A6D  3A00               	xorlw	0
  5523  0A6E  1D03               	skipz
  5524  0A6F  2A71               	goto	u1971
  5525  0A70  2A72               	goto	u1970
  5526  0A71                     u1971:
  5527  0A71  2A53               	goto	l2711
  5528  0A72                     u1970:
  5529  0A72                     l2713:
  5530                           
  5531                           ;EEPROM.c: 13:   I2C_Master_WriteByte((uint8_t)address);
  5532  0A72  1683               	bsf	3,5	;RP0=1, select bank1
  5533  0A73  1303               	bcf	3,6	;RP1=0, select bank1
  5534  0A74  0821               	movf	EEPROM_WriteByte@address^(0+128),w
  5535  0A75  120A  158A  216D  120A  158A  	fcall	_I2C_Master_WriteByte
  5536                           
  5537                           ;EEPROM.c: 14:   I2C_Master_WriteByte(data);
  5538  0A7A  1683               	bsf	3,5	;RP0=1, select bank1
  5539  0A7B  1303               	bcf	3,6	;RP1=0, select bank1
  5540  0A7C  0823               	movf	EEPROM_WriteByte@data^(0+128),w
  5541  0A7D  120A  158A  216D  120A  158A  	fcall	_I2C_Master_WriteByte
  5542                           
  5543                           ;EEPROM.c: 15:   I2C_Master_Send_Stop();
  5544  0A82  120A  158A  2099  120A  158A  	fcall	_I2C_Master_Send_Stop
  5545  0A87                     l16:
  5546  0A87  0008               	return
  5547  0A88                     __end_of_EEPROM_WriteByte:
  5548                           
  5549                           	psect	text30
  5550  096D                     __ptext30:	
  5551 ;; *************** function _I2C_Master_WriteByte *****************
  5552 ;; Defined at:
  5553 ;;		line 95 in file "i2c.c"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;  Data            1    wreg     unsigned char 
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;  Data            1    0[BANK1 ] unsigned char 
  5558 ;; Return value:  Size  Location     Type
  5559 ;;                  1    wreg      unsigned char 
  5560 ;; Registers used:
  5561 ;;		wreg, status,2, status,0, pclath, cstack
  5562 ;; Tracked objects:
  5563 ;;		On entry : 0/0
  5564 ;;		On exit  : 0/0
  5565 ;;		Unchanged: 0/0
  5566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5567 ;;      Params:         0       0       0       0       0
  5568 ;;      Locals:         0       0       1       0       0
  5569 ;;      Temps:          0       0       0       0       0
  5570 ;;      Totals:         0       0       1       0       0
  5571 ;;Total ram usage:        1 bytes
  5572 ;; Hardware stack levels used:    1
  5573 ;; Hardware stack levels required when called:    4
  5574 ;; This function calls:
  5575 ;;		_I2C_Wait_IDLE
  5576 ;; This function is called by:
  5577 ;;		_EEPROM_WriteByte
  5578 ;;		_EEPROM_ReadByte
  5579 ;;		_EEPROM_WritePage
  5580 ;;		_EEPROM_ReadPage
  5581 ;; This function uses a non-reentrant model
  5582 ;;
  5583                           
  5584                           
  5585                           ;psect for function _I2C_Master_WriteByte
  5586  096D                     _I2C_Master_WriteByte:
  5587                           
  5588                           ;incstack = 0
  5589                           ; Regs used in _I2C_Master_WriteByte: [wreg+status,2+status,0+pclath+cstack]
  5590                           ;I2C_Master_WriteByte@Data stored from wreg
  5591  096D  1683               	bsf	3,5	;RP0=1, select bank1
  5592  096E  1303               	bcf	3,6	;RP1=0, select bank1
  5593  096F  00A0               	movwf	I2C_Master_WriteByte@Data^(0+128)
  5594  0970                     l2627:
  5595                           
  5596                           ;i2c.c: 95: uint8_t I2C_Master_WriteByte(uint8_t Data);i2c.c: 96: {;i2c.c: 98:     I2C_W
      +                          ait_IDLE();
  5597  0970  120A  158A  20D5  120A  158A  	fcall	_I2C_Wait_IDLE
  5598  0975                     l2629:
  5599                           
  5600                           ;i2c.c: 99:     SSPBUF=Data;
  5601  0975  1683               	bsf	3,5	;RP0=1, select bank1
  5602  0976  1303               	bcf	3,6	;RP1=0, select bank1
  5603  0977  0820               	movf	I2C_Master_WriteByte@Data^(0+128),w
  5604  0978  1283               	bcf	3,5	;RP0=0, select bank0
  5605  0979  1303               	bcf	3,6	;RP1=0, select bank0
  5606  097A  0093               	movwf	19	;volatile
  5607  097B                     l112:	
  5608                           ;i2c.c: 100:     while(!SSPIF);
  5609                           
  5610  097B  1D8C               	btfss	12,3	;volatile
  5611  097C  297E               	goto	u1901
  5612  097D  297F               	goto	u1900
  5613  097E                     u1901:
  5614  097E  297B               	goto	l112
  5615  097F                     u1900:
  5616  097F                     l114:
  5617                           
  5618                           ;i2c.c: 101:     SSPIF=0;
  5619  097F  118C               	bcf	12,3	;volatile
  5620  0980                     l2631:
  5621                           
  5622                           ;i2c.c: 102:     I2C_Wait_IDLE();
  5623  0980  120A  158A  20D5  120A  158A  	fcall	_I2C_Wait_IDLE
  5624  0985                     l2633:
  5625                           
  5626                           ;i2c.c: 103:     return ACKSTAT;
  5627  0985  3000               	movlw	0
  5628  0986  1683               	bsf	3,5	;RP0=1, select bank1
  5629  0987  1303               	bcf	3,6	;RP1=0, select bank1
  5630  0988  1B11               	btfsc	17,6	;volatile
  5631  0989  3001               	movlw	1
  5632  098A                     l115:
  5633  098A  0008               	return
  5634  098B                     __end_of_I2C_Master_WriteByte:
  5635                           
  5636                           	psect	text31
  5637  0899                     __ptext31:	
  5638 ;; *************** function _I2C_Master_Send_Stop *****************
  5639 ;; Defined at:
  5640 ;;		line 67 in file "i2c.c"
  5641 ;; Parameters:    Size  Location     Type
  5642 ;;		None
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;		None
  5645 ;; Return value:  Size  Location     Type
  5646 ;;                  1    wreg      void 
  5647 ;; Registers used:
  5648 ;;		wreg, status,2, status,0, pclath, cstack
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 0/0
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5654 ;;      Params:         0       0       0       0       0
  5655 ;;      Locals:         0       0       0       0       0
  5656 ;;      Temps:          0       0       0       0       0
  5657 ;;      Totals:         0       0       0       0       0
  5658 ;;Total ram usage:        0 bytes
  5659 ;; Hardware stack levels used:    1
  5660 ;; Hardware stack levels required when called:    4
  5661 ;; This function calls:
  5662 ;;		_I2C_Wait_IDLE
  5663 ;; This function is called by:
  5664 ;;		_EEPROM_WriteByte
  5665 ;;		_EEPROM_ReadByte
  5666 ;;		_EEPROM_WritePage
  5667 ;;		_EEPROM_ReadPage
  5668 ;; This function uses a non-reentrant model
  5669 ;;
  5670                           
  5671                           
  5672                           ;psect for function _I2C_Master_Send_Stop
  5673  0899                     _I2C_Master_Send_Stop:
  5674  0899                     l2637:	
  5675                           ;incstack = 0
  5676                           ; Regs used in _I2C_Master_Send_Stop: [wreg+status,2+status,0+pclath+cstack]
  5677                           
  5678                           
  5679                           ;i2c.c: 70:     I2C_Wait_IDLE();
  5680  0899  120A  158A  20D5  120A  158A  	fcall	_I2C_Wait_IDLE
  5681  089E                     l2639:
  5682                           
  5683                           ;i2c.c: 71:     PEN=1 ;
  5684  089E  1683               	bsf	3,5	;RP0=1, select bank1
  5685  089F  1303               	bcf	3,6	;RP1=0, select bank1
  5686  08A0  1511               	bsf	17,2	;volatile
  5687  08A1                     l100:
  5688  08A1  0008               	return
  5689  08A2                     __end_of_I2C_Master_Send_Stop:
  5690                           
  5691                           	psect	text32
  5692  0890                     __ptext32:	
  5693 ;; *************** function _I2C_Master_Send_Start *****************
  5694 ;; Defined at:
  5695 ;;		line 61 in file "i2c.c"
  5696 ;; Parameters:    Size  Location     Type
  5697 ;;		None
  5698 ;; Auto vars:     Size  Location     Type
  5699 ;;		None
  5700 ;; Return value:  Size  Location     Type
  5701 ;;                  1    wreg      void 
  5702 ;; Registers used:
  5703 ;;		wreg, status,2, status,0, pclath, cstack
  5704 ;; Tracked objects:
  5705 ;;		On entry : 0/0
  5706 ;;		On exit  : 0/0
  5707 ;;		Unchanged: 0/0
  5708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5709 ;;      Params:         0       0       0       0       0
  5710 ;;      Locals:         0       0       0       0       0
  5711 ;;      Temps:          0       0       0       0       0
  5712 ;;      Totals:         0       0       0       0       0
  5713 ;;Total ram usage:        0 bytes
  5714 ;; Hardware stack levels used:    1
  5715 ;; Hardware stack levels required when called:    4
  5716 ;; This function calls:
  5717 ;;		_I2C_Wait_IDLE
  5718 ;; This function is called by:
  5719 ;;		_EEPROM_WriteByte
  5720 ;;		_EEPROM_ReadByte
  5721 ;;		_EEPROM_WritePage
  5722 ;;		_EEPROM_ReadPage
  5723 ;; This function uses a non-reentrant model
  5724 ;;
  5725                           
  5726                           
  5727                           ;psect for function _I2C_Master_Send_Start
  5728  0890                     _I2C_Master_Send_Start:
  5729  0890                     l2619:	
  5730                           ;incstack = 0
  5731                           ; Regs used in _I2C_Master_Send_Start: [wreg+status,2+status,0+pclath+cstack]
  5732                           
  5733                           
  5734                           ;i2c.c: 64:     I2C_Wait_IDLE();
  5735  0890  120A  158A  20D5  120A  158A  	fcall	_I2C_Wait_IDLE
  5736  0895                     l2621:
  5737                           
  5738                           ;i2c.c: 65:     SEN=1 ;
  5739  0895  1683               	bsf	3,5	;RP0=1, select bank1
  5740  0896  1303               	bcf	3,6	;RP1=0, select bank1
  5741  0897  1411               	bsf	17,0	;volatile
  5742  0898                     l97:
  5743  0898  0008               	return
  5744  0899                     __end_of_I2C_Master_Send_Start:
  5745                           
  5746                           	psect	text33
  5747  0887                     __ptext33:	
  5748 ;; *************** function _I2C_Master_Send_RepeatedStart *****************
  5749 ;; Defined at:
  5750 ;;		line 73 in file "i2c.c"
  5751 ;; Parameters:    Size  Location     Type
  5752 ;;		None
  5753 ;; Auto vars:     Size  Location     Type
  5754 ;;		None
  5755 ;; Return value:  Size  Location     Type
  5756 ;;                  1    wreg      void 
  5757 ;; Registers used:
  5758 ;;		wreg, status,2, status,0, pclath, cstack
  5759 ;; Tracked objects:
  5760 ;;		On entry : 0/0
  5761 ;;		On exit  : 0/0
  5762 ;;		Unchanged: 0/0
  5763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5764 ;;      Params:         0       0       0       0       0
  5765 ;;      Locals:         0       0       0       0       0
  5766 ;;      Temps:          0       0       0       0       0
  5767 ;;      Totals:         0       0       0       0       0
  5768 ;;Total ram usage:        0 bytes
  5769 ;; Hardware stack levels used:    1
  5770 ;; Hardware stack levels required when called:    4
  5771 ;; This function calls:
  5772 ;;		_I2C_Wait_IDLE
  5773 ;; This function is called by:
  5774 ;;		_EEPROM_WriteByte
  5775 ;;		_EEPROM_ReadByte
  5776 ;;		_EEPROM_WritePage
  5777 ;;		_EEPROM_ReadPage
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781                           
  5782                           ;psect for function _I2C_Master_Send_RepeatedStart
  5783  0887                     _I2C_Master_Send_RepeatedStart:
  5784  0887                     l2623:	
  5785                           ;incstack = 0
  5786                           ; Regs used in _I2C_Master_Send_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  5787                           
  5788                           
  5789                           ;i2c.c: 76:     I2C_Wait_IDLE();
  5790  0887  120A  158A  20D5  120A  158A  	fcall	_I2C_Wait_IDLE
  5791  088C                     l2625:
  5792                           
  5793                           ;i2c.c: 77:     RSEN=1 ;
  5794  088C  1683               	bsf	3,5	;RP0=1, select bank1
  5795  088D  1303               	bcf	3,6	;RP1=0, select bank1
  5796  088E  1491               	bsf	17,1	;volatile
  5797  088F                     l103:
  5798  088F  0008               	return
  5799  0890                     __end_of_I2C_Master_Send_RepeatedStart:
  5800                           
  5801                           	psect	text34
  5802  08D5                     __ptext34:	
  5803 ;; *************** function _I2C_Wait_IDLE *****************
  5804 ;; Defined at:
  5805 ;;		line 53 in file "i2c.c"
  5806 ;; Parameters:    Size  Location     Type
  5807 ;;		None
  5808 ;; Auto vars:     Size  Location     Type
  5809 ;;		None
  5810 ;; Return value:  Size  Location     Type
  5811 ;;                  1    wreg      void 
  5812 ;; Registers used:
  5813 ;;		wreg, status,2
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5819 ;;      Params:         0       0       0       0       0
  5820 ;;      Locals:         0       0       0       0       0
  5821 ;;      Temps:          0       0       0       0       0
  5822 ;;      Totals:         0       0       0       0       0
  5823 ;;Total ram usage:        0 bytes
  5824 ;; Hardware stack levels used:    1
  5825 ;; Hardware stack levels required when called:    3
  5826 ;; This function calls:
  5827 ;;		Nothing
  5828 ;; This function is called by:
  5829 ;;		_I2C_Master_Send_Start
  5830 ;;		_I2C_Master_Send_Stop
  5831 ;;		_I2C_Master_Send_RepeatedStart
  5832 ;;		_I2C_Master_Send_ACK
  5833 ;;		_I2C_Master_Send_NACK
  5834 ;;		_I2C_Master_WriteByte
  5835 ;;		_I2C_Master_ReadByte
  5836 ;; This function uses a non-reentrant model
  5837 ;;
  5838                           
  5839                           
  5840                           ;psect for function _I2C_Wait_IDLE
  5841  08D5                     _I2C_Wait_IDLE:
  5842  08D5                     l2603:	
  5843                           ;incstack = 0
  5844                           ; Regs used in _I2C_Wait_IDLE: [wreg+status,2]
  5845                           
  5846  08D5                     l91:	
  5847                           ;i2c.c: 58:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  5848                           
  5849  08D5  1683               	bsf	3,5	;RP0=1, select bank1
  5850  08D6  1303               	bcf	3,6	;RP1=0, select bank1
  5851  08D7  1914               	btfsc	20,2	;volatile
  5852  08D8  28DA               	goto	u1881
  5853  08D9  28DB               	goto	u1880
  5854  08DA                     u1881:
  5855  08DA  28D5               	goto	l91
  5856  08DB                     u1880:
  5857  08DB                     l2605:
  5858  08DB  0811               	movf	17,w	;volatile
  5859  08DC  391F               	andlw	31
  5860  08DD  1D03               	btfss	3,2
  5861  08DE  28E0               	goto	u1891
  5862  08DF  28E1               	goto	u1890
  5863  08E0                     u1891:
  5864  08E0  28D5               	goto	l91
  5865  08E1                     u1890:
  5866  08E1                     l94:
  5867  08E1  0008               	return
  5868  08E2                     __end_of_I2C_Wait_IDLE:
  5869                           
  5870                           	psect	text35
  5871  0933                     __ptext35:	
  5872 ;; *************** function _DD_Init *****************
  5873 ;; Defined at:
  5874 ;;		line 14 in file "DD.c"
  5875 ;; Parameters:    Size  Location     Type
  5876 ;;		None
  5877 ;; Auto vars:     Size  Location     Type
  5878 ;;		None
  5879 ;; Return value:  Size  Location     Type
  5880 ;;                  1    wreg      void 
  5881 ;; Registers used:
  5882 ;;		wreg, status,2, status,0, btemp+1
  5883 ;; Tracked objects:
  5884 ;;		On entry : 0/0
  5885 ;;		On exit  : 0/0
  5886 ;;		Unchanged: 0/0
  5887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5888 ;;      Params:         0       0       0       0       0
  5889 ;;      Locals:         0       0       0       0       0
  5890 ;;      Temps:          0       0       0       0       0
  5891 ;;      Totals:         0       0       0       0       0
  5892 ;;Total ram usage:        0 bytes
  5893 ;; Hardware stack levels used:    1
  5894 ;; Hardware stack levels required when called:    3
  5895 ;; This function calls:
  5896 ;;		Nothing
  5897 ;; This function is called by:
  5898 ;;		_main
  5899 ;; This function uses a non-reentrant model
  5900 ;;
  5901                           
  5902                           
  5903                           ;psect for function _DD_Init
  5904  0933                     _DD_Init:
  5905  0933                     l3055:	
  5906                           ;incstack = 0
  5907                           ; Regs used in _DD_Init: [wreg+status,2+status,0+btemp+1]
  5908                           
  5909  0933                     l3059:	
  5910                           ;DD.c: 17:     (0u)? (TRISC |= (1<<5)) : (TRISC &= ~(1<<5));
  5911                           
  5912  0933  30DF               	movlw	223
  5913  0934  00FF               	movwf	btemp+1
  5914  0935  087F               	movf	btemp+1,w
  5915  0936  1683               	bsf	3,5	;RP0=1, select bank1
  5916  0937  1303               	bcf	3,6	;RP1=0, select bank1
  5917  0938  0587               	andwf	7,f	;volatile
  5918  0939                     l3063:
  5919  0939  30FB               	movlw	251
  5920  093A  00FF               	movwf	btemp+1
  5921  093B  087F               	movf	btemp+1,w
  5922  093C  0587               	andwf	7,f	;volatile
  5923  093D                     l3067:
  5924  093D  307F               	movlw	127
  5925  093E  00FF               	movwf	btemp+1
  5926  093F  087F               	movf	btemp+1,w
  5927  0940  0586               	andwf	6,f	;volatile
  5928  0941                     l3071:
  5929  0941  30DF               	movlw	223
  5930  0942  00FF               	movwf	btemp+1
  5931  0943  087F               	movf	btemp+1,w
  5932  0944  1283               	bcf	3,5	;RP0=0, select bank0
  5933  0945  1303               	bcf	3,6	;RP1=0, select bank0
  5934  0946  0587               	andwf	7,f	;volatile
  5935  0947                     l3075:
  5936  0947  30FB               	movlw	251
  5937  0948  00FF               	movwf	btemp+1
  5938  0949  087F               	movf	btemp+1,w
  5939  094A  0587               	andwf	7,f	;volatile
  5940  094B                     l3079:
  5941  094B  307F               	movlw	127
  5942  094C  00FF               	movwf	btemp+1
  5943  094D  087F               	movf	btemp+1,w
  5944  094E  0586               	andwf	6,f	;volatile
  5945  094F                     l259:
  5946  094F  0008               	return
  5947  0950                     __end_of_DD_Init:
  5948                           
  5949                           	psect	text36
  5950  0EFF                     __ptext36:	
  5951 ;; *************** function _ADC_Init *****************
  5952 ;; Defined at:
  5953 ;;		line 16 in file "adc.c"
  5954 ;; Parameters:    Size  Location     Type
  5955 ;;  config          1    wreg     PTR struct .
  5956 ;;		 -> main@adc_config(4), 
  5957 ;; Auto vars:     Size  Location     Type
  5958 ;;  config          1    2[BANK1 ] PTR struct .
  5959 ;;		 -> main@adc_config(4), 
  5960 ;; Return value:  Size  Location     Type
  5961 ;;                  1    wreg      void 
  5962 ;; Registers used:
  5963 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5964 ;; Tracked objects:
  5965 ;;		On entry : 0/0
  5966 ;;		On exit  : 0/0
  5967 ;;		Unchanged: 0/0
  5968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5969 ;;      Params:         0       0       0       0       0
  5970 ;;      Locals:         0       0       1       0       0
  5971 ;;      Temps:          0       0       2       0       0
  5972 ;;      Totals:         0       0       3       0       0
  5973 ;;Total ram usage:        3 bytes
  5974 ;; Hardware stack levels used:    1
  5975 ;; Hardware stack levels required when called:    3
  5976 ;; This function calls:
  5977 ;;		Nothing
  5978 ;; This function is called by:
  5979 ;;		_main
  5980 ;; This function uses a non-reentrant model
  5981 ;;
  5982                           
  5983                           
  5984                           ;psect for function _ADC_Init
  5985  0EFF                     _ADC_Init:
  5986                           
  5987                           ;incstack = 0
  5988                           ; Regs used in _ADC_Init: [wreg-fsr0h+status,2+status,0+btemp+1]
  5989                           ;ADC_Init@config stored from wreg
  5990  0EFF  1683               	bsf	3,5	;RP0=1, select bank1
  5991  0F00  1303               	bcf	3,6	;RP1=0, select bank1
  5992  0F01  00A2               	movwf	ADC_Init@config^(0+128)
  5993  0F02                     l3029:
  5994                           
  5995                           ;adc.c: 16: void ADC_Init(tADC_Config* config);adc.c: 17: {;adc.c: 19:     ADON=1;
  5996  0F02  1283               	bcf	3,5	;RP0=0, select bank0
  5997  0F03  1303               	bcf	3,6	;RP1=0, select bank0
  5998  0F04  141F               	bsf	31,0	;volatile
  5999                           
  6000                           ;adc.c: 21:     switch(config->clk)
  6001  0F05  2F34               	goto	l3039
  6002  0F06                     l3031:
  6003                           
  6004                           ;adc.c: 24:             ADCON0 &= ~(0xC0);
  6005  0F06  303F               	movlw	63
  6006  0F07  00FF               	movwf	btemp+1
  6007  0F08  087F               	movf	btemp+1,w
  6008  0F09  1283               	bcf	3,5	;RP0=0, select bank0
  6009  0F0A  1303               	bcf	3,6	;RP1=0, select bank0
  6010  0F0B  059F               	andwf	31,f	;volatile
  6011                           
  6012                           ;adc.c: 25:             break;
  6013  0F0C  2F59               	goto	l3041
  6014  0F0D                     l324:	
  6015                           ;adc.c: 26:         case FOSC_8:
  6016                           
  6017                           
  6018                           ;adc.c: 27:             ADCON0 |= (1<<6);
  6019  0F0D  1283               	bcf	3,5	;RP0=0, select bank0
  6020  0F0E  1303               	bcf	3,6	;RP1=0, select bank0
  6021  0F0F  171F               	bsf	31,6	;volatile
  6022                           
  6023                           ;adc.c: 28:             break;
  6024  0F10  2F59               	goto	l3041
  6025  0F11                     l325:	
  6026                           ;adc.c: 29:         case FOSC_32:
  6027                           
  6028                           
  6029                           ;adc.c: 30:             ADCON0 |= (2<<6);
  6030  0F11  1283               	bcf	3,5	;RP0=0, select bank0
  6031  0F12  1303               	bcf	3,6	;RP1=0, select bank0
  6032  0F13  179F               	bsf	31,7	;volatile
  6033                           
  6034                           ;adc.c: 31:             break;
  6035  0F14  2F59               	goto	l3041
  6036  0F15                     l3033:
  6037                           
  6038                           ;adc.c: 33:             ADCON0 |= (3<<6);
  6039  0F15  30C0               	movlw	192
  6040  0F16  00FF               	movwf	btemp+1
  6041  0F17  087F               	movf	btemp+1,w
  6042  0F18  1283               	bcf	3,5	;RP0=0, select bank0
  6043  0F19  1303               	bcf	3,6	;RP1=0, select bank0
  6044  0F1A  049F               	iorwf	31,f	;volatile
  6045                           
  6046                           ;adc.c: 34:             break;
  6047  0F1B  2F59               	goto	l3041
  6048  0F1C                     l3035:
  6049                           
  6050                           ;adc.c: 36:             ADCON0 &= ~(0xC0);
  6051  0F1C  303F               	movlw	63
  6052  0F1D  00FF               	movwf	btemp+1
  6053  0F1E  087F               	movf	btemp+1,w
  6054  0F1F  1283               	bcf	3,5	;RP0=0, select bank0
  6055  0F20  1303               	bcf	3,6	;RP1=0, select bank0
  6056  0F21  059F               	andwf	31,f	;volatile
  6057  0F22                     l3037:
  6058                           
  6059                           ;adc.c: 37:             ADCON1 |= (1<<6);
  6060  0F22  1683               	bsf	3,5	;RP0=1, select bank1
  6061  0F23  1303               	bcf	3,6	;RP1=0, select bank1
  6062  0F24  171F               	bsf	31,6	;volatile
  6063                           
  6064                           ;adc.c: 38:             break;
  6065  0F25  2F59               	goto	l3041
  6066  0F26                     l328:	
  6067                           ;adc.c: 39:         case FOSC_16:
  6068                           
  6069                           
  6070                           ;adc.c: 40:             ADCON0 |= (1<<6);
  6071  0F26  1283               	bcf	3,5	;RP0=0, select bank0
  6072  0F27  1303               	bcf	3,6	;RP1=0, select bank0
  6073  0F28  171F               	bsf	31,6	;volatile
  6074                           
  6075                           ;adc.c: 41:             ADCON1 |= (1<<6);
  6076  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  6077  0F2A  1303               	bcf	3,6	;RP1=0, select bank1
  6078  0F2B  171F               	bsf	31,6	;volatile
  6079                           
  6080                           ;adc.c: 42:             break;
  6081  0F2C  2F59               	goto	l3041
  6082  0F2D                     l329:	
  6083                           ;adc.c: 43:         case FOSC_64:
  6084                           
  6085                           
  6086                           ;adc.c: 44:             ADCON0 |= (2<<6);
  6087  0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  6088  0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  6089  0F2F  179F               	bsf	31,7	;volatile
  6090                           
  6091                           ;adc.c: 45:             ADCON1 |= (1<<6);
  6092  0F30  1683               	bsf	3,5	;RP0=1, select bank1
  6093  0F31  1303               	bcf	3,6	;RP1=0, select bank1
  6094  0F32  171F               	bsf	31,6	;volatile
  6095                           
  6096                           ;adc.c: 46:             break;
  6097  0F33  2F59               	goto	l3041
  6098  0F34                     l3039:
  6099  0F34  1683               	bsf	3,5	;RP0=1, select bank1
  6100  0F35  1303               	bcf	3,6	;RP1=0, select bank1
  6101  0F36  0822               	movf	ADC_Init@config^(0+128),w
  6102  0F37  3E03               	addlw	3
  6103  0F38  0084               	movwf	4
  6104  0F39  1383               	bcf	3,7	;select IRP bank0
  6105  0F3A  0800               	movf	0,w
  6106  0F3B  00A0               	movwf	??_ADC_Init^(0+128)
  6107  0F3C  01A1               	clrf	(??_ADC_Init^(0+128)+1)
  6108                           
  6109                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6110                           ; Switch size 1, requested type "simple"
  6111                           ; Number of cases is 1, Range of values is 0 to 0
  6112                           ; switch strategies available:
  6113                           ; Name         Instructions Cycles
  6114                           ; simple_byte            4     3 (average)
  6115                           ; direct_byte           11     8 (fixed)
  6116                           ; jumptable            260     6 (fixed)
  6117                           ;	Chosen strategy is simple_byte
  6118  0F3D  0821               	movf	(??_ADC_Init+1)^(0+128),w
  6119  0F3E  3A00               	xorlw	0	; case 0
  6120  0F3F  1903               	skipnz
  6121  0F40  2F42               	goto	l3937
  6122  0F41  2F0D               	goto	l324
  6123  0F42                     l3937:
  6124                           
  6125                           ; Switch size 1, requested type "simple"
  6126                           ; Number of cases is 7, Range of values is 0 to 6
  6127                           ; switch strategies available:
  6128                           ; Name         Instructions Cycles
  6129                           ; simple_byte           22    12 (average)
  6130                           ; direct_byte           29     8 (fixed)
  6131                           ; jumptable            260     6 (fixed)
  6132                           ;	Chosen strategy is simple_byte
  6133  0F42  0820               	movf	??_ADC_Init^(0+128),w
  6134  0F43  3A00               	xorlw	0	; case 0
  6135  0F44  1903               	skipnz
  6136  0F45  2F06               	goto	l3031
  6137  0F46  3A01               	xorlw	1	; case 1
  6138  0F47  1903               	skipnz
  6139  0F48  2F0D               	goto	l324
  6140  0F49  3A03               	xorlw	3	; case 2
  6141  0F4A  1903               	skipnz
  6142  0F4B  2F11               	goto	l325
  6143  0F4C  3A01               	xorlw	1	; case 3
  6144  0F4D  1903               	skipnz
  6145  0F4E  2F15               	goto	l3033
  6146  0F4F  3A07               	xorlw	7	; case 4
  6147  0F50  1903               	skipnz
  6148  0F51  2F1C               	goto	l3035
  6149  0F52  3A01               	xorlw	1	; case 5
  6150  0F53  1903               	skipnz
  6151  0F54  2F26               	goto	l328
  6152  0F55  3A03               	xorlw	3	; case 6
  6153  0F56  1903               	skipnz
  6154  0F57  2F2D               	goto	l329
  6155  0F58  2F0D               	goto	l324
  6156  0F59                     l3041:
  6157                           
  6158                           ;adc.c: 53:     ADCON1 |= ((config->alignment)<<7);
  6159  0F59  1683               	bsf	3,5	;RP0=1, select bank1
  6160  0F5A  1303               	bcf	3,6	;RP1=0, select bank1
  6161  0F5B  0822               	movf	ADC_Init@config^(0+128),w
  6162  0F5C  3E02               	addlw	2
  6163  0F5D  0084               	movwf	4
  6164  0F5E  0800               	movf	0,w
  6165  0F5F  00A0               	movwf	??_ADC_Init^(0+128)
  6166  0F60  3006               	movlw	6
  6167  0F61                     u2495:
  6168  0F61  1003               	clrc
  6169  0F62  0DA0               	rlf	??_ADC_Init^(0+128),f
  6170  0F63  3EFF               	addlw	-1
  6171  0F64  1D03               	skipz
  6172  0F65  2F61               	goto	u2495
  6173  0F66  1003               	clrc
  6174  0F67  0D20               	rlf	??_ADC_Init^(0+128),w
  6175  0F68  00FF               	movwf	btemp+1
  6176  0F69  087F               	movf	btemp+1,w
  6177  0F6A  049F               	iorwf	31,f	;volatile
  6178  0F6B                     l3043:
  6179                           
  6180                           ;adc.c: 56:     ADCON1 = (0x80);
  6181  0F6B  3080               	movlw	128
  6182  0F6C  009F               	movwf	31	;volatile
  6183  0F6D                     l3045:
  6184                           
  6185                           ;adc.c: 60:     if(config->mode==INTERRUPT_MODE)
  6186  0F6D  0A22               	incf	ADC_Init@config^(0+128),w
  6187  0F6E  0084               	movwf	4
  6188  0F6F  0300               	decf	0,w
  6189  0F70  1D03               	btfss	3,2
  6190  0F71  2F73               	goto	u2501
  6191  0F72  2F74               	goto	u2500
  6192  0F73                     u2501:
  6193  0F73  2F7C               	goto	l332
  6194  0F74                     u2500:
  6195  0F74                     l3047:
  6196                           
  6197                           ;adc.c: 61:     {;adc.c: 62:         ADIF = 0;
  6198  0F74  1283               	bcf	3,5	;RP0=0, select bank0
  6199  0F75  1303               	bcf	3,6	;RP1=0, select bank0
  6200  0F76  130C               	bcf	12,6	;volatile
  6201                           
  6202                           ;adc.c: 63:         ADIE = 1;
  6203  0F77  1683               	bsf	3,5	;RP0=1, select bank1
  6204  0F78  1303               	bcf	3,6	;RP1=0, select bank1
  6205  0F79  170C               	bsf	12,6	;volatile
  6206                           
  6207                           ;adc.c: 64:         PEIE = 1;
  6208  0F7A  170B               	bsf	11,6	;volatile
  6209                           
  6210                           ;adc.c: 65:         GIE = 1;
  6211  0F7B  178B               	bsf	11,7	;volatile
  6212  0F7C                     l332:
  6213  0F7C  0008               	return
  6214  0F7D                     __end_of_ADC_Init:
  6215                           
  6216                           	psect	text37
  6217  05A5                     __ptext37:	
  6218 ;; *************** function _ISR *****************
  6219 ;; Defined at:
  6220 ;;		line 238 in file "EWH.c"
  6221 ;; Parameters:    Size  Location     Type
  6222 ;;		None
  6223 ;; Auto vars:     Size  Location     Type
  6224 ;;  Reading         2   40[BANK0 ] unsigned short 
  6225 ;; Return value:  Size  Location     Type
  6226 ;;                  1    wreg      void 
  6227 ;; Registers used:
  6228 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6229 ;; Tracked objects:
  6230 ;;		On entry : 0/0
  6231 ;;		On exit  : 0/0
  6232 ;;		Unchanged: 0/0
  6233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6234 ;;      Params:         0       0       0       0       0
  6235 ;;      Locals:         0       2       0       0       0
  6236 ;;      Temps:          0       4       0       0       0
  6237 ;;      Totals:         0       6       0       0       0
  6238 ;;Total ram usage:        6 bytes
  6239 ;; Hardware stack levels used:    1
  6240 ;; Hardware stack levels required when called:    2
  6241 ;; This function calls:
  6242 ;;		_ADC_ReadChannel
  6243 ;;		_DD_GetState
  6244 ;;		___flmul
  6245 ;;		___fltol
  6246 ;;		___xxtofl
  6247 ;; This function is called by:
  6248 ;;		Interrupt level 1
  6249 ;; This function uses a non-reentrant model
  6250 ;;
  6251                           
  6252                           
  6253                           ;psect for function _ISR
  6254  05A5                     _ISR:
  6255  05A5                     i1l3667:
  6256                           
  6257                           ;EWH.c: 240:     static uint8_t count =0;;EWH.c: 241:     if(INTF==1)
  6258  05A5  1C8B               	btfss	11,1	;volatile
  6259  05A6  2DA8               	goto	u362_21
  6260  05A7  2DA9               	goto	u362_20
  6261  05A8                     u362_21:
  6262  05A8  2DC5               	goto	i1l580
  6263  05A9                     u362_20:
  6264  05A9                     i1l3669:
  6265                           
  6266                           ;EWH.c: 242:     {;EWH.c: 243:         EWH_Events[0]=1;
  6267  05A9  1683               	bsf	3,5	;RP0=1, select bank1
  6268  05AA  1303               	bcf	3,6	;RP1=0, select bank1
  6269  05AB  01C1               	clrf	_EWH_Events^(0+128)
  6270  05AC  0AC1               	incf	_EWH_Events^(0+128),f
  6271  05AD                     i1l3671:
  6272                           
  6273                           ;EWH.c: 245:         if(EWH_State==ON)
  6274  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  6275  05AE  1303               	bcf	3,6	;RP1=0, select bank0
  6276  05AF  0352               	decf	_EWH_State,w
  6277  05B0  1D03               	btfss	3,2
  6278  05B1  2DB3               	goto	u363_21
  6279  05B2  2DB4               	goto	u363_20
  6280  05B3                     u363_21:
  6281  05B3  2DB9               	goto	i1l3675
  6282  05B4                     u363_20:
  6283  05B4                     i1l3673:
  6284                           
  6285                           ;EWH.c: 246:         {;EWH.c: 247:             EWH_State=OFF;
  6286  05B4  01D2               	clrf	_EWH_State
  6287                           
  6288                           ;EWH.c: 248:             EWH_Mode=EWH_SLEEP_MODE;
  6289  05B5  1683               	bsf	3,5	;RP0=1, select bank1
  6290  05B6  1303               	bcf	3,6	;RP1=0, select bank1
  6291  05B7  01CE               	clrf	_EWH_Mode^(0+128)
  6292                           
  6293                           ;EWH.c: 249:         }
  6294  05B8  2DC4               	goto	i1l582
  6295  05B9                     i1l3675:
  6296  05B9  0852               	movf	_EWH_State,w
  6297  05BA  1D03               	btfss	3,2
  6298  05BB  2DBD               	goto	u364_21
  6299  05BC  2DBE               	goto	u364_20
  6300  05BD                     u364_21:
  6301  05BD  2DC4               	goto	i1l582
  6302  05BE                     u364_20:
  6303  05BE                     i1l3677:
  6304                           
  6305                           ;EWH.c: 251:         {;EWH.c: 252:             EWH_State=ON;
  6306  05BE  01D2               	clrf	_EWH_State
  6307  05BF  0AD2               	incf	_EWH_State,f
  6308                           
  6309                           ;EWH.c: 253:             EWH_Mode=EWH_WAKE_UP_MODE;
  6310  05C0  1683               	bsf	3,5	;RP0=1, select bank1
  6311  05C1  1303               	bcf	3,6	;RP1=0, select bank1
  6312  05C2  01CE               	clrf	_EWH_Mode^(0+128)
  6313  05C3  0ACE               	incf	_EWH_Mode^(0+128),f
  6314  05C4                     i1l582:
  6315                           
  6316                           ;EWH.c: 255:         INTF=0;
  6317  05C4  108B               	bcf	11,1	;volatile
  6318  05C5                     i1l580:	
  6319                           ;EWH.c: 256:     }
  6320                           
  6321                           
  6322                           ;EWH.c: 258:    if (TMR1IF)
  6323  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  6324  05C6  1C0C               	btfss	12,0	;volatile
  6325  05C7  2DC9               	goto	u365_21
  6326  05C8  2DCA               	goto	u365_20
  6327  05C9                     u365_21:
  6328  05C9  2E75               	goto	i1l596
  6329  05CA                     u365_20:
  6330  05CA                     i1l3679:
  6331                           
  6332                           ;EWH.c: 259:    {;EWH.c: 260:       count++;
  6333  05CA  3001               	movlw	1
  6334  05CB  00FF               	movwf	btemp+1
  6335  05CC  087F               	movf	btemp+1,w
  6336  05CD  07D0               	addwf	ISR@count,f
  6337  05CE                     i1l3681:
  6338                           
  6339                           ;EWH.c: 261:       if(EWH_Mode==EWH_OPERATING_MODE)
  6340  05CE  3003               	movlw	3
  6341  05CF  1683               	bsf	3,5	;RP0=1, select bank1
  6342  05D0  1303               	bcf	3,6	;RP1=0, select bank1
  6343  05D1  064E               	xorwf	_EWH_Mode^(0+128),w
  6344  05D2  1D03               	btfss	3,2
  6345  05D3  2DD5               	goto	u366_21
  6346  05D4  2DD6               	goto	u366_20
  6347  05D5                     u366_21:
  6348  05D5  2E1C               	goto	i1l3685
  6349  05D6                     u366_20:
  6350  05D6                     i1l3683:
  6351                           
  6352                           ;EWH.c: 262:       {;EWH.c: 263:         uint16_t Reading = ADC_ReadChannel(ADC2);
  6353  05D6  3002               	movlw	2
  6354  05D7  120A  118A  27CA  120A  118A  	fcall	_ADC_ReadChannel
  6355  05DC  0871               	movf	?_ADC_ReadChannel+1,w
  6356  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  6357  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  6358  05DF  00C9               	movwf	ISR@Reading+1
  6359  05E0  0870               	movf	?_ADC_ReadChannel,w
  6360  05E1  00C8               	movwf	ISR@Reading
  6361                           
  6362                           ;EWH.c: 264:         current_Temp=Reading*0.488;
  6363  05E2  0848               	movf	ISR@Reading,w
  6364  05E3  00F0               	movwf	___xxtofl@val
  6365  05E4  0849               	movf	ISR@Reading+1,w
  6366  05E5  00F1               	movwf	___xxtofl@val+1
  6367  05E6  01F2               	clrf	___xxtofl@val+2
  6368  05E7  01F3               	clrf	___xxtofl@val+3
  6369  05E8  3000               	movlw	0
  6370  05E9  120A  118A  2680  120A  118A  	fcall	___xxtofl
  6371  05EE  0873               	movf	?___xxtofl+3,w
  6372  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  6373  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  6374  05F1  00A7               	movwf	___flmul@a+3
  6375  05F2  0872               	movf	?___xxtofl+2,w
  6376  05F3  00A6               	movwf	___flmul@a+2
  6377  05F4  0871               	movf	?___xxtofl+1,w
  6378  05F5  00A5               	movwf	___flmul@a+1
  6379  05F6  0870               	movf	?___xxtofl,w
  6380  05F7  00A4               	movwf	___flmul@a
  6381  05F8  303E               	movlw	62
  6382  05F9  00A3               	movwf	___flmul@b+3
  6383  05FA  30F9               	movlw	249
  6384  05FB  00A2               	movwf	___flmul@b+2
  6385  05FC  30DB               	movlw	219
  6386  05FD  00A1               	movwf	___flmul@b+1
  6387  05FE  3023               	movlw	35
  6388  05FF  00A0               	movwf	___flmul@b
  6389  0600  120A  118A  2037  120A  118A  	fcall	___flmul
  6390  0605  1283               	bcf	3,5	;RP0=0, select bank0
  6391  0606  1303               	bcf	3,6	;RP1=0, select bank0
  6392  0607  0823               	movf	?___flmul+3,w
  6393  0608  00BD               	movwf	___fltol@f1+3
  6394  0609  0822               	movf	?___flmul+2,w
  6395  060A  00BC               	movwf	___fltol@f1+2
  6396  060B  0821               	movf	?___flmul+1,w
  6397  060C  00BB               	movwf	___fltol@f1+1
  6398  060D  0820               	movf	?___flmul,w
  6399  060E  00BA               	movwf	___fltol@f1
  6400  060F  120A  158A  2683  120A  118A  	fcall	___fltol
  6401  0614  1283               	bcf	3,5	;RP0=0, select bank0
  6402  0615  1303               	bcf	3,6	;RP1=0, select bank0
  6403  0616  083A               	movf	?___fltol,w
  6404  0617  00FF               	movwf	btemp+1
  6405  0618  087F               	movf	btemp+1,w
  6406  0619  1683               	bsf	3,5	;RP0=1, select bank1
  6407  061A  1303               	bcf	3,6	;RP1=0, select bank1
  6408  061B  00CC               	movwf	_current_Temp^(0+128)
  6409  061C                     i1l3685:
  6410                           
  6411                           ;EWH.c: 267:       if(count==10)
  6412  061C  300A               	movlw	10
  6413  061D  1283               	bcf	3,5	;RP0=0, select bank0
  6414  061E  1303               	bcf	3,6	;RP1=0, select bank0
  6415  061F  0650               	xorwf	ISR@count,w
  6416  0620  1D03               	btfss	3,2
  6417  0621  2E23               	goto	u367_21
  6418  0622  2E24               	goto	u367_20
  6419  0623                     u367_21:
  6420  0623  2E70               	goto	i1l3713
  6421  0624                     u367_20:
  6422  0624                     i1l3687:
  6423                           
  6424                           ;EWH.c: 268:       {;EWH.c: 270:           if(EWH_Mode==EWH_SET_TEMP_MODE)
  6425  0624  3002               	movlw	2
  6426  0625  1683               	bsf	3,5	;RP0=1, select bank1
  6427  0626  1303               	bcf	3,6	;RP1=0, select bank1
  6428  0627  064E               	xorwf	_EWH_Mode^(0+128),w
  6429  0628  1D03               	btfss	3,2
  6430  0629  2E2B               	goto	u368_21
  6431  062A  2E2C               	goto	u368_20
  6432  062B                     u368_21:
  6433  062B  2E3D               	goto	i1l3697
  6434  062C                     u368_20:
  6435  062C                     i1l3689:
  6436                           
  6437                           ;EWH.c: 271:           {;EWH.c: 272:               SSD_Blink_flag = ~SSD_Blink_flag;
  6438  062C  09CA               	comf	_SSD_Blink_flag^(0+128),f
  6439  062D                     i1l3691:
  6440                           
  6441                           ;EWH.c: 273:               NoPress_Sec_count++;
  6442  062D  3001               	movlw	1
  6443  062E  00FF               	movwf	btemp+1
  6444  062F  087F               	movf	btemp+1,w
  6445  0630  1283               	bcf	3,5	;RP0=0, select bank0
  6446  0631  1303               	bcf	3,6	;RP1=0, select bank0
  6447  0632  07D1               	addwf	_NoPress_Sec_count,f
  6448  0633                     i1l3693:
  6449                           
  6450                           ;EWH.c: 274:               if(NoPress_Sec_count==5)
  6451  0633  3005               	movlw	5
  6452  0634  0651               	xorwf	_NoPress_Sec_count,w
  6453  0635  1D03               	btfss	3,2
  6454  0636  2E38               	goto	u369_21
  6455  0637  2E39               	goto	u369_20
  6456  0638                     u369_21:
  6457  0638  2E3D               	goto	i1l3697
  6458  0639                     u369_20:
  6459  0639                     i1l3695:
  6460                           
  6461                           ;EWH.c: 275:               {;EWH.c: 276:                   EWH_Events[3]=1;
  6462  0639  1683               	bsf	3,5	;RP0=1, select bank1
  6463  063A  1303               	bcf	3,6	;RP1=0, select bank1
  6464  063B  01C4               	clrf	(_EWH_Events^(0+128)+3)
  6465  063C  0AC4               	incf	(_EWH_Events^(0+128)+3),f
  6466  063D                     i1l3697:
  6467                           
  6468                           ;EWH.c: 280:         if(EWH_Mode==EWH_OPERATING_MODE && DD_GetState(HEATER)==ON)
  6469  063D  3003               	movlw	3
  6470  063E  1683               	bsf	3,5	;RP0=1, select bank1
  6471  063F  1303               	bcf	3,6	;RP1=0, select bank1
  6472  0640  064E               	xorwf	_EWH_Mode^(0+128),w
  6473  0641  1D03               	btfss	3,2
  6474  0642  2E44               	goto	u370_21
  6475  0643  2E45               	goto	u370_20
  6476  0644                     u370_21:
  6477  0644  2E57               	goto	i1l3703
  6478  0645                     u370_20:
  6479  0645                     i1l3699:
  6480  0645  3000               	movlw	0
  6481  0646  120A  158A  22C4  120A  118A  	fcall	_DD_GetState
  6482  064B  3A01               	xorlw	1
  6483  064C  1D03               	skipz
  6484  064D  2E4F               	goto	u371_21
  6485  064E  2E50               	goto	u371_20
  6486  064F                     u371_21:
  6487  064F  2E57               	goto	i1l3703
  6488  0650                     u371_20:
  6489  0650                     i1l3701:
  6490                           
  6491                           ;EWH.c: 281:         {;EWH.c: 282:             (PORTB^=(1<<7));
  6492  0650  3080               	movlw	128
  6493  0651  00FF               	movwf	btemp+1
  6494  0652  087F               	movf	btemp+1,w
  6495  0653  1283               	bcf	3,5	;RP0=0, select bank0
  6496  0654  1303               	bcf	3,6	;RP1=0, select bank0
  6497  0655  0686               	xorwf	6,f	;volatile
  6498                           
  6499                           ;EWH.c: 283:         }
  6500  0656  2E6D               	goto	i1l3711
  6501  0657                     i1l3703:
  6502  0657  3003               	movlw	3
  6503  0658  1683               	bsf	3,5	;RP0=1, select bank1
  6504  0659  1303               	bcf	3,6	;RP1=0, select bank1
  6505  065A  064E               	xorwf	_EWH_Mode^(0+128),w
  6506  065B  1D03               	btfss	3,2
  6507  065C  2E5E               	goto	u372_21
  6508  065D  2E5F               	goto	u372_20
  6509  065E                     u372_21:
  6510  065E  2E6D               	goto	i1l3711
  6511  065F                     u372_20:
  6512  065F                     i1l3705:
  6513                           
  6514                           ;EWH.c: 285:         {;EWH.c: 286:             (ON)?(PORTB |= (1<<7)) : (PORTB &= ~(1<<7
      +                          ));
  6515  065F  3001               	movlw	1
  6516  0660  120A  158A  22C4  120A  118A  	fcall	_DD_GetState
  6517  0665  3A01               	xorlw	1
  6518  0666  1D03               	skipz
  6519  0667  2E69               	goto	u373_21
  6520  0668  2E6A               	goto	u373_20
  6521  0669                     u373_21:
  6522  0669  2E6D               	goto	i1l3711
  6523  066A                     u373_20:
  6524  066A                     i1l3707:
  6525  066A  1283               	bcf	3,5	;RP0=0, select bank0
  6526  066B  1303               	bcf	3,6	;RP1=0, select bank0
  6527  066C  1786               	bsf	6,7	;volatile
  6528  066D                     i1l3711:
  6529                           
  6530                           ;EWH.c: 289:         count = 0;
  6531  066D  1283               	bcf	3,5	;RP0=0, select bank0
  6532  066E  1303               	bcf	3,6	;RP1=0, select bank0
  6533  066F  01D0               	clrf	ISR@count
  6534  0670                     i1l3713:
  6535                           
  6536                           ;EWH.c: 291:       TMR1IF = 0;
  6537  0670  100C               	bcf	12,0	;volatile
  6538  0671                     i1l3715:
  6539                           
  6540                           ;EWH.c: 292:       TMR1=40536;
  6541  0671  309E               	movlw	158
  6542  0672  008F               	movwf	15	;volatile
  6543  0673  3058               	movlw	88
  6544  0674  008E               	movwf	14	;volatile
  6545  0675                     i1l596:
  6546  0675  0847               	movf	??_ISR+3,w
  6547  0676  00FF               	movwf	btemp+1
  6548  0677  0846               	movf	??_ISR+2,w
  6549  0678  008A               	movwf	10
  6550  0679  0845               	movf	??_ISR+1,w
  6551  067A  0084               	movwf	4
  6552  067B  0E44               	swapf	??_ISR^0,w
  6553  067C  0083               	movwf	3
  6554  067D  0EFE               	swapf	btemp,f
  6555  067E  0E7E               	swapf	btemp,w
  6556  067F  0009               	retfie
  6557  0680                     __end_of_ISR:
  6558                           
  6559                           	psect	intentry
  6560  0004                     __pintentry:	
  6561                           ;incstack = 0
  6562 ;; hardware stack exceeded
  6563                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6564                           
  6565  0004                     interrupt_function:
  6566  007E                     saved_w	set	btemp
  6567  0004  00FE               	movwf	btemp
  6568  0005  0E03               	swapf	3,w
  6569  0006  1283               	bcf	3,5	;RP0=0, select bank0
  6570  0007  1303               	bcf	3,6	;RP1=0, select bank0
  6571  0008  00C4               	movwf	??_ISR
  6572  0009  0804               	movf	4,w
  6573  000A  00C5               	movwf	??_ISR+1
  6574  000B  080A               	movf	10,w
  6575  000C  00C6               	movwf	??_ISR+2
  6576  000D  087F               	movf	btemp+1,w
  6577  000E  00C7               	movwf	??_ISR+3
  6578  000F  120A  118A  2DA5   	ljmp	_ISR
  6579                           
  6580                           	psect	text38
  6581  0680                     __ptext38:	
  6582 ;; *************** function ___xxtofl *****************
  6583 ;; Defined at:
  6584 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\xxtofl.c"
  6585 ;; Parameters:    Size  Location     Type
  6586 ;;  sign            1    wreg     unsigned char 
  6587 ;;  val             4    0[COMMON] long 
  6588 ;; Auto vars:     Size  Location     Type
  6589 ;;  sign            1    8[COMMON] unsigned char 
  6590 ;;  arg             4   10[COMMON] unsigned long 
  6591 ;;  exp             1    9[COMMON] unsigned char 
  6592 ;; Return value:  Size  Location     Type
  6593 ;;                  4    0[COMMON] unsigned char 
  6594 ;; Registers used:
  6595 ;;		wreg, status,2, status,0, btemp+1
  6596 ;; Tracked objects:
  6597 ;;		On entry : 0/0
  6598 ;;		On exit  : 0/0
  6599 ;;		Unchanged: 0/0
  6600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6601 ;;      Params:         4       0       0       0       0
  6602 ;;      Locals:         6       0       0       0       0
  6603 ;;      Temps:          4       0       0       0       0
  6604 ;;      Totals:        14       0       0       0       0
  6605 ;;Total ram usage:       14 bytes
  6606 ;; Hardware stack levels used:    1
  6607 ;; This function calls:
  6608 ;;		Nothing
  6609 ;; This function is called by:
  6610 ;;		_ISR
  6611 ;; This function uses a non-reentrant model
  6612 ;;
  6613                           
  6614                           
  6615                           ;psect for function ___xxtofl
  6616  0680                     ___xxtofl:
  6617                           
  6618                           ;incstack = 0
  6619                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  6620                           ;___xxtofl@sign stored from wreg
  6621  0680  00F8               	movwf	___xxtofl@sign
  6622  0681                     i1l3493:
  6623  0681  0878               	movf	___xxtofl@sign,w
  6624  0682  1903               	btfsc	3,2
  6625  0683  2E85               	goto	u340_21
  6626  0684  2E86               	goto	u340_20
  6627  0685                     u340_21:
  6628  0685  2E9A               	goto	i1l3499
  6629  0686                     u340_20:
  6630  0686                     i1l3495:
  6631  0686  1FF3               	btfss	___xxtofl@val+3,7
  6632  0687  2E89               	goto	u341_21
  6633  0688  2E8A               	goto	u341_20
  6634  0689                     u341_21:
  6635  0689  2E9A               	goto	i1l3499
  6636  068A                     u341_20:
  6637  068A                     i1l3497:
  6638  068A  0970               	comf	___xxtofl@val,w
  6639  068B  00FA               	movwf	___xxtofl@arg
  6640  068C  0971               	comf	___xxtofl@val+1,w
  6641  068D  00FB               	movwf	___xxtofl@arg+1
  6642  068E  0972               	comf	___xxtofl@val+2,w
  6643  068F  00FC               	movwf	___xxtofl@arg+2
  6644  0690  0973               	comf	___xxtofl@val+3,w
  6645  0691  00FD               	movwf	___xxtofl@arg+3
  6646  0692  0AFA               	incf	___xxtofl@arg,f
  6647  0693  1903               	skipnz
  6648  0694  0AFB               	incf	___xxtofl@arg+1,f
  6649  0695  1903               	skipnz
  6650  0696  0AFC               	incf	___xxtofl@arg+2,f
  6651  0697  1903               	skipnz
  6652  0698  0AFD               	incf	___xxtofl@arg+3,f
  6653  0699  2EA2               	goto	i1l1182
  6654  069A                     i1l3499:
  6655  069A  0873               	movf	___xxtofl@val+3,w
  6656  069B  00FD               	movwf	___xxtofl@arg+3
  6657  069C  0872               	movf	___xxtofl@val+2,w
  6658  069D  00FC               	movwf	___xxtofl@arg+2
  6659  069E  0871               	movf	___xxtofl@val+1,w
  6660  069F  00FB               	movwf	___xxtofl@arg+1
  6661  06A0  0870               	movf	___xxtofl@val,w
  6662  06A1  00FA               	movwf	___xxtofl@arg
  6663  06A2                     i1l1182:
  6664  06A2  0873               	movf	___xxtofl@val+3,w
  6665  06A3  0472               	iorwf	___xxtofl@val+2,w
  6666  06A4  0471               	iorwf	___xxtofl@val+1,w
  6667  06A5  0470               	iorwf	___xxtofl@val,w
  6668  06A6  1D03               	skipz
  6669  06A7  2EA9               	goto	u342_21
  6670  06A8  2EAA               	goto	u342_20
  6671  06A9                     u342_21:
  6672  06A9  2EB3               	goto	i1l3505
  6673  06AA                     u342_20:
  6674  06AA                     i1l3501:
  6675  06AA  3000               	movlw	0
  6676  06AB  00F3               	movwf	?___xxtofl+3
  6677  06AC  3000               	movlw	0
  6678  06AD  00F2               	movwf	?___xxtofl+2
  6679  06AE  3000               	movlw	0
  6680  06AF  00F1               	movwf	?___xxtofl+1
  6681  06B0  3000               	movlw	0
  6682  06B1  00F0               	movwf	?___xxtofl
  6683  06B2  2F39               	goto	i1l1184
  6684  06B3                     i1l3505:
  6685  06B3  3096               	movlw	150
  6686  06B4  00FF               	movwf	btemp+1
  6687  06B5  087F               	movf	btemp+1,w
  6688  06B6  00F9               	movwf	___xxtofl@exp
  6689  06B7  2EC5               	goto	i1l3511
  6690  06B8                     i1l3507:
  6691  06B8  3001               	movlw	1
  6692  06B9  00FF               	movwf	btemp+1
  6693  06BA  087F               	movf	btemp+1,w
  6694  06BB  07F9               	addwf	___xxtofl@exp,f
  6695  06BC                     i1l3509:
  6696  06BC  3001               	movlw	1
  6697  06BD                     u343_25:
  6698  06BD  1003               	clrc
  6699  06BE  0CFD               	rrf	___xxtofl@arg+3,f
  6700  06BF  0CFC               	rrf	___xxtofl@arg+2,f
  6701  06C0  0CFB               	rrf	___xxtofl@arg+1,f
  6702  06C1  0CFA               	rrf	___xxtofl@arg,f
  6703  06C2  3EFF               	addlw	-1
  6704  06C3  1D03               	skipz
  6705  06C4  2EBD               	goto	u343_25
  6706  06C5                     i1l3511:
  6707  06C5  30FE               	movlw	254
  6708  06C6  057D               	andwf	___xxtofl@arg+3,w
  6709  06C7  1D03               	btfss	3,2
  6710  06C8  2ECA               	goto	u344_21
  6711  06C9  2ECB               	goto	u344_20
  6712  06CA                     u344_21:
  6713  06CA  2EB8               	goto	i1l3507
  6714  06CB                     u344_20:
  6715  06CB  2EE7               	goto	i1l3519
  6716  06CC                     i1l3513:
  6717  06CC  3001               	movlw	1
  6718  06CD  00FF               	movwf	btemp+1
  6719  06CE  087F               	movf	btemp+1,w
  6720  06CF  07F9               	addwf	___xxtofl@exp,f
  6721  06D0                     i1l3515:
  6722  06D0  3001               	movlw	1
  6723  06D1  07FA               	addwf	___xxtofl@arg,f
  6724  06D2  3000               	movlw	0
  6725  06D3  1803               	skipnc
  6726  06D4  3001               	movlw	1
  6727  06D5  07FB               	addwf	___xxtofl@arg+1,f
  6728  06D6  3000               	movlw	0
  6729  06D7  1803               	skipnc
  6730  06D8  3001               	movlw	1
  6731  06D9  07FC               	addwf	___xxtofl@arg+2,f
  6732  06DA  3000               	movlw	0
  6733  06DB  1803               	skipnc
  6734  06DC  3001               	movlw	1
  6735  06DD  07FD               	addwf	___xxtofl@arg+3,f
  6736  06DE                     i1l3517:
  6737  06DE  3001               	movlw	1
  6738  06DF                     u345_25:
  6739  06DF  1003               	clrc
  6740  06E0  0CFD               	rrf	___xxtofl@arg+3,f
  6741  06E1  0CFC               	rrf	___xxtofl@arg+2,f
  6742  06E2  0CFB               	rrf	___xxtofl@arg+1,f
  6743  06E3  0CFA               	rrf	___xxtofl@arg,f
  6744  06E4  3EFF               	addlw	-1
  6745  06E5  1D03               	skipz
  6746  06E6  2EDF               	goto	u345_25
  6747  06E7                     i1l3519:
  6748  06E7  30FF               	movlw	255
  6749  06E8  057D               	andwf	___xxtofl@arg+3,w
  6750  06E9  1D03               	btfss	3,2
  6751  06EA  2EEC               	goto	u346_21
  6752  06EB  2EED               	goto	u346_20
  6753  06EC                     u346_21:
  6754  06EC  2ECC               	goto	i1l3513
  6755  06ED                     u346_20:
  6756  06ED  2EF9               	goto	i1l3523
  6757  06EE                     i1l3521:
  6758  06EE  3001               	movlw	1
  6759  06EF  02F9               	subwf	___xxtofl@exp,f
  6760  06F0  3001               	movlw	1
  6761  06F1  00F4               	movwf	??___xxtofl
  6762  06F2                     u347_25:
  6763  06F2  1003               	clrc
  6764  06F3  0DFA               	rlf	___xxtofl@arg,f
  6765  06F4  0DFB               	rlf	___xxtofl@arg+1,f
  6766  06F5  0DFC               	rlf	___xxtofl@arg+2,f
  6767  06F6  0DFD               	rlf	___xxtofl@arg+3,f
  6768  06F7  0BF4               	decfsz	??___xxtofl,f
  6769  06F8  2EF2               	goto	u347_25
  6770  06F9                     i1l3523:
  6771  06F9  1BFC               	btfsc	___xxtofl@arg+2,7
  6772  06FA  2EFC               	goto	u348_21
  6773  06FB  2EFD               	goto	u348_20
  6774  06FC                     u348_21:
  6775  06FC  2F03               	goto	i1l1195
  6776  06FD                     u348_20:
  6777  06FD                     i1l3525:
  6778  06FD  3002               	movlw	2
  6779  06FE  0279               	subwf	___xxtofl@exp,w
  6780  06FF  1803               	skipnc
  6781  0700  2F02               	goto	u349_21
  6782  0701  2F03               	goto	u349_20
  6783  0702                     u349_21:
  6784  0702  2EEE               	goto	i1l3521
  6785  0703                     u349_20:
  6786  0703                     i1l1195:
  6787  0703  1879               	btfsc	___xxtofl@exp,0
  6788  0704  2F06               	goto	u350_21
  6789  0705  2F07               	goto	u350_20
  6790  0706                     u350_21:
  6791  0706  2F0F               	goto	i1l1196
  6792  0707                     u350_20:
  6793  0707                     i1l3527:
  6794  0707  30FF               	movlw	255
  6795  0708  05FA               	andwf	___xxtofl@arg,f
  6796  0709  30FF               	movlw	255
  6797  070A  05FB               	andwf	___xxtofl@arg+1,f
  6798  070B  307F               	movlw	127
  6799  070C  05FC               	andwf	___xxtofl@arg+2,f
  6800  070D  30FF               	movlw	255
  6801  070E  05FD               	andwf	___xxtofl@arg+3,f
  6802  070F                     i1l1196:
  6803  070F  1003               	clrc
  6804  0710  0CF9               	rrf	___xxtofl@exp,f
  6805  0711                     i1l3529:
  6806  0711  0879               	movf	___xxtofl@exp,w
  6807  0712  00F4               	movwf	??___xxtofl
  6808  0713  01F5               	clrf	??___xxtofl+1
  6809  0714  01F6               	clrf	??___xxtofl+2
  6810  0715  01F7               	clrf	??___xxtofl+3
  6811  0716  3018               	movlw	24
  6812  0717                     u351_25:
  6813  0717  1003               	clrc
  6814  0718  0DF4               	rlf	??___xxtofl,f
  6815  0719  0DF5               	rlf	??___xxtofl+1,f
  6816  071A  0DF6               	rlf	??___xxtofl+2,f
  6817  071B  0DF7               	rlf	??___xxtofl+3,f
  6818  071C                     u351_20:
  6819  071C  3EFF               	addlw	-1
  6820  071D  1D03               	skipz
  6821  071E  2F17               	goto	u351_25
  6822  071F  0874               	movf	??___xxtofl,w
  6823  0720  04FA               	iorwf	___xxtofl@arg,f
  6824  0721  0875               	movf	??___xxtofl+1,w
  6825  0722  04FB               	iorwf	___xxtofl@arg+1,f
  6826  0723  0876               	movf	??___xxtofl+2,w
  6827  0724  04FC               	iorwf	___xxtofl@arg+2,f
  6828  0725  0877               	movf	??___xxtofl+3,w
  6829  0726  04FD               	iorwf	___xxtofl@arg+3,f
  6830  0727                     i1l3531:
  6831  0727  0878               	movf	___xxtofl@sign,w
  6832  0728  1903               	btfsc	3,2
  6833  0729  2F2B               	goto	u352_21
  6834  072A  2F2C               	goto	u352_20
  6835  072B                     u352_21:
  6836  072B  2F31               	goto	i1l3537
  6837  072C                     u352_20:
  6838  072C                     i1l3533:
  6839  072C  1FF3               	btfss	___xxtofl@val+3,7
  6840  072D  2F2F               	goto	u353_21
  6841  072E  2F30               	goto	u353_20
  6842  072F                     u353_21:
  6843  072F  2F31               	goto	i1l3537
  6844  0730                     u353_20:
  6845  0730                     i1l3535:
  6846  0730  17FD               	bsf	___xxtofl@arg+3,7
  6847  0731                     i1l3537:
  6848  0731  087D               	movf	___xxtofl@arg+3,w
  6849  0732  00F3               	movwf	?___xxtofl+3
  6850  0733  087C               	movf	___xxtofl@arg+2,w
  6851  0734  00F2               	movwf	?___xxtofl+2
  6852  0735  087B               	movf	___xxtofl@arg+1,w
  6853  0736  00F1               	movwf	?___xxtofl+1
  6854  0737  087A               	movf	___xxtofl@arg,w
  6855  0738  00F0               	movwf	?___xxtofl
  6856  0739                     i1l1184:
  6857  0739  0008               	return
  6858  073A                     __end_of___xxtofl:
  6859                           
  6860                           	psect	text39
  6861  0E83                     __ptext39:	
  6862 ;; *************** function ___fltol *****************
  6863 ;; Defined at:
  6864 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fltol.c"
  6865 ;; Parameters:    Size  Location     Type
  6866 ;;  f1              4   26[BANK0 ] unsigned char 
  6867 ;; Auto vars:     Size  Location     Type
  6868 ;;  exp1            1   35[BANK0 ] unsigned char 
  6869 ;;  sign1           1   34[BANK0 ] unsigned char 
  6870 ;; Return value:  Size  Location     Type
  6871 ;;                  4   26[BANK0 ] long 
  6872 ;; Registers used:
  6873 ;;		wreg, status,2, status,0, btemp+1
  6874 ;; Tracked objects:
  6875 ;;		On entry : 0/0
  6876 ;;		On exit  : 0/0
  6877 ;;		Unchanged: 0/0
  6878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6879 ;;      Params:         0       4       0       0       0
  6880 ;;      Locals:         0       2       0       0       0
  6881 ;;      Temps:          0       4       0       0       0
  6882 ;;      Totals:         0      10       0       0       0
  6883 ;;Total ram usage:       10 bytes
  6884 ;; Hardware stack levels used:    1
  6885 ;; This function calls:
  6886 ;;		Nothing
  6887 ;; This function is called by:
  6888 ;;		_ISR
  6889 ;; This function uses a non-reentrant model
  6890 ;;
  6891                           
  6892                           
  6893                           ;psect for function ___fltol
  6894  0E83                     ___fltol:
  6895  0E83                     i1l3313:	
  6896                           ;incstack = 0
  6897                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  6898                           
  6899  0E83  1003               	clrc
  6900  0E84  1283               	bcf	3,5	;RP0=0, select bank0
  6901  0E85  1303               	bcf	3,6	;RP1=0, select bank0
  6902  0E86  0D3C               	rlf	___fltol@f1+2,w
  6903  0E87  0D3D               	rlf	___fltol@f1+3,w
  6904  0E88  00FF               	movwf	btemp+1
  6905  0E89  087F               	movf	btemp+1,w
  6906  0E8A  00C3               	movwf	___fltol@exp1
  6907  0E8B  0843               	movf	___fltol@exp1,w
  6908  0E8C  1D03               	btfss	3,2
  6909  0E8D  2E8F               	goto	u293_21
  6910  0E8E  2E90               	goto	u293_20
  6911  0E8F                     u293_21:
  6912  0E8F  2E99               	goto	i1l3319
  6913  0E90                     u293_20:
  6914  0E90                     i1l3315:
  6915  0E90  3000               	movlw	0
  6916  0E91  00BD               	movwf	?___fltol+3
  6917  0E92  3000               	movlw	0
  6918  0E93  00BC               	movwf	?___fltol+2
  6919  0E94  3000               	movlw	0
  6920  0E95  00BB               	movwf	?___fltol+1
  6921  0E96  3000               	movlw	0
  6922  0E97  00BA               	movwf	?___fltol
  6923  0E98  2EFE               	goto	i1l935
  6924  0E99                     i1l3319:
  6925  0E99  083A               	movf	___fltol@f1,w
  6926  0E9A  00BE               	movwf	??___fltol
  6927  0E9B  083B               	movf	___fltol@f1+1,w
  6928  0E9C  00BF               	movwf	??___fltol+1
  6929  0E9D  083C               	movf	___fltol@f1+2,w
  6930  0E9E  00C0               	movwf	??___fltol+2
  6931  0E9F  083D               	movf	___fltol@f1+3,w
  6932  0EA0  00C1               	movwf	??___fltol+3
  6933  0EA1  301F               	movlw	31
  6934  0EA2                     u294_25:
  6935  0EA2  1003               	clrc
  6936  0EA3  0CC1               	rrf	??___fltol+3,f
  6937  0EA4  0CC0               	rrf	??___fltol+2,f
  6938  0EA5  0CBF               	rrf	??___fltol+1,f
  6939  0EA6  0CBE               	rrf	??___fltol,f
  6940  0EA7                     u294_20:
  6941  0EA7  3EFF               	addlw	-1
  6942  0EA8  1D03               	skipz
  6943  0EA9  2EA2               	goto	u294_25
  6944  0EAA  083E               	movf	??___fltol,w
  6945  0EAB  00FF               	movwf	btemp+1
  6946  0EAC  087F               	movf	btemp+1,w
  6947  0EAD  00C2               	movwf	___fltol@sign1
  6948  0EAE                     i1l3321:
  6949  0EAE  17BC               	bsf	___fltol@f1+2,7
  6950  0EAF                     i1l3323:
  6951  0EAF  30FF               	movlw	255
  6952  0EB0  05BA               	andwf	___fltol@f1,f
  6953  0EB1  30FF               	movlw	255
  6954  0EB2  05BB               	andwf	___fltol@f1+1,f
  6955  0EB3  30FF               	movlw	255
  6956  0EB4  05BC               	andwf	___fltol@f1+2,f
  6957  0EB5  3000               	movlw	0
  6958  0EB6  05BD               	andwf	___fltol@f1+3,f
  6959  0EB7                     i1l3325:
  6960  0EB7  3096               	movlw	150
  6961  0EB8  02C3               	subwf	___fltol@exp1,f
  6962  0EB9                     i1l3327:
  6963  0EB9  1FC3               	btfss	___fltol@exp1,7
  6964  0EBA  2EBC               	goto	u295_21
  6965  0EBB  2EBD               	goto	u295_20
  6966  0EBC                     u295_21:
  6967  0EBC  2ED7               	goto	i1l3339
  6968  0EBD                     u295_20:
  6969  0EBD                     i1l3329:
  6970  0EBD  0843               	movf	___fltol@exp1,w
  6971  0EBE  3A80               	xorlw	128
  6972  0EBF  3E97               	addlw	151
  6973  0EC0  1803               	skipnc
  6974  0EC1  2EC3               	goto	u296_21
  6975  0EC2  2EC4               	goto	u296_20
  6976  0EC3                     u296_21:
  6977  0EC3  2EC5               	goto	i1l3335
  6978  0EC4                     u296_20:
  6979  0EC4  2E90               	goto	i1l3315
  6980  0EC5                     i1l3335:
  6981  0EC5  3001               	movlw	1
  6982  0EC6                     u297_25:
  6983  0EC6  1003               	clrc
  6984  0EC7  0CBD               	rrf	___fltol@f1+3,f
  6985  0EC8  0CBC               	rrf	___fltol@f1+2,f
  6986  0EC9  0CBB               	rrf	___fltol@f1+1,f
  6987  0ECA  0CBA               	rrf	___fltol@f1,f
  6988  0ECB  3EFF               	addlw	-1
  6989  0ECC  1D03               	skipz
  6990  0ECD  2EC6               	goto	u297_25
  6991  0ECE                     i1l3337:
  6992  0ECE  3001               	movlw	1
  6993  0ECF  00FF               	movwf	btemp+1
  6994  0ED0  087F               	movf	btemp+1,w
  6995  0ED1  07C3               	addwf	___fltol@exp1,f
  6996  0ED2  1D03               	btfss	3,2
  6997  0ED3  2ED5               	goto	u298_21
  6998  0ED4  2ED6               	goto	u298_20
  6999  0ED5                     u298_21:
  7000  0ED5  2EC5               	goto	i1l3335
  7001  0ED6                     u298_20:
  7002  0ED6  2EEE               	goto	i1l3347
  7003  0ED7                     i1l3339:
  7004  0ED7  3020               	movlw	32
  7005  0ED8  0243               	subwf	___fltol@exp1,w
  7006  0ED9  1C03               	skipc
  7007  0EDA  2EDC               	goto	u299_21
  7008  0EDB  2EDD               	goto	u299_20
  7009  0EDC                     u299_21:
  7010  0EDC  2EE9               	goto	i1l942
  7011  0EDD                     u299_20:
  7012  0EDD  2E90               	goto	i1l3315
  7013  0EDE                     i1l3345:
  7014  0EDE  3001               	movlw	1
  7015  0EDF  00BE               	movwf	??___fltol
  7016  0EE0                     u300_25:
  7017  0EE0  1003               	clrc
  7018  0EE1  0DBA               	rlf	___fltol@f1,f
  7019  0EE2  0DBB               	rlf	___fltol@f1+1,f
  7020  0EE3  0DBC               	rlf	___fltol@f1+2,f
  7021  0EE4  0DBD               	rlf	___fltol@f1+3,f
  7022  0EE5  0BBE               	decfsz	??___fltol,f
  7023  0EE6  2EE0               	goto	u300_25
  7024  0EE7  3001               	movlw	1
  7025  0EE8  02C3               	subwf	___fltol@exp1,f
  7026  0EE9                     i1l942:
  7027  0EE9  0843               	movf	___fltol@exp1,w
  7028  0EEA  1D03               	btfss	3,2
  7029  0EEB  2EED               	goto	u301_21
  7030  0EEC  2EEE               	goto	u301_20
  7031  0EED                     u301_21:
  7032  0EED  2EDE               	goto	i1l3345
  7033  0EEE                     u301_20:
  7034  0EEE                     i1l3347:
  7035  0EEE  0842               	movf	___fltol@sign1,w
  7036  0EEF  1903               	btfsc	3,2
  7037  0EF0  2EF2               	goto	u302_21
  7038  0EF1  2EF3               	goto	u302_20
  7039  0EF2                     u302_21:
  7040  0EF2  2EFE               	goto	i1l945
  7041  0EF3                     u302_20:
  7042  0EF3                     i1l3349:
  7043  0EF3  09BA               	comf	___fltol@f1,f
  7044  0EF4  09BB               	comf	___fltol@f1+1,f
  7045  0EF5  09BC               	comf	___fltol@f1+2,f
  7046  0EF6  09BD               	comf	___fltol@f1+3,f
  7047  0EF7  0ABA               	incf	___fltol@f1,f
  7048  0EF8  1903               	skipnz
  7049  0EF9  0ABB               	incf	___fltol@f1+1,f
  7050  0EFA  1903               	skipnz
  7051  0EFB  0ABC               	incf	___fltol@f1+2,f
  7052  0EFC  1903               	skipnz
  7053  0EFD  0ABD               	incf	___fltol@f1+3,f
  7054  0EFE                     i1l945:
  7055  0EFE                     i1l935:
  7056  0EFE  0008               	return
  7057  0EFF                     __end_of___fltol:
  7058                           
  7059                           	psect	text40
  7060  0037                     __ptext40:	
  7061 ;; *************** function ___flmul *****************
  7062 ;; Defined at:
  7063 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcmul.c"
  7064 ;; Parameters:    Size  Location     Type
  7065 ;;  b               4    0[BANK0 ] long 
  7066 ;;  a               4    4[BANK0 ] long 
  7067 ;; Auto vars:     Size  Location     Type
  7068 ;;  prod            4   20[BANK0 ] struct .
  7069 ;;  grs             4   14[BANK0 ] unsigned long 
  7070 ;;  temp            2   24[BANK0 ] struct .
  7071 ;;  bexp            1   19[BANK0 ] unsigned char 
  7072 ;;  aexp            1   18[BANK0 ] unsigned char 
  7073 ;;  sign            1   13[BANK0 ] unsigned char 
  7074 ;; Return value:  Size  Location     Type
  7075 ;;                  4    0[BANK0 ] unsigned char 
  7076 ;; Registers used:
  7077 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7078 ;; Tracked objects:
  7079 ;;		On entry : 0/0
  7080 ;;		On exit  : 0/0
  7081 ;;		Unchanged: 0/0
  7082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7083 ;;      Params:         0       8       0       0       0
  7084 ;;      Locals:         0      13       0       0       0
  7085 ;;      Temps:          0       5       0       0       0
  7086 ;;      Totals:         0      26       0       0       0
  7087 ;;Total ram usage:       26 bytes
  7088 ;; Hardware stack levels used:    1
  7089 ;; Hardware stack levels required when called:    1
  7090 ;; This function calls:
  7091 ;;		__Umul8_16
  7092 ;; This function is called by:
  7093 ;;		_ISR
  7094 ;; This function uses a non-reentrant model
  7095 ;;
  7096                           
  7097                           
  7098                           ;psect for function ___flmul
  7099  0037                     ___flmul:
  7100  0037                     i1l3351:	
  7101                           ;incstack = 0
  7102 ;; hardware stack exceeded
  7103                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7104                           
  7105  0037  1283               	bcf	3,5	;RP0=0, select bank0
  7106  0038  1303               	bcf	3,6	;RP1=0, select bank0
  7107  0039  0823               	movf	___flmul@b+3,w
  7108  003A  3980               	andlw	128
  7109  003B  00FF               	movwf	btemp+1
  7110  003C  087F               	movf	btemp+1,w
  7111  003D  00AD               	movwf	___flmul@sign
  7112  003E                     i1l3353:
  7113  003E  0823               	movf	___flmul@b+3,w
  7114  003F  00A8               	movwf	??___flmul
  7115  0040  0728               	addwf	??___flmul,w
  7116  0041  00FF               	movwf	btemp+1
  7117  0042  087F               	movf	btemp+1,w
  7118  0043  00B3               	movwf	___flmul@bexp
  7119  0044                     i1l3355:
  7120  0044  1FA2               	btfss	___flmul@b+2,7
  7121  0045  2847               	goto	u303_21
  7122  0046  2848               	goto	u303_20
  7123  0047                     u303_21:
  7124  0047  2849               	goto	i1l3359
  7125  0048                     u303_20:
  7126  0048                     i1l3357:
  7127  0048  1433               	bsf	___flmul@bexp,0
  7128  0049                     i1l3359:
  7129  0049  0833               	movf	___flmul@bexp,w
  7130  004A  1903               	btfsc	3,2
  7131  004B  284D               	goto	u304_21
  7132  004C  284E               	goto	u304_20
  7133  004D                     u304_21:
  7134  004D  285D               	goto	i1l3367
  7135  004E                     u304_20:
  7136  004E                     i1l3361:
  7137  004E  0A33               	incf	___flmul@bexp,w
  7138  004F  1D03               	btfss	3,2
  7139  0050  2852               	goto	u305_21
  7140  0051  2853               	goto	u305_20
  7141  0052                     u305_21:
  7142  0052  285B               	goto	i1l3365
  7143  0053                     u305_20:
  7144  0053                     i1l3363:
  7145  0053  3000               	movlw	0
  7146  0054  00A3               	movwf	___flmul@b+3
  7147  0055  3000               	movlw	0
  7148  0056  00A2               	movwf	___flmul@b+2
  7149  0057  3000               	movlw	0
  7150  0058  00A1               	movwf	___flmul@b+1
  7151  0059  3000               	movlw	0
  7152  005A  00A0               	movwf	___flmul@b
  7153  005B                     i1l3365:
  7154  005B  17A2               	bsf	___flmul@b+2,7
  7155  005C  2865               	goto	i1l3369
  7156  005D                     i1l3367:
  7157  005D  3000               	movlw	0
  7158  005E  00A3               	movwf	___flmul@b+3
  7159  005F  3000               	movlw	0
  7160  0060  00A2               	movwf	___flmul@b+2
  7161  0061  3000               	movlw	0
  7162  0062  00A1               	movwf	___flmul@b+1
  7163  0063  3000               	movlw	0
  7164  0064  00A0               	movwf	___flmul@b
  7165  0065                     i1l3369:
  7166  0065  0827               	movf	___flmul@a+3,w
  7167  0066  3980               	andlw	128
  7168  0067  00FF               	movwf	btemp+1
  7169  0068  087F               	movf	btemp+1,w
  7170  0069  06AD               	xorwf	___flmul@sign,f
  7171  006A                     i1l3371:
  7172  006A  0827               	movf	___flmul@a+3,w
  7173  006B  00A8               	movwf	??___flmul
  7174  006C  0728               	addwf	??___flmul,w
  7175  006D  00FF               	movwf	btemp+1
  7176  006E  087F               	movf	btemp+1,w
  7177  006F  00B2               	movwf	___flmul@aexp
  7178  0070                     i1l3373:
  7179  0070  1FA6               	btfss	___flmul@a+2,7
  7180  0071  2873               	goto	u306_21
  7181  0072  2874               	goto	u306_20
  7182  0073                     u306_21:
  7183  0073  2875               	goto	i1l3377
  7184  0074                     u306_20:
  7185  0074                     i1l3375:
  7186  0074  1432               	bsf	___flmul@aexp,0
  7187  0075                     i1l3377:
  7188  0075  0832               	movf	___flmul@aexp,w
  7189  0076  1903               	btfsc	3,2
  7190  0077  2879               	goto	u307_21
  7191  0078  287A               	goto	u307_20
  7192  0079                     u307_21:
  7193  0079  2889               	goto	i1l3385
  7194  007A                     u307_20:
  7195  007A                     i1l3379:
  7196  007A  0A32               	incf	___flmul@aexp,w
  7197  007B  1D03               	btfss	3,2
  7198  007C  287E               	goto	u308_21
  7199  007D  287F               	goto	u308_20
  7200  007E                     u308_21:
  7201  007E  2887               	goto	i1l3383
  7202  007F                     u308_20:
  7203  007F                     i1l3381:
  7204  007F  3000               	movlw	0
  7205  0080  00A7               	movwf	___flmul@a+3
  7206  0081  3000               	movlw	0
  7207  0082  00A6               	movwf	___flmul@a+2
  7208  0083  3000               	movlw	0
  7209  0084  00A5               	movwf	___flmul@a+1
  7210  0085  3000               	movlw	0
  7211  0086  00A4               	movwf	___flmul@a
  7212  0087                     i1l3383:
  7213  0087  17A6               	bsf	___flmul@a+2,7
  7214  0088  2891               	goto	i1l3387
  7215  0089                     i1l3385:
  7216  0089  3000               	movlw	0
  7217  008A  00A7               	movwf	___flmul@a+3
  7218  008B  3000               	movlw	0
  7219  008C  00A6               	movwf	___flmul@a+2
  7220  008D  3000               	movlw	0
  7221  008E  00A5               	movwf	___flmul@a+1
  7222  008F  3000               	movlw	0
  7223  0090  00A4               	movwf	___flmul@a
  7224  0091                     i1l3387:
  7225  0091  0832               	movf	___flmul@aexp,w
  7226  0092  1903               	btfsc	3,2
  7227  0093  2895               	goto	u309_21
  7228  0094  2896               	goto	u309_20
  7229  0095                     u309_21:
  7230  0095  289B               	goto	i1l3391
  7231  0096                     u309_20:
  7232  0096                     i1l3389:
  7233  0096  0833               	movf	___flmul@bexp,w
  7234  0097  1D03               	btfss	3,2
  7235  0098  289A               	goto	u310_21
  7236  0099  289B               	goto	u310_20
  7237  009A                     u310_21:
  7238  009A  28A4               	goto	i1l3395
  7239  009B                     u310_20:
  7240  009B                     i1l3391:
  7241  009B  3000               	movlw	0
  7242  009C  00A3               	movwf	?___flmul+3
  7243  009D  3000               	movlw	0
  7244  009E  00A2               	movwf	?___flmul+2
  7245  009F  3000               	movlw	0
  7246  00A0  00A1               	movwf	?___flmul+1
  7247  00A1  3000               	movlw	0
  7248  00A2  00A0               	movwf	?___flmul
  7249  00A3  2B97               	goto	i1l1138
  7250  00A4                     i1l3395:
  7251  00A4  0820               	movf	___flmul@b,w
  7252  00A5  00FF               	movwf	btemp+1
  7253  00A6  087F               	movf	btemp+1,w
  7254  00A7  00F0               	movwf	__Umul8_16@multiplicand
  7255  00A8  0826               	movf	___flmul@a+2,w
  7256  00A9  120A  158A  218B  120A  118A  	fcall	__Umul8_16
  7257  00AE  0871               	movf	?__Umul8_16+1,w
  7258  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  7259  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  7260  00B1  00B9               	movwf	___flmul@temp+1
  7261  00B2  0870               	movf	?__Umul8_16,w
  7262  00B3  00B8               	movwf	___flmul@temp
  7263  00B4                     i1l3397:
  7264  00B4  0838               	movf	___flmul@temp,w
  7265  00B5  00A8               	movwf	??___flmul
  7266  00B6  01A9               	clrf	??___flmul+1
  7267  00B7  01AA               	clrf	??___flmul+2
  7268  00B8  01AB               	clrf	??___flmul+3
  7269  00B9  082B               	movf	??___flmul+3,w
  7270  00BA  00B1               	movwf	___flmul@grs+3
  7271  00BB  082A               	movf	??___flmul+2,w
  7272  00BC  00B0               	movwf	___flmul@grs+2
  7273  00BD  0829               	movf	??___flmul+1,w
  7274  00BE  00AF               	movwf	___flmul@grs+1
  7275  00BF  0828               	movf	??___flmul,w
  7276  00C0  00AE               	movwf	___flmul@grs
  7277  00C1                     i1l3399:
  7278  00C1  0839               	movf	___flmul@temp+1,w
  7279  00C2  00A8               	movwf	??___flmul
  7280  00C3  01A9               	clrf	??___flmul+1
  7281  00C4  01AA               	clrf	??___flmul+2
  7282  00C5  01AB               	clrf	??___flmul+3
  7283  00C6  082B               	movf	??___flmul+3,w
  7284  00C7  00B7               	movwf	___flmul@prod+3
  7285  00C8  082A               	movf	??___flmul+2,w
  7286  00C9  00B6               	movwf	___flmul@prod+2
  7287  00CA  0829               	movf	??___flmul+1,w
  7288  00CB  00B5               	movwf	___flmul@prod+1
  7289  00CC  0828               	movf	??___flmul,w
  7290  00CD  00B4               	movwf	___flmul@prod
  7291  00CE  0821               	movf	___flmul@b+1,w
  7292  00CF  00FF               	movwf	btemp+1
  7293  00D0  087F               	movf	btemp+1,w
  7294  00D1  00F0               	movwf	__Umul8_16@multiplicand
  7295  00D2  0825               	movf	___flmul@a+1,w
  7296  00D3  120A  158A  218B  120A  118A  	fcall	__Umul8_16
  7297  00D8  0871               	movf	?__Umul8_16+1,w
  7298  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  7299  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  7300  00DB  00B9               	movwf	___flmul@temp+1
  7301  00DC  0870               	movf	?__Umul8_16,w
  7302  00DD  00B8               	movwf	___flmul@temp
  7303  00DE                     i1l3401:
  7304  00DE  0838               	movf	___flmul@temp,w
  7305  00DF  00A8               	movwf	??___flmul
  7306  00E0  01A9               	clrf	??___flmul+1
  7307  00E1  01AA               	clrf	??___flmul+2
  7308  00E2  01AB               	clrf	??___flmul+3
  7309  00E3  0828               	movf	??___flmul,w
  7310  00E4  07AE               	addwf	___flmul@grs,f
  7311  00E5  0829               	movf	??___flmul+1,w
  7312  00E6  1103               	clrz
  7313  00E7  1803               	skipnc
  7314  00E8  3E01               	addlw	1
  7315  00E9  1903               	skipnz
  7316  00EA  28EC               	goto	u311_21
  7317  00EB  07AF               	addwf	___flmul@grs+1,f
  7318  00EC                     u311_21:
  7319  00EC  082A               	movf	??___flmul+2,w
  7320  00ED  1103               	clrz
  7321  00EE  1803               	skipnc
  7322  00EF  3E01               	addlw	1
  7323  00F0  1903               	skipnz
  7324  00F1  28F3               	goto	u311_22
  7325  00F2  07B0               	addwf	___flmul@grs+2,f
  7326  00F3                     u311_22:
  7327  00F3  082B               	movf	??___flmul+3,w
  7328  00F4  1103               	clrz
  7329  00F5  1803               	skipnc
  7330  00F6  3E01               	addlw	1
  7331  00F7  1903               	skipnz
  7332  00F8  28FA               	goto	u311_23
  7333  00F9  07B1               	addwf	___flmul@grs+3,f
  7334  00FA                     u311_23:
  7335  00FA                     i1l3403:
  7336  00FA  0839               	movf	___flmul@temp+1,w
  7337  00FB  00A8               	movwf	??___flmul
  7338  00FC  01A9               	clrf	??___flmul+1
  7339  00FD  01AA               	clrf	??___flmul+2
  7340  00FE  01AB               	clrf	??___flmul+3
  7341  00FF  0828               	movf	??___flmul,w
  7342  0100  07B4               	addwf	___flmul@prod,f
  7343  0101  0829               	movf	??___flmul+1,w
  7344  0102  1103               	clrz
  7345  0103  1803               	skipnc
  7346  0104  3E01               	addlw	1
  7347  0105  1903               	skipnz
  7348  0106  2908               	goto	u312_21
  7349  0107  07B5               	addwf	___flmul@prod+1,f
  7350  0108                     u312_21:
  7351  0108  082A               	movf	??___flmul+2,w
  7352  0109  1103               	clrz
  7353  010A  1803               	skipnc
  7354  010B  3E01               	addlw	1
  7355  010C  1903               	skipnz
  7356  010D  290F               	goto	u312_22
  7357  010E  07B6               	addwf	___flmul@prod+2,f
  7358  010F                     u312_22:
  7359  010F  082B               	movf	??___flmul+3,w
  7360  0110  1103               	clrz
  7361  0111  1803               	skipnc
  7362  0112  3E01               	addlw	1
  7363  0113  1903               	skipnz
  7364  0114  2916               	goto	u312_23
  7365  0115  07B7               	addwf	___flmul@prod+3,f
  7366  0116                     u312_23:
  7367  0116  0822               	movf	___flmul@b+2,w
  7368  0117  00FF               	movwf	btemp+1
  7369  0118  087F               	movf	btemp+1,w
  7370  0119  00F0               	movwf	__Umul8_16@multiplicand
  7371  011A  0824               	movf	___flmul@a,w
  7372  011B  120A  158A  218B  120A  118A  	fcall	__Umul8_16
  7373  0120  0871               	movf	?__Umul8_16+1,w
  7374  0121  1283               	bcf	3,5	;RP0=0, select bank0
  7375  0122  1303               	bcf	3,6	;RP1=0, select bank0
  7376  0123  00B9               	movwf	___flmul@temp+1
  7377  0124  0870               	movf	?__Umul8_16,w
  7378  0125  00B8               	movwf	___flmul@temp
  7379  0126                     i1l3405:
  7380  0126  0838               	movf	___flmul@temp,w
  7381  0127  00A8               	movwf	??___flmul
  7382  0128  01A9               	clrf	??___flmul+1
  7383  0129  01AA               	clrf	??___flmul+2
  7384  012A  01AB               	clrf	??___flmul+3
  7385  012B  0828               	movf	??___flmul,w
  7386  012C  07AE               	addwf	___flmul@grs,f
  7387  012D  0829               	movf	??___flmul+1,w
  7388  012E  1103               	clrz
  7389  012F  1803               	skipnc
  7390  0130  3E01               	addlw	1
  7391  0131  1903               	skipnz
  7392  0132  2934               	goto	u313_21
  7393  0133  07AF               	addwf	___flmul@grs+1,f
  7394  0134                     u313_21:
  7395  0134  082A               	movf	??___flmul+2,w
  7396  0135  1103               	clrz
  7397  0136  1803               	skipnc
  7398  0137  3E01               	addlw	1
  7399  0138  1903               	skipnz
  7400  0139  293B               	goto	u313_22
  7401  013A  07B0               	addwf	___flmul@grs+2,f
  7402  013B                     u313_22:
  7403  013B  082B               	movf	??___flmul+3,w
  7404  013C  1103               	clrz
  7405  013D  1803               	skipnc
  7406  013E  3E01               	addlw	1
  7407  013F  1903               	skipnz
  7408  0140  2942               	goto	u313_23
  7409  0141  07B1               	addwf	___flmul@grs+3,f
  7410  0142                     u313_23:
  7411  0142                     i1l3407:
  7412  0142  0839               	movf	___flmul@temp+1,w
  7413  0143  00A8               	movwf	??___flmul
  7414  0144  01A9               	clrf	??___flmul+1
  7415  0145  01AA               	clrf	??___flmul+2
  7416  0146  01AB               	clrf	??___flmul+3
  7417  0147  0828               	movf	??___flmul,w
  7418  0148  07B4               	addwf	___flmul@prod,f
  7419  0149  0829               	movf	??___flmul+1,w
  7420  014A  1103               	clrz
  7421  014B  1803               	skipnc
  7422  014C  3E01               	addlw	1
  7423  014D  1903               	skipnz
  7424  014E  2950               	goto	u314_21
  7425  014F  07B5               	addwf	___flmul@prod+1,f
  7426  0150                     u314_21:
  7427  0150  082A               	movf	??___flmul+2,w
  7428  0151  1103               	clrz
  7429  0152  1803               	skipnc
  7430  0153  3E01               	addlw	1
  7431  0154  1903               	skipnz
  7432  0155  2957               	goto	u314_22
  7433  0156  07B6               	addwf	___flmul@prod+2,f
  7434  0157                     u314_22:
  7435  0157  082B               	movf	??___flmul+3,w
  7436  0158  1103               	clrz
  7437  0159  1803               	skipnc
  7438  015A  3E01               	addlw	1
  7439  015B  1903               	skipnz
  7440  015C  295E               	goto	u314_23
  7441  015D  07B7               	addwf	___flmul@prod+3,f
  7442  015E                     u314_23:
  7443  015E                     i1l3409:
  7444  015E  3008               	movlw	8
  7445  015F  00A8               	movwf	??___flmul
  7446  0160                     u315_25:
  7447  0160  1003               	clrc
  7448  0161  0DAE               	rlf	___flmul@grs,f
  7449  0162  0DAF               	rlf	___flmul@grs+1,f
  7450  0163  0DB0               	rlf	___flmul@grs+2,f
  7451  0164  0DB1               	rlf	___flmul@grs+3,f
  7452  0165  0BA8               	decfsz	??___flmul,f
  7453  0166  2960               	goto	u315_25
  7454  0167                     i1l3411:
  7455  0167  0821               	movf	___flmul@b+1,w
  7456  0168  00FF               	movwf	btemp+1
  7457  0169  087F               	movf	btemp+1,w
  7458  016A  00F0               	movwf	__Umul8_16@multiplicand
  7459  016B  0824               	movf	___flmul@a,w
  7460  016C  120A  158A  218B  120A  118A  	fcall	__Umul8_16
  7461  0171  0871               	movf	?__Umul8_16+1,w
  7462  0172  1283               	bcf	3,5	;RP0=0, select bank0
  7463  0173  1303               	bcf	3,6	;RP1=0, select bank0
  7464  0174  00B9               	movwf	___flmul@temp+1
  7465  0175  0870               	movf	?__Umul8_16,w
  7466  0176  00B8               	movwf	___flmul@temp
  7467  0177                     i1l3413:
  7468  0177  0838               	movf	___flmul@temp,w
  7469  0178  00A8               	movwf	??___flmul
  7470  0179  0839               	movf	___flmul@temp+1,w
  7471  017A  00A9               	movwf	??___flmul+1
  7472  017B  01AA               	clrf	??___flmul+2
  7473  017C  01AB               	clrf	??___flmul+3
  7474  017D  0828               	movf	??___flmul,w
  7475  017E  07AE               	addwf	___flmul@grs,f
  7476  017F  0829               	movf	??___flmul+1,w
  7477  0180  1103               	clrz
  7478  0181  1803               	skipnc
  7479  0182  3E01               	addlw	1
  7480  0183  1903               	skipnz
  7481  0184  2986               	goto	u316_21
  7482  0185  07AF               	addwf	___flmul@grs+1,f
  7483  0186                     u316_21:
  7484  0186  082A               	movf	??___flmul+2,w
  7485  0187  1103               	clrz
  7486  0188  1803               	skipnc
  7487  0189  3E01               	addlw	1
  7488  018A  1903               	skipnz
  7489  018B  298D               	goto	u316_22
  7490  018C  07B0               	addwf	___flmul@grs+2,f
  7491  018D                     u316_22:
  7492  018D  082B               	movf	??___flmul+3,w
  7493  018E  1103               	clrz
  7494  018F  1803               	skipnc
  7495  0190  3E01               	addlw	1
  7496  0191  1903               	skipnz
  7497  0192  2994               	goto	u316_23
  7498  0193  07B1               	addwf	___flmul@grs+3,f
  7499  0194                     u316_23:
  7500  0194                     i1l3415:
  7501  0194  0820               	movf	___flmul@b,w
  7502  0195  00FF               	movwf	btemp+1
  7503  0196  087F               	movf	btemp+1,w
  7504  0197  00F0               	movwf	__Umul8_16@multiplicand
  7505  0198  0825               	movf	___flmul@a+1,w
  7506  0199  120A  158A  218B  120A  118A  	fcall	__Umul8_16
  7507  019E  0871               	movf	?__Umul8_16+1,w
  7508  019F  1283               	bcf	3,5	;RP0=0, select bank0
  7509  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  7510  01A1  00B9               	movwf	___flmul@temp+1
  7511  01A2  0870               	movf	?__Umul8_16,w
  7512  01A3  00B8               	movwf	___flmul@temp
  7513  01A4                     i1l3417:
  7514  01A4  0838               	movf	___flmul@temp,w
  7515  01A5  00A8               	movwf	??___flmul
  7516  01A6  0839               	movf	___flmul@temp+1,w
  7517  01A7  00A9               	movwf	??___flmul+1
  7518  01A8  01AA               	clrf	??___flmul+2
  7519  01A9  01AB               	clrf	??___flmul+3
  7520  01AA  0828               	movf	??___flmul,w
  7521  01AB  07AE               	addwf	___flmul@grs,f
  7522  01AC  0829               	movf	??___flmul+1,w
  7523  01AD  1103               	clrz
  7524  01AE  1803               	skipnc
  7525  01AF  3E01               	addlw	1
  7526  01B0  1903               	skipnz
  7527  01B1  29B3               	goto	u317_21
  7528  01B2  07AF               	addwf	___flmul@grs+1,f
  7529  01B3                     u317_21:
  7530  01B3  082A               	movf	??___flmul+2,w
  7531  01B4  1103               	clrz
  7532  01B5  1803               	skipnc
  7533  01B6  3E01               	addlw	1
  7534  01B7  1903               	skipnz
  7535  01B8  29BA               	goto	u317_22
  7536  01B9  07B0               	addwf	___flmul@grs+2,f
  7537  01BA                     u317_22:
  7538  01BA  082B               	movf	??___flmul+3,w
  7539  01BB  1103               	clrz
  7540  01BC  1803               	skipnc
  7541  01BD  3E01               	addlw	1
  7542  01BE  1903               	skipnz
  7543  01BF  29C1               	goto	u317_23
  7544  01C0  07B1               	addwf	___flmul@grs+3,f
  7545  01C1                     u317_23:
  7546  01C1                     i1l3419:
  7547  01C1  3008               	movlw	8
  7548  01C2  00A8               	movwf	??___flmul
  7549  01C3                     u318_25:
  7550  01C3  1003               	clrc
  7551  01C4  0DAE               	rlf	___flmul@grs,f
  7552  01C5  0DAF               	rlf	___flmul@grs+1,f
  7553  01C6  0DB0               	rlf	___flmul@grs+2,f
  7554  01C7  0DB1               	rlf	___flmul@grs+3,f
  7555  01C8  0BA8               	decfsz	??___flmul,f
  7556  01C9  29C3               	goto	u318_25
  7557  01CA  0820               	movf	___flmul@b,w
  7558  01CB  00FF               	movwf	btemp+1
  7559  01CC  087F               	movf	btemp+1,w
  7560  01CD  00F0               	movwf	__Umul8_16@multiplicand
  7561  01CE  0824               	movf	___flmul@a,w
  7562  01CF  120A  158A  218B  120A  118A  	fcall	__Umul8_16
  7563  01D4  0871               	movf	?__Umul8_16+1,w
  7564  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  7565  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  7566  01D7  00B9               	movwf	___flmul@temp+1
  7567  01D8  0870               	movf	?__Umul8_16,w
  7568  01D9  00B8               	movwf	___flmul@temp
  7569  01DA                     i1l3421:
  7570  01DA  0838               	movf	___flmul@temp,w
  7571  01DB  00A8               	movwf	??___flmul
  7572  01DC  0839               	movf	___flmul@temp+1,w
  7573  01DD  00A9               	movwf	??___flmul+1
  7574  01DE  01AA               	clrf	??___flmul+2
  7575  01DF  01AB               	clrf	??___flmul+3
  7576  01E0  0828               	movf	??___flmul,w
  7577  01E1  07AE               	addwf	___flmul@grs,f
  7578  01E2  0829               	movf	??___flmul+1,w
  7579  01E3  1103               	clrz
  7580  01E4  1803               	skipnc
  7581  01E5  3E01               	addlw	1
  7582  01E6  1903               	skipnz
  7583  01E7  29E9               	goto	u319_21
  7584  01E8  07AF               	addwf	___flmul@grs+1,f
  7585  01E9                     u319_21:
  7586  01E9  082A               	movf	??___flmul+2,w
  7587  01EA  1103               	clrz
  7588  01EB  1803               	skipnc
  7589  01EC  3E01               	addlw	1
  7590  01ED  1903               	skipnz
  7591  01EE  29F0               	goto	u319_22
  7592  01EF  07B0               	addwf	___flmul@grs+2,f
  7593  01F0                     u319_22:
  7594  01F0  082B               	movf	??___flmul+3,w
  7595  01F1  1103               	clrz
  7596  01F2  1803               	skipnc
  7597  01F3  3E01               	addlw	1
  7598  01F4  1903               	skipnz
  7599  01F5  29F7               	goto	u319_23
  7600  01F6  07B1               	addwf	___flmul@grs+3,f
  7601  01F7                     u319_23:
  7602  01F7                     i1l3423:
  7603  01F7  0821               	movf	___flmul@b+1,w
  7604  01F8  00FF               	movwf	btemp+1
  7605  01F9  087F               	movf	btemp+1,w
  7606  01FA  00F0               	movwf	__Umul8_16@multiplicand
  7607  01FB  0826               	movf	___flmul@a+2,w
  7608  01FC  120A  158A  218B  120A  118A  	fcall	__Umul8_16
  7609  0201  0871               	movf	?__Umul8_16+1,w
  7610  0202  1283               	bcf	3,5	;RP0=0, select bank0
  7611  0203  1303               	bcf	3,6	;RP1=0, select bank0
  7612  0204  00B9               	movwf	___flmul@temp+1
  7613  0205  0870               	movf	?__Umul8_16,w
  7614  0206  00B8               	movwf	___flmul@temp
  7615  0207  0838               	movf	___flmul@temp,w
  7616  0208  00A8               	movwf	??___flmul
  7617  0209  0839               	movf	___flmul@temp+1,w
  7618  020A  00A9               	movwf	??___flmul+1
  7619  020B  01AA               	clrf	??___flmul+2
  7620  020C  01AB               	clrf	??___flmul+3
  7621  020D  0828               	movf	??___flmul,w
  7622  020E  07B4               	addwf	___flmul@prod,f
  7623  020F  0829               	movf	??___flmul+1,w
  7624  0210  1103               	clrz
  7625  0211  1803               	skipnc
  7626  0212  3E01               	addlw	1
  7627  0213  1903               	skipnz
  7628  0214  2A16               	goto	u320_21
  7629  0215  07B5               	addwf	___flmul@prod+1,f
  7630  0216                     u320_21:
  7631  0216  082A               	movf	??___flmul+2,w
  7632  0217  1103               	clrz
  7633  0218  1803               	skipnc
  7634  0219  3E01               	addlw	1
  7635  021A  1903               	skipnz
  7636  021B  2A1D               	goto	u320_22
  7637  021C  07B6               	addwf	___flmul@prod+2,f
  7638  021D                     u320_22:
  7639  021D  082B               	movf	??___flmul+3,w
  7640  021E  1103               	clrz
  7641  021F  1803               	skipnc
  7642  0220  3E01               	addlw	1
  7643  0221  1903               	skipnz
  7644  0222  2A24               	goto	u320_23
  7645  0223  07B7               	addwf	___flmul@prod+3,f
  7646  0224                     u320_23:
  7647  0224                     i1l3425:
  7648  0224  0822               	movf	___flmul@b+2,w
  7649  0225  00FF               	movwf	btemp+1
  7650  0226  087F               	movf	btemp+1,w
  7651  0227  00F0               	movwf	__Umul8_16@multiplicand
  7652  0228  0825               	movf	___flmul@a+1,w
  7653  0229  120A  158A  218B  120A  118A  	fcall	__Umul8_16
  7654  022E  0871               	movf	?__Umul8_16+1,w
  7655  022F  1283               	bcf	3,5	;RP0=0, select bank0
  7656  0230  1303               	bcf	3,6	;RP1=0, select bank0
  7657  0231  00B9               	movwf	___flmul@temp+1
  7658  0232  0870               	movf	?__Umul8_16,w
  7659  0233  00B8               	movwf	___flmul@temp
  7660  0234                     i1l3427:
  7661  0234  0838               	movf	___flmul@temp,w
  7662  0235  00A8               	movwf	??___flmul
  7663  0236  0839               	movf	___flmul@temp+1,w
  7664  0237  00A9               	movwf	??___flmul+1
  7665  0238  01AA               	clrf	??___flmul+2
  7666  0239  01AB               	clrf	??___flmul+3
  7667  023A  0828               	movf	??___flmul,w
  7668  023B  07B4               	addwf	___flmul@prod,f
  7669  023C  0829               	movf	??___flmul+1,w
  7670  023D  1103               	clrz
  7671  023E  1803               	skipnc
  7672  023F  3E01               	addlw	1
  7673  0240  1903               	skipnz
  7674  0241  2A43               	goto	u321_21
  7675  0242  07B5               	addwf	___flmul@prod+1,f
  7676  0243                     u321_21:
  7677  0243  082A               	movf	??___flmul+2,w
  7678  0244  1103               	clrz
  7679  0245  1803               	skipnc
  7680  0246  3E01               	addlw	1
  7681  0247  1903               	skipnz
  7682  0248  2A4A               	goto	u321_22
  7683  0249  07B6               	addwf	___flmul@prod+2,f
  7684  024A                     u321_22:
  7685  024A  082B               	movf	??___flmul+3,w
  7686  024B  1103               	clrz
  7687  024C  1803               	skipnc
  7688  024D  3E01               	addlw	1
  7689  024E  1903               	skipnz
  7690  024F  2A51               	goto	u321_23
  7691  0250  07B7               	addwf	___flmul@prod+3,f
  7692  0251                     u321_23:
  7693  0251  0822               	movf	___flmul@b+2,w
  7694  0252  00FF               	movwf	btemp+1
  7695  0253  087F               	movf	btemp+1,w
  7696  0254  00F0               	movwf	__Umul8_16@multiplicand
  7697  0255  0826               	movf	___flmul@a+2,w
  7698  0256  120A  158A  218B  120A  118A  	fcall	__Umul8_16
  7699  025B  0871               	movf	?__Umul8_16+1,w
  7700  025C  1283               	bcf	3,5	;RP0=0, select bank0
  7701  025D  1303               	bcf	3,6	;RP1=0, select bank0
  7702  025E  00B9               	movwf	___flmul@temp+1
  7703  025F  0870               	movf	?__Umul8_16,w
  7704  0260  00B8               	movwf	___flmul@temp
  7705  0261                     i1l3429:
  7706  0261  0838               	movf	___flmul@temp,w
  7707  0262  00A8               	movwf	??___flmul
  7708  0263  0839               	movf	___flmul@temp+1,w
  7709  0264  00A9               	movwf	??___flmul+1
  7710  0265  01AA               	clrf	??___flmul+2
  7711  0266  01AB               	clrf	??___flmul+3
  7712  0267  3008               	movlw	8
  7713  0268                     u322_25:
  7714  0268  1003               	clrc
  7715  0269  0DA8               	rlf	??___flmul,f
  7716  026A  0DA9               	rlf	??___flmul+1,f
  7717  026B  0DAA               	rlf	??___flmul+2,f
  7718  026C  0DAB               	rlf	??___flmul+3,f
  7719  026D                     u322_20:
  7720  026D  3EFF               	addlw	-1
  7721  026E  1D03               	skipz
  7722  026F  2A68               	goto	u322_25
  7723  0270  0828               	movf	??___flmul,w
  7724  0271  07B4               	addwf	___flmul@prod,f
  7725  0272  0829               	movf	??___flmul+1,w
  7726  0273  1103               	clrz
  7727  0274  1803               	skipnc
  7728  0275  3E01               	addlw	1
  7729  0276  1903               	skipnz
  7730  0277  2A79               	goto	u323_21
  7731  0278  07B5               	addwf	___flmul@prod+1,f
  7732  0279                     u323_21:
  7733  0279  082A               	movf	??___flmul+2,w
  7734  027A  1103               	clrz
  7735  027B  1803               	skipnc
  7736  027C  3E01               	addlw	1
  7737  027D  1903               	skipnz
  7738  027E  2A80               	goto	u323_22
  7739  027F  07B6               	addwf	___flmul@prod+2,f
  7740  0280                     u323_22:
  7741  0280  082B               	movf	??___flmul+3,w
  7742  0281  1103               	clrz
  7743  0282  1803               	skipnc
  7744  0283  3E01               	addlw	1
  7745  0284  1903               	skipnz
  7746  0285  2A87               	goto	u323_23
  7747  0286  07B7               	addwf	___flmul@prod+3,f
  7748  0287                     u323_23:
  7749  0287                     i1l3431:
  7750  0287  082E               	movf	___flmul@grs,w
  7751  0288  00A8               	movwf	??___flmul
  7752  0289  082F               	movf	___flmul@grs+1,w
  7753  028A  00A9               	movwf	??___flmul+1
  7754  028B  0830               	movf	___flmul@grs+2,w
  7755  028C  00AA               	movwf	??___flmul+2
  7756  028D  0831               	movf	___flmul@grs+3,w
  7757  028E  00AB               	movwf	??___flmul+3
  7758  028F  3018               	movlw	24
  7759  0290                     u324_25:
  7760  0290  1003               	clrc
  7761  0291  0CAB               	rrf	??___flmul+3,f
  7762  0292  0CAA               	rrf	??___flmul+2,f
  7763  0293  0CA9               	rrf	??___flmul+1,f
  7764  0294  0CA8               	rrf	??___flmul,f
  7765  0295                     u324_20:
  7766  0295  3EFF               	addlw	-1
  7767  0296  1D03               	skipz
  7768  0297  2A90               	goto	u324_25
  7769  0298  0828               	movf	??___flmul,w
  7770  0299  07B4               	addwf	___flmul@prod,f
  7771  029A  0829               	movf	??___flmul+1,w
  7772  029B  1103               	clrz
  7773  029C  1803               	skipnc
  7774  029D  3E01               	addlw	1
  7775  029E  1903               	skipnz
  7776  029F  2AA1               	goto	u325_21
  7777  02A0  07B5               	addwf	___flmul@prod+1,f
  7778  02A1                     u325_21:
  7779  02A1  082A               	movf	??___flmul+2,w
  7780  02A2  1103               	clrz
  7781  02A3  1803               	skipnc
  7782  02A4  3E01               	addlw	1
  7783  02A5  1903               	skipnz
  7784  02A6  2AA8               	goto	u325_22
  7785  02A7  07B6               	addwf	___flmul@prod+2,f
  7786  02A8                     u325_22:
  7787  02A8  082B               	movf	??___flmul+3,w
  7788  02A9  1103               	clrz
  7789  02AA  1803               	skipnc
  7790  02AB  3E01               	addlw	1
  7791  02AC  1903               	skipnz
  7792  02AD  2AAF               	goto	u325_23
  7793  02AE  07B7               	addwf	___flmul@prod+3,f
  7794  02AF                     u325_23:
  7795  02AF                     i1l3433:
  7796  02AF  3008               	movlw	8
  7797  02B0  00A8               	movwf	??___flmul
  7798  02B1                     u326_25:
  7799  02B1  1003               	clrc
  7800  02B2  0DAE               	rlf	___flmul@grs,f
  7801  02B3  0DAF               	rlf	___flmul@grs+1,f
  7802  02B4  0DB0               	rlf	___flmul@grs+2,f
  7803  02B5  0DB1               	rlf	___flmul@grs+3,f
  7804  02B6  0BA8               	decfsz	??___flmul,f
  7805  02B7  2AB1               	goto	u326_25
  7806  02B8                     i1l3435:
  7807  02B8  0833               	movf	___flmul@bexp,w
  7808  02B9  0732               	addwf	___flmul@aexp,w
  7809  02BA  00A8               	movwf	??___flmul
  7810  02BB  01A9               	clrf	??___flmul+1
  7811  02BC  0DA9               	rlf	??___flmul+1,f
  7812  02BD  0828               	movf	??___flmul,w
  7813  02BE  3E82               	addlw	130
  7814  02BF  00B8               	movwf	___flmul@temp
  7815  02C0  0829               	movf	??___flmul+1,w
  7816  02C1  1803               	skipnc
  7817  02C2  3E01               	addlw	1
  7818  02C3  3EFF               	addlw	255
  7819  02C4  00B9               	movwf	___flmul@temp+1
  7820  02C5  2AE3               	goto	i1l3447
  7821  02C6                     i1l3437:
  7822  02C6  3001               	movlw	1
  7823  02C7  00A8               	movwf	??___flmul
  7824  02C8                     u327_25:
  7825  02C8  1003               	clrc
  7826  02C9  0DB4               	rlf	___flmul@prod,f
  7827  02CA  0DB5               	rlf	___flmul@prod+1,f
  7828  02CB  0DB6               	rlf	___flmul@prod+2,f
  7829  02CC  0DB7               	rlf	___flmul@prod+3,f
  7830  02CD  0BA8               	decfsz	??___flmul,f
  7831  02CE  2AC8               	goto	u327_25
  7832  02CF                     i1l3439:
  7833  02CF  1FB1               	btfss	___flmul@grs+3,7
  7834  02D0  2AD2               	goto	u328_21
  7835  02D1  2AD3               	goto	u328_20
  7836  02D2                     u328_21:
  7837  02D2  2AD4               	goto	i1l3443
  7838  02D3                     u328_20:
  7839  02D3                     i1l3441:
  7840  02D3  1434               	bsf	___flmul@prod,0
  7841  02D4                     i1l3443:
  7842  02D4  3001               	movlw	1
  7843  02D5  00A8               	movwf	??___flmul
  7844  02D6                     u329_25:
  7845  02D6  1003               	clrc
  7846  02D7  0DAE               	rlf	___flmul@grs,f
  7847  02D8  0DAF               	rlf	___flmul@grs+1,f
  7848  02D9  0DB0               	rlf	___flmul@grs+2,f
  7849  02DA  0DB1               	rlf	___flmul@grs+3,f
  7850  02DB  0BA8               	decfsz	??___flmul,f
  7851  02DC  2AD6               	goto	u329_25
  7852  02DD                     i1l3445:
  7853  02DD  30FF               	movlw	255
  7854  02DE  07B8               	addwf	___flmul@temp,f
  7855  02DF  1803               	skipnc
  7856  02E0  0AB9               	incf	___flmul@temp+1,f
  7857  02E1  30FF               	movlw	255
  7858  02E2  07B9               	addwf	___flmul@temp+1,f
  7859  02E3                     i1l3447:
  7860  02E3  1FB6               	btfss	___flmul@prod+2,7
  7861  02E4  2AE6               	goto	u330_21
  7862  02E5  2AE7               	goto	u330_20
  7863  02E6                     u330_21:
  7864  02E6  2AC6               	goto	i1l3437
  7865  02E7                     u330_20:
  7866  02E7                     i1l3449:
  7867  02E7  01B2               	clrf	___flmul@aexp
  7868  02E8                     i1l3451:
  7869  02E8  1FB1               	btfss	___flmul@grs+3,7
  7870  02E9  2AEB               	goto	u331_21
  7871  02EA  2AEC               	goto	u331_20
  7872  02EB                     u331_21:
  7873  02EB  2B08               	goto	i1l3459
  7874  02EC                     u331_20:
  7875  02EC                     i1l3453:
  7876  02EC  30FF               	movlw	255
  7877  02ED  052E               	andwf	___flmul@grs,w
  7878  02EE  00A8               	movwf	??___flmul
  7879  02EF  30FF               	movlw	255
  7880  02F0  052F               	andwf	___flmul@grs+1,w
  7881  02F1  00A9               	movwf	??___flmul+1
  7882  02F2  30FF               	movlw	255
  7883  02F3  0530               	andwf	___flmul@grs+2,w
  7884  02F4  00AA               	movwf	??___flmul+2
  7885  02F5  307F               	movlw	127
  7886  02F6  0531               	andwf	___flmul@grs+3,w
  7887  02F7  00AB               	movwf	??___flmul+3
  7888  02F8  082B               	movf	??___flmul+3,w
  7889  02F9  042A               	iorwf	??___flmul+2,w
  7890  02FA  0429               	iorwf	??___flmul+1,w
  7891  02FB  0428               	iorwf	??___flmul,w
  7892  02FC  1903               	skipnz
  7893  02FD  2AFF               	goto	u332_21
  7894  02FE  2B00               	goto	u332_20
  7895  02FF                     u332_21:
  7896  02FF  2B03               	goto	i1l1144
  7897  0300                     u332_20:
  7898  0300                     i1l3455:
  7899  0300  01B2               	clrf	___flmul@aexp
  7900  0301  0AB2               	incf	___flmul@aexp,f
  7901  0302  2B08               	goto	i1l3459
  7902  0303                     i1l1144:
  7903  0303  1C34               	btfss	___flmul@prod,0
  7904  0304  2B06               	goto	u333_21
  7905  0305  2B07               	goto	u333_20
  7906  0306                     u333_21:
  7907  0306  2B08               	goto	i1l3459
  7908  0307                     u333_20:
  7909  0307  2B00               	goto	i1l3455
  7910  0308                     i1l3459:
  7911  0308  0832               	movf	___flmul@aexp,w
  7912  0309  1903               	btfsc	3,2
  7913  030A  2B0C               	goto	u334_21
  7914  030B  2B0D               	goto	u334_20
  7915  030C                     u334_21:
  7916  030C  2B3E               	goto	i1l3469
  7917  030D                     u334_20:
  7918  030D                     i1l3461:
  7919  030D  3001               	movlw	1
  7920  030E  07B4               	addwf	___flmul@prod,f
  7921  030F  3000               	movlw	0
  7922  0310  1803               	skipnc
  7923  0311  3001               	movlw	1
  7924  0312  07B5               	addwf	___flmul@prod+1,f
  7925  0313  3000               	movlw	0
  7926  0314  1803               	skipnc
  7927  0315  3001               	movlw	1
  7928  0316  07B6               	addwf	___flmul@prod+2,f
  7929  0317  3000               	movlw	0
  7930  0318  1803               	skipnc
  7931  0319  3001               	movlw	1
  7932  031A  07B7               	addwf	___flmul@prod+3,f
  7933  031B                     i1l3463:
  7934  031B  1C37               	btfss	___flmul@prod+3,0
  7935  031C  2B1E               	goto	u335_21
  7936  031D  2B1F               	goto	u335_20
  7937  031E                     u335_21:
  7938  031E  2B3E               	goto	i1l3469
  7939  031F                     u335_20:
  7940  031F                     i1l3465:
  7941  031F  0834               	movf	___flmul@prod,w
  7942  0320  00A8               	movwf	??___flmul
  7943  0321  0835               	movf	___flmul@prod+1,w
  7944  0322  00A9               	movwf	??___flmul+1
  7945  0323  0836               	movf	___flmul@prod+2,w
  7946  0324  00AA               	movwf	??___flmul+2
  7947  0325  0837               	movf	___flmul@prod+3,w
  7948  0326  00AB               	movwf	??___flmul+3
  7949  0327  3001               	movlw	1
  7950  0328  00AC               	movwf	??___flmul+4
  7951  0329                     u336_25:
  7952  0329  0D2B               	rlf	??___flmul+3,w
  7953  032A  0CAB               	rrf	??___flmul+3,f
  7954  032B  0CAA               	rrf	??___flmul+2,f
  7955  032C  0CA9               	rrf	??___flmul+1,f
  7956  032D  0CA8               	rrf	??___flmul,f
  7957  032E                     u336_20:
  7958  032E  0BAC               	decfsz	??___flmul+4,f
  7959  032F  2B29               	goto	u336_25
  7960  0330  082B               	movf	??___flmul+3,w
  7961  0331  00B7               	movwf	___flmul@prod+3
  7962  0332  082A               	movf	??___flmul+2,w
  7963  0333  00B6               	movwf	___flmul@prod+2
  7964  0334  0829               	movf	??___flmul+1,w
  7965  0335  00B5               	movwf	___flmul@prod+1
  7966  0336  0828               	movf	??___flmul,w
  7967  0337  00B4               	movwf	___flmul@prod
  7968  0338                     i1l3467:
  7969  0338  3001               	movlw	1
  7970  0339  07B8               	addwf	___flmul@temp,f
  7971  033A  1803               	skipnc
  7972  033B  0AB9               	incf	___flmul@temp+1,f
  7973  033C  3000               	movlw	0
  7974  033D  07B9               	addwf	___flmul@temp+1,f
  7975  033E                     i1l3469:
  7976  033E  0839               	movf	___flmul@temp+1,w
  7977  033F  3A80               	xorlw	128
  7978  0340  00FF               	movwf	btemp+1
  7979  0341  3080               	movlw	128
  7980  0342  027F               	subwf	btemp+1,w
  7981  0343  1D03               	skipz
  7982  0344  2B47               	goto	u337_25
  7983  0345  30FF               	movlw	255
  7984  0346  0238               	subwf	___flmul@temp,w
  7985  0347                     u337_25:
  7986  0347  1C03               	skipc
  7987  0348  2B4A               	goto	u337_21
  7988  0349  2B4B               	goto	u337_20
  7989  034A                     u337_21:
  7990  034A  2B56               	goto	i1l3473
  7991  034B                     u337_20:
  7992  034B                     i1l3471:
  7993  034B  307F               	movlw	127
  7994  034C  1283               	bcf	3,5	;RP0=0, select bank0
  7995  034D  1303               	bcf	3,6	;RP1=0, select bank0
  7996  034E  00B7               	movwf	___flmul@prod+3
  7997  034F  3080               	movlw	128
  7998  0350  00B6               	movwf	___flmul@prod+2
  7999  0351  3000               	movlw	0
  8000  0352  00B5               	movwf	___flmul@prod+1
  8001  0353  3000               	movlw	0
  8002  0354  00B4               	movwf	___flmul@prod
  8003  0355  2B8B               	goto	i1l1150
  8004  0356                     i1l3473:
  8005  0356  1283               	bcf	3,5	;RP0=0, select bank0
  8006  0357  1303               	bcf	3,6	;RP1=0, select bank0
  8007  0358  0839               	movf	___flmul@temp+1,w
  8008  0359  3A80               	xorlw	128
  8009  035A  00FF               	movwf	btemp+1
  8010  035B  3080               	movlw	128
  8011  035C  027F               	subwf	btemp+1,w
  8012  035D  1D03               	skipz
  8013  035E  2B61               	goto	u338_25
  8014  035F  3001               	movlw	1
  8015  0360  0238               	subwf	___flmul@temp,w
  8016  0361                     u338_25:
  8017  0361  1803               	skipnc
  8018  0362  2B64               	goto	u338_21
  8019  0363  2B65               	goto	u338_20
  8020  0364                     u338_21:
  8021  0364  2B71               	goto	i1l3479
  8022  0365                     u338_20:
  8023  0365                     i1l3475:
  8024  0365  3000               	movlw	0
  8025  0366  1283               	bcf	3,5	;RP0=0, select bank0
  8026  0367  1303               	bcf	3,6	;RP1=0, select bank0
  8027  0368  00B7               	movwf	___flmul@prod+3
  8028  0369  3000               	movlw	0
  8029  036A  00B6               	movwf	___flmul@prod+2
  8030  036B  3000               	movlw	0
  8031  036C  00B5               	movwf	___flmul@prod+1
  8032  036D  3000               	movlw	0
  8033  036E  00B4               	movwf	___flmul@prod
  8034  036F                     i1l3477:
  8035  036F  01AD               	clrf	___flmul@sign
  8036  0370  2B8B               	goto	i1l1150
  8037  0371                     i1l3479:
  8038  0371  1283               	bcf	3,5	;RP0=0, select bank0
  8039  0372  1303               	bcf	3,6	;RP1=0, select bank0
  8040  0373  0838               	movf	___flmul@temp,w
  8041  0374  00FF               	movwf	btemp+1
  8042  0375  087F               	movf	btemp+1,w
  8043  0376  00B3               	movwf	___flmul@bexp
  8044  0377                     i1l3481:
  8045  0377  30FF               	movlw	255
  8046  0378  05B4               	andwf	___flmul@prod,f
  8047  0379  30FF               	movlw	255
  8048  037A  05B5               	andwf	___flmul@prod+1,f
  8049  037B  307F               	movlw	127
  8050  037C  05B6               	andwf	___flmul@prod+2,f
  8051  037D  3000               	movlw	0
  8052  037E  05B7               	andwf	___flmul@prod+3,f
  8053  037F                     i1l3483:
  8054  037F  1C33               	btfss	___flmul@bexp,0
  8055  0380  2B82               	goto	u339_21
  8056  0381  2B83               	goto	u339_20
  8057  0382                     u339_21:
  8058  0382  2B84               	goto	i1l3487
  8059  0383                     u339_20:
  8060  0383                     i1l3485:
  8061  0383  17B6               	bsf	___flmul@prod+2,7
  8062  0384                     i1l3487:
  8063  0384  0833               	movf	___flmul@bexp,w
  8064  0385  00A8               	movwf	??___flmul
  8065  0386  1003               	clrc
  8066  0387  0C28               	rrf	??___flmul,w
  8067  0388  00FF               	movwf	btemp+1
  8068  0389  087F               	movf	btemp+1,w
  8069  038A  00B7               	movwf	___flmul@prod+3
  8070  038B                     i1l1150:
  8071  038B  082D               	movf	___flmul@sign,w
  8072  038C  00FF               	movwf	btemp+1
  8073  038D  087F               	movf	btemp+1,w
  8074  038E  04B7               	iorwf	___flmul@prod+3,f
  8075  038F                     i1l3489:
  8076  038F  0837               	movf	___flmul@prod+3,w
  8077  0390  00A3               	movwf	?___flmul+3
  8078  0391  0836               	movf	___flmul@prod+2,w
  8079  0392  00A2               	movwf	?___flmul+2
  8080  0393  0835               	movf	___flmul@prod+1,w
  8081  0394  00A1               	movwf	?___flmul+1
  8082  0395  0834               	movf	___flmul@prod,w
  8083  0396  00A0               	movwf	?___flmul
  8084  0397                     i1l1138:
  8085  0397  0008               	return
  8086  0398                     __end_of___flmul:
  8087                           
  8088                           	psect	text41
  8089  098B                     __ptext41:	
  8090 ;; *************** function __Umul8_16 *****************
  8091 ;; Defined at:
  8092 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8_16.c"
  8093 ;; Parameters:    Size  Location     Type
  8094 ;;  multiplier      1    wreg     unsigned char 
  8095 ;;  multiplicand    1    0[COMMON] unsigned char 
  8096 ;; Auto vars:     Size  Location     Type
  8097 ;;  multiplier      1    8[COMMON] unsigned char 
  8098 ;;  word_mpld       2    6[COMMON] unsigned int 
  8099 ;;  product         2    4[COMMON] unsigned int 
  8100 ;; Return value:  Size  Location     Type
  8101 ;;                  2    0[COMMON] unsigned int 
  8102 ;; Registers used:
  8103 ;;		wreg, status,2, status,0
  8104 ;; Tracked objects:
  8105 ;;		On entry : 0/0
  8106 ;;		On exit  : 0/0
  8107 ;;		Unchanged: 0/0
  8108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8109 ;;      Params:         2       0       0       0       0
  8110 ;;      Locals:         5       0       0       0       0
  8111 ;;      Temps:          2       0       0       0       0
  8112 ;;      Totals:         9       0       0       0       0
  8113 ;;Total ram usage:        9 bytes
  8114 ;; Hardware stack levels used:    1
  8115 ;; This function calls:
  8116 ;;		Nothing
  8117 ;; This function is called by:
  8118 ;;		___flmul
  8119 ;; This function uses a non-reentrant model
  8120 ;;
  8121                           
  8122                           
  8123                           ;psect for function __Umul8_16
  8124  098B                     __Umul8_16:
  8125                           
  8126                           ;incstack = 0
  8127 ;; hardware stack exceeded
  8128                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8129                           ;__Umul8_16@multiplier stored from wreg
  8130  098B  00F8               	movwf	__Umul8_16@multiplier
  8131  098C                     i1l2971:
  8132  098C  01F4               	clrf	__Umul8_16@product
  8133  098D  01F5               	clrf	__Umul8_16@product+1
  8134  098E                     i1l2973:
  8135  098E  0870               	movf	__Umul8_16@multiplicand,w
  8136  098F  00F2               	movwf	??__Umul8_16
  8137  0990  01F3               	clrf	??__Umul8_16+1
  8138  0991  0872               	movf	??__Umul8_16,w
  8139  0992  00F6               	movwf	__Umul8_16@word_mpld
  8140  0993  0873               	movf	??__Umul8_16+1,w
  8141  0994  00F7               	movwf	__Umul8_16@word_mpld+1
  8142  0995                     i1l2975:
  8143  0995  1C78               	btfss	__Umul8_16@multiplier,0
  8144  0996  2998               	goto	u245_21
  8145  0997  2999               	goto	u245_20
  8146  0998                     u245_21:
  8147  0998  299F               	goto	i1l1157
  8148  0999                     u245_20:
  8149  0999                     i1l2977:
  8150  0999  0876               	movf	__Umul8_16@word_mpld,w
  8151  099A  07F4               	addwf	__Umul8_16@product,f
  8152  099B  1803               	skipnc
  8153  099C  0AF5               	incf	__Umul8_16@product+1,f
  8154  099D  0877               	movf	__Umul8_16@word_mpld+1,w
  8155  099E  07F5               	addwf	__Umul8_16@product+1,f
  8156  099F                     i1l1157:
  8157  099F  3001               	movlw	1
  8158  09A0                     u246_25:
  8159  09A0  1003               	clrc
  8160  09A1  0DF6               	rlf	__Umul8_16@word_mpld,f
  8161  09A2  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  8162  09A3  3EFF               	addlw	-1
  8163  09A4  1D03               	skipz
  8164  09A5  29A0               	goto	u246_25
  8165  09A6  1003               	clrc
  8166  09A7  0CF8               	rrf	__Umul8_16@multiplier,f
  8167  09A8                     i1l2979:
  8168  09A8  0878               	movf	__Umul8_16@multiplier,w
  8169  09A9  1D03               	btfss	3,2
  8170  09AA  29AC               	goto	u247_21
  8171  09AB  29AD               	goto	u247_20
  8172  09AC                     u247_21:
  8173  09AC  2995               	goto	i1l2975
  8174  09AD                     u247_20:
  8175  09AD                     i1l2981:
  8176  09AD  0875               	movf	__Umul8_16@product+1,w
  8177  09AE  00F1               	movwf	?__Umul8_16+1
  8178  09AF  0874               	movf	__Umul8_16@product,w
  8179  09B0  00F0               	movwf	?__Umul8_16
  8180  09B1                     i1l1159:
  8181  09B1  0008               	return
  8182  09B2                     __end_of__Umul8_16:
  8183                           
  8184                           	psect	text42
  8185  0AC4                     __ptext42:	
  8186 ;; *************** function _DD_GetState *****************
  8187 ;; Defined at:
  8188 ;;		line 50 in file "DD.c"
  8189 ;; Parameters:    Size  Location     Type
  8190 ;;  device          1    wreg     enum E884
  8191 ;; Auto vars:     Size  Location     Type
  8192 ;;  device          1    2[COMMON] enum E884
  8193 ;; Return value:  Size  Location     Type
  8194 ;;                  1    wreg      enum E13
  8195 ;; Registers used:
  8196 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8197 ;; Tracked objects:
  8198 ;;		On entry : 0/0
  8199 ;;		On exit  : 0/0
  8200 ;;		Unchanged: 0/0
  8201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8202 ;;      Params:         0       0       0       0       0
  8203 ;;      Locals:         1       0       0       0       0
  8204 ;;      Temps:          2       0       0       0       0
  8205 ;;      Totals:         3       0       0       0       0
  8206 ;;Total ram usage:        3 bytes
  8207 ;; Hardware stack levels used:    1
  8208 ;; This function calls:
  8209 ;;		Nothing
  8210 ;; This function is called by:
  8211 ;;		_ISR
  8212 ;; This function uses a non-reentrant model
  8213 ;;
  8214                           
  8215                           
  8216                           ;psect for function _DD_GetState
  8217  0AC4                     _DD_GetState:
  8218                           
  8219                           ;incstack = 0
  8220                           ; Regs used in _DD_GetState: [wreg-fsr0h+status,2+status,0]
  8221                           ;DD_GetState@device stored from wreg
  8222  0AC4  00F2               	movwf	DD_GetState@device
  8223  0AC5                     i1l3275:
  8224                           
  8225                           ;DD.c: 50: tState DD_GetState(tDD device);DD.c: 51: {;DD.c: 52:     switch(device)
  8226  0AC5  2AED               	goto	i1l3297
  8227  0AC6                     i1l3277:
  8228                           
  8229                           ;DD.c: 55:             return ((PORTC & (1<<5)) >> 5);
  8230  0AC6  1283               	bcf	3,5	;RP0=0, select bank0
  8231  0AC7  1303               	bcf	3,6	;RP1=0, select bank0
  8232  0AC8  0807               	movf	7,w	;volatile
  8233  0AC9  00F0               	movwf	??_DD_GetState
  8234  0ACA  3005               	movlw	5
  8235  0ACB                     u288_25:
  8236  0ACB  1003               	clrc
  8237  0ACC  0CF0               	rrf	??_DD_GetState,f
  8238  0ACD  3EFF               	addlw	-1
  8239  0ACE  1D03               	skipz
  8240  0ACF  2ACB               	goto	u288_25
  8241  0AD0  0870               	movf	??_DD_GetState,w
  8242  0AD1  3901               	andlw	1
  8243  0AD2  2B00               	goto	i1l285
  8244  0AD3                     i1l3283:
  8245                           
  8246                           ;DD.c: 58:             return ((PORTC & (1<<2)) >> 2);
  8247  0AD3  1283               	bcf	3,5	;RP0=0, select bank0
  8248  0AD4  1303               	bcf	3,6	;RP1=0, select bank0
  8249  0AD5  0807               	movf	7,w	;volatile
  8250  0AD6  00F0               	movwf	??_DD_GetState
  8251  0AD7  3002               	movlw	2
  8252  0AD8                     u289_25:
  8253  0AD8  1003               	clrc
  8254  0AD9  0CF0               	rrf	??_DD_GetState,f
  8255  0ADA  3EFF               	addlw	-1
  8256  0ADB  1D03               	skipz
  8257  0ADC  2AD8               	goto	u289_25
  8258  0ADD  0870               	movf	??_DD_GetState,w
  8259  0ADE  3901               	andlw	1
  8260  0ADF  2B00               	goto	i1l285
  8261  0AE0                     i1l3289:
  8262                           
  8263                           ;DD.c: 61:             return ((PORTB & (1<<7)) >> 7);
  8264  0AE0  1283               	bcf	3,5	;RP0=0, select bank0
  8265  0AE1  1303               	bcf	3,6	;RP1=0, select bank0
  8266  0AE2  0806               	movf	6,w	;volatile
  8267  0AE3  00F0               	movwf	??_DD_GetState
  8268  0AE4  3007               	movlw	7
  8269  0AE5                     u290_25:
  8270  0AE5  1003               	clrc
  8271  0AE6  0CF0               	rrf	??_DD_GetState,f
  8272  0AE7  3EFF               	addlw	-1
  8273  0AE8  1D03               	skipz
  8274  0AE9  2AE5               	goto	u290_25
  8275  0AEA  0870               	movf	??_DD_GetState,w
  8276  0AEB  3901               	andlw	1
  8277  0AEC  2B00               	goto	i1l285
  8278  0AED                     i1l3297:
  8279  0AED  0872               	movf	DD_GetState@device,w
  8280  0AEE  00F0               	movwf	??_DD_GetState
  8281  0AEF  01F1               	clrf	??_DD_GetState+1
  8282                           
  8283                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8284                           ; Switch size 1, requested type "simple"
  8285                           ; Number of cases is 1, Range of values is 0 to 0
  8286                           ; switch strategies available:
  8287                           ; Name         Instructions Cycles
  8288                           ; simple_byte            4     3 (average)
  8289                           ; direct_byte           11     8 (fixed)
  8290                           ; jumptable            260     6 (fixed)
  8291                           ;	Chosen strategy is simple_byte
  8292  0AF0  0871               	movf	??_DD_GetState+1,w
  8293  0AF1  3A00               	xorlw	0	; case 0
  8294  0AF2  1903               	skipnz
  8295  0AF3  2AF5               	goto	i1l3939
  8296  0AF4  2B00               	goto	i1l285
  8297  0AF5                     i1l3939:
  8298                           
  8299                           ; Switch size 1, requested type "simple"
  8300                           ; Number of cases is 3, Range of values is 0 to 2
  8301                           ; switch strategies available:
  8302                           ; Name         Instructions Cycles
  8303                           ; simple_byte           10     6 (average)
  8304                           ; direct_byte           17     8 (fixed)
  8305                           ; jumptable            260     6 (fixed)
  8306                           ;	Chosen strategy is simple_byte
  8307  0AF5  0870               	movf	??_DD_GetState,w
  8308  0AF6  3A00               	xorlw	0	; case 0
  8309  0AF7  1903               	skipnz
  8310  0AF8  2AC6               	goto	i1l3277
  8311  0AF9  3A01               	xorlw	1	; case 1
  8312  0AFA  1903               	skipnz
  8313  0AFB  2AD3               	goto	i1l3283
  8314  0AFC  3A03               	xorlw	3	; case 2
  8315  0AFD  1903               	skipnz
  8316  0AFE  2AE0               	goto	i1l3289
  8317  0AFF  2B00               	goto	i1l285
  8318  0B00                     i1l285:
  8319  0B00  0008               	return
  8320  0B01                     __end_of_DD_GetState:
  8321                           
  8322                           	psect	text43
  8323  07CA                     __ptext43:	
  8324 ;; *************** function _ADC_ReadChannel *****************
  8325 ;; Defined at:
  8326 ;;		line 69 in file "adc.c"
  8327 ;; Parameters:    Size  Location     Type
  8328 ;;  channel         1    wreg     enum E869
  8329 ;; Auto vars:     Size  Location     Type
  8330 ;;  channel         1    5[COMMON] enum E869
  8331 ;;  result          2    3[COMMON] unsigned short 
  8332 ;; Return value:  Size  Location     Type
  8333 ;;                  2    0[COMMON] unsigned short 
  8334 ;; Registers used:
  8335 ;;		wreg, status,2, status,0, btemp+1
  8336 ;; Tracked objects:
  8337 ;;		On entry : 0/0
  8338 ;;		On exit  : 0/0
  8339 ;;		Unchanged: 0/0
  8340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8341 ;;      Params:         2       0       0       0       0
  8342 ;;      Locals:         3       0       0       0       0
  8343 ;;      Temps:          1       0       0       0       0
  8344 ;;      Totals:         6       0       0       0       0
  8345 ;;Total ram usage:        6 bytes
  8346 ;; Hardware stack levels used:    1
  8347 ;; This function calls:
  8348 ;;		Nothing
  8349 ;; This function is called by:
  8350 ;;		_ISR
  8351 ;; This function uses a non-reentrant model
  8352 ;;
  8353                           
  8354                           
  8355                           ;psect for function _ADC_ReadChannel
  8356  07CA                     _ADC_ReadChannel:
  8357                           
  8358                           ;incstack = 0
  8359                           ; Regs used in _ADC_ReadChannel: [wreg+status,2+status,0+btemp+1]
  8360                           ;ADC_ReadChannel@channel stored from wreg
  8361  07CA  00F5               	movwf	ADC_ReadChannel@channel
  8362  07CB                     i1l3303:
  8363                           
  8364                           ;adc.c: 69: uint16_t ADC_ReadChannel(tADC_Channel_Select channel);adc.c: 70: {;adc.c: 72
      +                          :     ADCON0 &= ~(7<<3);
  8365  07CB  30C7               	movlw	199
  8366  07CC  00FF               	movwf	btemp+1
  8367  07CD  087F               	movf	btemp+1,w
  8368  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  8369  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  8370  07D0  059F               	andwf	31,f	;volatile
  8371                           
  8372                           ;adc.c: 75:     ADCON0 |= ((channel)<<3);
  8373  07D1  0875               	movf	ADC_ReadChannel@channel,w	;volatile
  8374  07D2  00F2               	movwf	??_ADC_ReadChannel
  8375  07D3  3002               	movlw	2
  8376  07D4                     u291_25:
  8377  07D4  1003               	clrc
  8378  07D5  0DF2               	rlf	??_ADC_ReadChannel,f
  8379  07D6  3EFF               	addlw	-1
  8380  07D7  1D03               	skipz
  8381  07D8  2FD4               	goto	u291_25
  8382  07D9  1003               	clrc
  8383  07DA  0D72               	rlf	??_ADC_ReadChannel,w
  8384  07DB  00FF               	movwf	btemp+1
  8385  07DC  087F               	movf	btemp+1,w
  8386  07DD  049F               	iorwf	31,f	;volatile
  8387  07DE                     i1l3305:
  8388                           
  8389                           ;adc.c: 78:     _delay((unsigned long)((30)*(4000000/4000000.0)));
  8390  07DE  3009               	movlw	9
  8391  07DF  00F2               	movwf	??_ADC_ReadChannel
  8392  07E0                     u381_27:
  8393  07E0  0BF2               	decfsz	??_ADC_ReadChannel,f
  8394  07E1  2FE0               	goto	u381_27
  8395  07E2  2FE3               	nop2
  8396  07E3                     i1l3307:
  8397                           
  8398                           ;adc.c: 81:     (ADCON0|=(1<<2));
  8399  07E3  1283               	bcf	3,5	;RP0=0, select bank0
  8400  07E4  1303               	bcf	3,6	;RP1=0, select bank0
  8401  07E5  151F               	bsf	31,2	;volatile
  8402  07E6                     i1l335:	
  8403                           ;adc.c: 84:     while((ADCON0 & (1<<2)));
  8404                           
  8405  07E6  191F               	btfsc	31,2	;volatile
  8406  07E7  2FE9               	goto	u292_21
  8407  07E8  2FEA               	goto	u292_20
  8408  07E9                     u292_21:
  8409  07E9  2FE6               	goto	i1l335
  8410  07EA                     u292_20:
  8411  07EA                     i1l3309:
  8412                           
  8413                           ;adc.c: 87:     uint16_t result =((ADRESH<<8) + ADRESL) ;
  8414  07EA  081E               	movf	30,w	;volatile
  8415  07EB  00F4               	movwf	ADC_ReadChannel@result+1
  8416  07EC  1683               	bsf	3,5	;RP0=1, select bank1
  8417  07ED  1303               	bcf	3,6	;RP1=0, select bank1
  8418  07EE  081E               	movf	30,w	;volatile
  8419  07EF  00F3               	movwf	ADC_ReadChannel@result
  8420                           
  8421                           ;adc.c: 89:     return result;
  8422  07F0  0874               	movf	ADC_ReadChannel@result+1,w
  8423  07F1  00F1               	movwf	?_ADC_ReadChannel+1
  8424  07F2  0873               	movf	ADC_ReadChannel@result,w
  8425  07F3  00F0               	movwf	?_ADC_ReadChannel
  8426  07F4                     i1l338:
  8427  07F4  0008               	return
  8428  07F5                     __end_of_ADC_ReadChannel:
  8429  007E                     btemp	set	126	;btemp
  8430  007E                     wtemp0	set	126
  8431                           
  8432                           	psect	config
  8433                           
  8434                           ;Config register CONFIG @ 0x2007
  8435                           ;	Oscillator Selection bits
  8436                           ;	FOSC = XT, XT oscillator
  8437                           ;	Watchdog Timer Enable bit
  8438                           ;	WDTE = OFF, WDT disabled
  8439                           ;	Power-up Timer Enable bit
  8440                           ;	PWRTE = ON, PWRT enabled
  8441                           ;	Brown-out Reset Enable bit
  8442                           ;	BOREN = ON, BOR enabled
  8443                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  8444                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  8445                           ;	Data EEPROM Memory Code Protection bit
  8446                           ;	CPD = OFF, Data EEPROM code protection off
  8447                           ;	Flash Program Memory Write Enable bits
  8448                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  8449                           ;	In-Circuit Debugger Mode bit
  8450                           ;	DEBUG = 0x1, unprogrammed default
  8451                           ;	Flash Program Memory Code Protection bit
  8452                           ;	CP = OFF, Code protection off
  8453  2007                     	org	8199
  8454  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     42      51
    BANK1            80     33      67
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    EWH_getAvrgTempReading@buffer	PTR unsigned char  size(1) Largest target is 10
		 -> ReadingBuffer(BANK1[10]), 

    TMR1_Init@config	PTR struct . size(1) Largest target is 2
		 -> main@TMR1_cfg(BANK1[2]), 

    ADC_Init@config	PTR struct . size(1) Largest target is 4
		 -> main@adc_config(BANK1[4]), 

    I2C_Init@i2c_config	PTR struct . size(1) Largest target is 6
		 -> main@i2c_config(BANK1[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    _main->_EWH_Operating_Mode
    _I2C_Init->___lldiv
    _EWH_WakeUP_Mode->_EWH_SSD_Update
    _EWH_SetTemp_Mode->_EWH_SSD_Update
    _EWH_SSD_OFF->_SSD_OFF
    _EWH_EEPROM_Update->_EEPROM_WriteByte
    _EWH_EEPROM_Read->_EEPROM_ReadByte
    _EEPROM_ReadByte->_I2C_Master_ReadByte
    _EWH_Operating_Mode->_EWH_getAvrgTempReading
    _EWH_getAvrgTempReading->___lwdiv
    _EWH_SSD_Update->_SSD_Write
    _SSD_Write->___awdiv
    _SSD_OFF->_SSD_config
    _EWH_EEPROM_Init->_EEPROM_WriteByte
    _EEPROM_WriteByte->_I2C_Master_WriteByte

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   15193
                                             19 BANK1     14    14      0
                           _ADC_Init
                            _DD_Init
                    _EWH_EEPROM_Init
                 _EWH_Operating_Mode
                   _EWH_SetTemp_Mode
                     _EWH_Sleep_Mode
                    _EWH_WakeUP_Mode
                           _I2C_Init
                            _SW_Init
                          _TMR1_Init
 ---------------------------------------------------------------------------------
 (1) _TMR1_Init                                            3     3      0      77
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SW_Init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             1     1      0     413
                                             14 BANK1      1     1      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (1) _EWH_WakeUP_Mode                                      2     2      0    3073
                                             14 BANK1      2     2      0
                    _EWH_EEPROM_Read
                     _EWH_SSD_Update
 ---------------------------------------------------------------------------------
 (1) _EWH_Sleep_Mode                                       0     0      0    1350
                        _DD_SetState
                        _EWH_SSD_OFF
                          _TMR1_Stop
 ---------------------------------------------------------------------------------
 (1) _EWH_SetTemp_Mode                                     2     2      0    4837
                                             14 BANK1      2     2      0
                        _DD_SetState
                    _EWH_EEPROM_Read
                  _EWH_EEPROM_Update
                        _EWH_SSD_OFF
                     _EWH_SSD_Update
                         _TMR1_Start
 ---------------------------------------------------------------------------------
 (2) _EWH_SSD_OFF                                          0     0      0     512
                            _SSD_OFF
 ---------------------------------------------------------------------------------
 (2) _EWH_EEPROM_Update                                    1     1      0     414
                                              6 BANK1      1     1      0
                   _EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (2) _EWH_EEPROM_Read                                      0     0      0     210
                    _EEPROM_ReadByte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_ReadByte                                      5     3      2     210
                                              2 BANK1      5     3      2
                _I2C_Master_ReadByte
      _I2C_Master_Send_RepeatedStart
              _I2C_Master_Send_Start
               _I2C_Master_Send_Stop
               _I2C_Master_WriteByte
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_ReadByte                                  2     2      0      23
                                              0 BANK1      2     2      0
                _I2C_Master_Send_ACK
               _I2C_Master_Send_NACK
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Send_NACK                                 0     0      0       0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Send_ACK                                  0     0      0       0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (1) _EWH_Operating_Mode                                   3     3      0    4731
                                             16 BANK1      3     3      0
                        _DD_SetState
                     _EWH_SSD_Update
             _EWH_getAvrgTempReading
                         _TMR1_Start
                          _TMR1_Stop
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) _TMR1_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EWH_getAvrgTempReading                               9     8      1     582
                                              7 BANK1      9     8      1
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (2) _EWH_SSD_Update                                       4     2      2    2863
                                             10 BANK1      4     2      2
                            _SSD_OFF
                          _SSD_Write
                            ___awdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     463
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (3) _SSD_Write                                            2     1      1     860
                                              8 BANK1      2     1      1
                         _SSD_config
                            ___awdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _SSD_OFF                                              1     1      0     512
                                              4 BANK1      1     1      0
                         _SSD_config
 ---------------------------------------------------------------------------------
 (4) _SSD_config                                           4     3      1     490
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (2) _DD_SetState                                          4     3      1     838
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (1) _EWH_EEPROM_Init                                      0     0      0     392
                   _EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_WriteByte                                     5     2      3     392
                                              1 BANK1      5     2      3
      _I2C_Master_Send_RepeatedStart
              _I2C_Master_Send_Start
               _I2C_Master_Send_Stop
               _I2C_Master_WriteByte
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_WriteByte                                 1     1      0      22
                                              0 BANK1      1     1      0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Send_Stop                                 0     0      0       0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Send_Start                                0     0      0       0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Send_RepeatedStart                        0     0      0       0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (5) _I2C_Wait_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DD_Init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             3     3      0      99
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  6     6      0    3210
                                             36 BANK0      6     6      0
                    _ADC_ReadChannel
                        _DD_GetState
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (8) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (8) ___fltol                                             10     6      4     305
                                             26 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             26    18      8    2417
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (9) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (8) _DD_GetState                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (8) _ADC_ReadChannel                                      6     4      2      45
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _DD_Init
   _EWH_EEPROM_Init
     _EEPROM_WriteByte
       _I2C_Master_Send_RepeatedStart
         _I2C_Wait_IDLE
       _I2C_Master_Send_Start
         _I2C_Wait_IDLE
       _I2C_Master_Send_Stop
         _I2C_Wait_IDLE
       _I2C_Master_WriteByte
         _I2C_Wait_IDLE
   _EWH_Operating_Mode
     _DD_SetState
     _EWH_SSD_Update
       _SSD_OFF
         _SSD_config
       _SSD_Write
         _SSD_config
         ___awdiv (ARG)
         ___lwmod (ARG)
       ___awdiv
       ___lwmod
     _EWH_getAvrgTempReading
       ___lwdiv
     _TMR1_Start
     _TMR1_Stop
     ___awmod
   _EWH_SetTemp_Mode
     _DD_SetState
     _EWH_EEPROM_Read
       _EEPROM_ReadByte
         _I2C_Master_ReadByte
           _I2C_Master_Send_ACK
             _I2C_Wait_IDLE
           _I2C_Master_Send_NACK
             _I2C_Wait_IDLE
           _I2C_Wait_IDLE
         _I2C_Master_Send_RepeatedStart
           _I2C_Wait_IDLE
         _I2C_Master_Send_Start
           _I2C_Wait_IDLE
         _I2C_Master_Send_Stop
           _I2C_Wait_IDLE
         _I2C_Master_WriteByte
           _I2C_Wait_IDLE
     _EWH_EEPROM_Update
       _EEPROM_WriteByte
         _I2C_Master_Send_RepeatedStart
           _I2C_Wait_IDLE
         _I2C_Master_Send_Start
           _I2C_Wait_IDLE
         _I2C_Master_Send_Stop
           _I2C_Wait_IDLE
         _I2C_Master_WriteByte
           _I2C_Wait_IDLE
     _EWH_SSD_OFF
       _SSD_OFF
         _SSD_config
     _EWH_SSD_Update
       _SSD_OFF
         _SSD_config
       _SSD_Write
         _SSD_config
         ___awdiv (ARG)
         ___lwmod (ARG)
       ___awdiv
       ___lwmod
     _TMR1_Start
   _EWH_Sleep_Mode
     _DD_SetState
     _EWH_SSD_OFF
       _SSD_OFF
         _SSD_config
     _TMR1_Stop
   _EWH_WakeUP_Mode
     _EWH_EEPROM_Read
       _EEPROM_ReadByte
         _I2C_Master_ReadByte
           _I2C_Master_Send_ACK
             _I2C_Wait_IDLE
           _I2C_Master_Send_NACK
             _I2C_Wait_IDLE
           _I2C_Wait_IDLE
         _I2C_Master_Send_RepeatedStart
           _I2C_Wait_IDLE
         _I2C_Master_Send_Start
           _I2C_Wait_IDLE
         _I2C_Master_Send_Stop
           _I2C_Wait_IDLE
         _I2C_Master_WriteByte
           _I2C_Wait_IDLE
     _EWH_SSD_Update
       _SSD_OFF
         _SSD_config
       _SSD_Write
         _SSD_config
         ___awdiv (ARG)
         ___lwmod (ARG)
       ___awdiv
       ___lwmod
   _I2C_Init
     ___lldiv
   _SW_Init
   _TMR1_Init

 _ISR (ROOT)
   _ADC_ReadChannel
   _DD_GetState
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     21      43       7       83.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2A      33       5       63.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      84      12        0.0%
ABS                  0      0      84       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Jul 09 14:32:18 2020

                          ?_DD_SetState 00A0                                       pc 0002  
                                    l13 0A58                                      l31 0CEA  
                                    l16 0A87            __size_of_I2C_Master_ReadByte 0029  
                                    l28 0C9B                                      l91 08D5  
                                    l94 08E1                                      l88 0B90  
                                    l97 0898                            ___awdiv@sign 00A5  
                                    fsr 0004                              _SSD_config 0E18  
          __size_of_I2C_Master_Send_ACK 000A                     __Umul8_16@word_mpld 0076  
                 _I2C_Master_Send_Start 0890                                     l100 08A1  
                                   l103 088F                                     l112 097B  
                                   l120 09DA                                     l114 097F  
                                   l106 08B4                                     l115 098A  
                                   l109 08BE                                     l332 0F7C  
                                   l324 0F0D                                     l325 0F11  
                                   l415 08AA                                     l328 0F26  
                                   l280 0C34                                     l329 0F2D  
                                   l513 0A4C                                     l521 0FFF  
                                   l370 0BA4                                     l259 094F  
                                   l372 0BC2                                     l374 0BC4  
                                   l366 0B95                                     l295 08EE  
                                   l375 0BDA                                     l384 087E  
                                   l552 048F                                     l368 0B9A  
                                   l561 08FE                                     l369 0B9F  
                                   l298 0D46                                     l378 090E  
                                   l538 05A4                                     l660 07FF  
                                   l564 091F                                     l653 096C  
                                   l573 0A12                                     l902 0E17  
                                   l558 04C9                                     l567 08D4  
                                   l649 0E82                                     l915 0C8F  
                                   l785 0DAE                                     _GIE 005F  
                                   _PEN 048A                                     _ISR 05A5  
                                   _SEN 0488                                     fsr0 0004  
                                   indf 0000                            ___awmod@sign 00A5  
                       TMR1_Init@config 00A2              __size_of_EWH_EEPROM_Update 0011  
                    I2C_Init@i2c_config 00AE                            ___flmul@aexp 0032  
                          ___flmul@bexp 0033                            ___flmul@sign 002D  
                          ___flmul@temp 0038                            ___flmul@prod 0034  
         __size_of_I2C_Master_Send_NACK 000A                         __end_of_DD_Init 0950  
                                  ?_ISR 0070                            ___fltol@exp1 0043  
                                  l1021 0B46                                    l1031 0AC3  
                                  l3003 0B7F                                    l3011 0BA9  
                                  l3101 0A13                                    l3005 0B88  
                                  l3031 0F06                                    l3111 0A3C  
                                  l3103 0A2A                                    l3015 0BC6  
                                  l3007 0B94                                    l3033 0F15  
                                  l3041 0F59                                    l3201 049A  
                                  l3121 0A44                                    l3113 0A3D  
                                  l3105 0A2F                                    l3043 0F6B  
                                  l3035 0F1C                                    l3211 04B8  
                                  l3203 04A7                                    l3107 0A38  
                                  l3131 0F8E                                    l3045 0F6D  
                                  l3037 0F22                                    l3029 0F02  
                                  l3213 04BD                                    l3205 04AC  
                                  l3221 04D0                                    l3125 0A48  
                                  l3117 0A3E                                    l3109 0A3B  
                                  l3141 0FC7                                    l3133 0F9A  
                                  l3047 0F74                                    l3039 0F34  
                                  l3071 0941                                    l3063 0939  
                                  l3055 0933                                    l3215 04BE  
                                  l3207 04AD                                    l3231 04FD  
                                  l3223 04DA                                    l3151 0FFC  
                                  l3143 0FCA                                    l3135 0FAA  
                                  l3127 0F7D                                    l3217 04C3  
                                  l3209 04B2                                    l3161 03A2  
                                  l3241 0531                                    l3233 0500  
                                  l3225 04E1                                    l3137 0FB5  
                                  l3145 0FD1                                    l3129 0F84  
                                  l3081 08A2                                    l3075 0947  
                                  l3067 093D                                    l3059 0933  
                                  l2603 08D5                                    l3171 03D9  
                                  l3163 03A7                                    l2611 08B3  
                                  l3251 055A                                    l3243 0535  
                                  l3235 0510                                    l3227 04EA  
                                  l3219 04CA                                    l3147 0FE1  
                                  l3139 0FC5                                    l2605 08DB  
                                  l2621 0895                                    l2701 0E6C  
                                  l3181 0409                                    l3173 03DF  
                                  l3165 03B5                                    l3157 0398  
                                  l2613 08B5                                    l3261 0579  
                                  l3253 056A                                    l3237 0516  
                                  l3245 0539                                    l3229 04F8  
                                  l3149 0FEC                                    l3093 08A7  
                                  l3085 08A5                                    l3079 094B  
                                  l2623 0887                                    l2631 0980  
                                  l2711 0A53                                    l3191 0464  
                                  l3183 041D                                    l3175 03EE  
                                  l3167 03BF                                    l3159 039E  
                                  l2607 08AB                                    l2615 08BA  
                                  l3271 059F                                    l3263 0580  
                                  l3247 0549                                    l3239 0521  
                                  l3095 08A8                                    l2625 088C  
                                  l2633 0985                                    l2713 0A72  
                                  l2801 0B2E                                    l3193 046F  
                                  l3185 0431                                    l3177 03F0  
                                  l3169 03C3                                    l2609 08B0  
                                  l2617 08BD                                    l2641 09B5  
                                  l2721 0CD7                                    l3273 05A0  
                                  l3265 0585                                    l3249 054F  
                                  l3257 056D                                    l3097 08A9  
                                  l3089 08A6                                    l2619 0890  
                                  l2627 0970                                    l3099 08EF  
                                  l2731 0953                                    l2803 0B34  
                                  l3195 047F                                    l3179 03F5  
                                  l3187 0444                                    l2651 09D2  
                                  l2643 09BA                                    l2723 0CE2  
                                  l2715 0C90                                    l3267 0592  
                                  l3259 0574                                    l3611 0785  
                                  l3603 077B                                    l2637 0899  
                                  l2629 0975                                    l2709 0A4D  
                                  l2661 0E1C                                    l2733 095B  
                                  l2821 0A9E                                    l2813 0A88  
                                  l2805 0B35                                    l2901 09FB  
                                  l3197 0494                                    l3189 0454  
                                  l2653 09D7                                    l2645 09C2  
                                  l2725 0CE7                                    l2717 0C96  
                                  l3269 0598                                    l2639 089E  
                                  l2671 0E30                                    l2663 0E20  
                                  l2735 095E                                    l2751 0DBD  
                                  l2743 0DAF                                    l2823 0AA2  
                                  l2815 0A90                                    l2831 0ABF  
                                  l2807 0B3C                                    l2903 0A11  
                                  l2647 09C5                                    l2719 0CB5  
                                  l2911 0D5C                                    l3631 07AA  
                                  l3623 0793                                    l3615 0789  
                                  l3607 0781                                    l2841 0BE8  
                                  l2681 0E44                                    l2673 0E34  
                                  l2665 0E25                                    l2657 0E1B  
                                  l2729 07F8                                    l2737 0964  
                                  l2761 0DD2                                    l2753 0DC1  
                                  l2745 0DB2                                    l2825 0AAC  
                                  l2817 0A93                                    l2809 0B42  
                                  l2649 09CC                                    l2921 0D88  
                                  l2913 0D65                                    l3625 0798  
                                  l2851 0C04                                    l2843 0BEE  
                                  l2835 0BDE                                    l2691 0E58  
                                  l2683 0E48                                    l2675 0E39  
                                  l2667 0E29                                    l2771 0DF5  
                                  l2763 0DD5                                    l2755 0DC6  
                                  l2747 0DB6                                    l2827 0AB2  
                                  l2819 0A9A                                    l2923 0D96  
                                  l2915 0D69                                    l2907 0D47  
                                  l3627 079E                                    l3635 07AF  
                                  l3619 078F                                    l2853 0C0B  
                                  l2845 0BF5                                    l2837 0BDF  
                                  l2693 0E5C                                    l2685 0E4D  
                                  l2677 0E3D                                    l2781 0E0E  
                                  l2773 0DFB                                    l2765 0DDC  
                                  l2757 0DCA                                    l2749 0DBB  
                                  l2829 0AB9                                    l2941 0C43  
                                  l2933 0C35                                    l2925 0D97  
                                  l2917 0D6D                                    l2909 0D59  
                                  l3629 07A4                                    l3581 0748  
                                  l2855 0C10                                    l2847 0BFA  
                                  l2839 0BE4                                    l2863 0C21  
                                  l2695 0E61                                    l2687 0E51  
                                  l2783 0E13                                    l2775 0DFC  
                                  l2767 0DE0                                    l2759 0DCC  
                                  l2791 0B0B                                    l2951 0C5C  
                                  l2943 0C47                                    l2935 0C38  
                                  l2871 08E2                                    l2927 0DA0  
                                  l2919 0D76                                    l3591 075B  
                                  l3583 074C                                    l3575 073A  
                                  l2857 0C14                                    l2849 0BFE  
                                  l2697 0E65                                    l2777 0E03  
                                  l2769 0DE4                                    l2881 0D3B  
                                  l2873 0CEB                                    l2793 0B0E  
                                  l2961 0C7B                                    l2953 0C60  
                                  l2945 0C4C                                    l2937 0C3C  
                                  l2929 0DA6                                    l3593 075F  
                                  l3585 0750                                    l3577 0740  
                                  l2859 0C1A                                    l2779 0E09  
                                  l2875 0D0C                                    l2795 0B15  
                                  l2787 0B01                                    l2883 08FF  
                                  l2955 0C64                                    l2947 0C52  
                                  l2963 0C81                                    l2939 0C41  
                                  l2891 0912                                    l3931 0BD2  
                                  l3595 0766                                    l3587 0752  
                                  l3579 0742                                    l3933 0E74  
                                  l2877 0D17                                    l2797 0B19  
                                  l2789 0B05                                    l2893 09DE  
                                  l2885 087B                                    l2965 0C86  
                                  l2957 0C6E                                    l2949 0C55  
                                  l3597 076B                                    l3589 0753  
                                  l3935 0C29                                    l2879 0D1D  
                                  l2799 0B1D                                    l2895 09E2  
                                  l2967 0C8B                                    l2959 0C74  
                                  l2887 08C9                                    l2991 0B76  
                                  l3927 07B9                                    l3599 0776  
                                  l3937 0F42                                    l2897 09F1  
                                  l2993 0B79                                    l2985 0B4A  
                                  l3929 0BB4                                    l2899 09F5  
                                  l2995 0B7D                                    l2987 0B4C  
                                  l2989 0B55                                    l2999 0B7E  
                                  _ADIE 0466                                    _ADIF 0066  
                                  _ADON 00F8           __size_of_I2C_Master_Send_Stop 0009  
                                  _T0CS 040D                                    u2010 0964  
                                  u2011 0963                                    u2100 0E09  
                                  u2020 0DB6                                    u2101 0E08  
                                  u2021 0DB5                                    u2005 0CC9  
                                  u2110 0E0E                                    u2030 0DC1  
                                  u2111 0E0D                                    u2031 0DC0  
                                  u2040 0DD2                                    u2120 0B0B  
                                  u2041 0DD1                                    u2121 0B0A  
                                  u2210 0AA2                                    u2211 0AA1  
                                  u2060 0DE4                                    u2220 0AAC  
                                  u2140 0B1D                                    u2061 0DE3  
                                  u2221 0AAB                                    u2205 0A94  
                                  u2141 0B1C                                    u2310 0D6D  
                                  u2055 0DD6                                    u2135 0B0F  
                                  u2311 0D6C                                    u2080 0DF5  
                                  u2240 0ABF                                    u2160 0B2E  
                                  u2400 0C64                                    u2081 0DF4  
                                  u2241 0ABE                                    u2225 0AA8  
                                  u2161 0B2D                                    u2401 0C63  
                                  u2305 0D5E                                    u2250 0BE4  
                                  u2410 0C6E                                    u2330 0D88  
                                  u2251 0BE3                                    u2075 0DE5  
                                  u2235 0AB3                                    u2155 0B1E  
                                  u2411 0C6D                                    u2331 0D87  
                                  u2500 0F74                                    u2260 0BFA  
                                  u2180 0B42                                    u2501 0F73  
                                  u2261 0BF9                                    u2085 0DF1  
                                  u2181 0B41                                    u2165 0B2A  
                                  u2325 0D6F                                    u2270 0C10  
                                  u2190 0A90                                    u2430 0C81  
                                  u2350 0DA6                                    u2271 0C0F  
                                  u2095 0DFD                                    u2191 0A8F  
                                  u2175 0B36                                    u2431 0C80  
                                  u2415 0C6A                                    u2351 0DA5  
                                  u2335 0D84                                    u2280 09FB  
                                  u2440 0C86                                    u2360 0C3C  
                                  u2600 03F5                                    u2520 0FAA  
                                  u2281 09FA                                    u2441 0C85  
                                  u2425 0C75                                    u2361 0C3B  
                                  u2601 03F4                                    u2521 0FA9  
                                  u2345 0D98                                    u2370 0C47  
                                  u2610 0409                                    u2290 0D59  
                                  u2371 0C46                                    u2611 0408  
                                  u2515 0FA1                                    u2291 0D58  
                                  u1900 097F                                    u2380 0C52  
                                  u2700 048F                                    u2620 0431  
                                  u2540 0FC5                                    u1901 097E  
                                  u2381 0C51                                    u2701 048E  
                                  u2621 0430                                    u2541 0FC4  
                                  u2710 0499                                    u1910 09CC  
                                  u2711 0498                                    u2615 0405  
                                  u1911 09CB                                    u2535 0FBC  
                                  u1920 0E25                                    u2720 04AC  
                                  u2640 0454                                    u2800 0549  
                                  u2560 0FE1                                    u2480 0B88  
                                  u1921 0E24                                    u2721 04AB  
                                  u2641 0453                                    u2625 042D  
                                  u2801 0548                                    u2561 0FE0  
                                  u2481 0B87                                    u1930 0E39  
                                  u2730 04BD                                    u2810 054F  
                                  u1931 0E38                                    u2395 0C56  
                                  u2731 04BC                                    u2635 044B  
                                  u2811 054E                                    u2555 0FD8  
                                  u1940 0E4D                                    u2660 0464  
                                  u2580 0FFC                                    u1941 0E4C  
                                  u2661 0463                                    u2581 0FFB  
                                  u1950 0E61                                    u2590 03DF  
                                  u2830 056A                                    u2750 0510  
                                  u2495 0F61                                    u1951 0E60  
                                  u2655 045B                                    u2591 03DE  
                                  u2831 0569                                    u2751 050F  
                                  u2575 0FF3                                    u1880 08DB  
                                  u2680 047F                                    u2840 0574  
                                  u2760 0516                                    u1881 08DA  
                                  u2681 047E                                    u2841 0573  
                                  u2825 0561                                    u2761 0515  
                                  u2745 0507                                    u1890 08E1  
                                  u1970 0A72                                    u2850 0579  
                                  u1891 08E0                                    u1971 0A71  
                                  u2675 0476                                    u2851 0578  
                                  _PEIE 005E                                    u2860 0585  
                                  u2780 0531                                    u1965 0A5F  
                                  u2861 0584                                    u2781 0530  
                                  _INTE 005C                                    u1990 0CB5  
                                  u2870 059F                                    _INTF 0059  
                                  u3807 0D41                                    u2695 0486  
                                  u1991 0CB4                                    u2871 059E  
                                  u2775 0528                                    u1985 0CA2  
                                  u2795 0540                                    u3747 0FB0  
                                  _RCEN 048B                                    u3757 0FE7  
                                  u3767 051C                                    u3777 0555  
                                  u3787 046A                                    u3797 0D12  
                                  _TMR1 000E                                    _RSEN 0489  
                                  _main 073A                         __end_of_SSD_OFF 0800  
                      __end_of_I2C_Init 0B91                                    btemp 007E  
                  EEPROM_WriteByte@data 00A3                        __end_of_ADC_Init 0F7D  
                _EWH_getAvrgTempReading 09DB                                    start 0012  
              __size_of_EEPROM_ReadByte 005B                __size_of_EWH_EEPROM_Init 0010  
              __size_of_EWH_EEPROM_Read 000C                         __end_of_SW_Init 08AB  
                          ?_EWH_SSD_OFF 0070                         _ADC_ReadChannel 07CA  
                                 ??_ISR 0044                           ___fltol@sign1 0042  
                                 ?_main 0070                                   _ACKEN 048C  
                                 _ACKDT 048D                         __end_of___awdiv 0E18  
                       __end_of___awmod 0C90                         __end_of___flmul 0398  
                       __end_of___fltol 0EFF                         __end_of___lldiv 0DAF  
                       ___awdiv@divisor 00A0                         __end_of___lwdiv 0B47  
                                 i1l335 07E6                         __end_of___lwmod 0AC4  
                                 i1l338 07F4                                   i1l285 0B00  
                                 i1l580 05C5                                   i1l582 05C4  
                                 i1l596 0675                                   i1l942 0EE9  
                                 i1l935 0EFE                                   i1l945 0EFE  
                       ___awdiv@counter 00A4           __size_of_I2C_Master_WriteByte 001E  
                                 _PORTA 0005                                   _PORTB 0006  
                                 _PORTC 0007                                   _PORTD 0008  
                                 _TRISA 0085                                   _TRISB 0086  
                                 _TRISC 0087                                   _TRISD 0088  
                                 _SSPIE 0463                                   _SSPEN 00A5  
                                 _SSPIF 0063                          main@i2c_config 00B7  
                    __size_of_TMR1_Init 004A                             ?_TMR1_Start 0070  
                    __size_of_TMR1_Stop 0004                                   pclath 000A  
                                 status 0003                                   wtemp0 007E  
                    __size_of_SSD_Write 001D                  __size_of_I2C_Wait_IDLE 000D  
                       __initialization 0015               __size_of_EWH_SetTemp_Mode 00DB  
                          __end_of_main 07CA                  ?_I2C_Master_Send_Start 0070  
                           ?_SSD_config 00A0                                  ??_main 00B3  
                             ??_DD_Init 00A0                         _EWH_WakeUP_Mode 0F7D  
                                _ADCON0 001F                                  _ADCON1 009F  
                             ??_SSD_OFF 00A4                                  _ADRESH 001E  
                                _ADRESL 009E                        ___awdiv@dividend 00A2  
                                i1l1150 038B                                  i1l1144 0303  
                                i1l1138 0397                                  i1l1157 099F  
                                i1l1182 06A2                                  i1l1159 09B1  
                                i1l1184 0739                                  i1l1195 0703  
                                i1l1196 070F                                  i1l3303 07CB  
                                i1l3305 07DE                                  i1l3401 00DE  
                                i1l3321 0EAE                                  i1l3313 0E83  
                                i1l3307 07E3                                  i1l3411 0167  
                                i1l3403 00FA                                  i1l3323 0EAF  
                                i1l3315 0E90                                  i1l3309 07EA  
                                i1l3421 01DA                                  i1l3413 0177  
                                i1l3405 0126                                  i1l3325 0EB7  
                                i1l3501 06AA                                  i1l3431 0287  
                                i1l3423 01F7                                  i1l3415 0194  
                                i1l3407 0142                                  i1l3351 0037  
                                i1l3335 0EC5                                  i1l3327 0EB9  
                                i1l3319 0E99                                  i1l3511 06C5  
                                i1l3441 02D3                                  i1l3433 02AF  
                                i1l3425 0224                                  i1l3417 01A4  
                                i1l3409 015E                                  i1l3361 004E  
                                i1l3353 003E                                  i1l3345 0EDE  
                                i1l3337 0ECE                                  i1l3329 0EBD  
                                i1l3521 06EE                                  i1l3513 06CC  
                                i1l3505 06B3                                  i1l3283 0AD3  
                                i1l3275 0AC5                                  i1l3451 02E8  
                                i1l3443 02D4                                  i1l3435 02B8  
                                i1l3427 0234                                  i1l3419 01C1  
                                i1l3371 006A                                  i1l3363 0053  
                                i1l3355 0044                                  i1l3347 0EEE  
                                i1l3339 0ED7                                  i1l3531 0727  
                                i1l3523 06F9                                  i1l3515 06D0  
                                i1l3507 06B8                                  i1l3277 0AC6  
                                i1l3461 030D                                  i1l3453 02EC  
                                i1l3445 02DD                                  i1l3437 02C6  
                                i1l3429 0261                                  i1l3381 007F  
                                i1l3373 0070                                  i1l3365 005B  
                                i1l3357 0048                                  i1l3349 0EF3  
                                i1l3533 072C                                  i1l3525 06FD  
                                i1l3517 06DE                                  i1l3509 06BC  
                                i1l3701 0650                                  i1l3471 034B  
                                i1l3463 031B                                  i1l3455 0300  
                                i1l3439 02CF                                  i1l3447 02E3  
                                i1l3391 009B                                  i1l3383 0087  
                                i1l3375 0074                                  i1l3367 005D  
                                i1l3359 0049                                  i1l3535 0730  
                                i1l3527 0707                                  i1l3519 06E7  
                                i1l3711 066D                                  i1l3703 0657  
                                i1l3289 0AE0                                  i1l3297 0AED  
                                i1l3481 0377                                  i1l3473 0356  
                                i1l3465 031F                                  i1l3449 02E7  
                                i1l3385 0089                                  i1l3377 0075  
                                i1l3369 0065                                  i1l3537 0731  
                                i1l3529 0711                                  i1l3705 065F  
                                i1l3713 0670                                  i1l3483 037F  
                                i1l3475 0365                                  i1l3467 0338  
                                i1l3459 0308                                  i1l3395 00A4  
                                i1l3387 0091                                  i1l3379 007A  
                                i1l3715 0671                                  i1l3707 066A  
                                i1l3485 0383                                  i1l3477 036F  
                                i1l3469 033E                                  i1l3397 00B4  
                                i1l3389 0096                                  i1l3493 0681  
                                i1l3487 0384                                  i1l3479 0371  
                                i1l3399 00C1                                  i1l3495 0686  
                                i1l3671 05AD                                  i1l3489 038F  
                                i1l3497 068A                                  i1l3681 05CE  
                                i1l3673 05B4                                  i1l2971 098C  
                                i1l3499 069A                                  i1l3691 062D  
                                i1l3683 05D6                                  i1l3675 05B9  
                                i1l3667 05A5                                  i1l2981 09AD  
                                i1l2973 098E                                  u300_25 0EE0  
                                i1l3693 0633                                  i1l3685 061C  
                                i1l3677 05BE                                  i1l3669 05A9  
                                i1l2975 0995                                  i1l3695 0639  
                                i1l3687 0624                                  i1l3679 05CA  
                                u301_20 0EEE                                  i1l2977 0999  
                                u301_21 0EED                                  i1l3689 062C  
                                i1l3697 063D                                  i1l3939 0AF5  
                                i1l2979 09A8                                  i1l3699 0645  
                                u310_20 009B                                  u302_20 0EF3  
                                u310_21 009A                                  u302_21 0EF2  
                                _INTEDG 040E                                  u303_20 0048  
                                u311_21 00EC                                  u303_21 0047  
                                u311_22 00F3                                  u311_23 00FA  
                                u304_20 004E                                  u320_21 0216  
                                u312_21 0108                                  u304_21 004D  
                                u320_22 021D                                  u312_22 010F  
                                u320_23 0224                                  u312_23 0116  
                                u305_20 0053                                  u321_21 0243  
                                u313_21 0134                                  u305_21 0052  
                                u321_22 024A                                  u313_22 013B  
                                u321_23 0251                                  u313_23 0142  
                                u330_20 02E7                                  u322_20 026D  
                                u306_20 0074                                  u330_21 02E6  
                                u314_21 0150                                  u306_21 0073  
                                u314_22 0157                                  u314_23 015E  
                                u322_25 0268                                  u331_20 02EC  
                                u307_20 007A                                  u331_21 02EB  
                                u323_21 0279                                  u307_21 0079  
                                u323_22 0280                                  u323_23 0287  
                                u315_25 0160                                  u332_20 0300  
                                u324_20 0295                                  u308_20 007F  
                                u340_20 0686                                  u332_21 02FF  
                                u316_21 0186                                  u308_21 007E  
                                u340_21 0685                                  u316_22 018D  
                                u316_23 0194                                  u324_25 0290  
                                u245_20 0999                                  u333_20 0307  
                                u309_20 0096                                  u341_20 068A  
                                u245_21 0998                                  u333_21 0306  
                                u325_21 02A1                                  u317_21 01B3  
                                u309_21 0095                                  u341_21 0689  
                                u325_22 02A8                                  u317_22 01BA  
                                u325_23 02AF                                  u317_23 01C1  
                                u334_20 030D                                  u350_20 0707  
                                u342_20 06AA                                  u334_21 030C  
                                u350_21 0706                                  u342_21 06A9  
                                u246_25 09A0                                  u326_25 02B1  
                                u318_25 01C3                                  u247_20 09AD  
                                u335_20 031F                                  u351_20 071C  
                                u247_21 09AC                                  u335_21 031E  
                                u319_21 01E9                                  u319_22 01F0  
                                u319_23 01F7                                  u327_25 02C8  
                                u351_25 0717                                  u343_25 06BD  
                                u336_20 032E                                  u328_20 02D3  
                                u352_20 072C                                  u344_20 06CB  
                                u328_21 02D2                                  u352_21 072B  
                                u344_21 06CA                                  u336_25 0329  
                                u337_20 034B                                  u353_20 0730  
                                u337_21 034A                                  u353_21 072F  
                                u337_25 0347                                  u329_25 02D6  
                                u345_25 06DF                                  u338_20 0365  
                                u346_20 06ED                                  u370_20 0645  
                                u362_20 05A9                                  u338_21 0364  
                                u346_21 06EC                                  u370_21 0644  
                                u362_21 05A8                                  u290_25 0AE5  
                                u338_25 0361                                  u339_20 0383  
                                u371_20 0650                                  u363_20 05B4  
                                u339_21 0382                                  u371_21 064F  
                                u363_21 05B3                                  u291_25 07D4  
                                u347_25 06F2                                  u292_20 07EA  
                                u348_20 06FD                                  u372_20 065F  
                                u364_20 05BE                                  u292_21 07E9  
                                u348_21 06FC                                  u372_21 065E  
                                u364_21 05BD                                  u293_20 0E90  
                                u349_20 0703                                  u373_20 066A  
                                u365_20 05CA                                  u293_21 0E8F  
                                u349_21 0702                                  u373_21 0669  
                                u365_21 05C9                                  u381_27 07E0  
                                u294_20 0EA7                                  u366_20 05D6  
                                u366_21 05D5                                  u294_25 0EA2  
                                u295_20 0EBD                                  u367_20 0624  
                                u295_21 0EBC                                  u367_21 0623  
                                u296_20 0EC4                                  u368_20 062C  
                                u296_21 0EC3                                  u368_21 062B  
                                u288_25 0ACB                                  u369_20 0639  
                                u369_21 0638                                  u289_25 0AD8  
                                u297_25 0EC6                                  u298_20 0ED6  
                                u298_21 0ED5                                  u299_20 0EDD  
                                u299_21 0EDC                               ??_SW_Init 00A0  
                                _TMR1IE 0460                                  _TMR1IF 0060  
                                _TMR1ON 0080                                  _SSPADD 0093  
                                _SSPCON 0014                                  _SSPBUF 0013  
               __end_of_ADC_ReadChannel 07F5                        __end_of___xxtofl 073A  
                  __size_of_DD_GetState 003D                           _ReadingBuffer 00CF  
                     __end_of_TMR1_Init 0BDB                       __end_of_TMR1_Stop 087F  
                             ??___awdiv 00A4                               ??___awmod 00A4  
                             ??___flmul 0028                               ??___fltol 003E  
                             ??___lldiv 00A8                     __size_of_TMR1_Start 0010  
                             ??___lwdiv 00A4                               ??___lwmod 00A4  
               __size_of_EWH_SSD_Update 005C                       ??_EEPROM_ReadByte 00A4  
                     ??_EWH_EEPROM_Init 00A6                       ??_EWH_EEPROM_Read 00A7  
                 ADC_ReadChannel@result 0073                    __size_of_DD_SetState 005A  
                      ___awdiv@quotient 00A6                         ___awmod@divisor 00A0  
                       ___awmod@counter 00A4                __end_of_EEPROM_WriteByte 0A88  
                     __end_of_SSD_Write 096D                               ?_I2C_Init 0070  
                    __size_of__Umul8_16 0027                           _I2C_Wait_IDLE 08D5  
                             ?_ADC_Init 0070                                  saved_w 007E  
                        main@adc_config 00BD                     _I2C_Master_ReadByte 09B2  
                          ___xxtofl@arg 007A                            ___xxtofl@exp 0079  
                          ___xxtofl@val 0070                 __end_of__initialization 0033  
                   _I2C_Master_Send_ACK 08AB                     __size_of_SSD_config 006B  
            __end_of_EWH_Operating_Mode 04CA                              ___fltol@f1 003A  
                          SSD_config@ID 00A3                       _ReadingBufferFull 00C9  
                        _TempavgReading 00C8                          __pcstackCOMMON 0070  
                          __pidataBANK1 08BF                    __size_of_EWH_SSD_OFF 000D  
                  ?_I2C_Master_ReadByte 0070                 __end_of_EWH_WakeUP_Mode 1000  
                  ?_I2C_Master_Send_ACK 0070                          ?_I2C_Wait_IDLE 0070  
                            ??_I2C_Init 00AE                              ??_ADC_Init 00A0  
   EWH_getAvrgTempReading@sumOfReadings 00AB                              __pbssBANK0 004A  
                            __pbssBANK1 00C1                 ?_EWH_getAvrgTempReading 00A7  
                      ?_ADC_ReadChannel 0070                     SSD_config@SSD_state 00A0  
                     __end_of__Umul8_16 09B2                              __pmaintext 073A  
          __end_of_I2C_Master_Send_NACK 08BF                        _EWH_SetTemp_Mode 04CA  
          __end_of_I2C_Master_Send_Stop 08A2                   ??_I2C_Master_ReadByte 00A0  
                            __pintentry 0004                                 _ACKSTAT 048E  
                 ??_I2C_Master_Send_ACK 00A0                                 _T1CKPS0 0084  
                               _T1CKPS1 0085                                 _DD_Init 0933  
                             ?___xxtofl 0070                            ??_TMR1_Start 00A0  
        __end_of_EWH_getAvrgTempReading 0A13                                 _SSPCON2 0091  
                               _SSD_OFF 07F5                                 _SSPSTAT 0094  
                             SSD_OFF@ID 00A4                                 _SW_Init 08A2  
          __end_of_I2C_Master_WriteByte 098B                 __size_of_EWH_Sleep_Mode 003A  
               ??_I2C_Master_Send_Start 00A0                                 ___awdiv 0DAF  
                               ___awmod 0C35                                 ___flmul 0037  
                               ___fltol 0E83                                 ___lldiv 0D47  
                ADC_ReadChannel@channel 0075                                 ___lwdiv 0B01  
                        _EWH_SSD_Update 0CEB                                 ___lwmod 0A88  
                    __end_of_TMR1_Start 090F                        ?_EWH_WakeUP_Mode 0070  
                          ??_SSD_config 00A1                         ??_I2C_Wait_IDLE 00A0  
                               __ptext1 0B91                                 __ptext2 08A2  
                               __ptext3 0B47                                 __ptext4 0D47  
                               __ptext5 0F7D                                 __ptext6 0A13  
                               __ptext7 04CA                                 __ptext8 08E2  
                               __ptext9 090F                            __size_of_ISR 00DB  
                EEPROM_ReadByte@address 00A2                              ??___xxtofl 0074  
                      ___awmod@dividend 00A2                 EEPROM_WriteByte@address 00A1  
                               clrloop0 0880                    end_of_initialization 0033  
                    __end_of_SSD_config 0E83                               _EWH_State 0052  
                       _EEPROM_ReadByte 0C90                         _EWH_EEPROM_Init 08EF  
                       _EWH_EEPROM_Read 08C9                         ___lldiv@divisor 00A0  
                       ___lldiv@counter 00AD                  __end_of_EWH_SSD_Update 0D47  
                      DD_SetState@state 00A0                               _TMR1_Init 0B91  
                             _TMR1_Stop 087B                       ?_EEPROM_WriteByte 00A1  
                    ??_EEPROM_WriteByte 00A4                           ___xxtofl@sign 0078  
                     __size_of_I2C_Init 004A                    _I2C_Master_Send_NACK 08B5  
                             _SSD_Write 0950                       __size_of_ADC_Init 007E  
                  _I2C_Master_Send_Stop 0899                           ??_DD_GetState 0070  
                           ___flmul@grs 002E                         ?_EWH_SSD_Update 00AA  
                         ??_DD_SetState 00A1                              ?_TMR1_Init 0070  
                    _EWH_Operating_Mode 0398                              ?_TMR1_Stop 0070  
                  _I2C_Master_WriteByte 096D                     start_initialization 0015  
                           __end_of_ISR 0680                     ?_EWH_Operating_Mode 0070  
                 ?_I2C_Master_Send_NACK 0070                __end_of_EWH_SetTemp_Mode 05A5  
                            ?_SSD_Write 00A8                   ?_I2C_Master_Send_Stop 0070  
               __end_of_EEPROM_ReadByte 0CEB                 __end_of_EWH_EEPROM_Init 08FF  
               __end_of_EWH_EEPROM_Read 08D5            EWH_getAvrgTempReading@buffer 00AE  
  EWH_getAvrgTempReading@averageReading 00AD            EWH_getAvrgTempReading@length 00A7  
       ??_I2C_Master_Send_RepeatedStart 00A0                       _TempReading_count 00CB  
                         ??_EWH_SSD_OFF 00A5                     __end_of_DD_GetState 0B01  
                        _EWH_Sleep_Mode 0A13                    ??_EWH_Operating_Mode 00B0  
                        ADC_Init@config 00A2                             SSD_Write@ID 00A9  
                            init_fetch0 0920                               __Umul8_16 098B  
                           __pdataBANK1 00D9                              ISR@Reading 0048  
                   __end_of_DD_SetState 0C35                   ?_I2C_Master_WriteByte 0070  
                              ?_DD_Init 0070                               ___flmul@a 0024  
                             ___flmul@b 0020                           _Devices_State 00C5  
                             ___latbits 0002                           __pcstackBANK0 0020  
                         __pcstackBANK1 00A0                       __size_of___xxtofl 00BA  
                              ?_SSD_OFF 0070                         _SW_StateControl 004D  
                              ?_SW_Init 0070                            _current_Temp 00CC  
                __end_of_EWH_Sleep_Mode 0A4D             __end_of_I2C_Master_ReadByte 09DB  
                              ISR@count 0050                        ___lwdiv@dividend 00A2  
           __end_of_I2C_Master_Send_ACK 08B5                                ?___awdiv 00A0  
                              ?___awmod 00A0                                ?___flmul 0020  
                              ?___fltol 003A                                ?___lldiv 00A0  
                            ?__Umul8_16 0070                __size_of_ADC_ReadChannel 002B  
                              ?___lwdiv 00A0                                ?___lwmod 00A0  
        __size_of_I2C_Master_Send_Start 0009           __end_of_I2C_Master_Send_Start 0899  
                   __end_of_EWH_SSD_OFF 08EF                             ??_TMR1_Init 00A0  
                           ??_TMR1_Stop 00A0                                _I2C_Init 0B47  
                              _ADC_Init 0EFF                  ??_I2C_Master_Send_NACK 00A0  
                ??_I2C_Master_Send_Stop 00A0                       DD_GetState@device 0072  
                           ??_SSD_Write 00A9                        ___lwdiv@quotient 00A4  
                      ?_EEPROM_ReadByte 00A2                        ?_EWH_EEPROM_Init 0070  
                      ?_EWH_EEPROM_Read 0070                             _DD_GetState 0AC4  
                       SSD_Write@Number 00A8                       interrupt_function 0004  
                             clear_ram0 087F                         ?_EWH_Sleep_Mode 0070  
                              _EWH_Mode 00CE   __end_of_I2C_Master_Send_RepeatedStart 0890  
__size_of_I2C_Master_Send_RepeatedStart 0009           _I2C_Master_Send_RepeatedStart 0887  
                           _DD_SetState 0BDB           I2C_Master_ReadByte@Read_State 00A1  
                ??_I2C_Master_WriteByte 00A0                                _SSD_code 00D9  
                    EWH_SSD_Update@temp 00AA                   __end_of_I2C_Wait_IDLE 08E2  
                      __size_of_DD_Init 001D                __size_of_EWH_WakeUP_Mode 0083  
                              _SW_State 004A                        __size_of_SSD_OFF 000B  
             __size_of_EEPROM_WriteByte 003B                        ??_EWH_SSD_Update 00AC  
                      __size_of_SW_Init 0009                 EWH_getAvrgTempReading@i 00AF  
                           _EWH_SSD_OFF 08E2                             ??__Umul8_16 0072  
                      __size_of___awdiv 0069                        __size_of___awmod 005B  
                      __size_of___flmul 0361                        __size_of___fltol 007C  
                      __size_of___lldiv 0068                        __size_of___lwdiv 0046  
                      __size_of___lwmod 003C             EWH_EEPROM_Update@newSetTemp 00A6  
              ??_EWH_getAvrgTempReading 00A8                       ??_ADC_ReadChannel 0072  
                              ___xxtofl 0680                       _NoPress_Sec_count 0051  
                       ___lwdiv@divisor 00A0                         ___lwdiv@counter 00A6  
                              __ptext10 08C9                                __ptext11 0C90  
                              __ptext20 0B01                                __ptext12 09B2  
                              __ptext21 0CEB                                __ptext13 08B5  
                              __ptext30 096D                                __ptext22 0A88  
                              __ptext14 08AB                                __ptext31 0899  
                              __ptext23 0DAF                                __ptext15 0398  
                              __ptext40 0037                                __ptext32 0890  
                              __ptext24 0950                                __ptext16 0C35  
                              __ptext41 098B                                __ptext33 0887  
                              __ptext25 07F5                                __ptext17 087B  
                              __ptext42 0AC4                                __ptext34 08D5  
                              __ptext26 0E18                                __ptext18 08FF  
                              __ptext43 07CA                                __ptext35 0933  
                              __ptext27 0BDB                                __ptext19 09DB  
                              __ptext36 0EFF                                __ptext28 08EF  
                              __ptext37 05A5                                __ptext29 0A4D  
                              __ptext38 0680                                __ptext39 0E83  
                     _EWH_EEPROM_Update 090F                       ?_EWH_SetTemp_Mode 0070  
                    ?_EWH_EEPROM_Update 0070                      ??_EWH_SetTemp_Mode 00AE  
                         __size_of_main 0090                     ??_EWH_EEPROM_Update 00A6  
                              _set_Temp 00CD          ?_I2C_Master_Send_RepeatedStart 0070  
             __end_of_EWH_EEPROM_Update 0920                                init_ram0 0924  
                            _EWH_Events 00C1                                intlevel1 0000  
                      ___lwmod@dividend 00A2                       ??_EWH_WakeUP_Mode 00AE  
                      ___lldiv@dividend 00A4                     EEPROM_ReadByte@data 00A6  
           __size_of_EWH_Operating_Mode 0132                       DD_SetState@device 00A3  
                __Umul8_16@multiplicand 0070         __size_of_EWH_getAvrgTempReading 0038  
                      ___lldiv@quotient 00A9                         ___lwmod@divisor 00A0  
                       ___lwmod@counter 00A4                          _SSD_Blink_flag 00CA  
                            _TMR1_Start 08FF                I2C_Master_WriteByte@Data 00A0  
                      ??_EWH_Sleep_Mode 00A5                            ?_DD_GetState 0070  
                      _EEPROM_WriteByte 0A4D                            main@TMR1_cfg 00B5  
                  __Umul8_16@multiplier 0078                       __Umul8_16@product 0074  
