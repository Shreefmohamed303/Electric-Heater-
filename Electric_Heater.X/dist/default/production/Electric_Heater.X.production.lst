

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Jul 08 06:27:13 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,merge=1,delta=2
    54                           	psect	text39,local,class=CODE,merge=1,delta=2
    55                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    59                           	psect	text44,local,class=CODE,merge=1,delta=2
    60                           	psect	text45,local,class=CODE,merge=1,delta=2
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    62                           	dabs	1,0x7E,2
    63  0000                     
    64                           ; Version 2.20
    65                           ; Generated 12/02/2020 GMT
    66                           ; 
    67                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC16F877A Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     	;# 
    99  0001                     	;# 
   100  0002                     	;# 
   101  0003                     	;# 
   102  0004                     	;# 
   103  0005                     	;# 
   104  0006                     	;# 
   105  0007                     	;# 
   106  0008                     	;# 
   107  0009                     	;# 
   108  000A                     	;# 
   109  000B                     	;# 
   110  000C                     	;# 
   111  000D                     	;# 
   112  000E                     	;# 
   113  000E                     	;# 
   114  000F                     	;# 
   115  0010                     	;# 
   116  0011                     	;# 
   117  0012                     	;# 
   118  0013                     	;# 
   119  0014                     	;# 
   120  0015                     	;# 
   121  0015                     	;# 
   122  0016                     	;# 
   123  0017                     	;# 
   124  0018                     	;# 
   125  0019                     	;# 
   126  001A                     	;# 
   127  001B                     	;# 
   128  001B                     	;# 
   129  001C                     	;# 
   130  001D                     	;# 
   131  001E                     	;# 
   132  001F                     	;# 
   133  0081                     	;# 
   134  0085                     	;# 
   135  0086                     	;# 
   136  0087                     	;# 
   137  0088                     	;# 
   138  0089                     	;# 
   139  008C                     	;# 
   140  008D                     	;# 
   141  008E                     	;# 
   142  0091                     	;# 
   143  0092                     	;# 
   144  0093                     	;# 
   145  0094                     	;# 
   146  0098                     	;# 
   147  0099                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  009F                     	;# 
   152  010C                     	;# 
   153  010D                     	;# 
   154  010E                     	;# 
   155  010F                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  0000                     	;# 
   159  0001                     	;# 
   160  0002                     	;# 
   161  0003                     	;# 
   162  0004                     	;# 
   163  0005                     	;# 
   164  0006                     	;# 
   165  0007                     	;# 
   166  0008                     	;# 
   167  0009                     	;# 
   168  000A                     	;# 
   169  000B                     	;# 
   170  000C                     	;# 
   171  000D                     	;# 
   172  000E                     	;# 
   173  000E                     	;# 
   174  000F                     	;# 
   175  0010                     	;# 
   176  0011                     	;# 
   177  0012                     	;# 
   178  0013                     	;# 
   179  0014                     	;# 
   180  0015                     	;# 
   181  0015                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001B                     	;# 
   188  001B                     	;# 
   189  001C                     	;# 
   190  001D                     	;# 
   191  001E                     	;# 
   192  001F                     	;# 
   193  0081                     	;# 
   194  0085                     	;# 
   195  0086                     	;# 
   196  0087                     	;# 
   197  0088                     	;# 
   198  0089                     	;# 
   199  008C                     	;# 
   200  008D                     	;# 
   201  008E                     	;# 
   202  0091                     	;# 
   203  0092                     	;# 
   204  0093                     	;# 
   205  0094                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  018C                     	;# 
   217  018D                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  000E                     	;# 
   233  000E                     	;# 
   234  000F                     	;# 
   235  0010                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0015                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001B                     	;# 
   249  001C                     	;# 
   250  001D                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  0081                     	;# 
   254  0085                     	;# 
   255  0086                     	;# 
   256  0087                     	;# 
   257  0088                     	;# 
   258  0089                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  0091                     	;# 
   263  0092                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  010E                     	;# 
   275  010F                     	;# 
   276  018C                     	;# 
   277  018D                     	;# 
   278  0000                     	;# 
   279  0001                     	;# 
   280  0002                     	;# 
   281  0003                     	;# 
   282  0004                     	;# 
   283  0005                     	;# 
   284  0006                     	;# 
   285  0007                     	;# 
   286  0008                     	;# 
   287  0009                     	;# 
   288  000A                     	;# 
   289  000B                     	;# 
   290  000C                     	;# 
   291  000D                     	;# 
   292  000E                     	;# 
   293  000E                     	;# 
   294  000F                     	;# 
   295  0010                     	;# 
   296  0011                     	;# 
   297  0012                     	;# 
   298  0013                     	;# 
   299  0014                     	;# 
   300  0015                     	;# 
   301  0015                     	;# 
   302  0016                     	;# 
   303  0017                     	;# 
   304  0018                     	;# 
   305  0019                     	;# 
   306  001A                     	;# 
   307  001B                     	;# 
   308  001B                     	;# 
   309  001C                     	;# 
   310  001D                     	;# 
   311  001E                     	;# 
   312  001F                     	;# 
   313  0081                     	;# 
   314  0085                     	;# 
   315  0086                     	;# 
   316  0087                     	;# 
   317  0088                     	;# 
   318  0089                     	;# 
   319  008C                     	;# 
   320  008D                     	;# 
   321  008E                     	;# 
   322  0091                     	;# 
   323  0092                     	;# 
   324  0093                     	;# 
   325  0094                     	;# 
   326  0098                     	;# 
   327  0099                     	;# 
   328  009C                     	;# 
   329  009D                     	;# 
   330  009E                     	;# 
   331  009F                     	;# 
   332  010C                     	;# 
   333  010D                     	;# 
   334  010E                     	;# 
   335  010F                     	;# 
   336  018C                     	;# 
   337  018D                     	;# 
   338  0000                     	;# 
   339  0001                     	;# 
   340  0002                     	;# 
   341  0003                     	;# 
   342  0004                     	;# 
   343  0005                     	;# 
   344  0006                     	;# 
   345  0007                     	;# 
   346  0008                     	;# 
   347  0009                     	;# 
   348  000A                     	;# 
   349  000B                     	;# 
   350  000C                     	;# 
   351  000D                     	;# 
   352  000E                     	;# 
   353  000E                     	;# 
   354  000F                     	;# 
   355  0010                     	;# 
   356  0011                     	;# 
   357  0012                     	;# 
   358  0013                     	;# 
   359  0014                     	;# 
   360  0015                     	;# 
   361  0015                     	;# 
   362  0016                     	;# 
   363  0017                     	;# 
   364  0018                     	;# 
   365  0019                     	;# 
   366  001A                     	;# 
   367  001B                     	;# 
   368  001B                     	;# 
   369  001C                     	;# 
   370  001D                     	;# 
   371  001E                     	;# 
   372  001F                     	;# 
   373  0081                     	;# 
   374  0085                     	;# 
   375  0086                     	;# 
   376  0087                     	;# 
   377  0088                     	;# 
   378  0089                     	;# 
   379  008C                     	;# 
   380  008D                     	;# 
   381  008E                     	;# 
   382  0091                     	;# 
   383  0092                     	;# 
   384  0093                     	;# 
   385  0094                     	;# 
   386  0098                     	;# 
   387  0099                     	;# 
   388  009C                     	;# 
   389  009D                     	;# 
   390  009E                     	;# 
   391  009F                     	;# 
   392  010C                     	;# 
   393  010D                     	;# 
   394  010E                     	;# 
   395  010F                     	;# 
   396  018C                     	;# 
   397  018D                     	;# 
   398  0000                     	;# 
   399  0001                     	;# 
   400  0002                     	;# 
   401  0003                     	;# 
   402  0004                     	;# 
   403  0005                     	;# 
   404  0006                     	;# 
   405  0007                     	;# 
   406  0008                     	;# 
   407  0009                     	;# 
   408  000A                     	;# 
   409  000B                     	;# 
   410  000C                     	;# 
   411  000D                     	;# 
   412  000E                     	;# 
   413  000E                     	;# 
   414  000F                     	;# 
   415  0010                     	;# 
   416  0011                     	;# 
   417  0012                     	;# 
   418  0013                     	;# 
   419  0014                     	;# 
   420  0015                     	;# 
   421  0015                     	;# 
   422  0016                     	;# 
   423  0017                     	;# 
   424  0018                     	;# 
   425  0019                     	;# 
   426  001A                     	;# 
   427  001B                     	;# 
   428  001B                     	;# 
   429  001C                     	;# 
   430  001D                     	;# 
   431  001E                     	;# 
   432  001F                     	;# 
   433  0081                     	;# 
   434  0085                     	;# 
   435  0086                     	;# 
   436  0087                     	;# 
   437  0088                     	;# 
   438  0089                     	;# 
   439  008C                     	;# 
   440  008D                     	;# 
   441  008E                     	;# 
   442  0091                     	;# 
   443  0092                     	;# 
   444  0093                     	;# 
   445  0094                     	;# 
   446  0098                     	;# 
   447  0099                     	;# 
   448  009C                     	;# 
   449  009D                     	;# 
   450  009E                     	;# 
   451  009F                     	;# 
   452  010C                     	;# 
   453  010D                     	;# 
   454  010E                     	;# 
   455  010F                     	;# 
   456  018C                     	;# 
   457  018D                     	;# 
   458  0000                     	;# 
   459  0001                     	;# 
   460  0002                     	;# 
   461  0003                     	;# 
   462  0004                     	;# 
   463  0005                     	;# 
   464  0006                     	;# 
   465  0007                     	;# 
   466  0008                     	;# 
   467  0009                     	;# 
   468  000A                     	;# 
   469  000B                     	;# 
   470  000C                     	;# 
   471  000D                     	;# 
   472  000E                     	;# 
   473  000E                     	;# 
   474  000F                     	;# 
   475  0010                     	;# 
   476  0011                     	;# 
   477  0012                     	;# 
   478  0013                     	;# 
   479  0014                     	;# 
   480  0015                     	;# 
   481  0015                     	;# 
   482  0016                     	;# 
   483  0017                     	;# 
   484  0018                     	;# 
   485  0019                     	;# 
   486  001A                     	;# 
   487  001B                     	;# 
   488  001B                     	;# 
   489  001C                     	;# 
   490  001D                     	;# 
   491  001E                     	;# 
   492  001F                     	;# 
   493  0081                     	;# 
   494  0085                     	;# 
   495  0086                     	;# 
   496  0087                     	;# 
   497  0088                     	;# 
   498  0089                     	;# 
   499  008C                     	;# 
   500  008D                     	;# 
   501  008E                     	;# 
   502  0091                     	;# 
   503  0092                     	;# 
   504  0093                     	;# 
   505  0094                     	;# 
   506  0098                     	;# 
   507  0099                     	;# 
   508  009C                     	;# 
   509  009D                     	;# 
   510  009E                     	;# 
   511  009F                     	;# 
   512  010C                     	;# 
   513  010D                     	;# 
   514  010E                     	;# 
   515  010F                     	;# 
   516  018C                     	;# 
   517  018D                     	;# 
   518  0000                     	;# 
   519  0001                     	;# 
   520  0002                     	;# 
   521  0003                     	;# 
   522  0004                     	;# 
   523  0005                     	;# 
   524  0006                     	;# 
   525  0007                     	;# 
   526  0008                     	;# 
   527  0009                     	;# 
   528  000A                     	;# 
   529  000B                     	;# 
   530  000C                     	;# 
   531  000D                     	;# 
   532  000E                     	;# 
   533  000E                     	;# 
   534  000F                     	;# 
   535  0010                     	;# 
   536  0011                     	;# 
   537  0012                     	;# 
   538  0013                     	;# 
   539  0014                     	;# 
   540  0015                     	;# 
   541  0015                     	;# 
   542  0016                     	;# 
   543  0017                     	;# 
   544  0018                     	;# 
   545  0019                     	;# 
   546  001A                     	;# 
   547  001B                     	;# 
   548  001B                     	;# 
   549  001C                     	;# 
   550  001D                     	;# 
   551  001E                     	;# 
   552  001F                     	;# 
   553  0081                     	;# 
   554  0085                     	;# 
   555  0086                     	;# 
   556  0087                     	;# 
   557  0088                     	;# 
   558  0089                     	;# 
   559  008C                     	;# 
   560  008D                     	;# 
   561  008E                     	;# 
   562  0091                     	;# 
   563  0092                     	;# 
   564  0093                     	;# 
   565  0094                     	;# 
   566  0098                     	;# 
   567  0099                     	;# 
   568  009C                     	;# 
   569  009D                     	;# 
   570  009E                     	;# 
   571  009F                     	;# 
   572  010C                     	;# 
   573  010D                     	;# 
   574  010E                     	;# 
   575  010F                     	;# 
   576  018C                     	;# 
   577  018D                     	;# 
   578  0000                     	;# 
   579  0001                     	;# 
   580  0002                     	;# 
   581  0003                     	;# 
   582  0004                     	;# 
   583  0005                     	;# 
   584  0006                     	;# 
   585  0007                     	;# 
   586  0008                     	;# 
   587  0009                     	;# 
   588  000A                     	;# 
   589  000B                     	;# 
   590  000C                     	;# 
   591  000D                     	;# 
   592  000E                     	;# 
   593  000E                     	;# 
   594  000F                     	;# 
   595  0010                     	;# 
   596  0011                     	;# 
   597  0012                     	;# 
   598  0013                     	;# 
   599  0014                     	;# 
   600  0015                     	;# 
   601  0015                     	;# 
   602  0016                     	;# 
   603  0017                     	;# 
   604  0018                     	;# 
   605  0019                     	;# 
   606  001A                     	;# 
   607  001B                     	;# 
   608  001B                     	;# 
   609  001C                     	;# 
   610  001D                     	;# 
   611  001E                     	;# 
   612  001F                     	;# 
   613  0081                     	;# 
   614  0085                     	;# 
   615  0086                     	;# 
   616  0087                     	;# 
   617  0088                     	;# 
   618  0089                     	;# 
   619  008C                     	;# 
   620  008D                     	;# 
   621  008E                     	;# 
   622  0091                     	;# 
   623  0092                     	;# 
   624  0093                     	;# 
   625  0094                     	;# 
   626  0098                     	;# 
   627  0099                     	;# 
   628  009C                     	;# 
   629  009D                     	;# 
   630  009E                     	;# 
   631  009F                     	;# 
   632  010C                     	;# 
   633  010D                     	;# 
   634  010E                     	;# 
   635  010F                     	;# 
   636  018C                     	;# 
   637  018D                     	;# 
   638  0000                     	;# 
   639  0001                     	;# 
   640  0002                     	;# 
   641  0003                     	;# 
   642  0004                     	;# 
   643  0005                     	;# 
   644  0006                     	;# 
   645  0007                     	;# 
   646  0008                     	;# 
   647  0009                     	;# 
   648  000A                     	;# 
   649  000B                     	;# 
   650  000C                     	;# 
   651  000D                     	;# 
   652  000E                     	;# 
   653  000E                     	;# 
   654  000F                     	;# 
   655  0010                     	;# 
   656  0011                     	;# 
   657  0012                     	;# 
   658  0013                     	;# 
   659  0014                     	;# 
   660  0015                     	;# 
   661  0015                     	;# 
   662  0016                     	;# 
   663  0017                     	;# 
   664  0018                     	;# 
   665  0019                     	;# 
   666  001A                     	;# 
   667  001B                     	;# 
   668  001B                     	;# 
   669  001C                     	;# 
   670  001D                     	;# 
   671  001E                     	;# 
   672  001F                     	;# 
   673  0081                     	;# 
   674  0085                     	;# 
   675  0086                     	;# 
   676  0087                     	;# 
   677  0088                     	;# 
   678  0089                     	;# 
   679  008C                     	;# 
   680  008D                     	;# 
   681  008E                     	;# 
   682  0091                     	;# 
   683  0092                     	;# 
   684  0093                     	;# 
   685  0094                     	;# 
   686  0098                     	;# 
   687  0099                     	;# 
   688  009C                     	;# 
   689  009D                     	;# 
   690  009E                     	;# 
   691  009F                     	;# 
   692  010C                     	;# 
   693  010D                     	;# 
   694  010E                     	;# 
   695  010F                     	;# 
   696  018C                     	;# 
   697  018D                     	;# 
   698                           
   699                           	psect	idataBANK1
   700  0811                     __pidataBANK1:
   701                           
   702                           ;initializer for _SSD_code
   703  0811  343F               	retlw	63
   704  0812  3406               	retlw	6
   705  0813  345B               	retlw	91
   706  0814  344F               	retlw	79
   707  0815  3466               	retlw	102
   708  0816  346D               	retlw	109
   709  0817  347D               	retlw	125
   710  0818  3407               	retlw	7
   711  0819  347F               	retlw	127
   712  081A  346F               	retlw	111
   713  000E                     _TMR1	set	14
   714  0008                     _PORTD	set	8
   715  0005                     _PORTA	set	5
   716  001E                     _ADRESH	set	30
   717  001F                     _ADCON0	set	31
   718  0007                     _PORTC	set	7
   719  0006                     _PORTB	set	6
   720  0013                     _SSPBUF	set	19
   721  0014                     _SSPCON	set	20
   722  0059                     _INTF	set	89
   723  005C                     _INTE	set	92
   724  0080                     _TMR1ON	set	128
   725  0060                     _TMR1IF	set	96
   726  0085                     _T1CKPS1	set	133
   727  0084                     _T1CKPS0	set	132
   728  0066                     _ADIF	set	102
   729  00F8                     _ADON	set	248
   730  0063                     _SSPIF	set	99
   731  005E                     _PEIE	set	94
   732  005F                     _GIE	set	95
   733  00A5                     _SSPEN	set	165
   734  0088                     _TRISD	set	136
   735  0085                     _TRISA	set	133
   736  009E                     _ADRESL	set	158
   737  009F                     _ADCON1	set	159
   738  0086                     _TRISB	set	134
   739  0087                     _TRISC	set	135
   740  0093                     _SSPADD	set	147
   741  0094                     _SSPSTAT	set	148
   742  0091                     _SSPCON2	set	145
   743  040E                     _INTEDG	set	1038
   744  0460                     _TMR1IE	set	1120
   745  040D                     _T0CS	set	1037
   746  0466                     _ADIE	set	1126
   747  048B                     _RCEN	set	1163
   748  048E                     _ACKSTAT	set	1166
   749  048C                     _ACKEN	set	1164
   750  048D                     _ACKDT	set	1165
   751  0489                     _RSEN	set	1161
   752  048A                     _PEN	set	1162
   753  0488                     _SEN	set	1160
   754  0463                     _SSPIE	set	1123
   755                           
   756                           	psect	cinit
   757  0015                     start_initialization:	
   758                           ; #config settings
   759                           
   760  0015                     __initialization:
   761                           
   762                           ; Initialize objects allocated to BANK1
   763  0015  1383               	bcf	3,7	;select IRP bank0
   764  0016  30D3               	movlw	low (__pdataBANK1+10)
   765  0017  00FD               	movwf	btemp+-1
   766  0018  3008               	movlw	high __pidataBANK1
   767  0019  00FE               	movwf	btemp
   768  001A  3011               	movlw	low __pidataBANK1
   769  001B  00FF               	movwf	btemp+1
   770  001C  30C9               	movlw	low __pdataBANK1
   771  001D  0084               	movwf	4
   772  001E  120A  158A  2081  120A  118A  	fcall	init_ram0
   773                           
   774                           ; Clear objects allocated to BANK1
   775  0023  30BF               	movlw	low __pbssBANK1
   776  0024  0084               	movwf	4
   777  0025  30C9               	movlw	low (__pbssBANK1+10)
   778  0026  160A  118A  27CA  120A  118A  	fcall	clear_ram0
   779                           
   780                           ; Clear objects allocated to BANK0
   781  002B  304C               	movlw	low __pbssBANK0
   782  002C  0084               	movwf	4
   783  002D  3059               	movlw	low (__pbssBANK0+13)
   784  002E  160A  118A  27CA  120A  118A  	fcall	clear_ram0
   785  0033                     end_of_initialization:	
   786                           ;End of C runtime variable initialization code
   787                           
   788  0033                     __end_of__initialization:
   789  0033  0183               	clrf	3
   790  0034  120A  118A  2F2E   	ljmp	_main	;jump to C main() function
   791                           
   792                           	psect	bssBANK0
   793  004C                     __pbssBANK0:
   794  004C                     _SW_State:
   795  004C                     	ds	3
   796  004F                     _SW_StateControl:
   797  004F                     	ds	3
   798  0052                     _temp:
   799  0052                     	ds	2
   800  0054                     _Reading:
   801  0054                     	ds	2
   802  0056                     ISR@count:
   803  0056                     	ds	1
   804  0057                     _NoPress_Sec_count:
   805  0057                     	ds	1
   806  0058                     _EWH_State:
   807  0058                     	ds	1
   808                           
   809                           	psect	bssBANK1
   810  00BF                     __pbssBANK1:
   811  00BF                     _EWH_Events:
   812  00BF                     	ds	4
   813  00C3                     _Devices_State:
   814  00C3                     	ds	3
   815  00C6                     _current_Temp:
   816  00C6                     	ds	1
   817  00C7                     _set_Temp:
   818  00C7                     	ds	1
   819  00C8                     _EWH_Mode:
   820  00C8                     	ds	1
   821                           
   822                           	psect	dataBANK1
   823  00C9                     __pdataBANK1:
   824  00C9                     _SSD_code:
   825  00C9                     	ds	10
   826                           
   827                           	psect	inittext
   828  087D                     init_fetch0:	
   829                           ;	Called with low address in FSR and high address in W
   830                           
   831  087D  087E               	movf	btemp,w
   832  087E  008A               	movwf	10
   833  087F  087F               	movf	btemp+1,w
   834  0880  0082               	movwf	2
   835  0881                     init_ram0:	
   836                           ;Called with:
   837                           ;	high address of idata address in btemp 
   838                           ;	low address of idata address in btemp+1 
   839                           ;	low address of data in FSR
   840                           ;	high address + 1 of data in btemp-1
   841                           
   842  0881  120A  158A  207D  120A  158A  	fcall	init_fetch0
   843  0886  0080               	movwf	0
   844  0887  0A84               	incf	4,f
   845  0888  0804               	movf	4,w
   846  0889  067D               	xorwf	btemp+-1,w
   847  088A  1903               	btfsc	3,2
   848  088B  3400               	retlw	0
   849  088C  0AFF               	incf	btemp+1,f
   850  088D  1903               	btfsc	3,2
   851  088E  0AFE               	incf	btemp,f
   852  088F  2881               	goto	init_ram0
   853                           
   854                           	psect	clrtext
   855  17CA                     clear_ram0:	
   856                           ;	Called with FSR containing the base address, and
   857                           ;	W with the last address+1
   858                           
   859  17CA  0064               	clrwdt	;clear the watchdog before getting into this loop
   860  17CB                     clrloop0:
   861  17CB  0180               	clrf	0	;clear RAM location pointed to by FSR
   862  17CC  0A84               	incf	4,f	;increment pointer
   863  17CD  0604               	xorwf	4,w	;XOR with final address
   864  17CE  1903               	btfsc	3,2	;have we reached the end yet?
   865  17CF  3400               	retlw	0	;all done for this memory range, return
   866  17D0  0604               	xorwf	4,w	;XOR again to restore value
   867  17D1  2FCB               	goto	clrloop0	;do the next byte
   868                           
   869                           	psect	cstackBANK1
   870  00A0                     __pcstackBANK1:
   871  00A0                     ??_I2C_Master_Send_Start:
   872  00A0                     ??_I2C_Master_Send_RepeatedStart:	
   873                           ; 1 bytes @ 0x0
   874                           
   875  00A0                     ??_I2C_Master_WriteByte:	
   876                           ; 1 bytes @ 0x0
   877                           
   878  00A0                     ??_I2C_Master_Send_Stop:	
   879                           ; 1 bytes @ 0x0
   880                           
   881  00A0                     ??_I2C_Master_ReadByte:	
   882                           ; 1 bytes @ 0x0
   883                           
   884  00A0                     ??_TMR1_Init:	
   885                           ; 1 bytes @ 0x0
   886                           
   887  00A0                     ??_ADC_Init:	
   888                           ; 1 bytes @ 0x0
   889                           
   890  00A0                     ??_DD_Init:	
   891                           ; 1 bytes @ 0x0
   892                           
   893  00A0                     ??_SW_Init:	
   894                           ; 1 bytes @ 0x0
   895                           
   896  00A0                     ??_I2C_Wait_IDLE:	
   897                           ; 1 bytes @ 0x0
   898                           
   899  00A0                     ??_I2C_Master_Send_ACK:	
   900                           ; 1 bytes @ 0x0
   901                           
   902  00A0                     ??_I2C_Master_Send_NACK:	
   903                           ; 1 bytes @ 0x0
   904                           
   905  00A0                     ?_DD_SetState:	
   906                           ; 1 bytes @ 0x0
   907                           
   908  00A0                     ??_TMR1_Start:	
   909                           ; 1 bytes @ 0x0
   910                           
   911  00A0                     ??_TMR1_Stop:	
   912                           ; 1 bytes @ 0x0
   913                           
   914  00A0                     ?_SSD_config:	
   915                           ; 1 bytes @ 0x0
   916                           
   917  00A0                     ?___awdiv:	
   918                           ; 1 bytes @ 0x0
   919                           
   920  00A0                     ?___lwmod:	
   921                           ; 2 bytes @ 0x0
   922                           
   923  00A0                     ?___lldiv:	
   924                           ; 2 bytes @ 0x0
   925                           
   926  00A0                     I2C_Master_WriteByte@Data:	
   927                           ; 4 bytes @ 0x0
   928                           
   929  00A0                     DD_SetState@state:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  00A0                     SSD_config@SSD_state:	
   933                           ; 1 bytes @ 0x0
   934                           
   935  00A0                     ___awdiv@divisor:	
   936                           ; 1 bytes @ 0x0
   937                           
   938  00A0                     ___lwmod@divisor:	
   939                           ; 2 bytes @ 0x0
   940                           
   941  00A0                     ___lldiv@divisor:	
   942                           ; 2 bytes @ 0x0
   943                           
   944                           
   945                           ; 4 bytes @ 0x0
   946  00A0                     	ds	1
   947  00A1                     ?_EEPROM_WriteByte:
   948  00A1                     ??_DD_SetState:	
   949                           ; 1 bytes @ 0x1
   950                           
   951  00A1                     ??_SSD_config:	
   952                           ; 1 bytes @ 0x1
   953                           
   954  00A1                     I2C_Master_ReadByte@Read_State:	
   955                           ; 1 bytes @ 0x1
   956                           
   957  00A1                     EEPROM_WriteByte@address:	
   958                           ; 1 bytes @ 0x1
   959                           
   960                           
   961                           ; 2 bytes @ 0x1
   962  00A1                     	ds	1
   963  00A2                     ?_EEPROM_ReadByte:
   964  00A2                     ADC_Init@config:	
   965                           ; 1 bytes @ 0x2
   966                           
   967  00A2                     TMR1_Init@config:	
   968                           ; 1 bytes @ 0x2
   969                           
   970  00A2                     EEPROM_ReadByte@address:	
   971                           ; 1 bytes @ 0x2
   972                           
   973  00A2                     ___awdiv@dividend:	
   974                           ; 2 bytes @ 0x2
   975                           
   976  00A2                     ___lwmod@dividend:	
   977                           ; 2 bytes @ 0x2
   978                           
   979                           
   980                           ; 2 bytes @ 0x2
   981  00A2                     	ds	1
   982  00A3                     EEPROM_WriteByte@data:
   983  00A3                     DD_SetState@device:	
   984                           ; 1 bytes @ 0x3
   985                           
   986  00A3                     SSD_config@ID:	
   987                           ; 1 bytes @ 0x3
   988                           
   989                           
   990                           ; 1 bytes @ 0x3
   991  00A3                     	ds	1
   992  00A4                     ??_SSD_OFF:
   993  00A4                     ??_EEPROM_WriteByte:	
   994                           ; 1 bytes @ 0x4
   995                           
   996  00A4                     ??_EEPROM_ReadByte:	
   997                           ; 1 bytes @ 0x4
   998                           
   999  00A4                     ??___awdiv:	
  1000                           ; 1 bytes @ 0x4
  1001                           
  1002  00A4                     ??___lwmod:	
  1003                           ; 1 bytes @ 0x4
  1004                           
  1005  00A4                     SSD_OFF@ID:	
  1006                           ; 1 bytes @ 0x4
  1007                           
  1008  00A4                     ___awdiv@counter:	
  1009                           ; 1 bytes @ 0x4
  1010                           
  1011  00A4                     ___lwmod@counter:	
  1012                           ; 1 bytes @ 0x4
  1013                           
  1014  00A4                     ___lldiv@dividend:	
  1015                           ; 1 bytes @ 0x4
  1016                           
  1017                           
  1018                           ; 4 bytes @ 0x4
  1019  00A4                     	ds	1
  1020  00A5                     ??_EWH_Sleep_Mode:
  1021  00A5                     ??_EWH_SSD_OFF:	
  1022                           ; 1 bytes @ 0x5
  1023                           
  1024  00A5                     ___awdiv@sign:	
  1025                           ; 1 bytes @ 0x5
  1026                           
  1027                           
  1028                           ; 1 bytes @ 0x5
  1029  00A5                     	ds	1
  1030  00A6                     ??_EWH_EEPROM_Init:
  1031  00A6                     ??_EWH_EEPROM_Update:	
  1032                           ; 1 bytes @ 0x6
  1033                           
  1034  00A6                     EEPROM_ReadByte@data:	
  1035                           ; 1 bytes @ 0x6
  1036                           
  1037  00A6                     EWH_EEPROM_Update@newSetTemp:	
  1038                           ; 1 bytes @ 0x6
  1039                           
  1040  00A6                     ___awdiv@quotient:	
  1041                           ; 1 bytes @ 0x6
  1042                           
  1043                           
  1044                           ; 2 bytes @ 0x6
  1045  00A6                     	ds	1
  1046  00A7                     ??_EWH_EEPROM_Read:
  1047                           
  1048                           ; 1 bytes @ 0x7
  1049  00A7                     	ds	1
  1050  00A8                     ?_SSD_Write:
  1051  00A8                     ??___lldiv:	
  1052                           ; 1 bytes @ 0x8
  1053                           
  1054  00A8                     SSD_Write@Number:	
  1055                           ; 1 bytes @ 0x8
  1056                           
  1057                           
  1058                           ; 1 bytes @ 0x8
  1059  00A8                     	ds	1
  1060  00A9                     ??_SSD_Write:
  1061  00A9                     SSD_Write@ID:	
  1062                           ; 1 bytes @ 0x9
  1063                           
  1064  00A9                     ___lldiv@quotient:	
  1065                           ; 1 bytes @ 0x9
  1066                           
  1067                           
  1068                           ; 4 bytes @ 0x9
  1069  00A9                     	ds	1
  1070  00AA                     ?_Heater_Display:
  1071  00AA                     Heater_Display@temp:	
  1072                           ; 1 bytes @ 0xA
  1073                           
  1074                           
  1075                           ; 2 bytes @ 0xA
  1076  00AA                     	ds	2
  1077  00AC                     ??_Heater_Display:
  1078                           
  1079                           ; 1 bytes @ 0xC
  1080  00AC                     	ds	1
  1081  00AD                     ___lldiv@counter:
  1082                           
  1083                           ; 1 bytes @ 0xD
  1084  00AD                     	ds	1
  1085  00AE                     ??_EWH_PowerUP_Mode:
  1086  00AE                     ??_EWH_Operating_Mode:	
  1087                           ; 1 bytes @ 0xE
  1088                           
  1089  00AE                     ??_EWH_SetTemp_Mode:	
  1090                           ; 1 bytes @ 0xE
  1091                           
  1092  00AE                     ??_I2C_Init:	
  1093                           ; 1 bytes @ 0xE
  1094                           
  1095  00AE                     I2C_Init@i2c_config:	
  1096                           ; 1 bytes @ 0xE
  1097                           
  1098                           
  1099                           ; 1 bytes @ 0xE
  1100  00AE                     	ds	3
  1101  00B1                     ??_main:
  1102                           
  1103                           ; 1 bytes @ 0x11
  1104  00B1                     	ds	2
  1105  00B3                     main@TMR1_cfg:
  1106                           
  1107                           ; 2 bytes @ 0x13
  1108  00B3                     	ds	2
  1109  00B5                     main@i2c_config:
  1110                           
  1111                           ; 6 bytes @ 0x15
  1112  00B5                     	ds	6
  1113  00BB                     main@adc_config:
  1114                           
  1115                           ; 4 bytes @ 0x1B
  1116  00BB                     	ds	4
  1117                           
  1118                           	psect	cstackCOMMON
  1119  0070                     __pcstackCOMMON:
  1120  0070                     ?_I2C_Master_Send_Start:
  1121  0070                     ?_I2C_Master_Send_RepeatedStart:	
  1122                           ; 1 bytes @ 0x0
  1123                           
  1124  0070                     ?_I2C_Master_WriteByte:	
  1125                           ; 1 bytes @ 0x0
  1126                           
  1127  0070                     ?_I2C_Master_Send_Stop:	
  1128                           ; 1 bytes @ 0x0
  1129                           
  1130  0070                     ?_I2C_Master_ReadByte:	
  1131                           ; 1 bytes @ 0x0
  1132                           
  1133  0070                     ?_TMR1_Init:	
  1134                           ; 1 bytes @ 0x0
  1135                           
  1136  0070                     ?_ADC_Init:	
  1137                           ; 1 bytes @ 0x0
  1138                           
  1139  0070                     ?_DD_Init:	
  1140                           ; 1 bytes @ 0x0
  1141                           
  1142  0070                     ?_SW_Init:	
  1143                           ; 1 bytes @ 0x0
  1144                           
  1145  0070                     ?_EWH_EEPROM_Init:	
  1146                           ; 1 bytes @ 0x0
  1147                           
  1148  0070                     ?_EWH_Sleep_Mode:	
  1149                           ; 1 bytes @ 0x0
  1150                           
  1151  0070                     ?_EWH_PowerUP_Mode:	
  1152                           ; 1 bytes @ 0x0
  1153                           
  1154  0070                     ?_EWH_Operating_Mode:	
  1155                           ; 1 bytes @ 0x0
  1156                           
  1157  0070                     ?_EWH_SetTemp_Mode:	
  1158                           ; 1 bytes @ 0x0
  1159                           
  1160  0070                     ?_SSD_OFF:	
  1161                           ; 1 bytes @ 0x0
  1162                           
  1163  0070                     ?_EWH_EEPROM_Read:	
  1164                           ; 1 bytes @ 0x0
  1165                           
  1166  0070                     ?_EWH_EEPROM_Update:	
  1167                           ; 1 bytes @ 0x0
  1168                           
  1169  0070                     ?_I2C_Init:	
  1170                           ; 1 bytes @ 0x0
  1171                           
  1172  0070                     ?_I2C_Wait_IDLE:	
  1173                           ; 1 bytes @ 0x0
  1174                           
  1175  0070                     ?_I2C_Master_Send_ACK:	
  1176                           ; 1 bytes @ 0x0
  1177                           
  1178  0070                     ?_I2C_Master_Send_NACK:	
  1179                           ; 1 bytes @ 0x0
  1180                           
  1181  0070                     ?_main:	
  1182                           ; 1 bytes @ 0x0
  1183                           
  1184  0070                     ?_DD_GetState:	
  1185                           ; 1 bytes @ 0x0
  1186                           
  1187  0070                     ??_DD_GetState:	
  1188                           ; 1 bytes @ 0x0
  1189                           
  1190  0070                     ?_EWH_SSD_OFF:	
  1191                           ; 1 bytes @ 0x0
  1192                           
  1193  0070                     ?_TMR1_Start:	
  1194                           ; 1 bytes @ 0x0
  1195                           
  1196  0070                     ?_TMR1_Stop:	
  1197                           ; 1 bytes @ 0x0
  1198                           
  1199  0070                     ?_ISR:	
  1200                           ; 1 bytes @ 0x0
  1201                           
  1202  0070                     ?i1_SSD_config:	
  1203                           ; 1 bytes @ 0x0
  1204                           
  1205  0070                     ?__Umul8_16:	
  1206                           ; 1 bytes @ 0x0
  1207                           
  1208  0070                     ?_ADC_ReadChannel:	
  1209                           ; 2 bytes @ 0x0
  1210                           
  1211  0070                     ?i1___awdiv:	
  1212                           ; 2 bytes @ 0x0
  1213                           
  1214  0070                     ?i1___lwmod:	
  1215                           ; 2 bytes @ 0x0
  1216                           
  1217  0070                     ?___xxtofl:	
  1218                           ; 2 bytes @ 0x0
  1219                           
  1220  0070                     __Umul8_16@multiplicand:	
  1221                           ; 4 bytes @ 0x0
  1222                           
  1223  0070                     i1SSD_config@SSD_state:	
  1224                           ; 1 bytes @ 0x0
  1225                           
  1226  0070                     i1___awdiv@divisor:	
  1227                           ; 1 bytes @ 0x0
  1228                           
  1229  0070                     i1___lwmod@divisor:	
  1230                           ; 2 bytes @ 0x0
  1231                           
  1232  0070                     ___xxtofl@val:	
  1233                           ; 2 bytes @ 0x0
  1234                           
  1235                           
  1236                           ; 4 bytes @ 0x0
  1237  0070                     	ds	1
  1238  0071                     ??i1_SSD_config:
  1239                           
  1240                           ; 1 bytes @ 0x1
  1241  0071                     	ds	1
  1242  0072                     ??__Umul8_16:
  1243  0072                     ??_ADC_ReadChannel:	
  1244                           ; 1 bytes @ 0x2
  1245                           
  1246  0072                     DD_GetState@device:	
  1247                           ; 1 bytes @ 0x2
  1248                           
  1249  0072                     i1___awdiv@dividend:	
  1250                           ; 1 bytes @ 0x2
  1251                           
  1252  0072                     i1___lwmod@dividend:	
  1253                           ; 2 bytes @ 0x2
  1254                           
  1255                           
  1256                           ; 2 bytes @ 0x2
  1257  0072                     	ds	1
  1258  0073                     i1SSD_config@ID:
  1259  0073                     ADC_ReadChannel@result:	
  1260                           ; 1 bytes @ 0x3
  1261                           
  1262                           
  1263                           ; 2 bytes @ 0x3
  1264  0073                     	ds	1
  1265  0074                     ??___xxtofl:
  1266  0074                     ??i1___awdiv:	
  1267                           ; 1 bytes @ 0x4
  1268                           
  1269  0074                     ??i1___lwmod:	
  1270                           ; 1 bytes @ 0x4
  1271                           
  1272  0074                     i1___awdiv@counter:	
  1273                           ; 1 bytes @ 0x4
  1274                           
  1275  0074                     i1___lwmod@counter:	
  1276                           ; 1 bytes @ 0x4
  1277                           
  1278  0074                     __Umul8_16@product:	
  1279                           ; 1 bytes @ 0x4
  1280                           
  1281                           
  1282                           ; 2 bytes @ 0x4
  1283  0074                     	ds	1
  1284  0075                     ADC_ReadChannel@channel:
  1285  0075                     i1___awdiv@sign:	
  1286                           ; 1 bytes @ 0x5
  1287                           
  1288                           
  1289                           ; 1 bytes @ 0x5
  1290  0075                     	ds	1
  1291  0076                     __Umul8_16@word_mpld:
  1292  0076                     i1___awdiv@quotient:	
  1293                           ; 2 bytes @ 0x6
  1294                           
  1295                           
  1296                           ; 2 bytes @ 0x6
  1297  0076                     	ds	2
  1298  0078                     ?i1_SSD_Write:
  1299  0078                     __Umul8_16@multiplier:	
  1300                           ; 1 bytes @ 0x8
  1301                           
  1302  0078                     ___xxtofl@sign:	
  1303                           ; 1 bytes @ 0x8
  1304                           
  1305  0078                     i1SSD_Write@Number:	
  1306                           ; 1 bytes @ 0x8
  1307                           
  1308                           
  1309                           ; 1 bytes @ 0x8
  1310  0078                     	ds	1
  1311  0079                     ??i1_SSD_Write:
  1312  0079                     ___xxtofl@exp:	
  1313                           ; 1 bytes @ 0x9
  1314                           
  1315  0079                     i1SSD_Write@ID:	
  1316                           ; 1 bytes @ 0x9
  1317                           
  1318                           
  1319                           ; 1 bytes @ 0x9
  1320  0079                     	ds	1
  1321  007A                     ?i1_Heater_Display:
  1322  007A                     i1Heater_Display@temp:	
  1323                           ; 1 bytes @ 0xA
  1324                           
  1325  007A                     ___xxtofl@arg:	
  1326                           ; 2 bytes @ 0xA
  1327                           
  1328                           
  1329                           ; 4 bytes @ 0xA
  1330  007A                     	ds	2
  1331  007C                     ??i1_Heater_Display:
  1332                           
  1333                           ; 1 bytes @ 0xC
  1334  007C                     	ds	2
  1335                           
  1336                           	psect	cstackBANK0
  1337  0020                     __pcstackBANK0:
  1338  0020                     ?___flmul:
  1339  0020                     ___flmul@b:	
  1340                           ; 4 bytes @ 0x0
  1341                           
  1342                           
  1343                           ; 4 bytes @ 0x0
  1344  0020                     	ds	4
  1345  0024                     ___flmul@a:
  1346                           
  1347                           ; 4 bytes @ 0x4
  1348  0024                     	ds	4
  1349  0028                     ??___flmul:
  1350                           
  1351                           ; 1 bytes @ 0x8
  1352  0028                     	ds	5
  1353  002D                     ___flmul@sign:
  1354                           
  1355                           ; 1 bytes @ 0xD
  1356  002D                     	ds	1
  1357  002E                     ___flmul@grs:
  1358                           
  1359                           ; 4 bytes @ 0xE
  1360  002E                     	ds	4
  1361  0032                     ___flmul@aexp:
  1362                           
  1363                           ; 1 bytes @ 0x12
  1364  0032                     	ds	1
  1365  0033                     ___flmul@bexp:
  1366                           
  1367                           ; 1 bytes @ 0x13
  1368  0033                     	ds	1
  1369  0034                     ___flmul@prod:
  1370                           
  1371                           ; 4 bytes @ 0x14
  1372  0034                     	ds	4
  1373  0038                     ___flmul@temp:
  1374                           
  1375                           ; 2 bytes @ 0x18
  1376  0038                     	ds	2
  1377  003A                     ?___fltol:
  1378  003A                     ___fltol@f1:	
  1379                           ; 4 bytes @ 0x1A
  1380                           
  1381                           
  1382                           ; 4 bytes @ 0x1A
  1383  003A                     	ds	4
  1384  003E                     ??___fltol:
  1385                           
  1386                           ; 1 bytes @ 0x1E
  1387  003E                     	ds	4
  1388  0042                     ___fltol@sign1:
  1389                           
  1390                           ; 1 bytes @ 0x22
  1391  0042                     	ds	1
  1392  0043                     ___fltol@exp1:
  1393                           
  1394                           ; 1 bytes @ 0x23
  1395  0043                     	ds	1
  1396  0044                     ??_ISR:
  1397                           
  1398                           ; 1 bytes @ 0x24
  1399  0044                     	ds	6
  1400  004A                     ISR@Reading:
  1401                           
  1402                           ; 2 bytes @ 0x2A
  1403  004A                     	ds	2
  1404                           
  1405                           	psect	maintext
  1406  072E                     __pmaintext:	
  1407 ;;
  1408 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1409 ;;
  1410 ;; *************** function _main *****************
  1411 ;; Defined at:
  1412 ;;		line 6 in file "main.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;		None
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;  i2c_config      6   21[BANK1 ] struct .
  1417 ;;  adc_config      4   27[BANK1 ] struct .
  1418 ;;  TMR1_cfg        2   19[BANK1 ] struct .
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  1    wreg      void 
  1421 ;; Registers used:
  1422 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1423 ;; Tracked objects:
  1424 ;;		On entry : B00/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1428 ;;      Params:         0       0       0       0       0
  1429 ;;      Locals:         0       0      12       0       0
  1430 ;;      Temps:          0       0       2       0       0
  1431 ;;      Totals:         0       0      14       0       0
  1432 ;;Total ram usage:       14 bytes
  1433 ;; Hardware stack levels required when called:   10
  1434 ;; This function calls:
  1435 ;;		_ADC_Init
  1436 ;;		_DD_Init
  1437 ;;		_EWH_EEPROM_Init
  1438 ;;		_EWH_Operating_Mode
  1439 ;;		_EWH_PowerUP_Mode
  1440 ;;		_EWH_SetTemp_Mode
  1441 ;;		_EWH_Sleep_Mode
  1442 ;;		_I2C_Init
  1443 ;;		_SW_Init
  1444 ;;		_TMR1_Init
  1445 ;; This function is called by:
  1446 ;;		Startup code after reset
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           
  1451                           ;psect for function _main
  1452  072E                     _main:
  1453  072E                     l3815:	
  1454                           ;incstack = 0
  1455 ;; hardware stack exceeded
  1456                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1457                           
  1458                           
  1459                           ;main.c: 9:     tTMR1_Config TMR1_cfg;;main.c: 10:     TMR1_cfg.Prescaler=TMR1_PRESCALER
      +                          _8;
  1460  072E  3003               	movlw	3
  1461  072F  00FF               	movwf	btemp+1
  1462  0730  087F               	movf	btemp+1,w
  1463  0731  1683               	bsf	3,5	;RP0=1, select bank1
  1464  0732  1303               	bcf	3,6	;RP1=0, select bank1
  1465  0733  00B3               	movwf	main@TMR1_cfg^(0+128)
  1466  0734                     l3817:
  1467                           
  1468                           ;main.c: 11:     TMR1_cfg.clkSource=EXTERNAL_CLK_SOURCE;
  1469  0734  01B4               	clrf	(main@TMR1_cfg^(0+128)+1)
  1470  0735  0AB4               	incf	(main@TMR1_cfg^(0+128)+1),f
  1471  0736                     l3819:
  1472                           
  1473                           ;main.c: 13:     TMR1_Init(&TMR1_cfg);
  1474  0736  30B3               	movlw	(low (main@TMR1_cfg| 0))& (0+255)
  1475  0737  120A  158A  22B3  120A  118A  	fcall	_TMR1_Init
  1476  073C                     l3821:
  1477                           
  1478                           ;main.c: 15:     tADC_Config adc_config;;main.c: 16:     adc_config.alignment=RIGHT;
  1479  073C  1683               	bsf	3,5	;RP0=1, select bank1
  1480  073D  1303               	bcf	3,6	;RP1=0, select bank1
  1481  073E  01BD               	clrf	(main@adc_config^(0+128)+2)
  1482  073F  0ABD               	incf	(main@adc_config^(0+128)+2),f
  1483  0740                     l3823:
  1484                           
  1485                           ;main.c: 17:     adc_config.channel=ADC2;
  1486  0740  3002               	movlw	2
  1487  0741  00FF               	movwf	btemp+1
  1488  0742  087F               	movf	btemp+1,w
  1489  0743  00BB               	movwf	main@adc_config^(0+128)
  1490  0744                     l3825:
  1491                           
  1492                           ;main.c: 18:     adc_config.clk=FOSC_8;
  1493  0744  01BE               	clrf	(main@adc_config^(0+128)+3)
  1494  0745  0ABE               	incf	(main@adc_config^(0+128)+3),f
  1495  0746                     l3827:
  1496                           
  1497                           ;main.c: 19:     adc_config.mode= POLLING_MODE;
  1498  0746  01BC               	clrf	(main@adc_config^(0+128)+1)
  1499  0747                     l3829:
  1500                           
  1501                           ;main.c: 21:     tI2C_Config i2c_config;;main.c: 22:     i2c_config.BaudRate=100000;
  1502  0747  3000               	movlw	0
  1503  0748  00B9               	movwf	((main@i2c_config+3)^(0+128)+1)
  1504  0749  3001               	movlw	1
  1505  074A  00B8               	movwf	((main@i2c_config+2)^(0+128)+1)
  1506  074B  3086               	movlw	134
  1507  074C  00B7               	movwf	((main@i2c_config+1)^(0+128)+1)
  1508  074D  30A0               	movlw	160
  1509  074E  00B6               	movwf	(main@i2c_config^(0+128)+1)
  1510  074F                     l3831:
  1511                           
  1512                           ;main.c: 23:     i2c_config.Mode=Master_Mode;
  1513  074F  3008               	movlw	8
  1514  0750  00FF               	movwf	btemp+1
  1515  0751  087F               	movf	btemp+1,w
  1516  0752  00B5               	movwf	main@i2c_config^(0+128)
  1517  0753                     l3833:
  1518                           
  1519                           ;main.c: 24:     i2c_config.operationMode=POLLING;
  1520  0753  01BA               	clrf	(main@i2c_config^(0+128)+5)
  1521                           
  1522                           ;main.c: 27:     ADC_Init(&adc_config);
  1523  0754  30BB               	movlw	(low (main@adc_config| 0))& (0+255)
  1524  0755  120A  158A  26F4  120A  118A  	fcall	_ADC_Init
  1525  075A                     l3835:
  1526                           
  1527                           ;main.c: 28:     DD_Init();
  1528  075A  120A  158A  20AB  120A  118A  	fcall	_DD_Init
  1529  075F                     l3837:
  1530                           
  1531                           ;main.c: 29:     SW_Init();
  1532  075F  160A  118A  27ED  120A  118A  	fcall	_SW_Init
  1533                           
  1534                           ;main.c: 30:     I2C_Init(&i2c_config);
  1535  0764  30B5               	movlw	(low (main@i2c_config| 0))& (0+255)
  1536  0765  120A  158A  2269  120A  118A  	fcall	_I2C_Init
  1537  076A                     l3839:
  1538                           
  1539                           ;main.c: 31:     EWH_EEPROM_Init();
  1540  076A  120A  158A  204C  120A  118A  	fcall	_EWH_EEPROM_Init
  1541  076F                     l3843:	
  1542                           ;main.c: 33:     (0u)? (TRISB |= (1<<4)) : (TRISB &= ~(1<<4));
  1543                           
  1544  076F  30EF               	movlw	239
  1545  0770  00FF               	movwf	btemp+1
  1546  0771  087F               	movf	btemp+1,w
  1547  0772  1683               	bsf	3,5	;RP0=1, select bank1
  1548  0773  1303               	bcf	3,6	;RP1=0, select bank1
  1549  0774  0586               	andwf	6,f	;volatile
  1550  0775                     l3847:
  1551  0775  30DF               	movlw	223
  1552  0776  00FF               	movwf	btemp+1
  1553  0777  087F               	movf	btemp+1,w
  1554  0778  0586               	andwf	6,f	;volatile
  1555  0779                     l3851:
  1556  0779  30BF               	movlw	191
  1557  077A  00FF               	movwf	btemp+1
  1558  077B  087F               	movf	btemp+1,w
  1559  077C  0586               	andwf	6,f	;volatile
  1560  077D                     l3855:
  1561  077D  30EF               	movlw	239
  1562  077E  00FF               	movwf	btemp+1
  1563  077F  087F               	movf	btemp+1,w
  1564  0780  1283               	bcf	3,5	;RP0=0, select bank0
  1565  0781  1303               	bcf	3,6	;RP1=0, select bank0
  1566  0782  0586               	andwf	6,f	;volatile
  1567  0783                     l3859:
  1568  0783  30DF               	movlw	223
  1569  0784  00FF               	movwf	btemp+1
  1570  0785  087F               	movf	btemp+1,w
  1571  0786  0586               	andwf	6,f	;volatile
  1572  0787                     l3863:
  1573  0787  30BF               	movlw	191
  1574  0788  00FF               	movwf	btemp+1
  1575  0789  087F               	movf	btemp+1,w
  1576  078A  0586               	andwf	6,f	;volatile
  1577  078B  2FA3               	goto	l3875
  1578  078C                     l3865:
  1579                           
  1580                           ;main.c: 45:                 EWH_Sleep_Mode();
  1581  078C  120A  158A  21B8  120A  118A  	fcall	_EWH_Sleep_Mode
  1582                           
  1583                           ;main.c: 46:                 break;
  1584  0791  2FA3               	goto	l3875
  1585  0792                     l3867:
  1586                           
  1587                           ;main.c: 48:                 EWH_PowerUP_Mode();
  1588  0792  120A  158A  2772  120A  118A  	fcall	_EWH_PowerUP_Mode
  1589                           
  1590                           ;main.c: 49:                 break;
  1591  0797  2FA3               	goto	l3875
  1592  0798                     l3869:
  1593                           
  1594                           ;main.c: 51:                 EWH_Operating_Mode();
  1595  0798  120A  118A  2398  120A  118A  	fcall	_EWH_Operating_Mode
  1596                           
  1597                           ;main.c: 52:                 break;
  1598  079D  2FA3               	goto	l3875
  1599  079E                     l3871:
  1600                           
  1601                           ;main.c: 54:                 EWH_SetTemp_Mode();
  1602  079E  120A  118A  2593  120A  118A  	fcall	_EWH_SetTemp_Mode
  1603  07A3                     l3875:	
  1604                           ;main.c: 55:                 break;
  1605                           
  1606  07A3  1683               	bsf	3,5	;RP0=1, select bank1
  1607  07A4  1303               	bcf	3,6	;RP1=0, select bank1
  1608  07A5  0848               	movf	_EWH_Mode^(0+128),w
  1609  07A6  00B1               	movwf	??_main^(0+128)
  1610  07A7  01B2               	clrf	(??_main^(0+128)+1)
  1611                           
  1612                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1613                           ; Switch size 1, requested type "simple"
  1614                           ; Number of cases is 1, Range of values is 0 to 0
  1615                           ; switch strategies available:
  1616                           ; Name         Instructions Cycles
  1617                           ; simple_byte            4     3 (average)
  1618                           ; direct_byte           11     8 (fixed)
  1619                           ; jumptable            260     6 (fixed)
  1620                           ;	Chosen strategy is simple_byte
  1621  07A8  0832               	movf	(??_main+1)^(0+128),w
  1622  07A9  3A00               	xorlw	0	; case 0
  1623  07AA  1903               	skipnz
  1624  07AB  2FAD               	goto	l4185
  1625  07AC  2FA3               	goto	l3875
  1626  07AD                     l4185:
  1627                           
  1628                           ; Switch size 1, requested type "simple"
  1629                           ; Number of cases is 4, Range of values is 0 to 3
  1630                           ; switch strategies available:
  1631                           ; Name         Instructions Cycles
  1632                           ; simple_byte           13     7 (average)
  1633                           ; direct_byte           20     8 (fixed)
  1634                           ; jumptable            260     6 (fixed)
  1635                           ;	Chosen strategy is simple_byte
  1636  07AD  0831               	movf	??_main^(0+128),w
  1637  07AE  3A00               	xorlw	0	; case 0
  1638  07AF  1903               	skipnz
  1639  07B0  2F8C               	goto	l3865
  1640  07B1  3A01               	xorlw	1	; case 1
  1641  07B2  1903               	skipnz
  1642  07B3  2F92               	goto	l3867
  1643  07B4  3A03               	xorlw	3	; case 2
  1644  07B5  1903               	skipnz
  1645  07B6  2F9E               	goto	l3871
  1646  07B7  3A01               	xorlw	1	; case 3
  1647  07B8  1903               	skipnz
  1648  07B9  2F98               	goto	l3869
  1649  07BA  2FA3               	goto	l3875
  1650  07BB  120A  118A  2812   	ljmp	start
  1651  07BE                     __end_of_main:
  1652                           
  1653                           	psect	text1
  1654  0AB3                     __ptext1:	
  1655 ;; *************** function _TMR1_Init *****************
  1656 ;; Defined at:
  1657 ;;		line 3 in file "TMR1.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;  config          1    wreg     PTR struct .
  1660 ;;		 -> main@TMR1_cfg(2), 
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;  config          1    2[BANK1 ] PTR struct .
  1663 ;;		 -> main@TMR1_cfg(2), 
  1664 ;; Return value:  Size  Location     Type
  1665 ;;                  1    wreg      void 
  1666 ;; Registers used:
  1667 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1673 ;;      Params:         0       0       0       0       0
  1674 ;;      Locals:         0       0       1       0       0
  1675 ;;      Temps:          0       0       2       0       0
  1676 ;;      Totals:         0       0       3       0       0
  1677 ;;Total ram usage:        3 bytes
  1678 ;; Hardware stack levels used:    1
  1679 ;; Hardware stack levels required when called:    4
  1680 ;; This function calls:
  1681 ;;		Nothing
  1682 ;; This function is called by:
  1683 ;;		_main
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           
  1688                           ;psect for function _TMR1_Init
  1689  0AB3                     _TMR1_Init:
  1690                           
  1691                           ;incstack = 0
  1692                           ; Regs used in _TMR1_Init: [wreg-fsr0h+status,2+status,0]
  1693                           ;TMR1_Init@config stored from wreg
  1694  0AB3  1683               	bsf	3,5	;RP0=1, select bank1
  1695  0AB4  1303               	bcf	3,6	;RP1=0, select bank1
  1696  0AB5  00A2               	movwf	TMR1_Init@config^(0+128)
  1697  0AB6                     l3191:
  1698                           
  1699                           ;TMR1.c: 3: void TMR1_Init(tTMR1_Config *config);TMR1.c: 4: {;TMR1.c: 5:     switch(conf
      +                          ig->Prescaler)
  1700  0AB6  2ACB               	goto	l3195
  1701  0AB7                     l360:	
  1702                           ;TMR1.c: 6:     {;TMR1.c: 7:         case TMR1_PRESCALER_1:
  1703                           
  1704                           
  1705                           ;TMR1.c: 8:             T1CKPS0 = 0; T1CKPS1 = 0;
  1706  0AB7  1283               	bcf	3,5	;RP0=0, select bank0
  1707  0AB8  1303               	bcf	3,6	;RP1=0, select bank0
  1708  0AB9  1210               	bcf	16,4	;volatile
  1709  0ABA  1290               	bcf	16,5	;volatile
  1710                           
  1711                           ;TMR1.c: 9:             break;
  1712  0ABB  2AE8               	goto	l3199
  1713  0ABC                     l362:	
  1714                           ;TMR1.c: 10:         case TMR1_PRESCALER_2:
  1715                           
  1716                           
  1717                           ;TMR1.c: 11:             T1CKPS0 = 1; T1CKPS1 = 0;
  1718  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  1719  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  1720  0ABE  1610               	bsf	16,4	;volatile
  1721  0ABF  1290               	bcf	16,5	;volatile
  1722                           
  1723                           ;TMR1.c: 12:             break;
  1724  0AC0  2AE8               	goto	l3199
  1725  0AC1                     l363:	
  1726                           ;TMR1.c: 13:         case TMR1_PRESCALER_4:
  1727                           
  1728                           
  1729                           ;TMR1.c: 14:             T1CKPS0 = 0; T1CKPS1 = 1;
  1730  0AC1  1283               	bcf	3,5	;RP0=0, select bank0
  1731  0AC2  1303               	bcf	3,6	;RP1=0, select bank0
  1732  0AC3  1210               	bcf	16,4	;volatile
  1733  0AC4  1690               	bsf	16,5	;volatile
  1734                           
  1735                           ;TMR1.c: 15:             break;
  1736  0AC5  2AE8               	goto	l3199
  1737  0AC6                     l364:	
  1738                           ;TMR1.c: 16:         case TMR1_PRESCALER_8:
  1739                           
  1740                           
  1741                           ;TMR1.c: 17:             T1CKPS0 = 1; T1CKPS1 = 1;
  1742  0AC6  1283               	bcf	3,5	;RP0=0, select bank0
  1743  0AC7  1303               	bcf	3,6	;RP1=0, select bank0
  1744  0AC8  1610               	bsf	16,4	;volatile
  1745  0AC9  1690               	bsf	16,5	;volatile
  1746                           
  1747                           ;TMR1.c: 18:             break;
  1748  0ACA  2AE8               	goto	l3199
  1749  0ACB                     l3195:
  1750  0ACB  0822               	movf	TMR1_Init@config^(0+128),w
  1751  0ACC  0084               	movwf	4
  1752  0ACD  1383               	bcf	3,7	;select IRP bank0
  1753  0ACE  0800               	movf	0,w
  1754  0ACF  00A0               	movwf	??_TMR1_Init^(0+128)
  1755  0AD0  01A1               	clrf	(??_TMR1_Init^(0+128)+1)
  1756                           
  1757                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1758                           ; Switch size 1, requested type "simple"
  1759                           ; Number of cases is 1, Range of values is 0 to 0
  1760                           ; switch strategies available:
  1761                           ; Name         Instructions Cycles
  1762                           ; simple_byte            4     3 (average)
  1763                           ; direct_byte           11     8 (fixed)
  1764                           ; jumptable            260     6 (fixed)
  1765                           ;	Chosen strategy is simple_byte
  1766  0AD1  0821               	movf	(??_TMR1_Init+1)^(0+128),w
  1767  0AD2  3A00               	xorlw	0	; case 0
  1768  0AD3  1903               	skipnz
  1769  0AD4  2AD6               	goto	l4187
  1770  0AD5  2AE8               	goto	l3199
  1771  0AD6                     l4187:
  1772                           
  1773                           ; Switch size 1, requested type "simple"
  1774                           ; Number of cases is 4, Range of values is 0 to 3
  1775                           ; switch strategies available:
  1776                           ; Name         Instructions Cycles
  1777                           ; simple_byte           13     7 (average)
  1778                           ; direct_byte           20     8 (fixed)
  1779                           ; jumptable            260     6 (fixed)
  1780                           ;	Chosen strategy is simple_byte
  1781  0AD6  0820               	movf	??_TMR1_Init^(0+128),w
  1782  0AD7  3A00               	xorlw	0	; case 0
  1783  0AD8  1903               	skipnz
  1784  0AD9  2AB7               	goto	l360
  1785  0ADA  3A01               	xorlw	1	; case 1
  1786  0ADB  1903               	skipnz
  1787  0ADC  2ABC               	goto	l362
  1788  0ADD  3A03               	xorlw	3	; case 2
  1789  0ADE  1903               	skipnz
  1790  0ADF  2AC1               	goto	l363
  1791  0AE0  3A01               	xorlw	1	; case 3
  1792  0AE1  1903               	skipnz
  1793  0AE2  2AC6               	goto	l364
  1794  0AE3  2AE8               	goto	l3199
  1795  0AE4                     l366:	
  1796                           ;TMR1.c: 22:     {;TMR1.c: 23:         case INTERNAL_CLK_SOURCE:
  1797                           
  1798                           
  1799                           ;TMR1.c: 24:             (T0CS = 0);
  1800  0AE4  1281               	bcf	1,5	;volatile
  1801                           
  1802                           ;TMR1.c: 25:             break ;
  1803  0AE5  2AFC               	goto	l369
  1804  0AE6                     l368:	
  1805                           ;TMR1.c: 26:         case EXTERNAL_CLK_SOURCE:
  1806                           
  1807                           
  1808                           ;TMR1.c: 27:             (T0CS = 1);
  1809  0AE6  1681               	bsf	1,5	;volatile
  1810                           
  1811                           ;TMR1.c: 28:             break ;
  1812  0AE7  2AFC               	goto	l369
  1813  0AE8                     l3199:
  1814  0AE8  1683               	bsf	3,5	;RP0=1, select bank1
  1815  0AE9  1303               	bcf	3,6	;RP1=0, select bank1
  1816  0AEA  0A22               	incf	TMR1_Init@config^(0+128),w
  1817  0AEB  0084               	movwf	4
  1818  0AEC  0800               	movf	0,w
  1819  0AED  00A0               	movwf	??_TMR1_Init^(0+128)
  1820  0AEE  01A1               	clrf	(??_TMR1_Init^(0+128)+1)
  1821                           
  1822                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1823                           ; Switch size 1, requested type "simple"
  1824                           ; Number of cases is 1, Range of values is 0 to 0
  1825                           ; switch strategies available:
  1826                           ; Name         Instructions Cycles
  1827                           ; simple_byte            4     3 (average)
  1828                           ; direct_byte           11     8 (fixed)
  1829                           ; jumptable            260     6 (fixed)
  1830                           ;	Chosen strategy is simple_byte
  1831  0AEF  0821               	movf	(??_TMR1_Init+1)^(0+128),w
  1832  0AF0  3A00               	xorlw	0	; case 0
  1833  0AF1  1903               	skipnz
  1834  0AF2  2AF4               	goto	l4189
  1835  0AF3  2AFC               	goto	l369
  1836  0AF4                     l4189:
  1837                           
  1838                           ; Switch size 1, requested type "simple"
  1839                           ; Number of cases is 2, Range of values is 0 to 1
  1840                           ; switch strategies available:
  1841                           ; Name         Instructions Cycles
  1842                           ; simple_byte            7     4 (average)
  1843                           ; direct_byte           14     8 (fixed)
  1844                           ; jumptable            260     6 (fixed)
  1845                           ;	Chosen strategy is simple_byte
  1846  0AF4  0820               	movf	??_TMR1_Init^(0+128),w
  1847  0AF5  3A00               	xorlw	0	; case 0
  1848  0AF6  1903               	skipnz
  1849  0AF7  2AE4               	goto	l366
  1850  0AF8  3A01               	xorlw	1	; case 1
  1851  0AF9  1903               	skipnz
  1852  0AFA  2AE6               	goto	l368
  1853  0AFB  2AFC               	goto	l369
  1854  0AFC                     l369:
  1855  0AFC  0008               	return
  1856  0AFD                     __end_of_TMR1_Init:
  1857                           
  1858                           	psect	text2
  1859  17ED                     __ptext2:	
  1860 ;; *************** function _SW_Init *****************
  1861 ;; Defined at:
  1862 ;;		line 16 in file "SW.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;		None
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;		None
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		wreg, status,2, status,0, btemp+1
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1876 ;;      Params:         0       0       0       0       0
  1877 ;;      Locals:         0       0       0       0       0
  1878 ;;      Temps:          0       0       0       0       0
  1879 ;;      Totals:         0       0       0       0       0
  1880 ;;Total ram usage:        0 bytes
  1881 ;; Hardware stack levels used:    1
  1882 ;; Hardware stack levels required when called:    4
  1883 ;; This function calls:
  1884 ;;		Nothing
  1885 ;; This function is called by:
  1886 ;;		_main
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           
  1891                           ;psect for function _SW_Init
  1892  17ED                     _SW_Init:
  1893  17ED                     l3265:	
  1894                           ;incstack = 0
  1895                           ; Regs used in _SW_Init: [wreg+status,2+status,0+btemp+1]
  1896                           
  1897  17ED  1683               	bsf	3,5	;RP0=1, select bank1
  1898  17EE  1303               	bcf	3,6	;RP1=0, select bank1
  1899  17EF  1506               	bsf	6,2	;volatile
  1900  17F0                     l3269:
  1901  17F0  1486               	bsf	6,1	;volatile
  1902  17F1                     l3273:
  1903  17F1  1406               	bsf	6,0	;volatile
  1904  17F2                     l3277:
  1905                           
  1906                           ;SW.c: 24:     INTEDG=0;
  1907  17F2  1301               	bcf	1,6	;volatile
  1908  17F3                     l3279:
  1909                           
  1910                           ;SW.c: 25:     INTE=1;
  1911  17F3  160B               	bsf	11,4	;volatile
  1912  17F4                     l3281:
  1913                           
  1914                           ;SW.c: 26:     GIE=1;
  1915  17F4  178B               	bsf	11,7	;volatile
  1916  17F5                     l409:
  1917  17F5  0008               	return
  1918  17F6                     __end_of_SW_Init:
  1919                           
  1920                           	psect	text3
  1921  0A69                     __ptext3:	
  1922 ;; *************** function _I2C_Init *****************
  1923 ;; Defined at:
  1924 ;;		line 12 in file "i2c.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;  i2c_config      1    wreg     PTR struct .
  1927 ;;		 -> main@i2c_config(6), 
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;  i2c_config      1   14[BANK1 ] PTR struct .
  1930 ;;		 -> main@i2c_config(6), 
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      void 
  1933 ;; Registers used:
  1934 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1940 ;;      Params:         0       0       0       0       0
  1941 ;;      Locals:         0       0       1       0       0
  1942 ;;      Temps:          0       0       0       0       0
  1943 ;;      Totals:         0       0       1       0       0
  1944 ;;Total ram usage:        1 bytes
  1945 ;; Hardware stack levels used:    1
  1946 ;; Hardware stack levels required when called:    5
  1947 ;; This function calls:
  1948 ;;		___lldiv
  1949 ;; This function is called by:
  1950 ;;		_main
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           
  1955                           ;psect for function _I2C_Init
  1956  0A69                     _I2C_Init:
  1957                           
  1958                           ;incstack = 0
  1959                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1960                           ;I2C_Init@i2c_config stored from wreg
  1961  0A69  1683               	bsf	3,5	;RP0=1, select bank1
  1962  0A6A  1303               	bcf	3,6	;RP1=0, select bank1
  1963  0A6B  00AE               	movwf	I2C_Init@i2c_config^(0+128)
  1964  0A6C                     l3169:
  1965                           
  1966                           ;i2c.c: 12: void I2C_Init(tI2C_Config *i2c_config);i2c.c: 13: {;i2c.c: 15:     SSPCON2=0
      +                          x00;
  1967  0A6C  0191               	clrf	17	;volatile
  1968                           
  1969                           ;i2c.c: 16:     SSPSTAT=0x00;
  1970  0A6D  0194               	clrf	20	;volatile
  1971  0A6E                     l3171:
  1972                           
  1973                           ;i2c.c: 18:     SSPCON |= i2c_config->Mode;
  1974  0A6E  082E               	movf	I2C_Init@i2c_config^(0+128),w
  1975  0A6F  0084               	movwf	4
  1976  0A70  1383               	bcf	3,7	;select IRP bank0
  1977  0A71  0800               	movf	0,w
  1978  0A72  00FF               	movwf	btemp+1
  1979  0A73  087F               	movf	btemp+1,w
  1980  0A74  1283               	bcf	3,5	;RP0=0, select bank0
  1981  0A75  1303               	bcf	3,6	;RP1=0, select bank0
  1982  0A76  0494               	iorwf	20,f	;volatile
  1983  0A77                     l3173:
  1984                           
  1985                           ;i2c.c: 22:     SSPADD = (((4000000/4)/i2c_config->BaudRate) - 1);
  1986  0A77  1683               	bsf	3,5	;RP0=1, select bank1
  1987  0A78  1303               	bcf	3,6	;RP1=0, select bank1
  1988  0A79  0A2E               	incf	I2C_Init@i2c_config^(0+128),w
  1989  0A7A  0084               	movwf	4
  1990  0A7B  0800               	movf	0,w
  1991  0A7C  00A0               	movwf	___lldiv@divisor^(0+128)
  1992  0A7D  0A84               	incf	4,f
  1993  0A7E  0800               	movf	0,w
  1994  0A7F  00A1               	movwf	(___lldiv@divisor+1)^(0+128)
  1995  0A80  0A84               	incf	4,f
  1996  0A81  0800               	movf	0,w
  1997  0A82  00A2               	movwf	(___lldiv@divisor+2)^(0+128)
  1998  0A83  0A84               	incf	4,f
  1999  0A84  0800               	movf	0,w
  2000  0A85  00A3               	movwf	(___lldiv@divisor+3)^(0+128)
  2001  0A86  3000               	movlw	0
  2002  0A87  00A7               	movwf	(___lldiv@dividend+3)^(0+128)
  2003  0A88  300F               	movlw	15
  2004  0A89  00A6               	movwf	(___lldiv@dividend+2)^(0+128)
  2005  0A8A  3042               	movlw	66
  2006  0A8B  00A5               	movwf	(___lldiv@dividend+1)^(0+128)
  2007  0A8C  3040               	movlw	64
  2008  0A8D  00A4               	movwf	___lldiv@dividend^(0+128)
  2009  0A8E  120A  158A  24CB  120A  158A  	fcall	___lldiv
  2010  0A93  1683               	bsf	3,5	;RP0=1, select bank1
  2011  0A94  1303               	bcf	3,6	;RP1=0, select bank1
  2012  0A95  0820               	movf	?___lldiv^(0+128),w
  2013  0A96  3EFF               	addlw	255
  2014  0A97  0093               	movwf	19	;volatile
  2015  0A98                     l3175:
  2016                           
  2017                           ;i2c.c: 32:     SSPEN=1;
  2018  0A98  1283               	bcf	3,5	;RP0=0, select bank0
  2019  0A99  1303               	bcf	3,6	;RP1=0, select bank0
  2020  0A9A  1694               	bsf	20,5	;volatile
  2021  0A9B                     l3177:
  2022                           
  2023                           ;i2c.c: 38:     (1u)? (TRISC |= (1<<4)) : (TRISC &= ~(1<<4));
  2024  0A9B  3080               	movlw	128
  2025  0A9C  1683               	bsf	3,5	;RP0=1, select bank1
  2026  0A9D  1303               	bcf	3,6	;RP1=0, select bank1
  2027  0A9E  0094               	movwf	20	;volatile
  2028  0A9F                     l3179:
  2029  0A9F  1607               	bsf	7,4	;volatile
  2030  0AA0                     l3183:
  2031  0AA0  1587               	bsf	7,3	;volatile
  2032  0AA1                     l3187:
  2033                           
  2034                           ;i2c.c: 44:     if(i2c_config->operationMode==INTERRUPT)
  2035  0AA1  082E               	movf	I2C_Init@i2c_config^(0+128),w
  2036  0AA2  3E05               	addlw	5
  2037  0AA3  0084               	movwf	4
  2038  0AA4  1383               	bcf	3,7	;select IRP bank0
  2039  0AA5  0300               	decf	0,w
  2040  0AA6  1D03               	btfss	3,2
  2041  0AA7  2AA9               	goto	u2541
  2042  0AA8  2AAA               	goto	u2540
  2043  0AA9                     u2541:
  2044  0AA9  2AB2               	goto	l88
  2045  0AAA                     u2540:
  2046  0AAA                     l3189:
  2047                           
  2048                           ;i2c.c: 45:     {;i2c.c: 46:           GIE = 1;
  2049  0AAA  178B               	bsf	11,7	;volatile
  2050                           
  2051                           ;i2c.c: 47:           PEIE = 1;
  2052  0AAB  170B               	bsf	11,6	;volatile
  2053                           
  2054                           ;i2c.c: 48:           SSPIF = 0;
  2055  0AAC  1283               	bcf	3,5	;RP0=0, select bank0
  2056  0AAD  1303               	bcf	3,6	;RP1=0, select bank0
  2057  0AAE  118C               	bcf	12,3	;volatile
  2058                           
  2059                           ;i2c.c: 49:           SSPIE = 1;
  2060  0AAF  1683               	bsf	3,5	;RP0=1, select bank1
  2061  0AB0  1303               	bcf	3,6	;RP1=0, select bank1
  2062  0AB1  158C               	bsf	12,3	;volatile
  2063  0AB2                     l88:
  2064  0AB2  0008               	return
  2065  0AB3                     __end_of_I2C_Init:
  2066                           
  2067                           	psect	text4
  2068  0CCB                     __ptext4:	
  2069 ;; *************** function ___lldiv *****************
  2070 ;; Defined at:
  2071 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;  divisor         4    0[BANK1 ] unsigned long 
  2074 ;;  dividend        4    4[BANK1 ] unsigned long 
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;  quotient        4    9[BANK1 ] unsigned long 
  2077 ;;  counter         1   13[BANK1 ] unsigned char 
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  4    0[BANK1 ] unsigned long 
  2080 ;; Registers used:
  2081 ;;		wreg, status,2, status,0, btemp+1
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2087 ;;      Params:         0       0       8       0       0
  2088 ;;      Locals:         0       0       5       0       0
  2089 ;;      Temps:          0       0       1       0       0
  2090 ;;      Totals:         0       0      14       0       0
  2091 ;;Total ram usage:       14 bytes
  2092 ;; Hardware stack levels used:    1
  2093 ;; Hardware stack levels required when called:    4
  2094 ;; This function calls:
  2095 ;;		Nothing
  2096 ;; This function is called by:
  2097 ;;		_I2C_Init
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           
  2102                           ;psect for function ___lldiv
  2103  0CCB                     ___lldiv:
  2104  0CCB                     l3051:	
  2105                           ;incstack = 0
  2106                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  2107                           
  2108  0CCB  3000               	movlw	0
  2109  0CCC  1683               	bsf	3,5	;RP0=1, select bank1
  2110  0CCD  1303               	bcf	3,6	;RP1=0, select bank1
  2111  0CCE  00AC               	movwf	(___lldiv@quotient+3)^(0+128)
  2112  0CCF  3000               	movlw	0
  2113  0CD0  00AB               	movwf	(___lldiv@quotient+2)^(0+128)
  2114  0CD1  3000               	movlw	0
  2115  0CD2  00AA               	movwf	(___lldiv@quotient+1)^(0+128)
  2116  0CD3  3000               	movlw	0
  2117  0CD4  00A9               	movwf	___lldiv@quotient^(0+128)
  2118  0CD5  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  2119  0CD6  0422               	iorwf	(___lldiv@divisor+2)^(0+128),w
  2120  0CD7  0421               	iorwf	(___lldiv@divisor+1)^(0+128),w
  2121  0CD8  0420               	iorwf	___lldiv@divisor^(0+128),w
  2122  0CD9  1903               	skipnz
  2123  0CDA  2CDC               	goto	u2271
  2124  0CDB  2CDD               	goto	u2270
  2125  0CDC                     u2271:
  2126  0CDC  2D2A               	goto	l3073
  2127  0CDD                     u2270:
  2128  0CDD                     l3053:
  2129  0CDD  01AD               	clrf	___lldiv@counter^(0+128)
  2130  0CDE  0AAD               	incf	___lldiv@counter^(0+128),f
  2131  0CDF  2CED               	goto	l3059
  2132  0CE0                     l3055:
  2133  0CE0  3001               	movlw	1
  2134  0CE1  00A8               	movwf	??___lldiv^(0+128)
  2135  0CE2                     u2285:
  2136  0CE2  1003               	clrc
  2137  0CE3  0DA0               	rlf	___lldiv@divisor^(0+128),f
  2138  0CE4  0DA1               	rlf	(___lldiv@divisor+1)^(0+128),f
  2139  0CE5  0DA2               	rlf	(___lldiv@divisor+2)^(0+128),f
  2140  0CE6  0DA3               	rlf	(___lldiv@divisor+3)^(0+128),f
  2141  0CE7  0BA8               	decfsz	??___lldiv^(0+128),f
  2142  0CE8  2CE2               	goto	u2285
  2143  0CE9                     l3057:
  2144  0CE9  3001               	movlw	1
  2145  0CEA  00FF               	movwf	btemp+1
  2146  0CEB  087F               	movf	btemp+1,w
  2147  0CEC  07AD               	addwf	___lldiv@counter^(0+128),f
  2148  0CED                     l3059:
  2149  0CED  1FA3               	btfss	(___lldiv@divisor+3)^(0+128),7
  2150  0CEE  2CF0               	goto	u2291
  2151  0CEF  2CF1               	goto	u2290
  2152  0CF0                     u2291:
  2153  0CF0  2CE0               	goto	l3055
  2154  0CF1                     u2290:
  2155  0CF1                     l3061:
  2156  0CF1  3001               	movlw	1
  2157  0CF2  00A8               	movwf	??___lldiv^(0+128)
  2158  0CF3                     u2305:
  2159  0CF3  1003               	clrc
  2160  0CF4  0DA9               	rlf	___lldiv@quotient^(0+128),f
  2161  0CF5  0DAA               	rlf	(___lldiv@quotient+1)^(0+128),f
  2162  0CF6  0DAB               	rlf	(___lldiv@quotient+2)^(0+128),f
  2163  0CF7  0DAC               	rlf	(___lldiv@quotient+3)^(0+128),f
  2164  0CF8  0BA8               	decfsz	??___lldiv^(0+128),f
  2165  0CF9  2CF3               	goto	u2305
  2166  0CFA                     l3063:
  2167  0CFA  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  2168  0CFB  0227               	subwf	(___lldiv@dividend+3)^(0+128),w
  2169  0CFC  1D03               	skipz
  2170  0CFD  2D08               	goto	u2315
  2171  0CFE  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  2172  0CFF  0226               	subwf	(___lldiv@dividend+2)^(0+128),w
  2173  0D00  1D03               	skipz
  2174  0D01  2D08               	goto	u2315
  2175  0D02  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  2176  0D03  0225               	subwf	(___lldiv@dividend+1)^(0+128),w
  2177  0D04  1D03               	skipz
  2178  0D05  2D08               	goto	u2315
  2179  0D06  0820               	movf	___lldiv@divisor^(0+128),w
  2180  0D07  0224               	subwf	___lldiv@dividend^(0+128),w
  2181  0D08                     u2315:
  2182  0D08  1C03               	skipc
  2183  0D09  2D0B               	goto	u2311
  2184  0D0A  2D0C               	goto	u2310
  2185  0D0B                     u2311:
  2186  0D0B  2D1B               	goto	l3069
  2187  0D0C                     u2310:
  2188  0D0C                     l3065:
  2189  0D0C  0820               	movf	___lldiv@divisor^(0+128),w
  2190  0D0D  02A4               	subwf	___lldiv@dividend^(0+128),f
  2191  0D0E  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  2192  0D0F  1C03               	skipc
  2193  0D10  0F21               	incfsz	(___lldiv@divisor+1)^(0+128),w
  2194  0D11  02A5               	subwf	(___lldiv@dividend+1)^(0+128),f
  2195  0D12  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  2196  0D13  1C03               	skipc
  2197  0D14  0F22               	incfsz	(___lldiv@divisor+2)^(0+128),w
  2198  0D15  02A6               	subwf	(___lldiv@dividend+2)^(0+128),f
  2199  0D16  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  2200  0D17  1C03               	skipc
  2201  0D18  0F23               	incfsz	(___lldiv@divisor+3)^(0+128),w
  2202  0D19  02A7               	subwf	(___lldiv@dividend+3)^(0+128),f
  2203  0D1A                     l3067:
  2204  0D1A  1429               	bsf	___lldiv@quotient^(0+128),0
  2205  0D1B                     l3069:
  2206  0D1B  3001               	movlw	1
  2207  0D1C                     u2325:
  2208  0D1C  1003               	clrc
  2209  0D1D  0CA3               	rrf	(___lldiv@divisor+3)^(0+128),f
  2210  0D1E  0CA2               	rrf	(___lldiv@divisor+2)^(0+128),f
  2211  0D1F  0CA1               	rrf	(___lldiv@divisor+1)^(0+128),f
  2212  0D20  0CA0               	rrf	___lldiv@divisor^(0+128),f
  2213  0D21  3EFF               	addlw	-1
  2214  0D22  1D03               	skipz
  2215  0D23  2D1C               	goto	u2325
  2216  0D24                     l3071:
  2217  0D24  3001               	movlw	1
  2218  0D25  02AD               	subwf	___lldiv@counter^(0+128),f
  2219  0D26  1D03               	btfss	3,2
  2220  0D27  2D29               	goto	u2331
  2221  0D28  2D2A               	goto	u2330
  2222  0D29                     u2331:
  2223  0D29  2CF1               	goto	l3061
  2224  0D2A                     u2330:
  2225  0D2A                     l3073:
  2226  0D2A  082C               	movf	(___lldiv@quotient+3)^(0+128),w
  2227  0D2B  00A3               	movwf	(?___lldiv+3)^(0+128)
  2228  0D2C  082B               	movf	(___lldiv@quotient+2)^(0+128),w
  2229  0D2D  00A2               	movwf	(?___lldiv+2)^(0+128)
  2230  0D2E  082A               	movf	(___lldiv@quotient+1)^(0+128),w
  2231  0D2F  00A1               	movwf	(?___lldiv+1)^(0+128)
  2232  0D30  0829               	movf	___lldiv@quotient^(0+128),w
  2233  0D31  00A0               	movwf	?___lldiv^(0+128)
  2234  0D32                     l795:
  2235  0D32  0008               	return
  2236  0D33                     __end_of___lldiv:
  2237                           
  2238                           	psect	text5
  2239  09B8                     __ptext5:	
  2240 ;; *************** function _EWH_Sleep_Mode *****************
  2241 ;; Defined at:
  2242 ;;		line 5 in file "EWH.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;		None
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;		None
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  1    wreg      void 
  2249 ;; Registers used:
  2250 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2256 ;;      Params:         0       0       0       0       0
  2257 ;;      Locals:         0       0       0       0       0
  2258 ;;      Temps:          0       0       0       0       0
  2259 ;;      Totals:         0       0       0       0       0
  2260 ;;Total ram usage:        0 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; Hardware stack levels required when called:    7
  2263 ;; This function calls:
  2264 ;;		_DD_SetState
  2265 ;;		_EWH_SSD_OFF
  2266 ;;		_TMR1_Stop
  2267 ;; This function is called by:
  2268 ;;		_main
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           
  2273                           ;psect for function _EWH_Sleep_Mode
  2274  09B8                     _EWH_Sleep_Mode:
  2275  09B8                     l3285:	
  2276                           ;incstack = 0
  2277                           ; Regs used in _EWH_Sleep_Mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2278                           
  2279                           
  2280                           ;EWH.c: 9:     EWH_SSD_OFF();
  2281  09B8  120A  158A  203F  120A  158A  	fcall	_EWH_SSD_OFF
  2282                           
  2283                           ;EWH.c: 11:     DD_SetState(HEATER,OFF);
  2284  09BD  1683               	bsf	3,5	;RP0=1, select bank1
  2285  09BE  1303               	bcf	3,6	;RP1=0, select bank1
  2286  09BF  01A0               	clrf	DD_SetState@state^(0+128)
  2287  09C0  3000               	movlw	0
  2288  09C1  120A  158A  234D  120A  158A  	fcall	_DD_SetState
  2289                           
  2290                           ;EWH.c: 13:     DD_SetState(COOLER,OFF);
  2291  09C6  1683               	bsf	3,5	;RP0=1, select bank1
  2292  09C7  1303               	bcf	3,6	;RP1=0, select bank1
  2293  09C8  01A0               	clrf	DD_SetState@state^(0+128)
  2294  09C9  3001               	movlw	1
  2295  09CA  120A  158A  234D  120A  158A  	fcall	_DD_SetState
  2296  09CF                     l3287:
  2297                           
  2298                           ;EWH.c: 15:     TMR1_Stop();
  2299  09CF  120A  118A  27FB  120A  158A  	fcall	_TMR1_Stop
  2300  09D4                     l3289:
  2301                           
  2302                           ;EWH.c: 17:     DD_SetState(HEATER_LED,OFF);
  2303  09D4  1683               	bsf	3,5	;RP0=1, select bank1
  2304  09D5  1303               	bcf	3,6	;RP1=0, select bank1
  2305  09D6  01A0               	clrf	DD_SetState@state^(0+128)
  2306  09D7  3002               	movlw	2
  2307  09D8  120A  158A  234D  120A  158A  	fcall	_DD_SetState
  2308  09DD                     l3291:
  2309                           
  2310                           ;EWH.c: 19:     EWH_Events[0]=0;
  2311  09DD  1683               	bsf	3,5	;RP0=1, select bank1
  2312  09DE  1303               	bcf	3,6	;RP1=0, select bank1
  2313  09DF  01BF               	clrf	_EWH_Events^(0+128)
  2314  09E0                     l3293:
  2315                           
  2316                           ;EWH.c: 20:     EWH_Events[2]=0;
  2317  09E0  01C1               	clrf	(_EWH_Events^(0+128)+2)
  2318  09E1                     l3295:
  2319                           
  2320                           ;EWH.c: 21:     EWH_Events[1]=0;
  2321  09E1  01C0               	clrf	(_EWH_Events^(0+128)+1)
  2322  09E2                     l3297:
  2323                           
  2324                           ;EWH.c: 22:     EWH_Events[3]=0;
  2325  09E2  01C2               	clrf	(_EWH_Events^(0+128)+3)
  2326  09E3                     l3301:	
  2327                           ;EWH.c: 24:     (OFF)?(PORTB |= (1<<4)) : (PORTB &= ~(1<<4));
  2328                           
  2329  09E3  30EF               	movlw	239
  2330  09E4  00FF               	movwf	btemp+1
  2331  09E5  087F               	movf	btemp+1,w
  2332  09E6  1283               	bcf	3,5	;RP0=0, select bank0
  2333  09E7  1303               	bcf	3,6	;RP1=0, select bank0
  2334  09E8  0586               	andwf	6,f	;volatile
  2335  09E9                     l3305:
  2336  09E9  30DF               	movlw	223
  2337  09EA  00FF               	movwf	btemp+1
  2338  09EB  087F               	movf	btemp+1,w
  2339  09EC  0586               	andwf	6,f	;volatile
  2340  09ED                     l3309:
  2341  09ED  30BF               	movlw	191
  2342  09EE  00FF               	movwf	btemp+1
  2343  09EF  087F               	movf	btemp+1,w
  2344  09F0  0586               	andwf	6,f	;volatile
  2345  09F1                     l495:
  2346  09F1  0008               	return
  2347  09F2                     __end_of_EWH_Sleep_Mode:
  2348                           
  2349                           	psect	text6
  2350  083F                     __ptext6:	
  2351 ;; *************** function _EWH_SSD_OFF *****************
  2352 ;; Defined at:
  2353 ;;		line 75 in file "DD.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;		None
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;		None
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1    wreg      void 
  2360 ;; Registers used:
  2361 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2367 ;;      Params:         0       0       0       0       0
  2368 ;;      Locals:         0       0       0       0       0
  2369 ;;      Temps:          0       0       0       0       0
  2370 ;;      Totals:         0       0       0       0       0
  2371 ;;Total ram usage:        0 bytes
  2372 ;; Hardware stack levels used:    1
  2373 ;; Hardware stack levels required when called:    6
  2374 ;; This function calls:
  2375 ;;		_SSD_OFF
  2376 ;; This function is called by:
  2377 ;;		_EWH_Sleep_Mode
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           
  2382                           ;psect for function _EWH_SSD_OFF
  2383  083F                     _EWH_SSD_OFF:
  2384  083F                     l3029:	
  2385                           ;incstack = 0
  2386                           ; Regs used in _EWH_SSD_OFF: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2387                           
  2388                           
  2389                           ;DD.c: 77:     SSD_OFF(3);
  2390  083F  3003               	movlw	3
  2391  0840  120A  158A  201B  120A  158A  	fcall	_SSD_OFF
  2392                           
  2393                           ;DD.c: 78:     SSD_OFF(4);
  2394  0845  3004               	movlw	4
  2395  0846  120A  158A  201B  120A  158A  	fcall	_SSD_OFF
  2396  084B                     l289:
  2397  084B  0008               	return
  2398  084C                     __end_of_EWH_SSD_OFF:
  2399                           
  2400                           	psect	text7
  2401  081B                     __ptext7:	
  2402 ;; *************** function _SSD_OFF *****************
  2403 ;; Defined at:
  2404 ;;		line 65 in file "SSD.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  ID              1    wreg     unsigned char 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;  ID              1    4[BANK1 ] unsigned char 
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2418 ;;      Params:         0       0       0       0       0
  2419 ;;      Locals:         0       0       1       0       0
  2420 ;;      Temps:          0       0       0       0       0
  2421 ;;      Totals:         0       0       1       0       0
  2422 ;;Total ram usage:        1 bytes
  2423 ;; Hardware stack levels used:    1
  2424 ;; Hardware stack levels required when called:    5
  2425 ;; This function calls:
  2426 ;;		_SSD_config
  2427 ;; This function is called by:
  2428 ;;		_EWH_SSD_OFF
  2429 ;;		_EWH_SSD_Update
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           
  2434                           ;psect for function _SSD_OFF
  2435  081B                     _SSD_OFF:
  2436                           
  2437                           ;incstack = 0
  2438                           ; Regs used in _SSD_OFF: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2439                           ;SSD_OFF@ID stored from wreg
  2440  081B  1683               	bsf	3,5	;RP0=1, select bank1
  2441  081C  1303               	bcf	3,6	;RP1=0, select bank1
  2442  081D  00A4               	movwf	SSD_OFF@ID^(0+128)
  2443  081E                     l2863:
  2444                           
  2445                           ;SSD.c: 65: void SSD_OFF (SSD_ID ID);SSD.c: 66: {;SSD.c: 67:     SSD_config(ID,OFF);
  2446  081E  01A0               	clrf	SSD_config@SSD_state^(0+128)
  2447  081F  0824               	movf	SSD_OFF@ID^(0+128),w
  2448  0820  120A  158A  259C  120A  158A  	fcall	_SSD_config
  2449  0825                     l670:
  2450  0825  0008               	return
  2451  0826                     __end_of_SSD_OFF:
  2452                           
  2453                           	psect	text8
  2454  0593                     __ptext8:	
  2455 ;; *************** function _EWH_SetTemp_Mode *****************
  2456 ;; Defined at:
  2457 ;;		line 71 in file "EWH.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;		None
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;		None
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  1    wreg      void 
  2464 ;; Registers used:
  2465 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2471 ;;      Params:         0       0       0       0       0
  2472 ;;      Locals:         0       0       0       0       0
  2473 ;;      Temps:          0       0       2       0       0
  2474 ;;      Totals:         0       0       2       0       0
  2475 ;;Total ram usage:        2 bytes
  2476 ;; Hardware stack levels used:    1
  2477 ;; Hardware stack levels required when called:    9
  2478 ;; This function calls:
  2479 ;;		_DD_SetState
  2480 ;;		_EWH_EEPROM_Read
  2481 ;;		_EWH_EEPROM_Update
  2482 ;;		_Heater_Display
  2483 ;;		_TMR1_Start
  2484 ;; This function is called by:
  2485 ;;		_main
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           
  2490                           ;psect for function _EWH_SetTemp_Mode
  2491  0593                     _EWH_SetTemp_Mode:
  2492  0593                     l3429:	
  2493                           ;incstack = 0
  2494 ;; hardware stack exceeded
  2495                           ; Regs used in _EWH_SetTemp_Mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2496                           
  2497  0593                     l3433:	
  2498                           ;EWH.c: 73:     (OFF)?(PORTB |= (1<<4)) : (PORTB &= ~(1<<4));
  2499                           
  2500  0593  30EF               	movlw	239
  2501  0594  00FF               	movwf	btemp+1
  2502  0595  087F               	movf	btemp+1,w
  2503  0596  1283               	bcf	3,5	;RP0=0, select bank0
  2504  0597  1303               	bcf	3,6	;RP1=0, select bank0
  2505  0598  0586               	andwf	6,f	;volatile
  2506  0599                     l3435:
  2507  0599  1686               	bsf	6,5	;volatile
  2508  059A                     l3441:
  2509  059A  30BF               	movlw	191
  2510  059B  00FF               	movwf	btemp+1
  2511  059C  087F               	movf	btemp+1,w
  2512  059D  0586               	andwf	6,f	;volatile
  2513  059E                     l3443:
  2514                           
  2515                           ;EWH.c: 77:     EWH_Events[0]=0;
  2516  059E  1683               	bsf	3,5	;RP0=1, select bank1
  2517  059F  1303               	bcf	3,6	;RP1=0, select bank1
  2518  05A0  01BF               	clrf	_EWH_Events^(0+128)
  2519  05A1                     l3445:
  2520                           
  2521                           ;EWH.c: 78:     EWH_Events[2]=0;
  2522  05A1  01C1               	clrf	(_EWH_Events^(0+128)+2)
  2523  05A2                     l3447:
  2524                           
  2525                           ;EWH.c: 79:     EWH_Events[1]=0;
  2526  05A2  01C0               	clrf	(_EWH_Events^(0+128)+1)
  2527  05A3                     l3449:
  2528                           
  2529                           ;EWH.c: 80:     EWH_Events[3]=0;
  2530  05A3  01C2               	clrf	(_EWH_Events^(0+128)+3)
  2531  05A4                     l3451:
  2532                           
  2533                           ;EWH.c: 84:     set_Temp = EWH_EEPROM_Read();
  2534  05A4  120A  158A  2026  120A  118A  	fcall	_EWH_EEPROM_Read
  2535  05A9  00FF               	movwf	btemp+1
  2536  05AA  087F               	movf	btemp+1,w
  2537  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  2538  05AC  1303               	bcf	3,6	;RP1=0, select bank1
  2539  05AD  00C7               	movwf	_set_Temp^(0+128)
  2540  05AE                     l3453:
  2541                           
  2542                           ;EWH.c: 86:     DD_SetState(HEATER,OFF);
  2543  05AE  01A0               	clrf	DD_SetState@state^(0+128)
  2544  05AF  3000               	movlw	0
  2545  05B0  120A  158A  234D  120A  118A  	fcall	_DD_SetState
  2546  05B5                     l3455:
  2547                           
  2548                           ;EWH.c: 87:     DD_SetState(COOLER,OFF);
  2549  05B5  1683               	bsf	3,5	;RP0=1, select bank1
  2550  05B6  1303               	bcf	3,6	;RP1=0, select bank1
  2551  05B7  01A0               	clrf	DD_SetState@state^(0+128)
  2552  05B8  3001               	movlw	1
  2553  05B9  120A  158A  234D  120A  118A  	fcall	_DD_SetState
  2554  05BE                     l3457:
  2555                           
  2556                           ;EWH.c: 89:     Heater_Display(set_Temp);
  2557  05BE  1683               	bsf	3,5	;RP0=1, select bank1
  2558  05BF  1303               	bcf	3,6	;RP1=0, select bank1
  2559  05C0  0847               	movf	_set_Temp^(0+128),w
  2560  05C1  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2561  05C2  01AF               	clrf	(??_EWH_SetTemp_Mode^(0+128)+1)
  2562  05C3  082E               	movf	??_EWH_SetTemp_Mode^(0+128),w
  2563  05C4  00AA               	movwf	Heater_Display@temp^(0+128)
  2564  05C5  082F               	movf	(??_EWH_SetTemp_Mode+1)^(0+128),w
  2565  05C6  00AB               	movwf	(Heater_Display@temp+1)^(0+128)
  2566  05C7  120A  158A  2402  120A  118A  	fcall	_Heater_Display
  2567  05CC                     l3459:
  2568                           
  2569                           ;EWH.c: 91:     TMR1_Start();
  2570  05CC  120A  158A  205C  120A  118A  	fcall	_TMR1_Start
  2571  05D1                     l3461:
  2572                           
  2573                           ;EWH.c: 94:     {;EWH.c: 95:         if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED) && set_Te
      +                          mp<75)
  2574  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  2575  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  2576  05D3  0806               	movf	6,w	;volatile
  2577  05D4  1683               	bsf	3,5	;RP0=1, select bank1
  2578  05D5  1303               	bcf	3,6	;RP1=0, select bank1
  2579  05D6  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2580  05D7  3002               	movlw	2
  2581  05D8                     u2785:
  2582  05D8  1003               	clrc
  2583  05D9  0CAE               	rrf	??_EWH_SetTemp_Mode^(0+128),f
  2584  05DA  3EFF               	addlw	-1
  2585  05DB  1D03               	skipz
  2586  05DC  2DD8               	goto	u2785
  2587  05DD  182E               	btfsc	??_EWH_SetTemp_Mode^(0+128),0
  2588  05DE  2DE0               	goto	u2791
  2589  05DF  2DE1               	goto	u2790
  2590  05E0                     u2791:
  2591  05E0  2E0A               	goto	l3473
  2592  05E1                     u2790:
  2593  05E1                     l3463:
  2594  05E1  304B               	movlw	75
  2595  05E2  0247               	subwf	_set_Temp^(0+128),w
  2596  05E3  1803               	skipnc
  2597  05E4  2DE6               	goto	u2801
  2598  05E5  2DE7               	goto	u2800
  2599  05E6                     u2801:
  2600  05E6  2E0A               	goto	l3473
  2601  05E7                     u2800:
  2602  05E7                     l3465:
  2603                           
  2604                           ;EWH.c: 96:         {;EWH.c: 97:             _delay((unsigned long)((30)*(4000000/4000.0
      +                          )));
  2605  05E7  3027               	movlw	39
  2606  05E8  1683               	bsf	3,5	;RP0=1, select bank1
  2607  05E9  1303               	bcf	3,6	;RP1=0, select bank1
  2608  05EA  00AF               	movwf	(??_EWH_SetTemp_Mode^(0+128)+1)
  2609  05EB  30F4               	movlw	244
  2610  05EC  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2611  05ED                     u3787:
  2612  05ED  0BAE               	decfsz	??_EWH_SetTemp_Mode^(0+128),f
  2613  05EE  2DED               	goto	u3787
  2614  05EF  0BAF               	decfsz	(??_EWH_SetTemp_Mode^(0+128)+1),f
  2615  05F0  2DED               	goto	u3787
  2616  05F1  0000               	nop
  2617  05F2                     l3467:
  2618                           
  2619                           ;EWH.c: 98:             if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED))
  2620  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  2621  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  2622  05F4  0806               	movf	6,w	;volatile
  2623  05F5  1683               	bsf	3,5	;RP0=1, select bank1
  2624  05F6  1303               	bcf	3,6	;RP1=0, select bank1
  2625  05F7  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2626  05F8  3002               	movlw	2
  2627  05F9                     u2815:
  2628  05F9  1003               	clrc
  2629  05FA  0CAE               	rrf	??_EWH_SetTemp_Mode^(0+128),f
  2630  05FB  3EFF               	addlw	-1
  2631  05FC  1D03               	skipz
  2632  05FD  2DF9               	goto	u2815
  2633  05FE  182E               	btfsc	??_EWH_SetTemp_Mode^(0+128),0
  2634  05FF  2E01               	goto	u2821
  2635  0600  2E02               	goto	u2820
  2636  0601                     u2821:
  2637  0601  2E3E               	goto	l3485
  2638  0602                     u2820:
  2639  0602                     l3469:
  2640                           
  2641                           ;EWH.c: 99:             {;EWH.c: 100:                 set_Temp+=5;
  2642  0602  3005               	movlw	5
  2643  0603  00FF               	movwf	btemp+1
  2644  0604  087F               	movf	btemp+1,w
  2645  0605  07C7               	addwf	_set_Temp^(0+128),f
  2646  0606                     l3471:
  2647                           
  2648                           ;EWH.c: 101:                 NoPress_Sec_count=0;
  2649  0606  1283               	bcf	3,5	;RP0=0, select bank0
  2650  0607  1303               	bcf	3,6	;RP1=0, select bank0
  2651  0608  01D7               	clrf	_NoPress_Sec_count
  2652  0609  2E3E               	goto	l3485
  2653  060A                     l3473:
  2654  060A  1283               	bcf	3,5	;RP0=0, select bank0
  2655  060B  1303               	bcf	3,6	;RP1=0, select bank0
  2656  060C  0806               	movf	6,w	;volatile
  2657  060D  1683               	bsf	3,5	;RP0=1, select bank1
  2658  060E  1303               	bcf	3,6	;RP1=0, select bank1
  2659  060F  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2660  0610  3001               	movlw	1
  2661  0611                     u2835:
  2662  0611  1003               	clrc
  2663  0612  0CAE               	rrf	??_EWH_SetTemp_Mode^(0+128),f
  2664  0613  3EFF               	addlw	-1
  2665  0614  1D03               	skipz
  2666  0615  2E11               	goto	u2835
  2667  0616  182E               	btfsc	??_EWH_SetTemp_Mode^(0+128),0
  2668  0617  2E19               	goto	u2841
  2669  0618  2E1A               	goto	u2840
  2670  0619                     u2841:
  2671  0619  2E3E               	goto	l3485
  2672  061A                     u2840:
  2673  061A                     l3475:
  2674  061A  3024               	movlw	36
  2675  061B  0247               	subwf	_set_Temp^(0+128),w
  2676  061C  1C03               	skipc
  2677  061D  2E1F               	goto	u2851
  2678  061E  2E20               	goto	u2850
  2679  061F                     u2851:
  2680  061F  2E3E               	goto	l3485
  2681  0620                     u2850:
  2682  0620                     l3477:
  2683                           
  2684                           ;EWH.c: 105:         {;EWH.c: 106:             _delay((unsigned long)((30)*(4000000/4000
      +                          .0)));
  2685  0620  3027               	movlw	39
  2686  0621  1683               	bsf	3,5	;RP0=1, select bank1
  2687  0622  1303               	bcf	3,6	;RP1=0, select bank1
  2688  0623  00AF               	movwf	(??_EWH_SetTemp_Mode^(0+128)+1)
  2689  0624  30F4               	movlw	244
  2690  0625  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2691  0626                     u3797:
  2692  0626  0BAE               	decfsz	??_EWH_SetTemp_Mode^(0+128),f
  2693  0627  2E26               	goto	u3797
  2694  0628  0BAF               	decfsz	(??_EWH_SetTemp_Mode^(0+128)+1),f
  2695  0629  2E26               	goto	u3797
  2696  062A  0000               	nop
  2697  062B                     l3479:
  2698                           
  2699                           ;EWH.c: 107:             if((!((PORTB & (1<<1)) >> 1)==SW_PRESSED))
  2700  062B  1283               	bcf	3,5	;RP0=0, select bank0
  2701  062C  1303               	bcf	3,6	;RP1=0, select bank0
  2702  062D  0806               	movf	6,w	;volatile
  2703  062E  1683               	bsf	3,5	;RP0=1, select bank1
  2704  062F  1303               	bcf	3,6	;RP1=0, select bank1
  2705  0630  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2706  0631  3001               	movlw	1
  2707  0632                     u2865:
  2708  0632  1003               	clrc
  2709  0633  0CAE               	rrf	??_EWH_SetTemp_Mode^(0+128),f
  2710  0634  3EFF               	addlw	-1
  2711  0635  1D03               	skipz
  2712  0636  2E32               	goto	u2865
  2713  0637  182E               	btfsc	??_EWH_SetTemp_Mode^(0+128),0
  2714  0638  2E3A               	goto	u2871
  2715  0639  2E3B               	goto	u2870
  2716  063A                     u2871:
  2717  063A  2E3E               	goto	l3485
  2718  063B                     u2870:
  2719  063B                     l3481:
  2720                           
  2721                           ;EWH.c: 108:             {;EWH.c: 109:                 set_Temp-=5;
  2722  063B  3005               	movlw	5
  2723  063C  02C7               	subwf	_set_Temp^(0+128),f
  2724  063D  2E06               	goto	l3471
  2725  063E                     l3485:
  2726                           
  2727                           ;EWH.c: 113:         if(EWH_Events[3] || EWH_Events[0])
  2728  063E  1683               	bsf	3,5	;RP0=1, select bank1
  2729  063F  1303               	bcf	3,6	;RP1=0, select bank1
  2730  0640  0842               	movf	(_EWH_Events^(0+128)+3),w
  2731  0641  1D03               	btfss	3,2
  2732  0642  2E44               	goto	u2881
  2733  0643  2E45               	goto	u2880
  2734  0644                     u2881:
  2735  0644  2E4A               	goto	l3489
  2736  0645                     u2880:
  2737  0645                     l3487:
  2738  0645  083F               	movf	_EWH_Events^(0+128),w
  2739  0646  1903               	btfsc	3,2
  2740  0647  2E49               	goto	u2891
  2741  0648  2E4A               	goto	u2890
  2742  0649                     u2891:
  2743  0649  2E51               	goto	l3491
  2744  064A                     u2890:
  2745  064A                     l3489:
  2746                           
  2747                           ;EWH.c: 114:         {;EWH.c: 116:             EWH_EEPROM_Update(set_Temp);
  2748  064A  0847               	movf	_set_Temp^(0+128),w
  2749  064B  120A  158A  206C  120A  118A  	fcall	_EWH_EEPROM_Update
  2750                           
  2751                           ;EWH.c: 118:             break ;
  2752  0650  2E5E               	goto	l3493
  2753  0651                     l3491:
  2754                           
  2755                           ;EWH.c: 121:         Heater_Display(set_Temp);
  2756  0651  0847               	movf	_set_Temp^(0+128),w
  2757  0652  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2758  0653  01AF               	clrf	(??_EWH_SetTemp_Mode^(0+128)+1)
  2759  0654  082E               	movf	??_EWH_SetTemp_Mode^(0+128),w
  2760  0655  00AA               	movwf	Heater_Display@temp^(0+128)
  2761  0656  082F               	movf	(??_EWH_SetTemp_Mode+1)^(0+128),w
  2762  0657  00AB               	movwf	(Heater_Display@temp+1)^(0+128)
  2763  0658  120A  158A  2402  120A  118A  	fcall	_Heater_Display
  2764  065D  2DD1               	goto	l3461
  2765  065E                     l3493:
  2766                           
  2767                           ;EWH.c: 125:     if(EWH_Events[0])
  2768  065E  1683               	bsf	3,5	;RP0=1, select bank1
  2769  065F  1303               	bcf	3,6	;RP1=0, select bank1
  2770  0660  083F               	movf	_EWH_Events^(0+128),w
  2771  0661  1903               	btfsc	3,2
  2772  0662  2E64               	goto	u2901
  2773  0663  2E65               	goto	u2900
  2774  0664                     u2901:
  2775  0664  2E69               	goto	l3499
  2776  0665                     u2900:
  2777  0665                     l3495:
  2778                           
  2779                           ;EWH.c: 126:     {;EWH.c: 127:         EWH_Events[0]=0;
  2780  0665  01BF               	clrf	_EWH_Events^(0+128)
  2781  0666                     l3497:
  2782                           
  2783                           ;EWH.c: 130:         EWH_Mode=EWH_POWER_UP_MODE;
  2784  0666  01C8               	clrf	_EWH_Mode^(0+128)
  2785  0667  0AC8               	incf	_EWH_Mode^(0+128),f
  2786                           
  2787                           ;EWH.c: 131:     }
  2788  0668  2E73               	goto	l544
  2789  0669                     l3499:
  2790  0669  0842               	movf	(_EWH_Events^(0+128)+3),w
  2791  066A  1903               	btfsc	3,2
  2792  066B  2E6D               	goto	u2911
  2793  066C  2E6E               	goto	u2910
  2794  066D                     u2911:
  2795  066D  2E73               	goto	l544
  2796  066E                     u2910:
  2797  066E                     l3501:
  2798                           
  2799                           ;EWH.c: 133:     {;EWH.c: 134:         EWH_Events[3]=0;
  2800  066E  01C2               	clrf	(_EWH_Events^(0+128)+3)
  2801  066F                     l3503:
  2802                           
  2803                           ;EWH.c: 137:         EWH_Mode=EWH_OPERATING_MODE;
  2804  066F  3003               	movlw	3
  2805  0670  00FF               	movwf	btemp+1
  2806  0671  087F               	movf	btemp+1,w
  2807  0672  00C8               	movwf	_EWH_Mode^(0+128)
  2808  0673                     l544:
  2809  0673  0008               	return
  2810  0674                     __end_of_EWH_SetTemp_Mode:
  2811                           
  2812                           	psect	text9
  2813  086C                     __ptext9:	
  2814 ;; *************** function _EWH_EEPROM_Update *****************
  2815 ;; Defined at:
  2816 ;;		line 209 in file "EWH.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;  newSetTemp      1    wreg     unsigned char 
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;  newSetTemp      1    6[BANK1 ] unsigned char 
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  1    wreg      void 
  2823 ;; Registers used:
  2824 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2830 ;;      Params:         0       0       0       0       0
  2831 ;;      Locals:         0       0       1       0       0
  2832 ;;      Temps:          0       0       0       0       0
  2833 ;;      Totals:         0       0       1       0       0
  2834 ;;Total ram usage:        1 bytes
  2835 ;; Hardware stack levels used:    1
  2836 ;; Hardware stack levels required when called:    7
  2837 ;; This function calls:
  2838 ;;		_EEPROM_WriteByte
  2839 ;; This function is called by:
  2840 ;;		_EWH_SetTemp_Mode
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844                           
  2845                           ;psect for function _EWH_EEPROM_Update
  2846  086C                     _EWH_EEPROM_Update:
  2847                           
  2848                           ;incstack = 0
  2849 ;; hardware stack exceeded
  2850                           ; Regs used in _EWH_EEPROM_Update: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2851                           ;EWH_EEPROM_Update@newSetTemp stored from wreg
  2852  086C  1683               	bsf	3,5	;RP0=1, select bank1
  2853  086D  1303               	bcf	3,6	;RP1=0, select bank1
  2854  086E  00A6               	movwf	EWH_EEPROM_Update@newSetTemp^(0+128)
  2855  086F                     l3049:
  2856                           
  2857                           ;EWH.c: 209: void EWH_EEPROM_Update(uint8_t newSetTemp);EWH.c: 210: {;EWH.c: 211:     EE
      +                          PROM_WriteByte(0x0020,newSetTemp);
  2858  086F  3020               	movlw	32
  2859  0870  00A1               	movwf	EEPROM_WriteByte@address^(0+128)
  2860  0871  3000               	movlw	0
  2861  0872  00A2               	movwf	(EEPROM_WriteByte@address^(0+128)+1)
  2862  0873  0826               	movf	EWH_EEPROM_Update@newSetTemp^(0+128),w
  2863  0874  00FF               	movwf	btemp+1
  2864  0875  087F               	movf	btemp+1,w
  2865  0876  00A3               	movwf	EEPROM_WriteByte@data^(0+128)
  2866  0877  120A  158A  21F2  120A  158A  	fcall	_EEPROM_WriteByte
  2867  087C                     l580:
  2868  087C  0008               	return
  2869  087D                     __end_of_EWH_EEPROM_Update:
  2870                           
  2871                           	psect	text10
  2872  0F72                     __ptext10:	
  2873 ;; *************** function _EWH_PowerUP_Mode *****************
  2874 ;; Defined at:
  2875 ;;		line 28 in file "EWH.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;		None
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;		None
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1    wreg      void 
  2882 ;; Registers used:
  2883 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2889 ;;      Params:         0       0       0       0       0
  2890 ;;      Locals:         0       0       0       0       0
  2891 ;;      Temps:          0       0       2       0       0
  2892 ;;      Totals:         0       0       2       0       0
  2893 ;;Total ram usage:        2 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; Hardware stack levels required when called:    9
  2896 ;; This function calls:
  2897 ;;		_EWH_EEPROM_Read
  2898 ;;		_Heater_Display
  2899 ;; This function is called by:
  2900 ;;		_main
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           
  2905                           ;psect for function _EWH_PowerUP_Mode
  2906  0F72                     _EWH_PowerUP_Mode:
  2907  0F72                     l3311:	
  2908                           ;incstack = 0
  2909 ;; hardware stack exceeded
  2910                           ; Regs used in _EWH_PowerUP_Mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2911                           
  2912  0F72  1283               	bcf	3,5	;RP0=0, select bank0
  2913  0F73  1303               	bcf	3,6	;RP1=0, select bank0
  2914  0F74  1606               	bsf	6,4	;volatile
  2915  0F75                     l3317:
  2916  0F75  30DF               	movlw	223
  2917  0F76  00FF               	movwf	btemp+1
  2918  0F77  087F               	movf	btemp+1,w
  2919  0F78  0586               	andwf	6,f	;volatile
  2920  0F79                     l3321:
  2921  0F79  30BF               	movlw	191
  2922  0F7A  00FF               	movwf	btemp+1
  2923  0F7B  087F               	movf	btemp+1,w
  2924  0F7C  0586               	andwf	6,f	;volatile
  2925  0F7D                     l3323:
  2926                           
  2927                           ;EWH.c: 34:     EWH_Events[0]=0;
  2928  0F7D  1683               	bsf	3,5	;RP0=1, select bank1
  2929  0F7E  1303               	bcf	3,6	;RP1=0, select bank1
  2930  0F7F  01BF               	clrf	_EWH_Events^(0+128)
  2931  0F80                     l3325:
  2932                           
  2933                           ;EWH.c: 35:     EWH_Events[2]=0;
  2934  0F80  01C1               	clrf	(_EWH_Events^(0+128)+2)
  2935  0F81                     l3327:
  2936                           
  2937                           ;EWH.c: 36:     EWH_Events[1]=0;
  2938  0F81  01C0               	clrf	(_EWH_Events^(0+128)+1)
  2939  0F82                     l3329:
  2940                           
  2941                           ;EWH.c: 37:     EWH_Events[3]=0;
  2942  0F82  01C2               	clrf	(_EWH_Events^(0+128)+3)
  2943  0F83                     l3331:
  2944                           
  2945                           ;EWH.c: 40:     EWH_Events[0]=0;
  2946  0F83  01BF               	clrf	_EWH_Events^(0+128)
  2947  0F84                     l3333:
  2948                           
  2949                           ;EWH.c: 45:     set_Temp = EWH_EEPROM_Read();
  2950  0F84  120A  158A  2026  120A  158A  	fcall	_EWH_EEPROM_Read
  2951  0F89  00FF               	movwf	btemp+1
  2952  0F8A  087F               	movf	btemp+1,w
  2953  0F8B  1683               	bsf	3,5	;RP0=1, select bank1
  2954  0F8C  1303               	bcf	3,6	;RP1=0, select bank1
  2955  0F8D  00C7               	movwf	_set_Temp^(0+128)
  2956  0F8E                     l3335:
  2957                           
  2958                           ;EWH.c: 48:     Heater_Display (set_Temp);
  2959  0F8E  0847               	movf	_set_Temp^(0+128),w
  2960  0F8F  00AE               	movwf	??_EWH_PowerUP_Mode^(0+128)
  2961  0F90  01AF               	clrf	(??_EWH_PowerUP_Mode^(0+128)+1)
  2962  0F91  082E               	movf	??_EWH_PowerUP_Mode^(0+128),w
  2963  0F92  00AA               	movwf	Heater_Display@temp^(0+128)
  2964  0F93  082F               	movf	(??_EWH_PowerUP_Mode+1)^(0+128),w
  2965  0F94  00AB               	movwf	(Heater_Display@temp+1)^(0+128)
  2966  0F95  120A  158A  2402  120A  158A  	fcall	_Heater_Display
  2967  0F9A                     l3337:
  2968                           
  2969                           ;EWH.c: 50:     if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED))
  2970  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  2971  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  2972  0F9C  0806               	movf	6,w	;volatile
  2973  0F9D  1683               	bsf	3,5	;RP0=1, select bank1
  2974  0F9E  1303               	bcf	3,6	;RP1=0, select bank1
  2975  0F9F  00AE               	movwf	??_EWH_PowerUP_Mode^(0+128)
  2976  0FA0  3002               	movlw	2
  2977  0FA1                     u2575:
  2978  0FA1  1003               	clrc
  2979  0FA2  0CAE               	rrf	??_EWH_PowerUP_Mode^(0+128),f
  2980  0FA3  3EFF               	addlw	-1
  2981  0FA4  1D03               	skipz
  2982  0FA5  2FA1               	goto	u2575
  2983  0FA6  182E               	btfsc	??_EWH_PowerUP_Mode^(0+128),0
  2984  0FA7  2FA9               	goto	u2581
  2985  0FA8  2FAA               	goto	u2580
  2986  0FA9                     u2581:
  2987  0FA9  2FD1               	goto	l3349
  2988  0FAA                     u2580:
  2989  0FAA                     l3339:
  2990                           
  2991                           ;EWH.c: 51:     {;EWH.c: 52:         _delay((unsigned long)((50)*(4000000/4000.0)));
  2992  0FAA  3041               	movlw	65
  2993  0FAB  1683               	bsf	3,5	;RP0=1, select bank1
  2994  0FAC  1303               	bcf	3,6	;RP1=0, select bank1
  2995  0FAD  00AF               	movwf	(??_EWH_PowerUP_Mode^(0+128)+1)
  2996  0FAE  30ED               	movlw	237
  2997  0FAF  00AE               	movwf	??_EWH_PowerUP_Mode^(0+128)
  2998  0FB0                     u3807:
  2999  0FB0  0BAE               	decfsz	??_EWH_PowerUP_Mode^(0+128),f
  3000  0FB1  2FB0               	goto	u3807
  3001  0FB2  0BAF               	decfsz	(??_EWH_PowerUP_Mode^(0+128)+1),f
  3002  0FB3  2FB0               	goto	u3807
  3003  0FB4  2FB5               	nop2
  3004  0FB5                     l3341:
  3005                           
  3006                           ;EWH.c: 53:         if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED))
  3007  0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  3008  0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  3009  0FB7  0806               	movf	6,w	;volatile
  3010  0FB8  1683               	bsf	3,5	;RP0=1, select bank1
  3011  0FB9  1303               	bcf	3,6	;RP1=0, select bank1
  3012  0FBA  00AE               	movwf	??_EWH_PowerUP_Mode^(0+128)
  3013  0FBB  3002               	movlw	2
  3014  0FBC                     u2595:
  3015  0FBC  1003               	clrc
  3016  0FBD  0CAE               	rrf	??_EWH_PowerUP_Mode^(0+128),f
  3017  0FBE  3EFF               	addlw	-1
  3018  0FBF  1D03               	skipz
  3019  0FC0  2FBC               	goto	u2595
  3020  0FC1  182E               	btfsc	??_EWH_PowerUP_Mode^(0+128),0
  3021  0FC2  2FC4               	goto	u2601
  3022  0FC3  2FC5               	goto	u2600
  3023  0FC4                     u2601:
  3024  0FC4  2FFF               	goto	l515
  3025  0FC5                     u2600:
  3026  0FC5                     l3343:
  3027                           
  3028                           ;EWH.c: 54:         {;EWH.c: 55:             EWH_Events[1]=1;
  3029  0FC5  01C0               	clrf	(_EWH_Events^(0+128)+1)
  3030  0FC6  0AC0               	incf	(_EWH_Events^(0+128)+1),f
  3031  0FC7                     l3345:
  3032                           
  3033                           ;EWH.c: 56:             NoPress_Sec_count=0;
  3034  0FC7  1283               	bcf	3,5	;RP0=0, select bank0
  3035  0FC8  1303               	bcf	3,6	;RP1=0, select bank0
  3036  0FC9  01D7               	clrf	_NoPress_Sec_count
  3037  0FCA                     l3347:
  3038                           
  3039                           ;EWH.c: 57:             EWH_Mode=EWH_SET_TEMP_MODE;
  3040  0FCA  3002               	movlw	2
  3041  0FCB  00FF               	movwf	btemp+1
  3042  0FCC  087F               	movf	btemp+1,w
  3043  0FCD  1683               	bsf	3,5	;RP0=1, select bank1
  3044  0FCE  1303               	bcf	3,6	;RP1=0, select bank1
  3045  0FCF  00C8               	movwf	_EWH_Mode^(0+128)
  3046  0FD0  2FFF               	goto	l515
  3047  0FD1                     l3349:
  3048  0FD1  1283               	bcf	3,5	;RP0=0, select bank0
  3049  0FD2  1303               	bcf	3,6	;RP1=0, select bank0
  3050  0FD3  0806               	movf	6,w	;volatile
  3051  0FD4  1683               	bsf	3,5	;RP0=1, select bank1
  3052  0FD5  1303               	bcf	3,6	;RP1=0, select bank1
  3053  0FD6  00AE               	movwf	??_EWH_PowerUP_Mode^(0+128)
  3054  0FD7  3001               	movlw	1
  3055  0FD8                     u2615:
  3056  0FD8  1003               	clrc
  3057  0FD9  0CAE               	rrf	??_EWH_PowerUP_Mode^(0+128),f
  3058  0FDA  3EFF               	addlw	-1
  3059  0FDB  1D03               	skipz
  3060  0FDC  2FD8               	goto	u2615
  3061  0FDD  182E               	btfsc	??_EWH_PowerUP_Mode^(0+128),0
  3062  0FDE  2FE0               	goto	u2621
  3063  0FDF  2FE1               	goto	u2620
  3064  0FE0                     u2621:
  3065  0FE0  2FFF               	goto	l515
  3066  0FE1                     u2620:
  3067  0FE1                     l3351:
  3068                           
  3069                           ;EWH.c: 61:     {;EWH.c: 62:         _delay((unsigned long)((50)*(4000000/4000.0)));
  3070  0FE1  3041               	movlw	65
  3071  0FE2  1683               	bsf	3,5	;RP0=1, select bank1
  3072  0FE3  1303               	bcf	3,6	;RP1=0, select bank1
  3073  0FE4  00AF               	movwf	(??_EWH_PowerUP_Mode^(0+128)+1)
  3074  0FE5  30ED               	movlw	237
  3075  0FE6  00AE               	movwf	??_EWH_PowerUP_Mode^(0+128)
  3076  0FE7                     u3817:
  3077  0FE7  0BAE               	decfsz	??_EWH_PowerUP_Mode^(0+128),f
  3078  0FE8  2FE7               	goto	u3817
  3079  0FE9  0BAF               	decfsz	(??_EWH_PowerUP_Mode^(0+128)+1),f
  3080  0FEA  2FE7               	goto	u3817
  3081  0FEB  2FEC               	nop2
  3082  0FEC                     l3353:
  3083                           
  3084                           ;EWH.c: 63:         if((!((PORTB & (1<<1)) >> 1)==SW_PRESSED))
  3085  0FEC  1283               	bcf	3,5	;RP0=0, select bank0
  3086  0FED  1303               	bcf	3,6	;RP1=0, select bank0
  3087  0FEE  0806               	movf	6,w	;volatile
  3088  0FEF  1683               	bsf	3,5	;RP0=1, select bank1
  3089  0FF0  1303               	bcf	3,6	;RP1=0, select bank1
  3090  0FF1  00AE               	movwf	??_EWH_PowerUP_Mode^(0+128)
  3091  0FF2  3001               	movlw	1
  3092  0FF3                     u2635:
  3093  0FF3  1003               	clrc
  3094  0FF4  0CAE               	rrf	??_EWH_PowerUP_Mode^(0+128),f
  3095  0FF5  3EFF               	addlw	-1
  3096  0FF6  1D03               	skipz
  3097  0FF7  2FF3               	goto	u2635
  3098  0FF8  182E               	btfsc	??_EWH_PowerUP_Mode^(0+128),0
  3099  0FF9  2FFB               	goto	u2641
  3100  0FFA  2FFC               	goto	u2640
  3101  0FFB                     u2641:
  3102  0FFB  2FFF               	goto	l515
  3103  0FFC                     u2640:
  3104  0FFC                     l3355:
  3105                           
  3106                           ;EWH.c: 64:         {;EWH.c: 65:             EWH_Events[2]=1;
  3107  0FFC  01C1               	clrf	(_EWH_Events^(0+128)+2)
  3108  0FFD  0AC1               	incf	(_EWH_Events^(0+128)+2),f
  3109  0FFE  2FC7               	goto	l3345
  3110  0FFF                     l515:
  3111  0FFF  0008               	return
  3112  1000                     __end_of_EWH_PowerUP_Mode:
  3113                           
  3114                           	psect	text11
  3115  0826                     __ptext11:	
  3116 ;; *************** function _EWH_EEPROM_Read *****************
  3117 ;; Defined at:
  3118 ;;		line 213 in file "EWH.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;		None
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;		None
  3123 ;; Return value:  Size  Location     Type
  3124 ;;                  1    wreg      unsigned char 
  3125 ;; Registers used:
  3126 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3127 ;; Tracked objects:
  3128 ;;		On entry : 0/0
  3129 ;;		On exit  : 0/0
  3130 ;;		Unchanged: 0/0
  3131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3132 ;;      Params:         0       0       0       0       0
  3133 ;;      Locals:         0       0       0       0       0
  3134 ;;      Temps:          0       0       0       0       0
  3135 ;;      Totals:         0       0       0       0       0
  3136 ;;Total ram usage:        0 bytes
  3137 ;; Hardware stack levels used:    1
  3138 ;; Hardware stack levels required when called:    8
  3139 ;; This function calls:
  3140 ;;		_EEPROM_ReadByte
  3141 ;; This function is called by:
  3142 ;;		_EWH_PowerUP_Mode
  3143 ;;		_EWH_SetTemp_Mode
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147                           
  3148                           ;psect for function _EWH_EEPROM_Read
  3149  0826                     _EWH_EEPROM_Read:
  3150  0826                     l3035:	
  3151                           ;incstack = 0
  3152 ;; hardware stack exceeded
  3153                           ; Regs used in _EWH_EEPROM_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3154                           
  3155                           
  3156                           ;EWH.c: 215:     return EEPROM_ReadByte(0x0020);
  3157  0826  3020               	movlw	32
  3158  0827  1683               	bsf	3,5	;RP0=1, select bank1
  3159  0828  1303               	bcf	3,6	;RP1=0, select bank1
  3160  0829  00A2               	movwf	EEPROM_ReadByte@address^(0+128)
  3161  082A  3000               	movlw	0
  3162  082B  00A3               	movwf	(EEPROM_ReadByte@address^(0+128)+1)
  3163  082C  120A  158A  23A7  120A  158A  	fcall	_EEPROM_ReadByte
  3164  0831                     l583:
  3165  0831  0008               	return
  3166  0832                     __end_of_EWH_EEPROM_Read:
  3167                           
  3168                           	psect	text12
  3169  0BA7                     __ptext12:	
  3170 ;; *************** function _EEPROM_ReadByte *****************
  3171 ;; Defined at:
  3172 ;;		line 36 in file "EEPROM.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;  address         2    2[BANK1 ] unsigned short 
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;  data            1    6[BANK1 ] unsigned char 
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  1    wreg      unsigned char 
  3179 ;; Registers used:
  3180 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3186 ;;      Params:         0       0       2       0       0
  3187 ;;      Locals:         0       0       1       0       0
  3188 ;;      Temps:          0       0       2       0       0
  3189 ;;      Totals:         0       0       5       0       0
  3190 ;;Total ram usage:        5 bytes
  3191 ;; Hardware stack levels used:    1
  3192 ;; Hardware stack levels required when called:    7
  3193 ;; This function calls:
  3194 ;;		_I2C_Master_ReadByte
  3195 ;;		_I2C_Master_Send_RepeatedStart
  3196 ;;		_I2C_Master_Send_Start
  3197 ;;		_I2C_Master_Send_Stop
  3198 ;;		_I2C_Master_WriteByte
  3199 ;; This function is called by:
  3200 ;;		_EWH_EEPROM_Read
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204                           
  3205                           ;psect for function _EEPROM_ReadByte
  3206  0BA7                     _EEPROM_ReadByte:
  3207  0BA7                     l2849:	
  3208                           ;incstack = 0
  3209 ;; hardware stack exceeded
  3210                           ; Regs used in _EEPROM_ReadByte: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3211                           
  3212                           
  3213                           ;EEPROM.c: 36: uint8_t EEPROM_ReadByte(uint16_t address );EEPROM.c: 37: {;EEPROM.c: 38: 
      +                              uint8_t data;;EEPROM.c: 40:     I2C_Master_Send_Start();
  3214  0BA7  160A  118A  27DB  120A  158A  	fcall	_I2C_Master_Send_Start
  3215                           
  3216                           ;EEPROM.c: 42:     while(I2C_Master_WriteByte(0xA0 | ((address & 0x0700)>>7)) )
  3217  0BAC  2BB2               	goto	l28
  3218  0BAD                     l2851:
  3219                           
  3220                           ;EEPROM.c: 43:         I2C_Master_Send_RepeatedStart();
  3221  0BAD  160A  118A  27D2  120A  158A  	fcall	_I2C_Master_Send_RepeatedStart
  3222  0BB2                     l28:
  3223                           
  3224                           ;EEPROM.c: 42:     while(I2C_Master_WriteByte(0xA0 | ((address & 0x0700)>>7)) )
  3225  0BB2  1683               	bsf	3,5	;RP0=1, select bank1
  3226  0BB3  1303               	bcf	3,6	;RP1=0, select bank1
  3227  0BB4  0823               	movf	(EEPROM_ReadByte@address+1)^(0+128),w
  3228  0BB5  00A5               	movwf	(??_EEPROM_ReadByte^(0+128)+1)
  3229  0BB6  0822               	movf	EEPROM_ReadByte@address^(0+128),w
  3230  0BB7  00A4               	movwf	??_EEPROM_ReadByte^(0+128)
  3231  0BB8  3007               	movlw	7
  3232  0BB9                     u2005:
  3233  0BB9  1003               	clrc
  3234  0BBA  0CA5               	rrf	(??_EEPROM_ReadByte^(0+128)+1),f
  3235  0BBB  0CA4               	rrf	??_EEPROM_ReadByte^(0+128),f
  3236  0BBC  3EFF               	addlw	-1
  3237  0BBD  1D03               	skipz
  3238  0BBE  2BB9               	goto	u2005
  3239  0BBF  0824               	movf	??_EEPROM_ReadByte^(0+128),w
  3240  0BC0  390E               	andlw	14
  3241  0BC1  38A0               	iorlw	160
  3242  0BC2  120A  158A  20E5  120A  158A  	fcall	_I2C_Master_WriteByte
  3243  0BC7  3A00               	xorlw	0
  3244  0BC8  1D03               	skipz
  3245  0BC9  2BCB               	goto	u2011
  3246  0BCA  2BCC               	goto	u2010
  3247  0BCB                     u2011:
  3248  0BCB  2BAD               	goto	l2851
  3249  0BCC                     u2010:
  3250  0BCC                     l2853:
  3251                           
  3252                           ;EEPROM.c: 46:     I2C_Master_WriteByte((uint8_t)address);
  3253  0BCC  1683               	bsf	3,5	;RP0=1, select bank1
  3254  0BCD  1303               	bcf	3,6	;RP1=0, select bank1
  3255  0BCE  0822               	movf	EEPROM_ReadByte@address^(0+128),w
  3256  0BCF  120A  158A  20E5  120A  158A  	fcall	_I2C_Master_WriteByte
  3257                           
  3258                           ;EEPROM.c: 48:     I2C_Master_Send_RepeatedStart();
  3259  0BD4  160A  118A  27D2  120A  158A  	fcall	_I2C_Master_Send_RepeatedStart
  3260                           
  3261                           ;EEPROM.c: 49:     I2C_Master_WriteByte(0xA1 | ((address & 0x0700)>>7));
  3262  0BD9  1683               	bsf	3,5	;RP0=1, select bank1
  3263  0BDA  1303               	bcf	3,6	;RP1=0, select bank1
  3264  0BDB  0823               	movf	(EEPROM_ReadByte@address+1)^(0+128),w
  3265  0BDC  00A5               	movwf	(??_EEPROM_ReadByte^(0+128)+1)
  3266  0BDD  0822               	movf	EEPROM_ReadByte@address^(0+128),w
  3267  0BDE  00A4               	movwf	??_EEPROM_ReadByte^(0+128)
  3268  0BDF  3007               	movlw	7
  3269  0BE0                     u2025:
  3270  0BE0  1003               	clrc
  3271  0BE1  0CA5               	rrf	(??_EEPROM_ReadByte^(0+128)+1),f
  3272  0BE2  0CA4               	rrf	??_EEPROM_ReadByte^(0+128),f
  3273  0BE3  3EFF               	addlw	-1
  3274  0BE4  1D03               	skipz
  3275  0BE5  2BE0               	goto	u2025
  3276  0BE6  0824               	movf	??_EEPROM_ReadByte^(0+128),w
  3277  0BE7  390E               	andlw	14
  3278  0BE8  38A1               	iorlw	161
  3279  0BE9  120A  158A  20E5  120A  158A  	fcall	_I2C_Master_WriteByte
  3280  0BEE                     l2855:
  3281                           
  3282                           ;EEPROM.c: 51:     data=I2C_Master_ReadByte(I2C_STOP_READING);
  3283  0BEE  3001               	movlw	1
  3284  0BEF  120A  158A  212A  120A  158A  	fcall	_I2C_Master_ReadByte
  3285  0BF4  00FF               	movwf	btemp+1
  3286  0BF5  087F               	movf	btemp+1,w
  3287  0BF6  1683               	bsf	3,5	;RP0=1, select bank1
  3288  0BF7  1303               	bcf	3,6	;RP1=0, select bank1
  3289  0BF8  00A6               	movwf	EEPROM_ReadByte@data^(0+128)
  3290  0BF9                     l2857:
  3291                           
  3292                           ;EEPROM.c: 52:     I2C_Master_Send_Stop();
  3293  0BF9  160A  118A  27E4  120A  158A  	fcall	_I2C_Master_Send_Stop
  3294  0BFE                     l2859:
  3295                           
  3296                           ;EEPROM.c: 54:     return data;
  3297  0BFE  1683               	bsf	3,5	;RP0=1, select bank1
  3298  0BFF  1303               	bcf	3,6	;RP1=0, select bank1
  3299  0C00  0826               	movf	EEPROM_ReadByte@data^(0+128),w
  3300  0C01                     l31:
  3301  0C01  0008               	return
  3302  0C02                     __end_of_EEPROM_ReadByte:
  3303                           
  3304                           	psect	text13
  3305  092A                     __ptext13:	
  3306 ;; *************** function _I2C_Master_ReadByte *****************
  3307 ;; Defined at:
  3308 ;;		line 105 in file "i2c.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  Read_State      1    wreg     enum E877
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;  Read_State      1    1[BANK1 ] enum E877
  3313 ;;  data            1    0        unsigned char 
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  1    wreg      unsigned char 
  3316 ;; Registers used:
  3317 ;;		wreg, status,2, status,0, pclath, cstack
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3323 ;;      Params:         0       0       0       0       0
  3324 ;;      Locals:         0       0       2       0       0
  3325 ;;      Temps:          0       0       0       0       0
  3326 ;;      Totals:         0       0       2       0       0
  3327 ;;Total ram usage:        2 bytes
  3328 ;; Hardware stack levels used:    1
  3329 ;; Hardware stack levels required when called:    6
  3330 ;; This function calls:
  3331 ;;		_I2C_Master_Send_ACK
  3332 ;;		_I2C_Master_Send_NACK
  3333 ;;		_I2C_Wait_IDLE
  3334 ;; This function is called by:
  3335 ;;		_EEPROM_ReadByte
  3336 ;;		_EEPROM_ReadPage
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           
  3341                           ;psect for function _I2C_Master_ReadByte
  3342  092A                     _I2C_Master_ReadByte:
  3343                           
  3344                           ;incstack = 0
  3345 ;; hardware stack exceeded
  3346                           ; Regs used in _I2C_Master_ReadByte: [wreg+status,2+status,0+pclath+cstack]
  3347                           ;I2C_Master_ReadByte@Read_State stored from wreg
  3348  092A  1683               	bsf	3,5	;RP0=1, select bank1
  3349  092B  1303               	bcf	3,6	;RP1=0, select bank1
  3350  092C  00A1               	movwf	I2C_Master_ReadByte@Read_State^(0+128)
  3351  092D                     l2775:
  3352                           
  3353                           ;i2c.c: 105: uint8_t I2C_Master_ReadByte(tI2C_ReadingState Read_State);i2c.c: 106: {;i2c
      +                          .c: 108:     uint8_t data;;i2c.c: 110:     I2C_Wait_IDLE();
  3354  092D  120A  158A  2032  120A  158A  	fcall	_I2C_Wait_IDLE
  3355  0932                     l2777:
  3356                           
  3357                           ;i2c.c: 111:     RCEN=1;
  3358  0932  1683               	bsf	3,5	;RP0=1, select bank1
  3359  0933  1303               	bcf	3,6	;RP1=0, select bank1
  3360  0934  1591               	bsf	17,3	;volatile
  3361                           
  3362                           ;i2c.c: 112:     I2C_Wait_IDLE();
  3363  0935  120A  158A  2032  120A  158A  	fcall	_I2C_Wait_IDLE
  3364  093A                     l2779:
  3365  093A  1283               	bcf	3,5	;RP0=0, select bank0
  3366  093B  1303               	bcf	3,6	;RP1=0, select bank0
  3367  093C  0813               	movf	19,w	;volatile
  3368  093D                     l2781:
  3369                           
  3370                           ;i2c.c: 115:     if(Read_State==I2C_STOP_READING)
  3371  093D  1683               	bsf	3,5	;RP0=1, select bank1
  3372  093E  1303               	bcf	3,6	;RP1=0, select bank1
  3373  093F  0321               	decf	I2C_Master_ReadByte@Read_State^(0+128),w
  3374  0940  1D03               	btfss	3,2
  3375  0941  2943               	goto	u1931
  3376  0942  2944               	goto	u1930
  3377  0943                     u1931:
  3378  0943  294A               	goto	l2785
  3379  0944                     u1930:
  3380  0944                     l2783:
  3381                           
  3382                           ;i2c.c: 116:         I2C_Master_Send_NACK();
  3383  0944  120A  158A  2007  120A  158A  	fcall	_I2C_Master_Send_NACK
  3384  0949  294F               	goto	l2787
  3385  094A                     l2785:
  3386                           
  3387                           ;i2c.c: 118:         I2C_Master_Send_ACK();
  3388  094A  160A  118A  27F6  120A  158A  	fcall	_I2C_Master_Send_ACK
  3389  094F                     l2787:
  3390                           
  3391                           ;i2c.c: 120:     return SSPBUF ;
  3392  094F  1283               	bcf	3,5	;RP0=0, select bank0
  3393  0950  1303               	bcf	3,6	;RP1=0, select bank0
  3394  0951  0813               	movf	19,w	;volatile
  3395  0952                     l120:
  3396  0952  0008               	return
  3397  0953                     __end_of_I2C_Master_ReadByte:
  3398                           
  3399                           	psect	text14
  3400  0807                     __ptext14:	
  3401 ;; *************** function _I2C_Master_Send_NACK *****************
  3402 ;; Defined at:
  3403 ;;		line 87 in file "i2c.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;		None
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;		None
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  1    wreg      void 
  3410 ;; Registers used:
  3411 ;;		wreg, status,2, status,0, pclath, cstack
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3417 ;;      Params:         0       0       0       0       0
  3418 ;;      Locals:         0       0       0       0       0
  3419 ;;      Temps:          0       0       0       0       0
  3420 ;;      Totals:         0       0       0       0       0
  3421 ;;Total ram usage:        0 bytes
  3422 ;; Hardware stack levels used:    1
  3423 ;; Hardware stack levels required when called:    5
  3424 ;; This function calls:
  3425 ;;		_I2C_Wait_IDLE
  3426 ;; This function is called by:
  3427 ;;		_I2C_Master_ReadByte
  3428 ;; This function uses a non-reentrant model
  3429 ;;
  3430                           
  3431                           
  3432                           ;psect for function _I2C_Master_Send_NACK
  3433  0807                     _I2C_Master_Send_NACK:
  3434  0807                     l2747:	
  3435                           ;incstack = 0
  3436 ;; hardware stack exceeded
  3437                           ; Regs used in _I2C_Master_Send_NACK: [wreg+status,2+status,0+pclath+cstack]
  3438                           
  3439                           
  3440                           ;i2c.c: 90:     I2C_Wait_IDLE();
  3441  0807  120A  158A  2032  120A  158A  	fcall	_I2C_Wait_IDLE
  3442  080C                     l2749:
  3443                           
  3444                           ;i2c.c: 92:     ACKDT=1;
  3445  080C  1683               	bsf	3,5	;RP0=1, select bank1
  3446  080D  1303               	bcf	3,6	;RP1=0, select bank1
  3447  080E  1691               	bsf	17,5	;volatile
  3448  080F                     l2751:
  3449                           
  3450                           ;i2c.c: 93:     ACKEN=1;
  3451  080F  1611               	bsf	17,4	;volatile
  3452  0810                     l109:
  3453  0810  0008               	return
  3454  0811                     __end_of_I2C_Master_Send_NACK:
  3455                           
  3456                           	psect	text15
  3457  17F6                     __ptext15:	
  3458 ;; *************** function _I2C_Master_Send_ACK *****************
  3459 ;; Defined at:
  3460 ;;		line 79 in file "i2c.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;		None
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;		None
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  1    wreg      void 
  3467 ;; Registers used:
  3468 ;;		wreg, status,2, status,0, pclath, cstack
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3474 ;;      Params:         0       0       0       0       0
  3475 ;;      Locals:         0       0       0       0       0
  3476 ;;      Temps:          0       0       0       0       0
  3477 ;;      Totals:         0       0       0       0       0
  3478 ;;Total ram usage:        0 bytes
  3479 ;; Hardware stack levels used:    1
  3480 ;; Hardware stack levels required when called:    5
  3481 ;; This function calls:
  3482 ;;		_I2C_Wait_IDLE
  3483 ;; This function is called by:
  3484 ;;		_I2C_Master_ReadByte
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           
  3489                           ;psect for function _I2C_Master_Send_ACK
  3490  17F6                     _I2C_Master_Send_ACK:
  3491  17F6                     l2741:	
  3492                           ;incstack = 0
  3493 ;; hardware stack exceeded
  3494                           ; Regs used in _I2C_Master_Send_ACK: [wreg+status,2+status,0+pclath+cstack]
  3495                           
  3496                           
  3497                           ;i2c.c: 82:     I2C_Wait_IDLE();
  3498  17F6  120A  158A  2032  160A  118A  	fcall	_I2C_Wait_IDLE
  3499  17FB                     l2743:
  3500                           
  3501                           ;i2c.c: 84:     ACKDT=0;
  3502  17FB  1683               	bsf	3,5	;RP0=1, select bank1
  3503  17FC  1303               	bcf	3,6	;RP1=0, select bank1
  3504  17FD  1291               	bcf	17,5	;volatile
  3505  17FE                     l2745:
  3506                           
  3507                           ;i2c.c: 85:     ACKEN=1;
  3508  17FE  1611               	bsf	17,4	;volatile
  3509  17FF                     l106:
  3510  17FF  0008               	return
  3511  1800                     __end_of_I2C_Master_Send_ACK:
  3512                           
  3513                           	psect	text16
  3514  0398                     __ptext16:	
  3515 ;; *************** function _EWH_Operating_Mode *****************
  3516 ;; Defined at:
  3517 ;;		line 141 in file "EWH.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;		None
  3520 ;; Auto vars:     Size  Location     Type
  3521 ;;		None
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  1    wreg      void 
  3524 ;; Registers used:
  3525 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3531 ;;      Params:         0       0       0       0       0
  3532 ;;      Locals:         0       0       0       0       0
  3533 ;;      Temps:          0       0       3       0       0
  3534 ;;      Totals:         0       0       3       0       0
  3535 ;;Total ram usage:        3 bytes
  3536 ;; Hardware stack levels used:    1
  3537 ;; Hardware stack levels required when called:    7
  3538 ;; This function calls:
  3539 ;;		_DD_SetState
  3540 ;;		_Heater_Display
  3541 ;;		_TMR1_Start
  3542 ;;		_TMR1_Stop
  3543 ;; This function is called by:
  3544 ;;		_main
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548                           
  3549                           ;psect for function _EWH_Operating_Mode
  3550  0398                     _EWH_Operating_Mode:
  3551  0398                     l3361:	
  3552                           ;incstack = 0
  3553                           ; Regs used in _EWH_Operating_Mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3554                           
  3555  0398                     l3365:	
  3556                           ;EWH.c: 143:     (OFF)?(PORTB |= (1<<4)) : (PORTB &= ~(1<<4));
  3557                           
  3558  0398  30EF               	movlw	239
  3559  0399  00FF               	movwf	btemp+1
  3560  039A  087F               	movf	btemp+1,w
  3561  039B  1283               	bcf	3,5	;RP0=0, select bank0
  3562  039C  1303               	bcf	3,6	;RP1=0, select bank0
  3563  039D  0586               	andwf	6,f	;volatile
  3564  039E                     l3369:
  3565  039E  30DF               	movlw	223
  3566  039F  00FF               	movwf	btemp+1
  3567  03A0  087F               	movf	btemp+1,w
  3568  03A1  0586               	andwf	6,f	;volatile
  3569  03A2                     l3371:
  3570  03A2  1706               	bsf	6,6	;volatile
  3571  03A3                     l3375:
  3572                           
  3573                           ;EWH.c: 147:     EWH_Events[0]=0;
  3574  03A3  1683               	bsf	3,5	;RP0=1, select bank1
  3575  03A4  1303               	bcf	3,6	;RP1=0, select bank1
  3576  03A5  01BF               	clrf	_EWH_Events^(0+128)
  3577  03A6                     l3377:
  3578                           
  3579                           ;EWH.c: 148:     EWH_Events[2]=0;
  3580  03A6  01C1               	clrf	(_EWH_Events^(0+128)+2)
  3581  03A7                     l3379:
  3582                           
  3583                           ;EWH.c: 149:     EWH_Events[1]=0;
  3584  03A7  01C0               	clrf	(_EWH_Events^(0+128)+1)
  3585  03A8                     l3381:
  3586                           
  3587                           ;EWH.c: 150:     EWH_Events[3]=0;
  3588  03A8  01C2               	clrf	(_EWH_Events^(0+128)+3)
  3589  03A9                     l3383:
  3590                           
  3591                           ;EWH.c: 152:     EWH_Mode=EWH_OPERATING_MODE;
  3592  03A9  3003               	movlw	3
  3593  03AA  00FF               	movwf	btemp+1
  3594  03AB  087F               	movf	btemp+1,w
  3595  03AC  00C8               	movwf	_EWH_Mode^(0+128)
  3596  03AD                     l3385:
  3597                           
  3598                           ;EWH.c: 154:     TMR1_Start();
  3599  03AD  120A  158A  205C  120A  118A  	fcall	_TMR1_Start
  3600  03B2                     l3387:
  3601                           
  3602                           ;EWH.c: 158:     {;EWH.c: 159:         Heater_Display(current_Temp);
  3603  03B2  1683               	bsf	3,5	;RP0=1, select bank1
  3604  03B3  1303               	bcf	3,6	;RP1=0, select bank1
  3605  03B4  0846               	movf	_current_Temp^(0+128),w
  3606  03B5  00AE               	movwf	??_EWH_Operating_Mode^(0+128)
  3607  03B6  01AF               	clrf	(??_EWH_Operating_Mode^(0+128)+1)
  3608  03B7  082E               	movf	??_EWH_Operating_Mode^(0+128),w
  3609  03B8  00AA               	movwf	Heater_Display@temp^(0+128)
  3610  03B9  082F               	movf	(??_EWH_Operating_Mode+1)^(0+128),w
  3611  03BA  00AB               	movwf	(Heater_Display@temp+1)^(0+128)
  3612  03BB  120A  158A  2402  120A  118A  	fcall	_Heater_Display
  3613  03C0                     l3389:
  3614                           
  3615                           ;EWH.c: 160:         if(current_Temp>(set_Temp+5))
  3616  03C0  1683               	bsf	3,5	;RP0=1, select bank1
  3617  03C1  1303               	bcf	3,6	;RP1=0, select bank1
  3618  03C2  0847               	movf	_set_Temp^(0+128),w
  3619  03C3  3E05               	addlw	5
  3620  03C4  00AE               	movwf	??_EWH_Operating_Mode^(0+128)
  3621  03C5  3000               	movlw	0
  3622  03C6  1803               	skipnc
  3623  03C7  3001               	movlw	1
  3624  03C8  00AF               	movwf	(??_EWH_Operating_Mode^(0+128)+1)
  3625  03C9  082F               	movf	(??_EWH_Operating_Mode+1)^(0+128),w
  3626  03CA  3A80               	xorlw	128
  3627  03CB  00B0               	movwf	(??_EWH_Operating_Mode+2)^(0+128)
  3628  03CC  3080               	movlw	128
  3629  03CD  0230               	subwf	(??_EWH_Operating_Mode+2)^(0+128),w
  3630  03CE  1D03               	skipz
  3631  03CF  2BD2               	goto	u2655
  3632  03D0  0846               	movf	_current_Temp^(0+128),w
  3633  03D1  022E               	subwf	??_EWH_Operating_Mode^(0+128),w
  3634  03D2                     u2655:
  3635  03D2  1803               	skipnc
  3636  03D3  2BD5               	goto	u2651
  3637  03D4  2BD6               	goto	u2650
  3638  03D5                     u2651:
  3639  03D5  2BF4               	goto	l3393
  3640  03D6                     u2650:
  3641  03D6                     l3391:
  3642                           
  3643                           ;EWH.c: 161:         {;EWH.c: 162:             DD_SetState(HEATER,OFF);
  3644  03D6  1683               	bsf	3,5	;RP0=1, select bank1
  3645  03D7  1303               	bcf	3,6	;RP1=0, select bank1
  3646  03D8  01A0               	clrf	DD_SetState@state^(0+128)
  3647  03D9  3000               	movlw	0
  3648  03DA  120A  158A  234D  120A  118A  	fcall	_DD_SetState
  3649                           
  3650                           ;EWH.c: 163:             DD_SetState(COOLER,ON);
  3651  03DF  1683               	bsf	3,5	;RP0=1, select bank1
  3652  03E0  1303               	bcf	3,6	;RP1=0, select bank1
  3653  03E1  01A0               	clrf	DD_SetState@state^(0+128)
  3654  03E2  0AA0               	incf	DD_SetState@state^(0+128),f
  3655  03E3  3001               	movlw	1
  3656  03E4  120A  158A  234D  120A  118A  	fcall	_DD_SetState
  3657                           
  3658                           ;EWH.c: 164:             DD_SetState(HEATER_LED,ON);
  3659  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  3660  03EA  1303               	bcf	3,6	;RP1=0, select bank1
  3661  03EB  01A0               	clrf	DD_SetState@state^(0+128)
  3662  03EC  0AA0               	incf	DD_SetState@state^(0+128),f
  3663  03ED  3002               	movlw	2
  3664  03EE  120A  158A  234D  120A  118A  	fcall	_DD_SetState
  3665                           
  3666                           ;EWH.c: 165:         }
  3667  03F3  2C25               	goto	l3397
  3668  03F4                     l3393:
  3669  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  3670  03F5  1303               	bcf	3,6	;RP1=0, select bank1
  3671  03F6  0847               	movf	_set_Temp^(0+128),w
  3672  03F7  3EFB               	addlw	251
  3673  03F8  00AE               	movwf	??_EWH_Operating_Mode^(0+128)
  3674  03F9  30FF               	movlw	255
  3675  03FA  1803               	skipnc
  3676  03FB  3000               	movlw	0
  3677  03FC  00AF               	movwf	(??_EWH_Operating_Mode^(0+128)+1)
  3678  03FD  082F               	movf	(??_EWH_Operating_Mode+1)^(0+128),w
  3679  03FE  3A80               	xorlw	128
  3680  03FF  3C80               	sublw	128
  3681  0400  1D03               	skipz
  3682  0401  2C04               	goto	u2665
  3683  0402  082E               	movf	??_EWH_Operating_Mode^(0+128),w
  3684  0403  0246               	subwf	_current_Temp^(0+128),w
  3685  0404                     u2665:
  3686  0404  1803               	skipnc
  3687  0405  2C07               	goto	u2661
  3688  0406  2C08               	goto	u2660
  3689  0407                     u2661:
  3690  0407  2C25               	goto	l3397
  3691  0408                     u2660:
  3692  0408                     l3395:
  3693                           
  3694                           ;EWH.c: 167:         {;EWH.c: 168:             DD_SetState(HEATER,ON);
  3695  0408  1683               	bsf	3,5	;RP0=1, select bank1
  3696  0409  1303               	bcf	3,6	;RP1=0, select bank1
  3697  040A  01A0               	clrf	DD_SetState@state^(0+128)
  3698  040B  0AA0               	incf	DD_SetState@state^(0+128),f
  3699  040C  3000               	movlw	0
  3700  040D  120A  158A  234D  120A  118A  	fcall	_DD_SetState
  3701                           
  3702                           ;EWH.c: 169:             DD_SetState(COOLER,OFF);
  3703  0412  1683               	bsf	3,5	;RP0=1, select bank1
  3704  0413  1303               	bcf	3,6	;RP1=0, select bank1
  3705  0414  01A0               	clrf	DD_SetState@state^(0+128)
  3706  0415  3001               	movlw	1
  3707  0416  120A  158A  234D  120A  118A  	fcall	_DD_SetState
  3708                           
  3709                           ;EWH.c: 170:             DD_SetState(HEATER_LED,ON);
  3710  041B  1683               	bsf	3,5	;RP0=1, select bank1
  3711  041C  1303               	bcf	3,6	;RP1=0, select bank1
  3712  041D  01A0               	clrf	DD_SetState@state^(0+128)
  3713  041E  0AA0               	incf	DD_SetState@state^(0+128),f
  3714  041F  3002               	movlw	2
  3715  0420  120A  158A  234D  120A  118A  	fcall	_DD_SetState
  3716  0425                     l3397:
  3717                           
  3718                           ;EWH.c: 172:          if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED) || (!((PORTB & (1<<1)) >
      +                          > 1)==SW_PRESSED) )
  3719  0425  1283               	bcf	3,5	;RP0=0, select bank0
  3720  0426  1303               	bcf	3,6	;RP1=0, select bank0
  3721  0427  0806               	movf	6,w	;volatile
  3722  0428  1683               	bsf	3,5	;RP0=1, select bank1
  3723  0429  1303               	bcf	3,6	;RP1=0, select bank1
  3724  042A  00AE               	movwf	??_EWH_Operating_Mode^(0+128)
  3725  042B  3002               	movlw	2
  3726  042C                     u2675:
  3727  042C  1003               	clrc
  3728  042D  0CAE               	rrf	??_EWH_Operating_Mode^(0+128),f
  3729  042E  3EFF               	addlw	-1
  3730  042F  1D03               	skipz
  3731  0430  2C2C               	goto	u2675
  3732  0431  1C2E               	btfss	??_EWH_Operating_Mode^(0+128),0
  3733  0432  2C34               	goto	u2681
  3734  0433  2C35               	goto	u2680
  3735  0434                     u2681:
  3736  0434  2C45               	goto	l3401
  3737  0435                     u2680:
  3738  0435                     l3399:
  3739  0435  1283               	bcf	3,5	;RP0=0, select bank0
  3740  0436  1303               	bcf	3,6	;RP1=0, select bank0
  3741  0437  0806               	movf	6,w	;volatile
  3742  0438  1683               	bsf	3,5	;RP0=1, select bank1
  3743  0439  1303               	bcf	3,6	;RP1=0, select bank1
  3744  043A  00AE               	movwf	??_EWH_Operating_Mode^(0+128)
  3745  043B  3001               	movlw	1
  3746  043C                     u2695:
  3747  043C  1003               	clrc
  3748  043D  0CAE               	rrf	??_EWH_Operating_Mode^(0+128),f
  3749  043E  3EFF               	addlw	-1
  3750  043F  1D03               	skipz
  3751  0440  2C3C               	goto	u2695
  3752  0441  182E               	btfsc	??_EWH_Operating_Mode^(0+128),0
  3753  0442  2C44               	goto	u2701
  3754  0443  2C45               	goto	u2700
  3755  0444                     u2701:
  3756  0444  2C75               	goto	l3407
  3757  0445                     u2700:
  3758  0445                     l3401:
  3759                           
  3760                           ;EWH.c: 173:          {;EWH.c: 174:              _delay((unsigned long)((50)*(4000000/40
      +                          00.0)));
  3761  0445  3041               	movlw	65
  3762  0446  1683               	bsf	3,5	;RP0=1, select bank1
  3763  0447  1303               	bcf	3,6	;RP1=0, select bank1
  3764  0448  00AF               	movwf	(??_EWH_Operating_Mode^(0+128)+1)
  3765  0449  30ED               	movlw	237
  3766  044A  00AE               	movwf	??_EWH_Operating_Mode^(0+128)
  3767  044B                     u3827:
  3768  044B  0BAE               	decfsz	??_EWH_Operating_Mode^(0+128),f
  3769  044C  2C4B               	goto	u3827
  3770  044D  0BAF               	decfsz	(??_EWH_Operating_Mode^(0+128)+1),f
  3771  044E  2C4B               	goto	u3827
  3772  044F  2C50               	nop2
  3773  0450                     l3403:
  3774                           
  3775                           ;EWH.c: 175:             if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED) || (!((PORTB & (1<<1)
      +                          ) >> 1)==SW_PRESSED) )
  3776  0450  1283               	bcf	3,5	;RP0=0, select bank0
  3777  0451  1303               	bcf	3,6	;RP1=0, select bank0
  3778  0452  0806               	movf	6,w	;volatile
  3779  0453  1683               	bsf	3,5	;RP0=1, select bank1
  3780  0454  1303               	bcf	3,6	;RP1=0, select bank1
  3781  0455  00AE               	movwf	??_EWH_Operating_Mode^(0+128)
  3782  0456  3002               	movlw	2
  3783  0457                     u2715:
  3784  0457  1003               	clrc
  3785  0458  0CAE               	rrf	??_EWH_Operating_Mode^(0+128),f
  3786  0459  3EFF               	addlw	-1
  3787  045A  1D03               	skipz
  3788  045B  2C57               	goto	u2715
  3789  045C  1C2E               	btfss	??_EWH_Operating_Mode^(0+128),0
  3790  045D  2C5F               	goto	u2721
  3791  045E  2C60               	goto	u2720
  3792  045F                     u2721:
  3793  045F  2C70               	goto	l568
  3794  0460                     u2720:
  3795  0460                     l3405:
  3796  0460  1283               	bcf	3,5	;RP0=0, select bank0
  3797  0461  1303               	bcf	3,6	;RP1=0, select bank0
  3798  0462  0806               	movf	6,w	;volatile
  3799  0463  1683               	bsf	3,5	;RP0=1, select bank1
  3800  0464  1303               	bcf	3,6	;RP1=0, select bank1
  3801  0465  00AE               	movwf	??_EWH_Operating_Mode^(0+128)
  3802  0466  3001               	movlw	1
  3803  0467                     u2735:
  3804  0467  1003               	clrc
  3805  0468  0CAE               	rrf	??_EWH_Operating_Mode^(0+128),f
  3806  0469  3EFF               	addlw	-1
  3807  046A  1D03               	skipz
  3808  046B  2C67               	goto	u2735
  3809  046C  182E               	btfsc	??_EWH_Operating_Mode^(0+128),0
  3810  046D  2C6F               	goto	u2741
  3811  046E  2C70               	goto	u2740
  3812  046F                     u2741:
  3813  046F  2C75               	goto	l3407
  3814  0470                     u2740:
  3815  0470                     l568:
  3816                           
  3817                           ;EWH.c: 176:             {;EWH.c: 177:              EWH_Events[2]=1;
  3818  0470  01C1               	clrf	(_EWH_Events^(0+128)+2)
  3819  0471  0AC1               	incf	(_EWH_Events^(0+128)+2),f
  3820                           
  3821                           ;EWH.c: 178:              EWH_Events[1]=1;
  3822  0472  01C0               	clrf	(_EWH_Events^(0+128)+1)
  3823  0473  0AC0               	incf	(_EWH_Events^(0+128)+1),f
  3824                           
  3825                           ;EWH.c: 179:              break;
  3826  0474  2C88               	goto	l3413
  3827  0475                     l3407:
  3828                           
  3829                           ;EWH.c: 182:         if(EWH_Events[0]==1)
  3830  0475  033F               	decf	_EWH_Events^(0+128),w
  3831  0476  1D03               	btfss	3,2
  3832  0477  2C79               	goto	u2751
  3833  0478  2C7A               	goto	u2750
  3834  0479                     u2751:
  3835  0479  2C7B               	goto	l3411
  3836  047A                     u2750:
  3837  047A  2C88               	goto	l3413
  3838  047B                     l3411:
  3839                           
  3840                           ;EWH.c: 185:          Heater_Display(current_Temp);
  3841  047B  0846               	movf	_current_Temp^(0+128),w
  3842  047C  00AE               	movwf	??_EWH_Operating_Mode^(0+128)
  3843  047D  01AF               	clrf	(??_EWH_Operating_Mode^(0+128)+1)
  3844  047E  082E               	movf	??_EWH_Operating_Mode^(0+128),w
  3845  047F  00AA               	movwf	Heater_Display@temp^(0+128)
  3846  0480  082F               	movf	(??_EWH_Operating_Mode+1)^(0+128),w
  3847  0481  00AB               	movwf	(Heater_Display@temp+1)^(0+128)
  3848  0482  120A  158A  2402  120A  118A  	fcall	_Heater_Display
  3849  0487  2BB2               	goto	l3387
  3850  0488                     l3413:
  3851                           
  3852                           ;EWH.c: 188:     if(EWH_Events[1] )
  3853  0488  0840               	movf	(_EWH_Events^(0+128)+1),w
  3854  0489  1903               	btfsc	3,2
  3855  048A  2C8C               	goto	u2761
  3856  048B  2C8D               	goto	u2760
  3857  048C                     u2761:
  3858  048C  2C99               	goto	l3421
  3859  048D                     u2760:
  3860  048D                     l3415:
  3861                           
  3862                           ;EWH.c: 189:         {;EWH.c: 190:             EWH_Events[1]=0;
  3863  048D  01C0               	clrf	(_EWH_Events^(0+128)+1)
  3864  048E                     l3417:
  3865                           
  3866                           ;EWH.c: 191:             TMR1_Stop();
  3867  048E  120A  118A  27FB  120A  118A  	fcall	_TMR1_Stop
  3868  0493                     l3419:
  3869                           
  3870                           ;EWH.c: 193:             EWH_Mode=EWH_SET_TEMP_MODE;
  3871  0493  3002               	movlw	2
  3872  0494  00FF               	movwf	btemp+1
  3873  0495  087F               	movf	btemp+1,w
  3874  0496  1683               	bsf	3,5	;RP0=1, select bank1
  3875  0497  1303               	bcf	3,6	;RP1=0, select bank1
  3876  0498  00C8               	movwf	_EWH_Mode^(0+128)
  3877  0499                     l3421:
  3878                           
  3879                           ;EWH.c: 195:     if( EWH_Events[2])
  3880  0499  0841               	movf	(_EWH_Events^(0+128)+2),w
  3881  049A  1903               	btfsc	3,2
  3882  049B  2C9D               	goto	u2771
  3883  049C  2C9E               	goto	u2770
  3884  049D                     u2771:
  3885  049D  2CAA               	goto	l574
  3886  049E                     u2770:
  3887  049E                     l3423:
  3888                           
  3889                           ;EWH.c: 196:         {;EWH.c: 197:              EWH_Events[2]=0;
  3890  049E  01C1               	clrf	(_EWH_Events^(0+128)+2)
  3891  049F                     l3425:
  3892                           
  3893                           ;EWH.c: 198:              TMR1_Stop();
  3894  049F  120A  118A  27FB  120A  118A  	fcall	_TMR1_Stop
  3895  04A4                     l3427:
  3896                           
  3897                           ;EWH.c: 200:              EWH_Mode=EWH_SET_TEMP_MODE;
  3898  04A4  3002               	movlw	2
  3899  04A5  00FF               	movwf	btemp+1
  3900  04A6  087F               	movf	btemp+1,w
  3901  04A7  1683               	bsf	3,5	;RP0=1, select bank1
  3902  04A8  1303               	bcf	3,6	;RP1=0, select bank1
  3903  04A9  00C8               	movwf	_EWH_Mode^(0+128)
  3904  04AA                     l574:
  3905  04AA  0008               	return
  3906  04AB                     __end_of_EWH_Operating_Mode:
  3907                           
  3908                           	psect	text17
  3909  07FB                     __ptext17:	
  3910 ;; *************** function _TMR1_Stop *****************
  3911 ;; Defined at:
  3912 ;;		line 44 in file "TMR1.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;		None
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;		None
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  1    wreg      void 
  3919 ;; Registers used:
  3920 ;;		None
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3926 ;;      Params:         0       0       0       0       0
  3927 ;;      Locals:         0       0       0       0       0
  3928 ;;      Temps:          0       0       0       0       0
  3929 ;;      Totals:         0       0       0       0       0
  3930 ;;Total ram usage:        0 bytes
  3931 ;; Hardware stack levels used:    1
  3932 ;; Hardware stack levels required when called:    4
  3933 ;; This function calls:
  3934 ;;		Nothing
  3935 ;; This function is called by:
  3936 ;;		_EWH_Sleep_Mode
  3937 ;;		_EWH_Operating_Mode
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           
  3941                           
  3942                           ;psect for function _TMR1_Stop
  3943  07FB                     _TMR1_Stop:
  3944  07FB                     l3033:	
  3945                           ;incstack = 0
  3946                           ; Regs used in _TMR1_Stop: []
  3947                           
  3948                           
  3949                           ;TMR1.c: 46:     (TMR1ON = 0);
  3950  07FB  1283               	bcf	3,5	;RP0=0, select bank0
  3951  07FC  1303               	bcf	3,6	;RP1=0, select bank0
  3952  07FD  1010               	bcf	16,0	;volatile
  3953  07FE                     l378:
  3954  07FE  0008               	return
  3955  07FF                     __end_of_TMR1_Stop:
  3956                           
  3957                           	psect	text18
  3958  085C                     __ptext18:	
  3959 ;; *************** function _TMR1_Start *****************
  3960 ;; Defined at:
  3961 ;;		line 31 in file "TMR1.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;		None
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;		None
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  1    wreg      void 
  3968 ;; Registers used:
  3969 ;;		None
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3975 ;;      Params:         0       0       0       0       0
  3976 ;;      Locals:         0       0       0       0       0
  3977 ;;      Temps:          0       0       0       0       0
  3978 ;;      Totals:         0       0       0       0       0
  3979 ;;Total ram usage:        0 bytes
  3980 ;; Hardware stack levels used:    1
  3981 ;; Hardware stack levels required when called:    4
  3982 ;; This function calls:
  3983 ;;		Nothing
  3984 ;; This function is called by:
  3985 ;;		_EWH_SetTemp_Mode
  3986 ;;		_EWH_Operating_Mode
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           
  3991                           ;psect for function _TMR1_Start
  3992  085C                     _TMR1_Start:
  3993  085C                     l3031:	
  3994                           ;incstack = 0
  3995                           ; Regs used in _TMR1_Start: []
  3996                           
  3997                           
  3998                           ;TMR1.c: 33:     (TMR1IF = 0);
  3999  085C  1283               	bcf	3,5	;RP0=0, select bank0
  4000  085D  1303               	bcf	3,6	;RP1=0, select bank0
  4001  085E  100C               	bcf	12,0	;volatile
  4002                           
  4003                           ;TMR1.c: 34:     (TMR1IE = 1);
  4004  085F  1683               	bsf	3,5	;RP0=1, select bank1
  4005  0860  1303               	bcf	3,6	;RP1=0, select bank1
  4006  0861  140C               	bsf	12,0	;volatile
  4007                           
  4008                           ;TMR1.c: 35:     (PEIE = 1);
  4009  0862  170B               	bsf	11,6	;volatile
  4010                           
  4011                           ;TMR1.c: 36:     (GIE = 1);
  4012  0863  178B               	bsf	11,7	;volatile
  4013                           
  4014                           ;TMR1.c: 37:     TMR1=34285;
  4015  0864  3085               	movlw	133
  4016  0865  1283               	bcf	3,5	;RP0=0, select bank0
  4017  0866  1303               	bcf	3,6	;RP1=0, select bank0
  4018  0867  008F               	movwf	15	;volatile
  4019  0868  30ED               	movlw	237
  4020  0869  008E               	movwf	14	;volatile
  4021                           
  4022                           ;TMR1.c: 38:     (TMR1ON = 1);
  4023  086A  1410               	bsf	16,0	;volatile
  4024  086B                     l372:
  4025  086B  0008               	return
  4026  086C                     __end_of_TMR1_Start:
  4027                           
  4028                           	psect	text19
  4029  0C02                     __ptext19:	
  4030 ;; *************** function _Heater_Display *****************
  4031 ;; Defined at:
  4032 ;;		line 55 in file "SSD.c"
  4033 ;; Parameters:    Size  Location     Type
  4034 ;;  temp            2   10[BANK1 ] unsigned short 
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;		None
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  1    wreg      void 
  4039 ;; Registers used:
  4040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4046 ;;      Params:         0       0       2       0       0
  4047 ;;      Locals:         0       0       0       0       0
  4048 ;;      Temps:          0       0       2       0       0
  4049 ;;      Totals:         0       0       4       0       0
  4050 ;;Total ram usage:        4 bytes
  4051 ;; Hardware stack levels used:    1
  4052 ;; Hardware stack levels required when called:    6
  4053 ;; This function calls:
  4054 ;;		_SSD_Write
  4055 ;;		_SSD_config
  4056 ;;		___awdiv
  4057 ;;		___lwmod
  4058 ;; This function is called by:
  4059 ;;		_EWH_PowerUP_Mode
  4060 ;;		_EWH_SetTemp_Mode
  4061 ;;		_EWH_Operating_Mode
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           
  4065                           
  4066                           ;psect for function _Heater_Display
  4067  0C02                     _Heater_Display:
  4068  0C02                     l3039:	
  4069                           ;incstack = 0
  4070                           ; Regs used in _Heater_Display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4071                           
  4072                           
  4073                           ;SSD.c: 55: void Heater_Display(uint16_t temp);SSD.c: 56: {;SSD.c: 57:     SSD_config(3,
      +                          OFF);
  4074  0C02  1683               	bsf	3,5	;RP0=1, select bank1
  4075  0C03  1303               	bcf	3,6	;RP1=0, select bank1
  4076  0C04  01A0               	clrf	SSD_config@SSD_state^(0+128)
  4077  0C05  3003               	movlw	3
  4078  0C06  120A  158A  259C  120A  158A  	fcall	_SSD_config
  4079                           
  4080                           ;SSD.c: 58:     SSD_Write(4,temp%10);
  4081  0C0B  300A               	movlw	10
  4082  0C0C  1683               	bsf	3,5	;RP0=1, select bank1
  4083  0C0D  1303               	bcf	3,6	;RP1=0, select bank1
  4084  0C0E  00A0               	movwf	___lwmod@divisor^(0+128)
  4085  0C0F  3000               	movlw	0
  4086  0C10  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  4087  0C11  082B               	movf	(Heater_Display@temp+1)^(0+128),w
  4088  0C12  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  4089  0C13  082A               	movf	Heater_Display@temp^(0+128),w
  4090  0C14  00A2               	movwf	___lwmod@dividend^(0+128)
  4091  0C15  120A  158A  222D  120A  158A  	fcall	___lwmod
  4092  0C1A  1683               	bsf	3,5	;RP0=1, select bank1
  4093  0C1B  1303               	bcf	3,6	;RP1=0, select bank1
  4094  0C1C  0820               	movf	?___lwmod^(0+128),w
  4095  0C1D  00FF               	movwf	btemp+1
  4096  0C1E  087F               	movf	btemp+1,w
  4097  0C1F  00A8               	movwf	SSD_Write@Number^(0+128)
  4098  0C20  3004               	movlw	4
  4099  0C21  120A  158A  20C8  120A  158A  	fcall	_SSD_Write
  4100  0C26                     l3041:
  4101                           
  4102                           ;SSD.c: 59:     _delay((unsigned long)((60)*(4000000/4000.0)));
  4103  0C26  304E               	movlw	78
  4104  0C27  1683               	bsf	3,5	;RP0=1, select bank1
  4105  0C28  1303               	bcf	3,6	;RP1=0, select bank1
  4106  0C29  00AD               	movwf	(??_Heater_Display^(0+128)+1)
  4107  0C2A  30EA               	movlw	234
  4108  0C2B  00AC               	movwf	??_Heater_Display^(0+128)
  4109  0C2C                     u3837:
  4110  0C2C  0BAC               	decfsz	??_Heater_Display^(0+128),f
  4111  0C2D  2C2C               	goto	u3837
  4112  0C2E  0BAD               	decfsz	(??_Heater_Display^(0+128)+1),f
  4113  0C2F  2C2C               	goto	u3837
  4114  0C30  0000               	nop
  4115  0C31                     l3043:
  4116                           
  4117                           ;SSD.c: 60:     SSD_config(4,OFF);
  4118  0C31  1683               	bsf	3,5	;RP0=1, select bank1
  4119  0C32  1303               	bcf	3,6	;RP1=0, select bank1
  4120  0C33  01A0               	clrf	SSD_config@SSD_state^(0+128)
  4121  0C34  3004               	movlw	4
  4122  0C35  120A  158A  259C  120A  158A  	fcall	_SSD_config
  4123  0C3A                     l3045:
  4124                           
  4125                           ;SSD.c: 61:     SSD_Write(3,(uint8_t)temp/10);
  4126  0C3A  300A               	movlw	10
  4127  0C3B  1683               	bsf	3,5	;RP0=1, select bank1
  4128  0C3C  1303               	bcf	3,6	;RP1=0, select bank1
  4129  0C3D  00A0               	movwf	___awdiv@divisor^(0+128)
  4130  0C3E  3000               	movlw	0
  4131  0C3F  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
  4132  0C40  082A               	movf	Heater_Display@temp^(0+128),w
  4133  0C41  00AC               	movwf	??_Heater_Display^(0+128)
  4134  0C42  01AD               	clrf	(??_Heater_Display^(0+128)+1)
  4135  0C43  082C               	movf	??_Heater_Display^(0+128),w
  4136  0C44  00A2               	movwf	___awdiv@dividend^(0+128)
  4137  0C45  082D               	movf	(??_Heater_Display+1)^(0+128),w
  4138  0C46  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
  4139  0C47  120A  158A  2533  120A  158A  	fcall	___awdiv
  4140  0C4C  1683               	bsf	3,5	;RP0=1, select bank1
  4141  0C4D  1303               	bcf	3,6	;RP1=0, select bank1
  4142  0C4E  0820               	movf	?___awdiv^(0+128),w
  4143  0C4F  00FF               	movwf	btemp+1
  4144  0C50  087F               	movf	btemp+1,w
  4145  0C51  00A8               	movwf	SSD_Write@Number^(0+128)
  4146  0C52  3003               	movlw	3
  4147  0C53  120A  158A  20C8  120A  158A  	fcall	_SSD_Write
  4148  0C58                     l3047:
  4149                           
  4150                           ;SSD.c: 62:     _delay((unsigned long)((60)*(4000000/4000.0)));
  4151  0C58  304E               	movlw	78
  4152  0C59  1683               	bsf	3,5	;RP0=1, select bank1
  4153  0C5A  1303               	bcf	3,6	;RP1=0, select bank1
  4154  0C5B  00AD               	movwf	(??_Heater_Display^(0+128)+1)
  4155  0C5C  30EA               	movlw	234
  4156  0C5D  00AC               	movwf	??_Heater_Display^(0+128)
  4157  0C5E                     u3847:
  4158  0C5E  0BAC               	decfsz	??_Heater_Display^(0+128),f
  4159  0C5F  2C5E               	goto	u3847
  4160  0C60  0BAD               	decfsz	(??_Heater_Display^(0+128)+1),f
  4161  0C61  2C5E               	goto	u3847
  4162  0C62  0000               	nop
  4163  0C63                     l667:
  4164  0C63  0008               	return
  4165  0C64                     __end_of_Heater_Display:
  4166                           
  4167                           	psect	text20
  4168  0A2D                     __ptext20:	
  4169 ;; *************** function ___lwmod *****************
  4170 ;; Defined at:
  4171 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;  divisor         2    0[BANK1 ] unsigned int 
  4174 ;;  dividend        2    2[BANK1 ] unsigned int 
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;  counter         1    4[BANK1 ] unsigned char 
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  2    0[BANK1 ] unsigned int 
  4179 ;; Registers used:
  4180 ;;		wreg, status,2, status,0, btemp+1
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4186 ;;      Params:         0       0       4       0       0
  4187 ;;      Locals:         0       0       1       0       0
  4188 ;;      Temps:          0       0       0       0       0
  4189 ;;      Totals:         0       0       5       0       0
  4190 ;;Total ram usage:        5 bytes
  4191 ;; Hardware stack levels used:    1
  4192 ;; Hardware stack levels required when called:    4
  4193 ;; This function calls:
  4194 ;;		Nothing
  4195 ;; This function is called by:
  4196 ;;		_Heater_Display
  4197 ;;		_EWH_SSD_Update
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           
  4202                           ;psect for function ___lwmod
  4203  0A2D                     ___lwmod:
  4204  0A2D                     l2921:	
  4205                           ;incstack = 0
  4206                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  4207                           
  4208  0A2D  1683               	bsf	3,5	;RP0=1, select bank1
  4209  0A2E  1303               	bcf	3,6	;RP1=0, select bank1
  4210  0A2F  0820               	movf	___lwmod@divisor^(0+128),w
  4211  0A30  0421               	iorwf	(___lwmod@divisor+1)^(0+128),w
  4212  0A31  1903               	btfsc	3,2
  4213  0A32  2A34               	goto	u2141
  4214  0A33  2A35               	goto	u2140
  4215  0A34                     u2141:
  4216  0A34  2A64               	goto	l2939
  4217  0A35                     u2140:
  4218  0A35                     l2923:
  4219  0A35  01A4               	clrf	___lwmod@counter^(0+128)
  4220  0A36  0AA4               	incf	___lwmod@counter^(0+128),f
  4221  0A37  2A43               	goto	l2929
  4222  0A38                     l2925:
  4223  0A38  3001               	movlw	1
  4224  0A39                     u2155:
  4225  0A39  1003               	clrc
  4226  0A3A  0DA0               	rlf	___lwmod@divisor^(0+128),f
  4227  0A3B  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
  4228  0A3C  3EFF               	addlw	-1
  4229  0A3D  1D03               	skipz
  4230  0A3E  2A39               	goto	u2155
  4231  0A3F                     l2927:
  4232  0A3F  3001               	movlw	1
  4233  0A40  00FF               	movwf	btemp+1
  4234  0A41  087F               	movf	btemp+1,w
  4235  0A42  07A4               	addwf	___lwmod@counter^(0+128),f
  4236  0A43                     l2929:
  4237  0A43  1FA1               	btfss	(___lwmod@divisor+1)^(0+128),7
  4238  0A44  2A46               	goto	u2161
  4239  0A45  2A47               	goto	u2160
  4240  0A46                     u2161:
  4241  0A46  2A38               	goto	l2925
  4242  0A47                     u2160:
  4243  0A47                     l2931:
  4244  0A47  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  4245  0A48  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
  4246  0A49  1D03               	skipz
  4247  0A4A  2A4D               	goto	u2175
  4248  0A4B  0820               	movf	___lwmod@divisor^(0+128),w
  4249  0A4C  0222               	subwf	___lwmod@dividend^(0+128),w
  4250  0A4D                     u2175:
  4251  0A4D  1C03               	skipc
  4252  0A4E  2A50               	goto	u2171
  4253  0A4F  2A51               	goto	u2170
  4254  0A50                     u2171:
  4255  0A50  2A57               	goto	l2935
  4256  0A51                     u2170:
  4257  0A51                     l2933:
  4258  0A51  0820               	movf	___lwmod@divisor^(0+128),w
  4259  0A52  02A2               	subwf	___lwmod@dividend^(0+128),f
  4260  0A53  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  4261  0A54  1C03               	skipc
  4262  0A55  03A3               	decf	(___lwmod@dividend+1)^(0+128),f
  4263  0A56  02A3               	subwf	(___lwmod@dividend+1)^(0+128),f
  4264  0A57                     l2935:
  4265  0A57  3001               	movlw	1
  4266  0A58                     u2185:
  4267  0A58  1003               	clrc
  4268  0A59  0CA1               	rrf	(___lwmod@divisor+1)^(0+128),f
  4269  0A5A  0CA0               	rrf	___lwmod@divisor^(0+128),f
  4270  0A5B  3EFF               	addlw	-1
  4271  0A5C  1D03               	skipz
  4272  0A5D  2A58               	goto	u2185
  4273  0A5E                     l2937:
  4274  0A5E  3001               	movlw	1
  4275  0A5F  02A4               	subwf	___lwmod@counter^(0+128),f
  4276  0A60  1D03               	btfss	3,2
  4277  0A61  2A63               	goto	u2191
  4278  0A62  2A64               	goto	u2190
  4279  0A63                     u2191:
  4280  0A63  2A47               	goto	l2931
  4281  0A64                     u2190:
  4282  0A64                     l2939:
  4283  0A64  0823               	movf	(___lwmod@dividend+1)^(0+128),w
  4284  0A65  00A1               	movwf	(?___lwmod+1)^(0+128)
  4285  0A66  0822               	movf	___lwmod@dividend^(0+128),w
  4286  0A67  00A0               	movwf	?___lwmod^(0+128)
  4287  0A68                     l1041:
  4288  0A68  0008               	return
  4289  0A69                     __end_of___lwmod:
  4290                           
  4291                           	psect	text21
  4292  0D33                     __ptext21:	
  4293 ;; *************** function ___awdiv *****************
  4294 ;; Defined at:
  4295 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;  divisor         2    0[BANK1 ] int 
  4298 ;;  dividend        2    2[BANK1 ] int 
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;  quotient        2    6[BANK1 ] int 
  4301 ;;  sign            1    5[BANK1 ] unsigned char 
  4302 ;;  counter         1    4[BANK1 ] unsigned char 
  4303 ;; Return value:  Size  Location     Type
  4304 ;;                  2    0[BANK1 ] int 
  4305 ;; Registers used:
  4306 ;;		wreg, status,2, status,0, btemp+1
  4307 ;; Tracked objects:
  4308 ;;		On entry : 0/0
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4312 ;;      Params:         0       0       4       0       0
  4313 ;;      Locals:         0       0       4       0       0
  4314 ;;      Temps:          0       0       0       0       0
  4315 ;;      Totals:         0       0       8       0       0
  4316 ;;Total ram usage:        8 bytes
  4317 ;; Hardware stack levels used:    1
  4318 ;; Hardware stack levels required when called:    4
  4319 ;; This function calls:
  4320 ;;		Nothing
  4321 ;; This function is called by:
  4322 ;;		_Heater_Display
  4323 ;;		_EWH_SSD_Update
  4324 ;; This function uses a non-reentrant model
  4325 ;;
  4326                           
  4327                           
  4328                           ;psect for function ___awdiv
  4329  0D33                     ___awdiv:
  4330  0D33                     l2877:	
  4331                           ;incstack = 0
  4332                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  4333                           
  4334  0D33  1683               	bsf	3,5	;RP0=1, select bank1
  4335  0D34  1303               	bcf	3,6	;RP1=0, select bank1
  4336  0D35  01A5               	clrf	___awdiv@sign^(0+128)
  4337  0D36                     l2879:
  4338  0D36  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  4339  0D37  2D39               	goto	u2041
  4340  0D38  2D3A               	goto	u2040
  4341  0D39                     u2041:
  4342  0D39  2D41               	goto	l2885
  4343  0D3A                     u2040:
  4344  0D3A                     l2881:
  4345  0D3A  09A0               	comf	___awdiv@divisor^(0+128),f
  4346  0D3B  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
  4347  0D3C  0AA0               	incf	___awdiv@divisor^(0+128),f
  4348  0D3D  1903               	skipnz
  4349  0D3E  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
  4350  0D3F                     l2883:
  4351  0D3F  01A5               	clrf	___awdiv@sign^(0+128)
  4352  0D40  0AA5               	incf	___awdiv@sign^(0+128),f
  4353  0D41                     l2885:
  4354  0D41  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
  4355  0D42  2D44               	goto	u2051
  4356  0D43  2D45               	goto	u2050
  4357  0D44                     u2051:
  4358  0D44  2D4E               	goto	l2891
  4359  0D45                     u2050:
  4360  0D45                     l2887:
  4361  0D45  09A2               	comf	___awdiv@dividend^(0+128),f
  4362  0D46  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
  4363  0D47  0AA2               	incf	___awdiv@dividend^(0+128),f
  4364  0D48  1903               	skipnz
  4365  0D49  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
  4366  0D4A                     l2889:
  4367  0D4A  3001               	movlw	1
  4368  0D4B  00FF               	movwf	btemp+1
  4369  0D4C  087F               	movf	btemp+1,w
  4370  0D4D  06A5               	xorwf	___awdiv@sign^(0+128),f
  4371  0D4E                     l2891:
  4372  0D4E  01A6               	clrf	___awdiv@quotient^(0+128)
  4373  0D4F  01A7               	clrf	(___awdiv@quotient+1)^(0+128)
  4374  0D50                     l2893:
  4375  0D50  0820               	movf	___awdiv@divisor^(0+128),w
  4376  0D51  0421               	iorwf	(___awdiv@divisor+1)^(0+128),w
  4377  0D52  1903               	btfsc	3,2
  4378  0D53  2D55               	goto	u2061
  4379  0D54  2D56               	goto	u2060
  4380  0D55                     u2061:
  4381  0D55  2D8D               	goto	l2913
  4382  0D56                     u2060:
  4383  0D56                     l2895:
  4384  0D56  01A4               	clrf	___awdiv@counter^(0+128)
  4385  0D57  0AA4               	incf	___awdiv@counter^(0+128),f
  4386  0D58  2D64               	goto	l2901
  4387  0D59                     l2897:
  4388  0D59  3001               	movlw	1
  4389  0D5A                     u2075:
  4390  0D5A  1003               	clrc
  4391  0D5B  0DA0               	rlf	___awdiv@divisor^(0+128),f
  4392  0D5C  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
  4393  0D5D  3EFF               	addlw	-1
  4394  0D5E  1D03               	skipz
  4395  0D5F  2D5A               	goto	u2075
  4396  0D60                     l2899:
  4397  0D60  3001               	movlw	1
  4398  0D61  00FF               	movwf	btemp+1
  4399  0D62  087F               	movf	btemp+1,w
  4400  0D63  07A4               	addwf	___awdiv@counter^(0+128),f
  4401  0D64                     l2901:
  4402  0D64  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  4403  0D65  2D67               	goto	u2081
  4404  0D66  2D68               	goto	u2080
  4405  0D67                     u2081:
  4406  0D67  2D59               	goto	l2897
  4407  0D68                     u2080:
  4408  0D68                     l2903:
  4409  0D68  3001               	movlw	1
  4410  0D69                     u2095:
  4411  0D69  1003               	clrc
  4412  0D6A  0DA6               	rlf	___awdiv@quotient^(0+128),f
  4413  0D6B  0DA7               	rlf	(___awdiv@quotient+1)^(0+128),f
  4414  0D6C  3EFF               	addlw	-1
  4415  0D6D  1D03               	skipz
  4416  0D6E  2D69               	goto	u2095
  4417  0D6F  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  4418  0D70  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
  4419  0D71  1D03               	skipz
  4420  0D72  2D75               	goto	u2105
  4421  0D73  0820               	movf	___awdiv@divisor^(0+128),w
  4422  0D74  0222               	subwf	___awdiv@dividend^(0+128),w
  4423  0D75                     u2105:
  4424  0D75  1C03               	skipc
  4425  0D76  2D78               	goto	u2101
  4426  0D77  2D79               	goto	u2100
  4427  0D78                     u2101:
  4428  0D78  2D80               	goto	l2909
  4429  0D79                     u2100:
  4430  0D79                     l2905:
  4431  0D79  0820               	movf	___awdiv@divisor^(0+128),w
  4432  0D7A  02A2               	subwf	___awdiv@dividend^(0+128),f
  4433  0D7B  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  4434  0D7C  1C03               	skipc
  4435  0D7D  03A3               	decf	(___awdiv@dividend+1)^(0+128),f
  4436  0D7E  02A3               	subwf	(___awdiv@dividend+1)^(0+128),f
  4437  0D7F                     l2907:
  4438  0D7F  1426               	bsf	___awdiv@quotient^(0+128),0
  4439  0D80                     l2909:
  4440  0D80  3001               	movlw	1
  4441  0D81                     u2115:
  4442  0D81  1003               	clrc
  4443  0D82  0CA1               	rrf	(___awdiv@divisor+1)^(0+128),f
  4444  0D83  0CA0               	rrf	___awdiv@divisor^(0+128),f
  4445  0D84  3EFF               	addlw	-1
  4446  0D85  1D03               	skipz
  4447  0D86  2D81               	goto	u2115
  4448  0D87                     l2911:
  4449  0D87  3001               	movlw	1
  4450  0D88  02A4               	subwf	___awdiv@counter^(0+128),f
  4451  0D89  1D03               	btfss	3,2
  4452  0D8A  2D8C               	goto	u2121
  4453  0D8B  2D8D               	goto	u2120
  4454  0D8C                     u2121:
  4455  0D8C  2D68               	goto	l2903
  4456  0D8D                     u2120:
  4457  0D8D                     l2913:
  4458  0D8D  0825               	movf	___awdiv@sign^(0+128),w
  4459  0D8E  1903               	btfsc	3,2
  4460  0D8F  2D91               	goto	u2131
  4461  0D90  2D92               	goto	u2130
  4462  0D91                     u2131:
  4463  0D91  2D97               	goto	l2917
  4464  0D92                     u2130:
  4465  0D92                     l2915:
  4466  0D92  09A6               	comf	___awdiv@quotient^(0+128),f
  4467  0D93  09A7               	comf	(___awdiv@quotient+1)^(0+128),f
  4468  0D94  0AA6               	incf	___awdiv@quotient^(0+128),f
  4469  0D95  1903               	skipnz
  4470  0D96  0AA7               	incf	(___awdiv@quotient+1)^(0+128),f
  4471  0D97                     l2917:
  4472  0D97  0827               	movf	(___awdiv@quotient+1)^(0+128),w
  4473  0D98  00A1               	movwf	(?___awdiv+1)^(0+128)
  4474  0D99  0826               	movf	___awdiv@quotient^(0+128),w
  4475  0D9A  00A0               	movwf	?___awdiv^(0+128)
  4476  0D9B                     l912:
  4477  0D9B  0008               	return
  4478  0D9C                     __end_of___awdiv:
  4479                           
  4480                           	psect	text22
  4481  08C8                     __ptext22:	
  4482 ;; *************** function _SSD_Write *****************
  4483 ;; Defined at:
  4484 ;;		line 35 in file "SSD.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;  ID              1    wreg     unsigned char 
  4487 ;;  Number          1    8[BANK1 ] unsigned char 
  4488 ;; Auto vars:     Size  Location     Type
  4489 ;;  ID              1    9[BANK1 ] unsigned char 
  4490 ;; Return value:  Size  Location     Type
  4491 ;;                  1    wreg      unsigned char 
  4492 ;; Registers used:
  4493 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4494 ;; Tracked objects:
  4495 ;;		On entry : 0/0
  4496 ;;		On exit  : 0/0
  4497 ;;		Unchanged: 0/0
  4498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4499 ;;      Params:         0       0       1       0       0
  4500 ;;      Locals:         0       0       1       0       0
  4501 ;;      Temps:          0       0       0       0       0
  4502 ;;      Totals:         0       0       2       0       0
  4503 ;;Total ram usage:        2 bytes
  4504 ;; Hardware stack levels used:    1
  4505 ;; Hardware stack levels required when called:    5
  4506 ;; This function calls:
  4507 ;;		_SSD_config
  4508 ;; This function is called by:
  4509 ;;		_Heater_Display
  4510 ;;		_EWH_SSD_Update
  4511 ;; This function uses a non-reentrant model
  4512 ;;
  4513                           
  4514                           
  4515                           ;psect for function _SSD_Write
  4516  08C8                     _SSD_Write:
  4517                           
  4518                           ;incstack = 0
  4519                           ; Regs used in _SSD_Write: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4520                           ;SSD_Write@ID stored from wreg
  4521  08C8  1683               	bsf	3,5	;RP0=1, select bank1
  4522  08C9  1303               	bcf	3,6	;RP1=0, select bank1
  4523  08CA  00A9               	movwf	SSD_Write@ID^(0+128)
  4524  08CB                     l2865:
  4525                           
  4526                           ;SSD.c: 35: Std_ReturnType SSD_Write(SSD_ID ID ,SSD_Number Number);SSD.c: 36: {;SSD.c: 3
      +                          8:     SSD_config(ID,ON);
  4527  08CB  01A0               	clrf	SSD_config@SSD_state^(0+128)
  4528  08CC  0AA0               	incf	SSD_config@SSD_state^(0+128),f
  4529  08CD  0829               	movf	SSD_Write@ID^(0+128),w
  4530  08CE  120A  158A  259C  120A  158A  	fcall	_SSD_config
  4531  08D3                     l2867:
  4532                           
  4533                           ;SSD.c: 40:     ((TRISD)=(0u));
  4534  08D3  1683               	bsf	3,5	;RP0=1, select bank1
  4535  08D4  1303               	bcf	3,6	;RP1=0, select bank1
  4536  08D5  0188               	clrf	8	;volatile
  4537  08D6                     l2869:
  4538                           
  4539                           ;SSD.c: 42:     if((Number>=0) && (Number<=9))
  4540  08D6  300A               	movlw	10
  4541  08D7  0228               	subwf	SSD_Write@Number^(0+128),w
  4542  08D8  1803               	skipnc
  4543  08D9  28DB               	goto	u2031
  4544  08DA  28DC               	goto	u2030
  4545  08DB                     u2031:
  4546  08DB  28E4               	goto	l663
  4547  08DC                     u2030:
  4548  08DC                     l2871:
  4549                           
  4550                           ;SSD.c: 43:     {;SSD.c: 45:         ((PORTD)=(SSD_code[Number]));
  4551  08DC  0828               	movf	SSD_Write@Number^(0+128),w
  4552  08DD  3EC9               	addlw	(low (_SSD_code| 0))& (0+255)
  4553  08DE  0084               	movwf	4
  4554  08DF  1383               	bcf	3,7	;select IRP bank1
  4555  08E0  0800               	movf	0,w
  4556  08E1  1283               	bcf	3,5	;RP0=0, select bank0
  4557  08E2  1303               	bcf	3,6	;RP1=0, select bank0
  4558  08E3  0088               	movwf	8	;volatile
  4559  08E4                     l663:
  4560  08E4  0008               	return
  4561  08E5                     __end_of_SSD_Write:
  4562                           
  4563                           	psect	text23
  4564  0D9C                     __ptext23:	
  4565 ;; *************** function _SSD_config *****************
  4566 ;; Defined at:
  4567 ;;		line 11 in file "SSD.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;  ID              1    wreg     unsigned char 
  4570 ;;  SSD_state       1    0[BANK1 ] enum E13
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;  ID              1    3[BANK1 ] unsigned char 
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  1    wreg      void 
  4575 ;; Registers used:
  4576 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4582 ;;      Params:         0       0       1       0       0
  4583 ;;      Locals:         0       0       1       0       0
  4584 ;;      Temps:          0       0       2       0       0
  4585 ;;      Totals:         0       0       4       0       0
  4586 ;;Total ram usage:        4 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:    4
  4589 ;; This function calls:
  4590 ;;		Nothing
  4591 ;; This function is called by:
  4592 ;;		_SSD_Write
  4593 ;;		_Heater_Display
  4594 ;;		_SSD_OFF
  4595 ;;		_SSD_ON
  4596 ;; This function uses a non-reentrant model
  4597 ;;
  4598                           
  4599                           
  4600                           ;psect for function _SSD_config
  4601  0D9C                     _SSD_config:
  4602                           
  4603                           ;incstack = 0
  4604                           ; Regs used in _SSD_config: [wreg-fsr0h+status,2+status,0+btemp+1]
  4605                           ;SSD_config@ID stored from wreg
  4606  0D9C  1683               	bsf	3,5	;RP0=1, select bank1
  4607  0D9D  1303               	bcf	3,6	;RP1=0, select bank1
  4608  0D9E  00A3               	movwf	SSD_config@ID^(0+128)
  4609  0D9F                     l2791:
  4610                           
  4611                           ;SSD.c: 11: static void SSD_config (SSD_ID ID ,tState SSD_state);SSD.c: 12: {;SSD.c: 15:
      +                               switch(ID)
  4612  0D9F  2DF0               	goto	l2835
  4613  0DA0                     l2795:
  4614  0DA0  30FB               	movlw	251
  4615  0DA1  00FF               	movwf	btemp+1
  4616  0DA2  087F               	movf	btemp+1,w
  4617  0DA3  0585               	andwf	5,f	;volatile
  4618  0DA4                     l2797:
  4619                           
  4620                           ;SSD.c: 19:             (SSD_state)?(PORTA |= (1<<2)) : (PORTA &= ~(1<<2));
  4621  0DA4  0820               	movf	SSD_config@SSD_state^(0+128),w
  4622  0DA5  1903               	btfsc	3,2
  4623  0DA6  2DA8               	goto	u1941
  4624  0DA7  2DA9               	goto	u1940
  4625  0DA8                     u1941:
  4626  0DA8  2DAD               	goto	l2801
  4627  0DA9                     u1940:
  4628  0DA9                     l2799:
  4629  0DA9  1283               	bcf	3,5	;RP0=0, select bank0
  4630  0DAA  1303               	bcf	3,6	;RP1=0, select bank0
  4631  0DAB  1505               	bsf	5,2	;volatile
  4632  0DAC  2E06               	goto	l659
  4633  0DAD                     l2801:
  4634  0DAD  30FB               	movlw	251
  4635  0DAE  00FF               	movwf	btemp+1
  4636  0DAF  087F               	movf	btemp+1,w
  4637  0DB0  1283               	bcf	3,5	;RP0=0, select bank0
  4638  0DB1  1303               	bcf	3,6	;RP1=0, select bank0
  4639  0DB2  0585               	andwf	5,f	;volatile
  4640  0DB3  2E06               	goto	l659
  4641  0DB4                     l2805:
  4642  0DB4  30F7               	movlw	247
  4643  0DB5  00FF               	movwf	btemp+1
  4644  0DB6  087F               	movf	btemp+1,w
  4645  0DB7  0585               	andwf	5,f	;volatile
  4646  0DB8                     l2807:
  4647                           
  4648                           ;SSD.c: 23:             (SSD_state)?(PORTA |= (1<<3)) : (PORTA &= ~(1<<3));
  4649  0DB8  0820               	movf	SSD_config@SSD_state^(0+128),w
  4650  0DB9  1903               	btfsc	3,2
  4651  0DBA  2DBC               	goto	u1951
  4652  0DBB  2DBD               	goto	u1950
  4653  0DBC                     u1951:
  4654  0DBC  2DC1               	goto	l2811
  4655  0DBD                     u1950:
  4656  0DBD                     l2809:
  4657  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  4658  0DBE  1303               	bcf	3,6	;RP1=0, select bank0
  4659  0DBF  1585               	bsf	5,3	;volatile
  4660  0DC0  2E06               	goto	l659
  4661  0DC1                     l2811:
  4662  0DC1  30F7               	movlw	247
  4663  0DC2  00FF               	movwf	btemp+1
  4664  0DC3  087F               	movf	btemp+1,w
  4665  0DC4  1283               	bcf	3,5	;RP0=0, select bank0
  4666  0DC5  1303               	bcf	3,6	;RP1=0, select bank0
  4667  0DC6  0585               	andwf	5,f	;volatile
  4668  0DC7  2E06               	goto	l659
  4669  0DC8                     l2815:
  4670  0DC8  30EF               	movlw	239
  4671  0DC9  00FF               	movwf	btemp+1
  4672  0DCA  087F               	movf	btemp+1,w
  4673  0DCB  0585               	andwf	5,f	;volatile
  4674  0DCC                     l2817:
  4675                           
  4676                           ;SSD.c: 27:             (SSD_state)?(PORTA |= (1<<4)) : (PORTA &= ~(1<<4));
  4677  0DCC  0820               	movf	SSD_config@SSD_state^(0+128),w
  4678  0DCD  1903               	btfsc	3,2
  4679  0DCE  2DD0               	goto	u1961
  4680  0DCF  2DD1               	goto	u1960
  4681  0DD0                     u1961:
  4682  0DD0  2DD5               	goto	l2821
  4683  0DD1                     u1960:
  4684  0DD1                     l2819:
  4685  0DD1  1283               	bcf	3,5	;RP0=0, select bank0
  4686  0DD2  1303               	bcf	3,6	;RP1=0, select bank0
  4687  0DD3  1605               	bsf	5,4	;volatile
  4688  0DD4  2E06               	goto	l659
  4689  0DD5                     l2821:
  4690  0DD5  30EF               	movlw	239
  4691  0DD6  00FF               	movwf	btemp+1
  4692  0DD7  087F               	movf	btemp+1,w
  4693  0DD8  1283               	bcf	3,5	;RP0=0, select bank0
  4694  0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  4695  0DDA  0585               	andwf	5,f	;volatile
  4696  0DDB  2E06               	goto	l659
  4697  0DDC                     l2825:
  4698  0DDC  30DF               	movlw	223
  4699  0DDD  00FF               	movwf	btemp+1
  4700  0DDE  087F               	movf	btemp+1,w
  4701  0DDF  0585               	andwf	5,f	;volatile
  4702  0DE0                     l2827:
  4703                           
  4704                           ;SSD.c: 31:             (SSD_state)?(PORTA |= (1<<5)) : (PORTA &= ~(1<<5));
  4705  0DE0  0820               	movf	SSD_config@SSD_state^(0+128),w
  4706  0DE1  1903               	btfsc	3,2
  4707  0DE2  2DE4               	goto	u1971
  4708  0DE3  2DE5               	goto	u1970
  4709  0DE4                     u1971:
  4710  0DE4  2DE9               	goto	l2831
  4711  0DE5                     u1970:
  4712  0DE5                     l2829:
  4713  0DE5  1283               	bcf	3,5	;RP0=0, select bank0
  4714  0DE6  1303               	bcf	3,6	;RP1=0, select bank0
  4715  0DE7  1685               	bsf	5,5	;volatile
  4716  0DE8  2E06               	goto	l659
  4717  0DE9                     l2831:
  4718  0DE9  30DF               	movlw	223
  4719  0DEA  00FF               	movwf	btemp+1
  4720  0DEB  087F               	movf	btemp+1,w
  4721  0DEC  1283               	bcf	3,5	;RP0=0, select bank0
  4722  0DED  1303               	bcf	3,6	;RP1=0, select bank0
  4723  0DEE  0585               	andwf	5,f	;volatile
  4724  0DEF  2E06               	goto	l659
  4725  0DF0                     l2835:
  4726  0DF0  0823               	movf	SSD_config@ID^(0+128),w
  4727  0DF1  00A1               	movwf	??_SSD_config^(0+128)
  4728  0DF2  01A2               	clrf	(??_SSD_config^(0+128)+1)
  4729                           
  4730                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4731                           ; Switch size 1, requested type "simple"
  4732                           ; Number of cases is 1, Range of values is 0 to 0
  4733                           ; switch strategies available:
  4734                           ; Name         Instructions Cycles
  4735                           ; simple_byte            4     3 (average)
  4736                           ; direct_byte           11     8 (fixed)
  4737                           ; jumptable            260     6 (fixed)
  4738                           ;	Chosen strategy is simple_byte
  4739  0DF3  0822               	movf	(??_SSD_config+1)^(0+128),w
  4740  0DF4  3A00               	xorlw	0	; case 0
  4741  0DF5  1903               	skipnz
  4742  0DF6  2DF8               	goto	l4191
  4743  0DF7  2E06               	goto	l659
  4744  0DF8                     l4191:
  4745                           
  4746                           ; Switch size 1, requested type "simple"
  4747                           ; Number of cases is 4, Range of values is 2 to 5
  4748                           ; switch strategies available:
  4749                           ; Name         Instructions Cycles
  4750                           ; simple_byte           13     7 (average)
  4751                           ; direct_byte           23    11 (fixed)
  4752                           ; jumptable            263     9 (fixed)
  4753                           ;	Chosen strategy is simple_byte
  4754  0DF8  0821               	movf	??_SSD_config^(0+128),w
  4755  0DF9  3A02               	xorlw	2	; case 2
  4756  0DFA  1903               	skipnz
  4757  0DFB  2DA0               	goto	l2795
  4758  0DFC  3A01               	xorlw	1	; case 3
  4759  0DFD  1903               	skipnz
  4760  0DFE  2DB4               	goto	l2805
  4761  0DFF  3A07               	xorlw	7	; case 4
  4762  0E00  1903               	skipnz
  4763  0E01  2DC8               	goto	l2815
  4764  0E02  3A01               	xorlw	1	; case 5
  4765  0E03  1903               	skipnz
  4766  0E04  2DDC               	goto	l2825
  4767  0E05  2E06               	goto	l659
  4768  0E06                     l659:
  4769  0E06  0008               	return
  4770  0E07                     __end_of_SSD_config:
  4771                           
  4772                           	psect	text24
  4773  0B4D                     __ptext24:	
  4774 ;; *************** function _DD_SetState *****************
  4775 ;; Defined at:
  4776 ;;		line 29 in file "DD.c"
  4777 ;; Parameters:    Size  Location     Type
  4778 ;;  device          1    wreg     enum E880
  4779 ;;  state           1    0[BANK1 ] enum E13
  4780 ;; Auto vars:     Size  Location     Type
  4781 ;;  device          1    3[BANK1 ] enum E880
  4782 ;; Return value:  Size  Location     Type
  4783 ;;                  1    wreg      void 
  4784 ;; Registers used:
  4785 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4786 ;; Tracked objects:
  4787 ;;		On entry : 0/0
  4788 ;;		On exit  : 0/0
  4789 ;;		Unchanged: 0/0
  4790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4791 ;;      Params:         0       0       1       0       0
  4792 ;;      Locals:         0       0       1       0       0
  4793 ;;      Temps:          0       0       2       0       0
  4794 ;;      Totals:         0       0       4       0       0
  4795 ;;Total ram usage:        4 bytes
  4796 ;; Hardware stack levels used:    1
  4797 ;; Hardware stack levels required when called:    4
  4798 ;; This function calls:
  4799 ;;		Nothing
  4800 ;; This function is called by:
  4801 ;;		_EWH_Sleep_Mode
  4802 ;;		_EWH_SetTemp_Mode
  4803 ;;		_EWH_Operating_Mode
  4804 ;; This function uses a non-reentrant model
  4805 ;;
  4806                           
  4807                           
  4808                           ;psect for function _DD_SetState
  4809  0B4D                     _DD_SetState:
  4810                           
  4811                           ;incstack = 0
  4812                           ; Regs used in _DD_SetState: [wreg-fsr0h+status,2+status,0+btemp+1]
  4813                           ;DD_SetState@device stored from wreg
  4814  0B4D  1683               	bsf	3,5	;RP0=1, select bank1
  4815  0B4E  1303               	bcf	3,6	;RP1=0, select bank1
  4816  0B4F  00A3               	movwf	DD_SetState@device^(0+128)
  4817  0B50                     l2993:
  4818                           
  4819                           ;DD.c: 29: void DD_SetState(tDD device ,tState state);DD.c: 30: {;DD.c: 31:     switch(d
      +                          evice)
  4820  0B50  2B93               	goto	l3021
  4821  0B51                     l2995:
  4822                           
  4823                           ;DD.c: 34:             (state)?(PORTC |= (1<<5)) : (PORTC &= ~(1<<5));
  4824  0B51  0820               	movf	DD_SetState@state^(0+128),w
  4825  0B52  1903               	btfsc	3,2
  4826  0B53  2B55               	goto	u2241
  4827  0B54  2B56               	goto	u2240
  4828  0B55                     u2241:
  4829  0B55  2B5A               	goto	l2999
  4830  0B56                     u2240:
  4831  0B56                     l2997:
  4832  0B56  1283               	bcf	3,5	;RP0=0, select bank0
  4833  0B57  1303               	bcf	3,6	;RP1=0, select bank0
  4834  0B58  1687               	bsf	7,5	;volatile
  4835  0B59  2B60               	goto	l3001
  4836  0B5A                     l2999:
  4837  0B5A  30DF               	movlw	223
  4838  0B5B  00FF               	movwf	btemp+1
  4839  0B5C  087F               	movf	btemp+1,w
  4840  0B5D  1283               	bcf	3,5	;RP0=0, select bank0
  4841  0B5E  1303               	bcf	3,6	;RP1=0, select bank0
  4842  0B5F  0587               	andwf	7,f	;volatile
  4843  0B60                     l3001:
  4844                           
  4845                           ;DD.c: 35:             Devices_State.HEATER_State=state;
  4846  0B60  1683               	bsf	3,5	;RP0=1, select bank1
  4847  0B61  1303               	bcf	3,6	;RP1=0, select bank1
  4848  0B62  0820               	movf	DD_SetState@state^(0+128),w
  4849  0B63  00FF               	movwf	btemp+1
  4850  0B64  087F               	movf	btemp+1,w
  4851  0B65  00C3               	movwf	_Devices_State^(0+128)
  4852                           
  4853                           ;DD.c: 36:             break;
  4854  0B66  2BA6               	goto	l274
  4855  0B67                     l3003:
  4856                           
  4857                           ;DD.c: 38:             (state)?(PORTC |= (1<<2)) : (PORTC &= ~(1<<2));
  4858  0B67  0820               	movf	DD_SetState@state^(0+128),w
  4859  0B68  1903               	btfsc	3,2
  4860  0B69  2B6B               	goto	u2251
  4861  0B6A  2B6C               	goto	u2250
  4862  0B6B                     u2251:
  4863  0B6B  2B70               	goto	l3007
  4864  0B6C                     u2250:
  4865  0B6C                     l3005:
  4866  0B6C  1283               	bcf	3,5	;RP0=0, select bank0
  4867  0B6D  1303               	bcf	3,6	;RP1=0, select bank0
  4868  0B6E  1507               	bsf	7,2	;volatile
  4869  0B6F  2B76               	goto	l3009
  4870  0B70                     l3007:
  4871  0B70  30FB               	movlw	251
  4872  0B71  00FF               	movwf	btemp+1
  4873  0B72  087F               	movf	btemp+1,w
  4874  0B73  1283               	bcf	3,5	;RP0=0, select bank0
  4875  0B74  1303               	bcf	3,6	;RP1=0, select bank0
  4876  0B75  0587               	andwf	7,f	;volatile
  4877  0B76                     l3009:
  4878                           
  4879                           ;DD.c: 39:             Devices_State.COOLER_State=state;
  4880  0B76  1683               	bsf	3,5	;RP0=1, select bank1
  4881  0B77  1303               	bcf	3,6	;RP1=0, select bank1
  4882  0B78  0820               	movf	DD_SetState@state^(0+128),w
  4883  0B79  00FF               	movwf	btemp+1
  4884  0B7A  087F               	movf	btemp+1,w
  4885  0B7B  00C5               	movwf	(_Devices_State^(0+128)+2)
  4886                           
  4887                           ;DD.c: 40:             break;
  4888  0B7C  2BA6               	goto	l274
  4889  0B7D                     l3011:
  4890                           
  4891                           ;DD.c: 42:             (state)?(PORTB |= (1<<7)) : (PORTB &= ~(1<<7));
  4892  0B7D  0820               	movf	DD_SetState@state^(0+128),w
  4893  0B7E  1903               	btfsc	3,2
  4894  0B7F  2B81               	goto	u2261
  4895  0B80  2B82               	goto	u2260
  4896  0B81                     u2261:
  4897  0B81  2B86               	goto	l3015
  4898  0B82                     u2260:
  4899  0B82                     l3013:
  4900  0B82  1283               	bcf	3,5	;RP0=0, select bank0
  4901  0B83  1303               	bcf	3,6	;RP1=0, select bank0
  4902  0B84  1786               	bsf	6,7	;volatile
  4903  0B85  2B8C               	goto	l3017
  4904  0B86                     l3015:
  4905  0B86  307F               	movlw	127
  4906  0B87  00FF               	movwf	btemp+1
  4907  0B88  087F               	movf	btemp+1,w
  4908  0B89  1283               	bcf	3,5	;RP0=0, select bank0
  4909  0B8A  1303               	bcf	3,6	;RP1=0, select bank0
  4910  0B8B  0586               	andwf	6,f	;volatile
  4911  0B8C                     l3017:
  4912                           
  4913                           ;DD.c: 43:             Devices_State.HEATER_LED_State=state;
  4914  0B8C  1683               	bsf	3,5	;RP0=1, select bank1
  4915  0B8D  1303               	bcf	3,6	;RP1=0, select bank1
  4916  0B8E  0820               	movf	DD_SetState@state^(0+128),w
  4917  0B8F  00FF               	movwf	btemp+1
  4918  0B90  087F               	movf	btemp+1,w
  4919  0B91  00C4               	movwf	(_Devices_State^(0+128)+1)
  4920                           
  4921                           ;DD.c: 44:             break;
  4922  0B92  2BA6               	goto	l274
  4923  0B93                     l3021:
  4924  0B93  0823               	movf	DD_SetState@device^(0+128),w
  4925  0B94  00A1               	movwf	??_DD_SetState^(0+128)
  4926  0B95  01A2               	clrf	(??_DD_SetState^(0+128)+1)
  4927                           
  4928                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4929                           ; Switch size 1, requested type "simple"
  4930                           ; Number of cases is 1, Range of values is 0 to 0
  4931                           ; switch strategies available:
  4932                           ; Name         Instructions Cycles
  4933                           ; simple_byte            4     3 (average)
  4934                           ; direct_byte           11     8 (fixed)
  4935                           ; jumptable            260     6 (fixed)
  4936                           ;	Chosen strategy is simple_byte
  4937  0B96  0822               	movf	(??_DD_SetState+1)^(0+128),w
  4938  0B97  3A00               	xorlw	0	; case 0
  4939  0B98  1903               	skipnz
  4940  0B99  2B9B               	goto	l4193
  4941  0B9A  2BA6               	goto	l274
  4942  0B9B                     l4193:
  4943                           
  4944                           ; Switch size 1, requested type "simple"
  4945                           ; Number of cases is 3, Range of values is 0 to 2
  4946                           ; switch strategies available:
  4947                           ; Name         Instructions Cycles
  4948                           ; simple_byte           10     6 (average)
  4949                           ; direct_byte           17     8 (fixed)
  4950                           ; jumptable            260     6 (fixed)
  4951                           ;	Chosen strategy is simple_byte
  4952  0B9B  0821               	movf	??_DD_SetState^(0+128),w
  4953  0B9C  3A00               	xorlw	0	; case 0
  4954  0B9D  1903               	skipnz
  4955  0B9E  2B51               	goto	l2995
  4956  0B9F  3A01               	xorlw	1	; case 1
  4957  0BA0  1903               	skipnz
  4958  0BA1  2B67               	goto	l3003
  4959  0BA2  3A03               	xorlw	3	; case 2
  4960  0BA3  1903               	skipnz
  4961  0BA4  2B7D               	goto	l3011
  4962  0BA5  2BA6               	goto	l274
  4963  0BA6                     l274:
  4964  0BA6  0008               	return
  4965  0BA7                     __end_of_DD_SetState:
  4966                           
  4967                           	psect	text25
  4968  084C                     __ptext25:	
  4969 ;; *************** function _EWH_EEPROM_Init *****************
  4970 ;; Defined at:
  4971 ;;		line 205 in file "EWH.c"
  4972 ;; Parameters:    Size  Location     Type
  4973 ;;		None
  4974 ;; Auto vars:     Size  Location     Type
  4975 ;;		None
  4976 ;; Return value:  Size  Location     Type
  4977 ;;                  1    wreg      void 
  4978 ;; Registers used:
  4979 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4980 ;; Tracked objects:
  4981 ;;		On entry : 0/0
  4982 ;;		On exit  : 0/0
  4983 ;;		Unchanged: 0/0
  4984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4985 ;;      Params:         0       0       0       0       0
  4986 ;;      Locals:         0       0       0       0       0
  4987 ;;      Temps:          0       0       0       0       0
  4988 ;;      Totals:         0       0       0       0       0
  4989 ;;Total ram usage:        0 bytes
  4990 ;; Hardware stack levels used:    1
  4991 ;; Hardware stack levels required when called:    7
  4992 ;; This function calls:
  4993 ;;		_EEPROM_WriteByte
  4994 ;; This function is called by:
  4995 ;;		_main
  4996 ;; This function uses a non-reentrant model
  4997 ;;
  4998                           
  4999                           
  5000                           ;psect for function _EWH_EEPROM_Init
  5001  084C                     _EWH_EEPROM_Init:
  5002  084C                     l3283:	
  5003                           ;incstack = 0
  5004                           ; Regs used in _EWH_EEPROM_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5005                           
  5006                           
  5007                           ;EWH.c: 207:     EEPROM_WriteByte(0x0020,60);
  5008  084C  3020               	movlw	32
  5009  084D  1683               	bsf	3,5	;RP0=1, select bank1
  5010  084E  1303               	bcf	3,6	;RP1=0, select bank1
  5011  084F  00A1               	movwf	EEPROM_WriteByte@address^(0+128)
  5012  0850  3000               	movlw	0
  5013  0851  00A2               	movwf	(EEPROM_WriteByte@address^(0+128)+1)
  5014  0852  303C               	movlw	60
  5015  0853  00FF               	movwf	btemp+1
  5016  0854  087F               	movf	btemp+1,w
  5017  0855  00A3               	movwf	EEPROM_WriteByte@data^(0+128)
  5018  0856  120A  158A  21F2  120A  158A  	fcall	_EEPROM_WriteByte
  5019  085B                     l577:
  5020  085B  0008               	return
  5021  085C                     __end_of_EWH_EEPROM_Init:
  5022                           
  5023                           	psect	text26
  5024  09F2                     __ptext26:	
  5025 ;; *************** function _EEPROM_WriteByte *****************
  5026 ;; Defined at:
  5027 ;;		line 4 in file "EEPROM.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;  address         2    1[BANK1 ] unsigned short 
  5030 ;;  data            1    3[BANK1 ] unsigned char 
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;		None
  5033 ;; Return value:  Size  Location     Type
  5034 ;;                  1    wreg      void 
  5035 ;; Registers used:
  5036 ;;		wreg, status,2, status,0, pclath, cstack
  5037 ;; Tracked objects:
  5038 ;;		On entry : 0/0
  5039 ;;		On exit  : 0/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5042 ;;      Params:         0       0       3       0       0
  5043 ;;      Locals:         0       0       0       0       0
  5044 ;;      Temps:          0       0       2       0       0
  5045 ;;      Totals:         0       0       5       0       0
  5046 ;;Total ram usage:        5 bytes
  5047 ;; Hardware stack levels used:    1
  5048 ;; Hardware stack levels required when called:    6
  5049 ;; This function calls:
  5050 ;;		_I2C_Master_Send_RepeatedStart
  5051 ;;		_I2C_Master_Send_Start
  5052 ;;		_I2C_Master_Send_Stop
  5053 ;;		_I2C_Master_WriteByte
  5054 ;; This function is called by:
  5055 ;;		_EWH_EEPROM_Init
  5056 ;;		_EWH_EEPROM_Update
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           
  5061                           ;psect for function _EEPROM_WriteByte
  5062  09F2                     _EEPROM_WriteByte:
  5063  09F2                     l2843:	
  5064                           ;incstack = 0
  5065 ;; hardware stack exceeded
  5066                           ; Regs used in _EEPROM_WriteByte: [wreg+status,2+status,0+pclath+cstack]
  5067                           
  5068                           
  5069                           ;EEPROM.c: 4: void EEPROM_WriteByte(uint16_t address , uint8_t data);EEPROM.c: 5: {;EEPR
      +                          OM.c: 6:   I2C_Master_Send_Start();
  5070  09F2  160A  118A  27DB  120A  158A  	fcall	_I2C_Master_Send_Start
  5071                           
  5072                           ;EEPROM.c: 9:   while(I2C_Master_WriteByte(0xA0 | ((address & 0x0700)>>7)) )
  5073  09F7  29FD               	goto	l13
  5074  09F8                     l2845:
  5075                           
  5076                           ;EEPROM.c: 10:         I2C_Master_Send_RepeatedStart();
  5077  09F8  160A  118A  27D2  120A  158A  	fcall	_I2C_Master_Send_RepeatedStart
  5078  09FD                     l13:
  5079                           
  5080                           ;EEPROM.c: 9:   while(I2C_Master_WriteByte(0xA0 | ((address & 0x0700)>>7)) )
  5081  09FD  1683               	bsf	3,5	;RP0=1, select bank1
  5082  09FE  1303               	bcf	3,6	;RP1=0, select bank1
  5083  09FF  0822               	movf	(EEPROM_WriteByte@address+1)^(0+128),w
  5084  0A00  00A5               	movwf	(??_EEPROM_WriteByte^(0+128)+1)
  5085  0A01  0821               	movf	EEPROM_WriteByte@address^(0+128),w
  5086  0A02  00A4               	movwf	??_EEPROM_WriteByte^(0+128)
  5087  0A03  3007               	movlw	7
  5088  0A04                     u1985:
  5089  0A04  1003               	clrc
  5090  0A05  0CA5               	rrf	(??_EEPROM_WriteByte^(0+128)+1),f
  5091  0A06  0CA4               	rrf	??_EEPROM_WriteByte^(0+128),f
  5092  0A07  3EFF               	addlw	-1
  5093  0A08  1D03               	skipz
  5094  0A09  2A04               	goto	u1985
  5095  0A0A  0824               	movf	??_EEPROM_WriteByte^(0+128),w
  5096  0A0B  390E               	andlw	14
  5097  0A0C  38A0               	iorlw	160
  5098  0A0D  120A  158A  20E5  120A  158A  	fcall	_I2C_Master_WriteByte
  5099  0A12  3A00               	xorlw	0
  5100  0A13  1D03               	skipz
  5101  0A14  2A16               	goto	u1991
  5102  0A15  2A17               	goto	u1990
  5103  0A16                     u1991:
  5104  0A16  29F8               	goto	l2845
  5105  0A17                     u1990:
  5106  0A17                     l2847:
  5107                           
  5108                           ;EEPROM.c: 13:   I2C_Master_WriteByte((uint8_t)address);
  5109  0A17  1683               	bsf	3,5	;RP0=1, select bank1
  5110  0A18  1303               	bcf	3,6	;RP1=0, select bank1
  5111  0A19  0821               	movf	EEPROM_WriteByte@address^(0+128),w
  5112  0A1A  120A  158A  20E5  120A  158A  	fcall	_I2C_Master_WriteByte
  5113                           
  5114                           ;EEPROM.c: 14:   I2C_Master_WriteByte(data);
  5115  0A1F  1683               	bsf	3,5	;RP0=1, select bank1
  5116  0A20  1303               	bcf	3,6	;RP1=0, select bank1
  5117  0A21  0823               	movf	EEPROM_WriteByte@data^(0+128),w
  5118  0A22  120A  158A  20E5  120A  158A  	fcall	_I2C_Master_WriteByte
  5119                           
  5120                           ;EEPROM.c: 15:   I2C_Master_Send_Stop();
  5121  0A27  160A  118A  27E4  120A  158A  	fcall	_I2C_Master_Send_Stop
  5122  0A2C                     l16:
  5123  0A2C  0008               	return
  5124  0A2D                     __end_of_EEPROM_WriteByte:
  5125                           
  5126                           	psect	text27
  5127  08E5                     __ptext27:	
  5128 ;; *************** function _I2C_Master_WriteByte *****************
  5129 ;; Defined at:
  5130 ;;		line 95 in file "i2c.c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;  Data            1    wreg     unsigned char 
  5133 ;; Auto vars:     Size  Location     Type
  5134 ;;  Data            1    0[BANK1 ] unsigned char 
  5135 ;; Return value:  Size  Location     Type
  5136 ;;                  1    wreg      unsigned char 
  5137 ;; Registers used:
  5138 ;;		wreg, status,2, status,0, pclath, cstack
  5139 ;; Tracked objects:
  5140 ;;		On entry : 0/0
  5141 ;;		On exit  : 0/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5144 ;;      Params:         0       0       0       0       0
  5145 ;;      Locals:         0       0       1       0       0
  5146 ;;      Temps:          0       0       0       0       0
  5147 ;;      Totals:         0       0       1       0       0
  5148 ;;Total ram usage:        1 bytes
  5149 ;; Hardware stack levels used:    1
  5150 ;; Hardware stack levels required when called:    5
  5151 ;; This function calls:
  5152 ;;		_I2C_Wait_IDLE
  5153 ;; This function is called by:
  5154 ;;		_EEPROM_WriteByte
  5155 ;;		_EEPROM_ReadByte
  5156 ;;		_EEPROM_WritePage
  5157 ;;		_EEPROM_ReadPage
  5158 ;; This function uses a non-reentrant model
  5159 ;;
  5160                           
  5161                           
  5162                           ;psect for function _I2C_Master_WriteByte
  5163  08E5                     _I2C_Master_WriteByte:
  5164                           
  5165                           ;incstack = 0
  5166 ;; hardware stack exceeded
  5167                           ; Regs used in _I2C_Master_WriteByte: [wreg+status,2+status,0+pclath+cstack]
  5168                           ;I2C_Master_WriteByte@Data stored from wreg
  5169  08E5  1683               	bsf	3,5	;RP0=1, select bank1
  5170  08E6  1303               	bcf	3,6	;RP1=0, select bank1
  5171  08E7  00A0               	movwf	I2C_Master_WriteByte@Data^(0+128)
  5172  08E8                     l2761:
  5173                           
  5174                           ;i2c.c: 95: uint8_t I2C_Master_WriteByte(uint8_t Data);i2c.c: 96: {;i2c.c: 98:     I2C_W
      +                          ait_IDLE();
  5175  08E8  120A  158A  2032  120A  158A  	fcall	_I2C_Wait_IDLE
  5176  08ED                     l2763:
  5177                           
  5178                           ;i2c.c: 99:     SSPBUF=Data;
  5179  08ED  1683               	bsf	3,5	;RP0=1, select bank1
  5180  08EE  1303               	bcf	3,6	;RP1=0, select bank1
  5181  08EF  0820               	movf	I2C_Master_WriteByte@Data^(0+128),w
  5182  08F0  1283               	bcf	3,5	;RP0=0, select bank0
  5183  08F1  1303               	bcf	3,6	;RP1=0, select bank0
  5184  08F2  0093               	movwf	19	;volatile
  5185  08F3                     l112:	
  5186                           ;i2c.c: 100:     while(!SSPIF);
  5187                           
  5188  08F3  1D8C               	btfss	12,3	;volatile
  5189  08F4  28F6               	goto	u1921
  5190  08F5  28F7               	goto	u1920
  5191  08F6                     u1921:
  5192  08F6  28F3               	goto	l112
  5193  08F7                     u1920:
  5194  08F7                     l114:
  5195                           
  5196                           ;i2c.c: 101:     SSPIF=0;
  5197  08F7  118C               	bcf	12,3	;volatile
  5198  08F8                     l2765:
  5199                           
  5200                           ;i2c.c: 102:     I2C_Wait_IDLE();
  5201  08F8  120A  158A  2032  120A  158A  	fcall	_I2C_Wait_IDLE
  5202  08FD                     l2767:
  5203                           
  5204                           ;i2c.c: 103:     return ACKSTAT;
  5205  08FD  3000               	movlw	0
  5206  08FE  1683               	bsf	3,5	;RP0=1, select bank1
  5207  08FF  1303               	bcf	3,6	;RP1=0, select bank1
  5208  0900  1B11               	btfsc	17,6	;volatile
  5209  0901  3001               	movlw	1
  5210  0902                     l115:
  5211  0902  0008               	return
  5212  0903                     __end_of_I2C_Master_WriteByte:
  5213                           
  5214                           	psect	text28
  5215  17E4                     __ptext28:	
  5216 ;; *************** function _I2C_Master_Send_Stop *****************
  5217 ;; Defined at:
  5218 ;;		line 67 in file "i2c.c"
  5219 ;; Parameters:    Size  Location     Type
  5220 ;;		None
  5221 ;; Auto vars:     Size  Location     Type
  5222 ;;		None
  5223 ;; Return value:  Size  Location     Type
  5224 ;;                  1    wreg      void 
  5225 ;; Registers used:
  5226 ;;		wreg, status,2, status,0, pclath, cstack
  5227 ;; Tracked objects:
  5228 ;;		On entry : 0/0
  5229 ;;		On exit  : 0/0
  5230 ;;		Unchanged: 0/0
  5231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5232 ;;      Params:         0       0       0       0       0
  5233 ;;      Locals:         0       0       0       0       0
  5234 ;;      Temps:          0       0       0       0       0
  5235 ;;      Totals:         0       0       0       0       0
  5236 ;;Total ram usage:        0 bytes
  5237 ;; Hardware stack levels used:    1
  5238 ;; Hardware stack levels required when called:    5
  5239 ;; This function calls:
  5240 ;;		_I2C_Wait_IDLE
  5241 ;; This function is called by:
  5242 ;;		_EEPROM_WriteByte
  5243 ;;		_EEPROM_ReadByte
  5244 ;;		_EEPROM_WritePage
  5245 ;;		_EEPROM_ReadPage
  5246 ;; This function uses a non-reentrant model
  5247 ;;
  5248                           
  5249                           
  5250                           ;psect for function _I2C_Master_Send_Stop
  5251  17E4                     _I2C_Master_Send_Stop:
  5252  17E4                     l2771:	
  5253                           ;incstack = 0
  5254 ;; hardware stack exceeded
  5255                           ; Regs used in _I2C_Master_Send_Stop: [wreg+status,2+status,0+pclath+cstack]
  5256                           
  5257                           
  5258                           ;i2c.c: 70:     I2C_Wait_IDLE();
  5259  17E4  120A  158A  2032  160A  118A  	fcall	_I2C_Wait_IDLE
  5260  17E9                     l2773:
  5261                           
  5262                           ;i2c.c: 71:     PEN=1 ;
  5263  17E9  1683               	bsf	3,5	;RP0=1, select bank1
  5264  17EA  1303               	bcf	3,6	;RP1=0, select bank1
  5265  17EB  1511               	bsf	17,2	;volatile
  5266  17EC                     l100:
  5267  17EC  0008               	return
  5268  17ED                     __end_of_I2C_Master_Send_Stop:
  5269                           
  5270                           	psect	text29
  5271  17DB                     __ptext29:	
  5272 ;; *************** function _I2C_Master_Send_Start *****************
  5273 ;; Defined at:
  5274 ;;		line 61 in file "i2c.c"
  5275 ;; Parameters:    Size  Location     Type
  5276 ;;		None
  5277 ;; Auto vars:     Size  Location     Type
  5278 ;;		None
  5279 ;; Return value:  Size  Location     Type
  5280 ;;                  1    wreg      void 
  5281 ;; Registers used:
  5282 ;;		wreg, status,2, status,0, pclath, cstack
  5283 ;; Tracked objects:
  5284 ;;		On entry : 0/0
  5285 ;;		On exit  : 0/0
  5286 ;;		Unchanged: 0/0
  5287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5288 ;;      Params:         0       0       0       0       0
  5289 ;;      Locals:         0       0       0       0       0
  5290 ;;      Temps:          0       0       0       0       0
  5291 ;;      Totals:         0       0       0       0       0
  5292 ;;Total ram usage:        0 bytes
  5293 ;; Hardware stack levels used:    1
  5294 ;; Hardware stack levels required when called:    5
  5295 ;; This function calls:
  5296 ;;		_I2C_Wait_IDLE
  5297 ;; This function is called by:
  5298 ;;		_EEPROM_WriteByte
  5299 ;;		_EEPROM_ReadByte
  5300 ;;		_EEPROM_WritePage
  5301 ;;		_EEPROM_ReadPage
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           
  5306                           ;psect for function _I2C_Master_Send_Start
  5307  17DB                     _I2C_Master_Send_Start:
  5308  17DB                     l2753:	
  5309                           ;incstack = 0
  5310 ;; hardware stack exceeded
  5311                           ; Regs used in _I2C_Master_Send_Start: [wreg+status,2+status,0+pclath+cstack]
  5312                           
  5313                           
  5314                           ;i2c.c: 64:     I2C_Wait_IDLE();
  5315  17DB  120A  158A  2032  160A  118A  	fcall	_I2C_Wait_IDLE
  5316  17E0                     l2755:
  5317                           
  5318                           ;i2c.c: 65:     SEN=1 ;
  5319  17E0  1683               	bsf	3,5	;RP0=1, select bank1
  5320  17E1  1303               	bcf	3,6	;RP1=0, select bank1
  5321  17E2  1411               	bsf	17,0	;volatile
  5322  17E3                     l97:
  5323  17E3  0008               	return
  5324  17E4                     __end_of_I2C_Master_Send_Start:
  5325                           
  5326                           	psect	text30
  5327  17D2                     __ptext30:	
  5328 ;; *************** function _I2C_Master_Send_RepeatedStart *****************
  5329 ;; Defined at:
  5330 ;;		line 73 in file "i2c.c"
  5331 ;; Parameters:    Size  Location     Type
  5332 ;;		None
  5333 ;; Auto vars:     Size  Location     Type
  5334 ;;		None
  5335 ;; Return value:  Size  Location     Type
  5336 ;;                  1    wreg      void 
  5337 ;; Registers used:
  5338 ;;		wreg, status,2, status,0, pclath, cstack
  5339 ;; Tracked objects:
  5340 ;;		On entry : 0/0
  5341 ;;		On exit  : 0/0
  5342 ;;		Unchanged: 0/0
  5343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5344 ;;      Params:         0       0       0       0       0
  5345 ;;      Locals:         0       0       0       0       0
  5346 ;;      Temps:          0       0       0       0       0
  5347 ;;      Totals:         0       0       0       0       0
  5348 ;;Total ram usage:        0 bytes
  5349 ;; Hardware stack levels used:    1
  5350 ;; Hardware stack levels required when called:    5
  5351 ;; This function calls:
  5352 ;;		_I2C_Wait_IDLE
  5353 ;; This function is called by:
  5354 ;;		_EEPROM_WriteByte
  5355 ;;		_EEPROM_ReadByte
  5356 ;;		_EEPROM_WritePage
  5357 ;;		_EEPROM_ReadPage
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360                           
  5361                           
  5362                           ;psect for function _I2C_Master_Send_RepeatedStart
  5363  17D2                     _I2C_Master_Send_RepeatedStart:
  5364  17D2                     l2757:	
  5365                           ;incstack = 0
  5366 ;; hardware stack exceeded
  5367                           ; Regs used in _I2C_Master_Send_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  5368                           
  5369                           
  5370                           ;i2c.c: 76:     I2C_Wait_IDLE();
  5371  17D2  120A  158A  2032  160A  118A  	fcall	_I2C_Wait_IDLE
  5372  17D7                     l2759:
  5373                           
  5374                           ;i2c.c: 77:     RSEN=1 ;
  5375  17D7  1683               	bsf	3,5	;RP0=1, select bank1
  5376  17D8  1303               	bcf	3,6	;RP1=0, select bank1
  5377  17D9  1491               	bsf	17,1	;volatile
  5378  17DA                     l103:
  5379  17DA  0008               	return
  5380  17DB                     __end_of_I2C_Master_Send_RepeatedStart:
  5381                           
  5382                           	psect	text31
  5383  0832                     __ptext31:	
  5384 ;; *************** function _I2C_Wait_IDLE *****************
  5385 ;; Defined at:
  5386 ;;		line 53 in file "i2c.c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;		None
  5389 ;; Auto vars:     Size  Location     Type
  5390 ;;		None
  5391 ;; Return value:  Size  Location     Type
  5392 ;;                  1    wreg      void 
  5393 ;; Registers used:
  5394 ;;		wreg, status,2
  5395 ;; Tracked objects:
  5396 ;;		On entry : 0/0
  5397 ;;		On exit  : 0/0
  5398 ;;		Unchanged: 0/0
  5399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5400 ;;      Params:         0       0       0       0       0
  5401 ;;      Locals:         0       0       0       0       0
  5402 ;;      Temps:          0       0       0       0       0
  5403 ;;      Totals:         0       0       0       0       0
  5404 ;;Total ram usage:        0 bytes
  5405 ;; Hardware stack levels used:    1
  5406 ;; Hardware stack levels required when called:    4
  5407 ;; This function calls:
  5408 ;;		Nothing
  5409 ;; This function is called by:
  5410 ;;		_I2C_Master_Send_Start
  5411 ;;		_I2C_Master_Send_Stop
  5412 ;;		_I2C_Master_Send_RepeatedStart
  5413 ;;		_I2C_Master_Send_ACK
  5414 ;;		_I2C_Master_Send_NACK
  5415 ;;		_I2C_Master_WriteByte
  5416 ;;		_I2C_Master_ReadByte
  5417 ;; This function uses a non-reentrant model
  5418 ;;
  5419                           
  5420                           
  5421                           ;psect for function _I2C_Wait_IDLE
  5422  0832                     _I2C_Wait_IDLE:
  5423  0832                     l2737:	
  5424                           ;incstack = 0
  5425 ;; hardware stack exceeded
  5426                           ; Regs used in _I2C_Wait_IDLE: [wreg+status,2]
  5427                           
  5428  0832                     l91:	
  5429                           ;i2c.c: 58:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  5430                           
  5431  0832  1683               	bsf	3,5	;RP0=1, select bank1
  5432  0833  1303               	bcf	3,6	;RP1=0, select bank1
  5433  0834  1914               	btfsc	20,2	;volatile
  5434  0835  2837               	goto	u1901
  5435  0836  2838               	goto	u1900
  5436  0837                     u1901:
  5437  0837  2832               	goto	l91
  5438  0838                     u1900:
  5439  0838                     l2739:
  5440  0838  0811               	movf	17,w	;volatile
  5441  0839  391F               	andlw	31
  5442  083A  1D03               	btfss	3,2
  5443  083B  283D               	goto	u1911
  5444  083C  283E               	goto	u1910
  5445  083D                     u1911:
  5446  083D  2832               	goto	l91
  5447  083E                     u1910:
  5448  083E                     l94:
  5449  083E  0008               	return
  5450  083F                     __end_of_I2C_Wait_IDLE:
  5451                           
  5452                           	psect	text32
  5453  08AB                     __ptext32:	
  5454 ;; *************** function _DD_Init *****************
  5455 ;; Defined at:
  5456 ;;		line 14 in file "DD.c"
  5457 ;; Parameters:    Size  Location     Type
  5458 ;;		None
  5459 ;; Auto vars:     Size  Location     Type
  5460 ;;		None
  5461 ;; Return value:  Size  Location     Type
  5462 ;;                  1    wreg      void 
  5463 ;; Registers used:
  5464 ;;		wreg, status,2, status,0, btemp+1
  5465 ;; Tracked objects:
  5466 ;;		On entry : 0/0
  5467 ;;		On exit  : 0/0
  5468 ;;		Unchanged: 0/0
  5469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5470 ;;      Params:         0       0       0       0       0
  5471 ;;      Locals:         0       0       0       0       0
  5472 ;;      Temps:          0       0       0       0       0
  5473 ;;      Totals:         0       0       0       0       0
  5474 ;;Total ram usage:        0 bytes
  5475 ;; Hardware stack levels used:    1
  5476 ;; Hardware stack levels required when called:    4
  5477 ;; This function calls:
  5478 ;;		Nothing
  5479 ;; This function is called by:
  5480 ;;		_main
  5481 ;; This function uses a non-reentrant model
  5482 ;;
  5483                           
  5484                           
  5485                           ;psect for function _DD_Init
  5486  08AB                     _DD_Init:
  5487  08AB                     l3239:	
  5488                           ;incstack = 0
  5489                           ; Regs used in _DD_Init: [wreg+status,2+status,0+btemp+1]
  5490                           
  5491  08AB                     l3243:	
  5492                           ;DD.c: 17:     (0u)? (TRISC |= (1<<5)) : (TRISC &= ~(1<<5));
  5493                           
  5494  08AB  30DF               	movlw	223
  5495  08AC  00FF               	movwf	btemp+1
  5496  08AD  087F               	movf	btemp+1,w
  5497  08AE  1683               	bsf	3,5	;RP0=1, select bank1
  5498  08AF  1303               	bcf	3,6	;RP1=0, select bank1
  5499  08B0  0587               	andwf	7,f	;volatile
  5500  08B1                     l3247:
  5501  08B1  30FB               	movlw	251
  5502  08B2  00FF               	movwf	btemp+1
  5503  08B3  087F               	movf	btemp+1,w
  5504  08B4  0587               	andwf	7,f	;volatile
  5505  08B5                     l3251:
  5506  08B5  307F               	movlw	127
  5507  08B6  00FF               	movwf	btemp+1
  5508  08B7  087F               	movf	btemp+1,w
  5509  08B8  0586               	andwf	6,f	;volatile
  5510  08B9                     l3255:
  5511  08B9  30DF               	movlw	223
  5512  08BA  00FF               	movwf	btemp+1
  5513  08BB  087F               	movf	btemp+1,w
  5514  08BC  1283               	bcf	3,5	;RP0=0, select bank0
  5515  08BD  1303               	bcf	3,6	;RP1=0, select bank0
  5516  08BE  0587               	andwf	7,f	;volatile
  5517  08BF                     l3259:
  5518  08BF  30FB               	movlw	251
  5519  08C0  00FF               	movwf	btemp+1
  5520  08C1  087F               	movf	btemp+1,w
  5521  08C2  0587               	andwf	7,f	;volatile
  5522  08C3                     l3263:
  5523  08C3  307F               	movlw	127
  5524  08C4  00FF               	movwf	btemp+1
  5525  08C5  087F               	movf	btemp+1,w
  5526  08C6  0586               	andwf	6,f	;volatile
  5527  08C7                     l253:
  5528  08C7  0008               	return
  5529  08C8                     __end_of_DD_Init:
  5530                           
  5531                           	psect	text33
  5532  0EF4                     __ptext33:	
  5533 ;; *************** function _ADC_Init *****************
  5534 ;; Defined at:
  5535 ;;		line 16 in file "adc.c"
  5536 ;; Parameters:    Size  Location     Type
  5537 ;;  config          1    wreg     PTR struct .
  5538 ;;		 -> main@adc_config(4), 
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;  config          1    2[BANK1 ] PTR struct .
  5541 ;;		 -> main@adc_config(4), 
  5542 ;; Return value:  Size  Location     Type
  5543 ;;                  1    wreg      void 
  5544 ;; Registers used:
  5545 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5546 ;; Tracked objects:
  5547 ;;		On entry : 0/0
  5548 ;;		On exit  : 0/0
  5549 ;;		Unchanged: 0/0
  5550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5551 ;;      Params:         0       0       0       0       0
  5552 ;;      Locals:         0       0       1       0       0
  5553 ;;      Temps:          0       0       2       0       0
  5554 ;;      Totals:         0       0       3       0       0
  5555 ;;Total ram usage:        3 bytes
  5556 ;; Hardware stack levels used:    1
  5557 ;; Hardware stack levels required when called:    4
  5558 ;; This function calls:
  5559 ;;		Nothing
  5560 ;; This function is called by:
  5561 ;;		_main
  5562 ;; This function uses a non-reentrant model
  5563 ;;
  5564                           
  5565                           
  5566                           ;psect for function _ADC_Init
  5567  0EF4                     _ADC_Init:
  5568                           
  5569                           ;incstack = 0
  5570                           ; Regs used in _ADC_Init: [wreg-fsr0h+status,2+status,0+btemp+1]
  5571                           ;ADC_Init@config stored from wreg
  5572  0EF4  1683               	bsf	3,5	;RP0=1, select bank1
  5573  0EF5  1303               	bcf	3,6	;RP1=0, select bank1
  5574  0EF6  00A2               	movwf	ADC_Init@config^(0+128)
  5575  0EF7                     l3213:
  5576                           
  5577                           ;adc.c: 16: void ADC_Init(tADC_Config* config);adc.c: 17: {;adc.c: 19:     ADON=1;
  5578  0EF7  1283               	bcf	3,5	;RP0=0, select bank0
  5579  0EF8  1303               	bcf	3,6	;RP1=0, select bank0
  5580  0EF9  141F               	bsf	31,0	;volatile
  5581                           
  5582                           ;adc.c: 21:     switch(config->clk)
  5583  0EFA  2F29               	goto	l3223
  5584  0EFB                     l3215:
  5585                           
  5586                           ;adc.c: 24:             ADCON0 &= ~(0xC0);
  5587  0EFB  303F               	movlw	63
  5588  0EFC  00FF               	movwf	btemp+1
  5589  0EFD  087F               	movf	btemp+1,w
  5590  0EFE  1283               	bcf	3,5	;RP0=0, select bank0
  5591  0EFF  1303               	bcf	3,6	;RP1=0, select bank0
  5592  0F00  059F               	andwf	31,f	;volatile
  5593                           
  5594                           ;adc.c: 25:             break;
  5595  0F01  2F4E               	goto	l3225
  5596  0F02                     l318:	
  5597                           ;adc.c: 26:         case FOSC_8:
  5598                           
  5599                           
  5600                           ;adc.c: 27:             ADCON0 |= (1<<6);
  5601  0F02  1283               	bcf	3,5	;RP0=0, select bank0
  5602  0F03  1303               	bcf	3,6	;RP1=0, select bank0
  5603  0F04  171F               	bsf	31,6	;volatile
  5604                           
  5605                           ;adc.c: 28:             break;
  5606  0F05  2F4E               	goto	l3225
  5607  0F06                     l319:	
  5608                           ;adc.c: 29:         case FOSC_32:
  5609                           
  5610                           
  5611                           ;adc.c: 30:             ADCON0 |= (2<<6);
  5612  0F06  1283               	bcf	3,5	;RP0=0, select bank0
  5613  0F07  1303               	bcf	3,6	;RP1=0, select bank0
  5614  0F08  179F               	bsf	31,7	;volatile
  5615                           
  5616                           ;adc.c: 31:             break;
  5617  0F09  2F4E               	goto	l3225
  5618  0F0A                     l3217:
  5619                           
  5620                           ;adc.c: 33:             ADCON0 |= (3<<6);
  5621  0F0A  30C0               	movlw	192
  5622  0F0B  00FF               	movwf	btemp+1
  5623  0F0C  087F               	movf	btemp+1,w
  5624  0F0D  1283               	bcf	3,5	;RP0=0, select bank0
  5625  0F0E  1303               	bcf	3,6	;RP1=0, select bank0
  5626  0F0F  049F               	iorwf	31,f	;volatile
  5627                           
  5628                           ;adc.c: 34:             break;
  5629  0F10  2F4E               	goto	l3225
  5630  0F11                     l3219:
  5631                           
  5632                           ;adc.c: 36:             ADCON0 &= ~(0xC0);
  5633  0F11  303F               	movlw	63
  5634  0F12  00FF               	movwf	btemp+1
  5635  0F13  087F               	movf	btemp+1,w
  5636  0F14  1283               	bcf	3,5	;RP0=0, select bank0
  5637  0F15  1303               	bcf	3,6	;RP1=0, select bank0
  5638  0F16  059F               	andwf	31,f	;volatile
  5639  0F17                     l3221:
  5640                           
  5641                           ;adc.c: 37:             ADCON1 |= (1<<6);
  5642  0F17  1683               	bsf	3,5	;RP0=1, select bank1
  5643  0F18  1303               	bcf	3,6	;RP1=0, select bank1
  5644  0F19  171F               	bsf	31,6	;volatile
  5645                           
  5646                           ;adc.c: 38:             break;
  5647  0F1A  2F4E               	goto	l3225
  5648  0F1B                     l322:	
  5649                           ;adc.c: 39:         case FOSC_16:
  5650                           
  5651                           
  5652                           ;adc.c: 40:             ADCON0 |= (1<<6);
  5653  0F1B  1283               	bcf	3,5	;RP0=0, select bank0
  5654  0F1C  1303               	bcf	3,6	;RP1=0, select bank0
  5655  0F1D  171F               	bsf	31,6	;volatile
  5656                           
  5657                           ;adc.c: 41:             ADCON1 |= (1<<6);
  5658  0F1E  1683               	bsf	3,5	;RP0=1, select bank1
  5659  0F1F  1303               	bcf	3,6	;RP1=0, select bank1
  5660  0F20  171F               	bsf	31,6	;volatile
  5661                           
  5662                           ;adc.c: 42:             break;
  5663  0F21  2F4E               	goto	l3225
  5664  0F22                     l323:	
  5665                           ;adc.c: 43:         case FOSC_64:
  5666                           
  5667                           
  5668                           ;adc.c: 44:             ADCON0 |= (2<<6);
  5669  0F22  1283               	bcf	3,5	;RP0=0, select bank0
  5670  0F23  1303               	bcf	3,6	;RP1=0, select bank0
  5671  0F24  179F               	bsf	31,7	;volatile
  5672                           
  5673                           ;adc.c: 45:             ADCON1 |= (1<<6);
  5674  0F25  1683               	bsf	3,5	;RP0=1, select bank1
  5675  0F26  1303               	bcf	3,6	;RP1=0, select bank1
  5676  0F27  171F               	bsf	31,6	;volatile
  5677                           
  5678                           ;adc.c: 46:             break;
  5679  0F28  2F4E               	goto	l3225
  5680  0F29                     l3223:
  5681  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  5682  0F2A  1303               	bcf	3,6	;RP1=0, select bank1
  5683  0F2B  0822               	movf	ADC_Init@config^(0+128),w
  5684  0F2C  3E03               	addlw	3
  5685  0F2D  0084               	movwf	4
  5686  0F2E  1383               	bcf	3,7	;select IRP bank0
  5687  0F2F  0800               	movf	0,w
  5688  0F30  00A0               	movwf	??_ADC_Init^(0+128)
  5689  0F31  01A1               	clrf	(??_ADC_Init^(0+128)+1)
  5690                           
  5691                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5692                           ; Switch size 1, requested type "simple"
  5693                           ; Number of cases is 1, Range of values is 0 to 0
  5694                           ; switch strategies available:
  5695                           ; Name         Instructions Cycles
  5696                           ; simple_byte            4     3 (average)
  5697                           ; direct_byte           11     8 (fixed)
  5698                           ; jumptable            260     6 (fixed)
  5699                           ;	Chosen strategy is simple_byte
  5700  0F32  0821               	movf	(??_ADC_Init+1)^(0+128),w
  5701  0F33  3A00               	xorlw	0	; case 0
  5702  0F34  1903               	skipnz
  5703  0F35  2F37               	goto	l4195
  5704  0F36  2F02               	goto	l318
  5705  0F37                     l4195:
  5706                           
  5707                           ; Switch size 1, requested type "simple"
  5708                           ; Number of cases is 7, Range of values is 0 to 6
  5709                           ; switch strategies available:
  5710                           ; Name         Instructions Cycles
  5711                           ; simple_byte           22    12 (average)
  5712                           ; direct_byte           29     8 (fixed)
  5713                           ; jumptable            260     6 (fixed)
  5714                           ;	Chosen strategy is simple_byte
  5715  0F37  0820               	movf	??_ADC_Init^(0+128),w
  5716  0F38  3A00               	xorlw	0	; case 0
  5717  0F39  1903               	skipnz
  5718  0F3A  2EFB               	goto	l3215
  5719  0F3B  3A01               	xorlw	1	; case 1
  5720  0F3C  1903               	skipnz
  5721  0F3D  2F02               	goto	l318
  5722  0F3E  3A03               	xorlw	3	; case 2
  5723  0F3F  1903               	skipnz
  5724  0F40  2F06               	goto	l319
  5725  0F41  3A01               	xorlw	1	; case 3
  5726  0F42  1903               	skipnz
  5727  0F43  2F0A               	goto	l3217
  5728  0F44  3A07               	xorlw	7	; case 4
  5729  0F45  1903               	skipnz
  5730  0F46  2F11               	goto	l3219
  5731  0F47  3A01               	xorlw	1	; case 5
  5732  0F48  1903               	skipnz
  5733  0F49  2F1B               	goto	l322
  5734  0F4A  3A03               	xorlw	3	; case 6
  5735  0F4B  1903               	skipnz
  5736  0F4C  2F22               	goto	l323
  5737  0F4D  2F02               	goto	l318
  5738  0F4E                     l3225:
  5739                           
  5740                           ;adc.c: 53:     ADCON1 |= ((config->alignment)<<7);
  5741  0F4E  1683               	bsf	3,5	;RP0=1, select bank1
  5742  0F4F  1303               	bcf	3,6	;RP1=0, select bank1
  5743  0F50  0822               	movf	ADC_Init@config^(0+128),w
  5744  0F51  3E02               	addlw	2
  5745  0F52  0084               	movwf	4
  5746  0F53  0800               	movf	0,w
  5747  0F54  00A0               	movwf	??_ADC_Init^(0+128)
  5748  0F55  3006               	movlw	6
  5749  0F56                     u2555:
  5750  0F56  1003               	clrc
  5751  0F57  0DA0               	rlf	??_ADC_Init^(0+128),f
  5752  0F58  3EFF               	addlw	-1
  5753  0F59  1D03               	skipz
  5754  0F5A  2F56               	goto	u2555
  5755  0F5B  1003               	clrc
  5756  0F5C  0D20               	rlf	??_ADC_Init^(0+128),w
  5757  0F5D  00FF               	movwf	btemp+1
  5758  0F5E  087F               	movf	btemp+1,w
  5759  0F5F  049F               	iorwf	31,f	;volatile
  5760  0F60                     l3227:
  5761                           
  5762                           ;adc.c: 56:     ADCON1 = (0x80);
  5763  0F60  3080               	movlw	128
  5764  0F61  009F               	movwf	31	;volatile
  5765  0F62                     l3229:
  5766                           
  5767                           ;adc.c: 60:     if(config->mode==INTERRUPT_MODE)
  5768  0F62  0A22               	incf	ADC_Init@config^(0+128),w
  5769  0F63  0084               	movwf	4
  5770  0F64  0300               	decf	0,w
  5771  0F65  1D03               	btfss	3,2
  5772  0F66  2F68               	goto	u2561
  5773  0F67  2F69               	goto	u2560
  5774  0F68                     u2561:
  5775  0F68  2F71               	goto	l326
  5776  0F69                     u2560:
  5777  0F69                     l3231:
  5778                           
  5779                           ;adc.c: 61:     {;adc.c: 62:         ADIF = 0;
  5780  0F69  1283               	bcf	3,5	;RP0=0, select bank0
  5781  0F6A  1303               	bcf	3,6	;RP1=0, select bank0
  5782  0F6B  130C               	bcf	12,6	;volatile
  5783                           
  5784                           ;adc.c: 63:         ADIE = 1;
  5785  0F6C  1683               	bsf	3,5	;RP0=1, select bank1
  5786  0F6D  1303               	bcf	3,6	;RP1=0, select bank1
  5787  0F6E  170C               	bsf	12,6	;volatile
  5788                           
  5789                           ;adc.c: 64:         PEIE = 1;
  5790  0F6F  170B               	bsf	11,6	;volatile
  5791                           
  5792                           ;adc.c: 65:         GIE = 1;
  5793  0F70  178B               	bsf	11,7	;volatile
  5794  0F71                     l326:
  5795  0F71  0008               	return
  5796  0F72                     __end_of_ADC_Init:
  5797                           
  5798                           	psect	text34
  5799  04AB                     __ptext34:	
  5800 ;; *************** function _ISR *****************
  5801 ;; Defined at:
  5802 ;;		line 219 in file "EWH.c"
  5803 ;; Parameters:    Size  Location     Type
  5804 ;;		None
  5805 ;; Auto vars:     Size  Location     Type
  5806 ;;  Reading         2   42[BANK0 ] unsigned short 
  5807 ;; Return value:  Size  Location     Type
  5808 ;;                  1    wreg      void 
  5809 ;; Registers used:
  5810 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5811 ;; Tracked objects:
  5812 ;;		On entry : 0/0
  5813 ;;		On exit  : 0/0
  5814 ;;		Unchanged: 0/0
  5815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5816 ;;      Params:         0       0       0       0       0
  5817 ;;      Locals:         0       2       0       0       0
  5818 ;;      Temps:          0       6       0       0       0
  5819 ;;      Totals:         0       8       0       0       0
  5820 ;;Total ram usage:        8 bytes
  5821 ;; Hardware stack levels used:    1
  5822 ;; Hardware stack levels required when called:    3
  5823 ;; This function calls:
  5824 ;;		_ADC_ReadChannel
  5825 ;;		_DD_GetState
  5826 ;;		___flmul
  5827 ;;		___fltol
  5828 ;;		___xxtofl
  5829 ;;		i1_Heater_Display
  5830 ;; This function is called by:
  5831 ;;		Interrupt level 1
  5832 ;; This function uses a non-reentrant model
  5833 ;;
  5834                           
  5835                           
  5836                           ;psect for function _ISR
  5837  04AB                     _ISR:
  5838  04AB                     i1l3915:
  5839                           
  5840                           ;EWH.c: 221:     static uint8_t count =0;;EWH.c: 222:     if(INTF==1)
  5841  04AB  1C8B               	btfss	11,1	;volatile
  5842  04AC  2CAE               	goto	u366_21
  5843  04AD  2CAF               	goto	u366_20
  5844  04AE                     u366_21:
  5845  04AE  2CCB               	goto	i1l590
  5846  04AF                     u366_20:
  5847  04AF                     i1l3917:
  5848                           
  5849                           ;EWH.c: 223:     {;EWH.c: 224:         EWH_Events[0]=1;
  5850  04AF  1683               	bsf	3,5	;RP0=1, select bank1
  5851  04B0  1303               	bcf	3,6	;RP1=0, select bank1
  5852  04B1  01BF               	clrf	_EWH_Events^(0+128)
  5853  04B2  0ABF               	incf	_EWH_Events^(0+128),f
  5854  04B3                     i1l3919:
  5855                           
  5856                           ;EWH.c: 226:         if(EWH_State==ON)
  5857  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  5858  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  5859  04B5  0358               	decf	_EWH_State,w
  5860  04B6  1D03               	btfss	3,2
  5861  04B7  2CB9               	goto	u367_21
  5862  04B8  2CBA               	goto	u367_20
  5863  04B9                     u367_21:
  5864  04B9  2CBF               	goto	i1l3923
  5865  04BA                     u367_20:
  5866  04BA                     i1l3921:
  5867                           
  5868                           ;EWH.c: 227:         {;EWH.c: 228:             EWH_State=OFF;
  5869  04BA  01D8               	clrf	_EWH_State
  5870                           
  5871                           ;EWH.c: 229:             EWH_Mode=EWH_SLEEP_MODE;
  5872  04BB  1683               	bsf	3,5	;RP0=1, select bank1
  5873  04BC  1303               	bcf	3,6	;RP1=0, select bank1
  5874  04BD  01C8               	clrf	_EWH_Mode^(0+128)
  5875                           
  5876                           ;EWH.c: 230:         }
  5877  04BE  2CCA               	goto	i1l592
  5878  04BF                     i1l3923:
  5879  04BF  0858               	movf	_EWH_State,w
  5880  04C0  1D03               	btfss	3,2
  5881  04C1  2CC3               	goto	u368_21
  5882  04C2  2CC4               	goto	u368_20
  5883  04C3                     u368_21:
  5884  04C3  2CCA               	goto	i1l592
  5885  04C4                     u368_20:
  5886  04C4                     i1l3925:
  5887                           
  5888                           ;EWH.c: 232:         {;EWH.c: 233:             EWH_State=ON;
  5889  04C4  01D8               	clrf	_EWH_State
  5890  04C5  0AD8               	incf	_EWH_State,f
  5891                           
  5892                           ;EWH.c: 234:             EWH_Mode=EWH_POWER_UP_MODE;
  5893  04C6  1683               	bsf	3,5	;RP0=1, select bank1
  5894  04C7  1303               	bcf	3,6	;RP1=0, select bank1
  5895  04C8  01C8               	clrf	_EWH_Mode^(0+128)
  5896  04C9  0AC8               	incf	_EWH_Mode^(0+128),f
  5897  04CA                     i1l592:
  5898                           
  5899                           ;EWH.c: 236:         INTF=0;
  5900  04CA  108B               	bcf	11,1	;volatile
  5901  04CB                     i1l590:	
  5902                           ;EWH.c: 237:     }
  5903                           
  5904                           
  5905                           ;EWH.c: 239:    if (TMR1IF)
  5906  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  5907  04CC  1C0C               	btfss	12,0	;volatile
  5908  04CD  2CCF               	goto	u369_21
  5909  04CE  2CD0               	goto	u369_20
  5910  04CF                     u369_21:
  5911  04CF  2D88               	goto	i1l606
  5912  04D0                     u369_20:
  5913  04D0                     i1l3927:
  5914                           
  5915                           ;EWH.c: 240:    {;EWH.c: 241:       count++;
  5916  04D0  3001               	movlw	1
  5917  04D1  00FF               	movwf	btemp+1
  5918  04D2  087F               	movf	btemp+1,w
  5919  04D3  07D6               	addwf	ISR@count,f
  5920  04D4                     i1l3929:
  5921                           
  5922                           ;EWH.c: 242:       if(EWH_Mode==EWH_OPERATING_MODE)
  5923  04D4  3003               	movlw	3
  5924  04D5  1683               	bsf	3,5	;RP0=1, select bank1
  5925  04D6  1303               	bcf	3,6	;RP1=0, select bank1
  5926  04D7  0648               	xorwf	_EWH_Mode^(0+128),w
  5927  04D8  1D03               	btfss	3,2
  5928  04D9  2CDB               	goto	u370_21
  5929  04DA  2CDC               	goto	u370_20
  5930  04DB                     u370_21:
  5931  04DB  2D30               	goto	i1l3935
  5932  04DC                     u370_20:
  5933  04DC                     i1l3931:
  5934                           
  5935                           ;EWH.c: 243:       {;EWH.c: 244:         uint16_t Reading = ADC_ReadChannel(ADC2);
  5936  04DC  3002               	movlw	2
  5937  04DD  120A  158A  2153  120A  118A  	fcall	_ADC_ReadChannel
  5938  04E2  0871               	movf	?_ADC_ReadChannel+1,w
  5939  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  5940  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  5941  04E5  00CB               	movwf	ISR@Reading+1
  5942  04E6  0870               	movf	?_ADC_ReadChannel,w
  5943  04E7  00CA               	movwf	ISR@Reading
  5944                           
  5945                           ;EWH.c: 245:         current_Temp=Reading*0.488;
  5946  04E8  084A               	movf	ISR@Reading,w
  5947  04E9  00F0               	movwf	___xxtofl@val
  5948  04EA  084B               	movf	ISR@Reading+1,w
  5949  04EB  00F1               	movwf	___xxtofl@val+1
  5950  04EC  01F2               	clrf	___xxtofl@val+2
  5951  04ED  01F3               	clrf	___xxtofl@val+3
  5952  04EE  3000               	movlw	0
  5953  04EF  120A  118A  2674  120A  118A  	fcall	___xxtofl
  5954  04F4  0873               	movf	?___xxtofl+3,w
  5955  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  5956  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  5957  04F7  00A7               	movwf	___flmul@a+3
  5958  04F8  0872               	movf	?___xxtofl+2,w
  5959  04F9  00A6               	movwf	___flmul@a+2
  5960  04FA  0871               	movf	?___xxtofl+1,w
  5961  04FB  00A5               	movwf	___flmul@a+1
  5962  04FC  0870               	movf	?___xxtofl,w
  5963  04FD  00A4               	movwf	___flmul@a
  5964  04FE  303E               	movlw	62
  5965  04FF  00A3               	movwf	___flmul@b+3
  5966  0500  30F9               	movlw	249
  5967  0501  00A2               	movwf	___flmul@b+2
  5968  0502  30DB               	movlw	219
  5969  0503  00A1               	movwf	___flmul@b+1
  5970  0504  3023               	movlw	35
  5971  0505  00A0               	movwf	___flmul@b
  5972  0506  120A  118A  2037  120A  118A  	fcall	___flmul
  5973  050B  1283               	bcf	3,5	;RP0=0, select bank0
  5974  050C  1303               	bcf	3,6	;RP1=0, select bank0
  5975  050D  0823               	movf	?___flmul+3,w
  5976  050E  00BD               	movwf	___fltol@f1+3
  5977  050F  0822               	movf	?___flmul+2,w
  5978  0510  00BC               	movwf	___fltol@f1+2
  5979  0511  0821               	movf	?___flmul+1,w
  5980  0512  00BB               	movwf	___fltol@f1+1
  5981  0513  0820               	movf	?___flmul,w
  5982  0514  00BA               	movwf	___fltol@f1
  5983  0515  120A  158A  2678  120A  118A  	fcall	___fltol
  5984  051A  1283               	bcf	3,5	;RP0=0, select bank0
  5985  051B  1303               	bcf	3,6	;RP1=0, select bank0
  5986  051C  083A               	movf	?___fltol,w
  5987  051D  00FF               	movwf	btemp+1
  5988  051E  087F               	movf	btemp+1,w
  5989  051F  1683               	bsf	3,5	;RP0=1, select bank1
  5990  0520  1303               	bcf	3,6	;RP1=0, select bank1
  5991  0521  00C6               	movwf	_current_Temp^(0+128)
  5992  0522                     i1l3933:
  5993                           
  5994                           ;EWH.c: 246:         Heater_Display(current_Temp);
  5995  0522  0846               	movf	_current_Temp^(0+128),w
  5996  0523  1283               	bcf	3,5	;RP0=0, select bank0
  5997  0524  1303               	bcf	3,6	;RP1=0, select bank0
  5998  0525  00C4               	movwf	??_ISR
  5999  0526  01C5               	clrf	??_ISR+1
  6000  0527  0844               	movf	??_ISR,w
  6001  0528  00FA               	movwf	i1Heater_Display@temp
  6002  0529  0845               	movf	??_ISR+1,w
  6003  052A  00FB               	movwf	i1Heater_Display@temp+1
  6004  052B  120A  158A  22FD  120A  118A  	fcall	i1_Heater_Display
  6005  0530                     i1l3935:
  6006                           
  6007                           ;EWH.c: 249:       if(count==4)
  6008  0530  3004               	movlw	4
  6009  0531  1283               	bcf	3,5	;RP0=0, select bank0
  6010  0532  1303               	bcf	3,6	;RP1=0, select bank0
  6011  0533  0656               	xorwf	ISR@count,w
  6012  0534  1D03               	btfss	3,2
  6013  0535  2D37               	goto	u371_21
  6014  0536  2D38               	goto	u371_20
  6015  0537                     u371_21:
  6016  0537  2D83               	goto	i1l3961
  6017  0538                     u371_20:
  6018  0538                     i1l3937:
  6019                           
  6020                           ;EWH.c: 250:       {;EWH.c: 252:           if(EWH_Mode==EWH_SET_TEMP_MODE)
  6021  0538  3002               	movlw	2
  6022  0539  1683               	bsf	3,5	;RP0=1, select bank1
  6023  053A  1303               	bcf	3,6	;RP1=0, select bank1
  6024  053B  0648               	xorwf	_EWH_Mode^(0+128),w
  6025  053C  1D03               	btfss	3,2
  6026  053D  2D3F               	goto	u372_21
  6027  053E  2D40               	goto	u372_20
  6028  053F                     u372_21:
  6029  053F  2D50               	goto	i1l3945
  6030  0540                     u372_20:
  6031  0540                     i1l3939:
  6032                           
  6033                           ;EWH.c: 253:           {;EWH.c: 254:               NoPress_Sec_count++;
  6034  0540  3001               	movlw	1
  6035  0541  00FF               	movwf	btemp+1
  6036  0542  087F               	movf	btemp+1,w
  6037  0543  1283               	bcf	3,5	;RP0=0, select bank0
  6038  0544  1303               	bcf	3,6	;RP1=0, select bank0
  6039  0545  07D7               	addwf	_NoPress_Sec_count,f
  6040  0546                     i1l3941:
  6041                           
  6042                           ;EWH.c: 255:               if(NoPress_Sec_count==5)
  6043  0546  3005               	movlw	5
  6044  0547  0657               	xorwf	_NoPress_Sec_count,w
  6045  0548  1D03               	btfss	3,2
  6046  0549  2D4B               	goto	u373_21
  6047  054A  2D4C               	goto	u373_20
  6048  054B                     u373_21:
  6049  054B  2D50               	goto	i1l3945
  6050  054C                     u373_20:
  6051  054C                     i1l3943:
  6052                           
  6053                           ;EWH.c: 256:               {;EWH.c: 257:                   EWH_Events[3]=1;
  6054  054C  1683               	bsf	3,5	;RP0=1, select bank1
  6055  054D  1303               	bcf	3,6	;RP1=0, select bank1
  6056  054E  01C2               	clrf	(_EWH_Events^(0+128)+3)
  6057  054F  0AC2               	incf	(_EWH_Events^(0+128)+3),f
  6058  0550                     i1l3945:
  6059                           
  6060                           ;EWH.c: 261:         if(EWH_Mode==EWH_OPERATING_MODE && DD_GetState(HEATER)==ON)
  6061  0550  3003               	movlw	3
  6062  0551  1683               	bsf	3,5	;RP0=1, select bank1
  6063  0552  1303               	bcf	3,6	;RP1=0, select bank1
  6064  0553  0648               	xorwf	_EWH_Mode^(0+128),w
  6065  0554  1D03               	btfss	3,2
  6066  0555  2D57               	goto	u374_21
  6067  0556  2D58               	goto	u374_20
  6068  0557                     u374_21:
  6069  0557  2D6A               	goto	i1l3951
  6070  0558                     u374_20:
  6071  0558                     i1l3947:
  6072  0558  3000               	movlw	0
  6073  0559  120A  118A  27BE  120A  118A  	fcall	_DD_GetState
  6074  055E  3A01               	xorlw	1
  6075  055F  1D03               	skipz
  6076  0560  2D62               	goto	u375_21
  6077  0561  2D63               	goto	u375_20
  6078  0562                     u375_21:
  6079  0562  2D6A               	goto	i1l3951
  6080  0563                     u375_20:
  6081  0563                     i1l3949:
  6082                           
  6083                           ;EWH.c: 262:         {;EWH.c: 263:             (PORTB^=(1<<7));
  6084  0563  3080               	movlw	128
  6085  0564  00FF               	movwf	btemp+1
  6086  0565  087F               	movf	btemp+1,w
  6087  0566  1283               	bcf	3,5	;RP0=0, select bank0
  6088  0567  1303               	bcf	3,6	;RP1=0, select bank0
  6089  0568  0686               	xorwf	6,f	;volatile
  6090                           
  6091                           ;EWH.c: 264:         }
  6092  0569  2D80               	goto	i1l3959
  6093  056A                     i1l3951:
  6094  056A  3003               	movlw	3
  6095  056B  1683               	bsf	3,5	;RP0=1, select bank1
  6096  056C  1303               	bcf	3,6	;RP1=0, select bank1
  6097  056D  0648               	xorwf	_EWH_Mode^(0+128),w
  6098  056E  1D03               	btfss	3,2
  6099  056F  2D71               	goto	u376_21
  6100  0570  2D72               	goto	u376_20
  6101  0571                     u376_21:
  6102  0571  2D80               	goto	i1l3959
  6103  0572                     u376_20:
  6104  0572                     i1l3953:
  6105                           
  6106                           ;EWH.c: 266:         {;EWH.c: 267:             (ON)?(PORTB |= (1<<7)) : (PORTB &= ~(1<<7
      +                          ));
  6107  0572  3001               	movlw	1
  6108  0573  120A  118A  27BE  120A  118A  	fcall	_DD_GetState
  6109  0578  3A01               	xorlw	1
  6110  0579  1D03               	skipz
  6111  057A  2D7C               	goto	u377_21
  6112  057B  2D7D               	goto	u377_20
  6113  057C                     u377_21:
  6114  057C  2D80               	goto	i1l3959
  6115  057D                     u377_20:
  6116  057D                     i1l3955:
  6117  057D  1283               	bcf	3,5	;RP0=0, select bank0
  6118  057E  1303               	bcf	3,6	;RP1=0, select bank0
  6119  057F  1786               	bsf	6,7	;volatile
  6120  0580                     i1l3959:
  6121                           
  6122                           ;EWH.c: 271:         count = 0;
  6123  0580  1283               	bcf	3,5	;RP0=0, select bank0
  6124  0581  1303               	bcf	3,6	;RP1=0, select bank0
  6125  0582  01D6               	clrf	ISR@count
  6126  0583                     i1l3961:
  6127                           
  6128                           ;EWH.c: 273:       TMR1IF = 0;
  6129  0583  100C               	bcf	12,0	;volatile
  6130  0584                     i1l3963:
  6131                           
  6132                           ;EWH.c: 274:       TMR1=34285;
  6133  0584  3085               	movlw	133
  6134  0585  008F               	movwf	15	;volatile
  6135  0586  30ED               	movlw	237
  6136  0587  008E               	movwf	14	;volatile
  6137  0588                     i1l606:
  6138  0588  0849               	movf	??_ISR+5,w
  6139  0589  00FF               	movwf	btemp+1
  6140  058A  0848               	movf	??_ISR+4,w
  6141  058B  008A               	movwf	10
  6142  058C  0847               	movf	??_ISR+3,w
  6143  058D  0084               	movwf	4
  6144  058E  0E46               	swapf	(??_ISR+2)^0,w
  6145  058F  0083               	movwf	3
  6146  0590  0EFE               	swapf	btemp,f
  6147  0591  0E7E               	swapf	btemp,w
  6148  0592  0009               	retfie
  6149  0593                     __end_of_ISR:
  6150                           
  6151                           	psect	intentry
  6152  0004                     __pintentry:	
  6153                           ;incstack = 0
  6154 ;; hardware stack exceeded
  6155                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6156                           
  6157  0004                     interrupt_function:
  6158  007E                     saved_w	set	btemp
  6159  0004  00FE               	movwf	btemp
  6160  0005  0E03               	swapf	3,w
  6161  0006  1283               	bcf	3,5	;RP0=0, select bank0
  6162  0007  1303               	bcf	3,6	;RP1=0, select bank0
  6163  0008  00C6               	movwf	??_ISR+2
  6164  0009  0804               	movf	4,w
  6165  000A  00C7               	movwf	??_ISR+3
  6166  000B  080A               	movf	10,w
  6167  000C  00C8               	movwf	??_ISR+4
  6168  000D  087F               	movf	btemp+1,w
  6169  000E  00C9               	movwf	??_ISR+5
  6170  000F  120A  118A  2CAB   	ljmp	_ISR
  6171                           
  6172                           	psect	text35
  6173  0AFD                     __ptext35:	
  6174 ;; *************** function i1_Heater_Display *****************
  6175 ;; Defined at:
  6176 ;;		line 55 in file "SSD.c"
  6177 ;; Parameters:    Size  Location     Type
  6178 ;;  temp            2   10[COMMON] unsigned short 
  6179 ;; Auto vars:     Size  Location     Type
  6180 ;;		None
  6181 ;; Return value:  Size  Location     Type
  6182 ;;                  1    wreg      void 
  6183 ;; Registers used:
  6184 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6185 ;; Tracked objects:
  6186 ;;		On entry : 0/0
  6187 ;;		On exit  : 0/0
  6188 ;;		Unchanged: 0/0
  6189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6190 ;;      Params:         2       0       0       0       0
  6191 ;;      Locals:         0       0       0       0       0
  6192 ;;      Temps:          2       0       0       0       0
  6193 ;;      Totals:         4       0       0       0       0
  6194 ;;Total ram usage:        4 bytes
  6195 ;; Hardware stack levels used:    1
  6196 ;; Hardware stack levels required when called:    2
  6197 ;; This function calls:
  6198 ;;		i1_SSD_Write
  6199 ;;		i1_SSD_config
  6200 ;;		i1___awdiv
  6201 ;;		i1___lwmod
  6202 ;; This function is called by:
  6203 ;;		_ISR
  6204 ;; This function uses a non-reentrant model
  6205 ;;
  6206                           
  6207                           
  6208                           ;psect for function i1_Heater_Display
  6209  0AFD                     i1_Heater_Display:
  6210  0AFD                     i1l3771:	
  6211                           ;incstack = 0
  6212 ;; hardware stack exceeded
  6213                           ; Regs used in i1_Heater_Display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6214                           
  6215                           
  6216                           ;SSD.c: 55: void Heater_Display(uint16_t temp);SSD.c: 56: {;SSD.c: 57:     SSD_config(3,
      +                          OFF);
  6217  0AFD  01F0               	clrf	i1SSD_config@SSD_state
  6218  0AFE  3003               	movlw	3
  6219  0AFF  120A  158A  2607  120A  158A  	fcall	i1_SSD_config
  6220                           
  6221                           ;SSD.c: 58:     SSD_Write(4,temp%10);
  6222  0B04  300A               	movlw	10
  6223  0B05  00F0               	movwf	i1___lwmod@divisor
  6224  0B06  3000               	movlw	0
  6225  0B07  00F1               	movwf	i1___lwmod@divisor+1
  6226  0B08  087B               	movf	i1Heater_Display@temp+1,w
  6227  0B09  00F3               	movwf	i1___lwmod@dividend+1
  6228  0B0A  087A               	movf	i1Heater_Display@temp,w
  6229  0B0B  00F2               	movwf	i1___lwmod@dividend
  6230  0B0C  120A  158A  217E  120A  158A  	fcall	i1___lwmod
  6231  0B11  0870               	movf	?i1___lwmod,w
  6232  0B12  00FF               	movwf	btemp+1
  6233  0B13  087F               	movf	btemp+1,w
  6234  0B14  00F8               	movwf	i1SSD_Write@Number
  6235  0B15  3004               	movlw	4
  6236  0B16  120A  158A  2090  120A  158A  	fcall	i1_SSD_Write
  6237  0B1B                     i1l3773:
  6238                           
  6239                           ;SSD.c: 59:     _delay((unsigned long)((60)*(4000000/4000.0)));
  6240  0B1B  304E               	movlw	78
  6241  0B1C  00FD               	movwf	??i1_Heater_Display+1
  6242  0B1D  30EB               	movlw	235
  6243  0B1E  00FC               	movwf	??i1_Heater_Display
  6244  0B1F                     u385_27:
  6245  0B1F  0BFC               	decfsz	??i1_Heater_Display,f
  6246  0B20  2B1F               	goto	u385_27
  6247  0B21  0BFD               	decfsz	??i1_Heater_Display+1,f
  6248  0B22  2B1F               	goto	u385_27
  6249  0B23                     i1l3775:
  6250                           
  6251                           ;SSD.c: 60:     SSD_config(4,OFF);
  6252  0B23  01F0               	clrf	i1SSD_config@SSD_state
  6253  0B24  3004               	movlw	4
  6254  0B25  120A  158A  2607  120A  158A  	fcall	i1_SSD_config
  6255  0B2A                     i1l3777:
  6256                           
  6257                           ;SSD.c: 61:     SSD_Write(3,(uint8_t)temp/10);
  6258  0B2A  300A               	movlw	10
  6259  0B2B  00F0               	movwf	i1___awdiv@divisor
  6260  0B2C  3000               	movlw	0
  6261  0B2D  00F1               	movwf	i1___awdiv@divisor+1
  6262  0B2E  087A               	movf	i1Heater_Display@temp,w
  6263  0B2F  00FC               	movwf	??i1_Heater_Display
  6264  0B30  01FD               	clrf	??i1_Heater_Display+1
  6265  0B31  087C               	movf	??i1_Heater_Display,w
  6266  0B32  00F2               	movwf	i1___awdiv@dividend
  6267  0B33  087D               	movf	??i1_Heater_Display+1,w
  6268  0B34  00F3               	movwf	i1___awdiv@dividend+1
  6269  0B35  120A  158A  2464  120A  158A  	fcall	i1___awdiv
  6270  0B3A  0870               	movf	?i1___awdiv,w
  6271  0B3B  00FF               	movwf	btemp+1
  6272  0B3C  087F               	movf	btemp+1,w
  6273  0B3D  00F8               	movwf	i1SSD_Write@Number
  6274  0B3E  3003               	movlw	3
  6275  0B3F  120A  158A  2090  120A  158A  	fcall	i1_SSD_Write
  6276  0B44                     i1l3779:
  6277                           
  6278                           ;SSD.c: 62:     _delay((unsigned long)((60)*(4000000/4000.0)));
  6279  0B44  304E               	movlw	78
  6280  0B45  00FD               	movwf	??i1_Heater_Display+1
  6281  0B46  30EB               	movlw	235
  6282  0B47  00FC               	movwf	??i1_Heater_Display
  6283  0B48                     u386_27:
  6284  0B48  0BFC               	decfsz	??i1_Heater_Display,f
  6285  0B49  2B48               	goto	u386_27
  6286  0B4A  0BFD               	decfsz	??i1_Heater_Display+1,f
  6287  0B4B  2B48               	goto	u386_27
  6288  0B4C                     i1l667:
  6289  0B4C  0008               	return
  6290  0B4D                     __end_ofi1_Heater_Display:
  6291                           
  6292                           	psect	text36
  6293  097E                     __ptext36:	
  6294 ;; *************** function i1___lwmod *****************
  6295 ;; Defined at:
  6296 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
  6297 ;; Parameters:    Size  Location     Type
  6298 ;;  divisor         2    0[COMMON] unsigned int 
  6299 ;;  dividend        2    2[COMMON] unsigned int 
  6300 ;; Auto vars:     Size  Location     Type
  6301 ;;  counter         1    4[COMMON] unsigned char 
  6302 ;; Return value:  Size  Location     Type
  6303 ;;                  2    0[COMMON] unsigned int 
  6304 ;; Registers used:
  6305 ;;		wreg, status,2, status,0, btemp+1
  6306 ;; Tracked objects:
  6307 ;;		On entry : 0/0
  6308 ;;		On exit  : 0/0
  6309 ;;		Unchanged: 0/0
  6310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6311 ;;      Params:         4       0       0       0       0
  6312 ;;      Locals:         1       0       0       0       0
  6313 ;;      Temps:          0       0       0       0       0
  6314 ;;      Totals:         5       0       0       0       0
  6315 ;;Total ram usage:        5 bytes
  6316 ;; Hardware stack levels used:    1
  6317 ;; This function calls:
  6318 ;;		Nothing
  6319 ;; This function is called by:
  6320 ;;		i1_Heater_Display
  6321 ;; This function uses a non-reentrant model
  6322 ;;
  6323                           
  6324                           
  6325                           ;psect for function i1___lwmod
  6326  097E                     i1___lwmod:
  6327  097E                     i1l3147:	
  6328                           ;incstack = 0
  6329 ;; hardware stack exceeded
  6330                           ; Regs used in i1___lwmod: [wreg+status,2+status,0+btemp+1]
  6331                           
  6332  097E  0870               	movf	i1___lwmod@divisor,w
  6333  097F  0471               	iorwf	i1___lwmod@divisor+1,w
  6334  0980  1903               	btfsc	3,2
  6335  0981  2983               	goto	u248_21
  6336  0982  2984               	goto	u248_20
  6337  0983                     u248_21:
  6338  0983  29B3               	goto	i1l3165
  6339  0984                     u248_20:
  6340  0984                     i1l3149:
  6341  0984  01F4               	clrf	i1___lwmod@counter
  6342  0985  0AF4               	incf	i1___lwmod@counter,f
  6343  0986  2992               	goto	i1l3155
  6344  0987                     i1l3151:
  6345  0987  3001               	movlw	1
  6346  0988                     u249_25:
  6347  0988  1003               	clrc
  6348  0989  0DF0               	rlf	i1___lwmod@divisor,f
  6349  098A  0DF1               	rlf	i1___lwmod@divisor+1,f
  6350  098B  3EFF               	addlw	-1
  6351  098C  1D03               	skipz
  6352  098D  2988               	goto	u249_25
  6353  098E                     i1l3153:
  6354  098E  3001               	movlw	1
  6355  098F  00FF               	movwf	btemp+1
  6356  0990  087F               	movf	btemp+1,w
  6357  0991  07F4               	addwf	i1___lwmod@counter,f
  6358  0992                     i1l3155:
  6359  0992  1FF1               	btfss	i1___lwmod@divisor+1,7
  6360  0993  2995               	goto	u250_21
  6361  0994  2996               	goto	u250_20
  6362  0995                     u250_21:
  6363  0995  2987               	goto	i1l3151
  6364  0996                     u250_20:
  6365  0996                     i1l3157:
  6366  0996  0871               	movf	i1___lwmod@divisor+1,w
  6367  0997  0273               	subwf	i1___lwmod@dividend+1,w
  6368  0998  1D03               	skipz
  6369  0999  299C               	goto	u251_25
  6370  099A  0870               	movf	i1___lwmod@divisor,w
  6371  099B  0272               	subwf	i1___lwmod@dividend,w
  6372  099C                     u251_25:
  6373  099C  1C03               	skipc
  6374  099D  299F               	goto	u251_21
  6375  099E  29A0               	goto	u251_20
  6376  099F                     u251_21:
  6377  099F  29A6               	goto	i1l3161
  6378  09A0                     u251_20:
  6379  09A0                     i1l3159:
  6380  09A0  0870               	movf	i1___lwmod@divisor,w
  6381  09A1  02F2               	subwf	i1___lwmod@dividend,f
  6382  09A2  0871               	movf	i1___lwmod@divisor+1,w
  6383  09A3  1C03               	skipc
  6384  09A4  03F3               	decf	i1___lwmod@dividend+1,f
  6385  09A5  02F3               	subwf	i1___lwmod@dividend+1,f
  6386  09A6                     i1l3161:
  6387  09A6  3001               	movlw	1
  6388  09A7                     u252_25:
  6389  09A7  1003               	clrc
  6390  09A8  0CF1               	rrf	i1___lwmod@divisor+1,f
  6391  09A9  0CF0               	rrf	i1___lwmod@divisor,f
  6392  09AA  3EFF               	addlw	-1
  6393  09AB  1D03               	skipz
  6394  09AC  29A7               	goto	u252_25
  6395  09AD                     i1l3163:
  6396  09AD  3001               	movlw	1
  6397  09AE  02F4               	subwf	i1___lwmod@counter,f
  6398  09AF  1D03               	btfss	3,2
  6399  09B0  29B2               	goto	u253_21
  6400  09B1  29B3               	goto	u253_20
  6401  09B2                     u253_21:
  6402  09B2  2996               	goto	i1l3157
  6403  09B3                     u253_20:
  6404  09B3                     i1l3165:
  6405  09B3  0873               	movf	i1___lwmod@dividend+1,w
  6406  09B4  00F1               	movwf	?i1___lwmod+1
  6407  09B5  0872               	movf	i1___lwmod@dividend,w
  6408  09B6  00F0               	movwf	?i1___lwmod
  6409  09B7                     i1l1041:
  6410  09B7  0008               	return
  6411  09B8                     __end_ofi1___lwmod:
  6412                           
  6413                           	psect	text37
  6414  0C64                     __ptext37:	
  6415 ;; *************** function i1___awdiv *****************
  6416 ;; Defined at:
  6417 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  6418 ;; Parameters:    Size  Location     Type
  6419 ;;  divisor         2    0[COMMON] int 
  6420 ;;  dividend        2    2[COMMON] int 
  6421 ;; Auto vars:     Size  Location     Type
  6422 ;;  quotient        2    6[COMMON] int 
  6423 ;;  sign            1    5[COMMON] unsigned char 
  6424 ;;  counter         1    4[COMMON] unsigned char 
  6425 ;; Return value:  Size  Location     Type
  6426 ;;                  2    0[COMMON] int 
  6427 ;; Registers used:
  6428 ;;		wreg, status,2, status,0, btemp+1
  6429 ;; Tracked objects:
  6430 ;;		On entry : 0/0
  6431 ;;		On exit  : 0/0
  6432 ;;		Unchanged: 0/0
  6433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6434 ;;      Params:         4       0       0       0       0
  6435 ;;      Locals:         4       0       0       0       0
  6436 ;;      Temps:          0       0       0       0       0
  6437 ;;      Totals:         8       0       0       0       0
  6438 ;;Total ram usage:        8 bytes
  6439 ;; Hardware stack levels used:    1
  6440 ;; This function calls:
  6441 ;;		Nothing
  6442 ;; This function is called by:
  6443 ;;		i1_Heater_Display
  6444 ;; This function uses a non-reentrant model
  6445 ;;
  6446                           
  6447                           
  6448                           ;psect for function i1___awdiv
  6449  0C64                     i1___awdiv:
  6450  0C64                     i1l3103:	
  6451                           ;incstack = 0
  6452 ;; hardware stack exceeded
  6453                           ; Regs used in i1___awdiv: [wreg+status,2+status,0+btemp+1]
  6454                           
  6455  0C64  01F5               	clrf	i1___awdiv@sign
  6456  0C65                     i1l3105:
  6457  0C65  1FF1               	btfss	i1___awdiv@divisor+1,7
  6458  0C66  2C68               	goto	u238_21
  6459  0C67  2C69               	goto	u238_20
  6460  0C68                     u238_21:
  6461  0C68  2C70               	goto	i1l3111
  6462  0C69                     u238_20:
  6463  0C69                     i1l3107:
  6464  0C69  09F0               	comf	i1___awdiv@divisor,f
  6465  0C6A  09F1               	comf	i1___awdiv@divisor+1,f
  6466  0C6B  0AF0               	incf	i1___awdiv@divisor,f
  6467  0C6C  1903               	skipnz
  6468  0C6D  0AF1               	incf	i1___awdiv@divisor+1,f
  6469  0C6E                     i1l3109:
  6470  0C6E  01F5               	clrf	i1___awdiv@sign
  6471  0C6F  0AF5               	incf	i1___awdiv@sign,f
  6472  0C70                     i1l3111:
  6473  0C70  1FF3               	btfss	i1___awdiv@dividend+1,7
  6474  0C71  2C73               	goto	u239_21
  6475  0C72  2C74               	goto	u239_20
  6476  0C73                     u239_21:
  6477  0C73  2C7D               	goto	i1l3117
  6478  0C74                     u239_20:
  6479  0C74                     i1l3113:
  6480  0C74  09F2               	comf	i1___awdiv@dividend,f
  6481  0C75  09F3               	comf	i1___awdiv@dividend+1,f
  6482  0C76  0AF2               	incf	i1___awdiv@dividend,f
  6483  0C77  1903               	skipnz
  6484  0C78  0AF3               	incf	i1___awdiv@dividend+1,f
  6485  0C79                     i1l3115:
  6486  0C79  3001               	movlw	1
  6487  0C7A  00FF               	movwf	btemp+1
  6488  0C7B  087F               	movf	btemp+1,w
  6489  0C7C  06F5               	xorwf	i1___awdiv@sign,f
  6490  0C7D                     i1l3117:
  6491  0C7D  01F6               	clrf	i1___awdiv@quotient
  6492  0C7E  01F7               	clrf	i1___awdiv@quotient+1
  6493  0C7F                     i1l3119:
  6494  0C7F  0870               	movf	i1___awdiv@divisor,w
  6495  0C80  0471               	iorwf	i1___awdiv@divisor+1,w
  6496  0C81  1903               	btfsc	3,2
  6497  0C82  2C84               	goto	u240_21
  6498  0C83  2C85               	goto	u240_20
  6499  0C84                     u240_21:
  6500  0C84  2CBC               	goto	i1l3139
  6501  0C85                     u240_20:
  6502  0C85                     i1l3121:
  6503  0C85  01F4               	clrf	i1___awdiv@counter
  6504  0C86  0AF4               	incf	i1___awdiv@counter,f
  6505  0C87  2C93               	goto	i1l3127
  6506  0C88                     i1l3123:
  6507  0C88  3001               	movlw	1
  6508  0C89                     u241_25:
  6509  0C89  1003               	clrc
  6510  0C8A  0DF0               	rlf	i1___awdiv@divisor,f
  6511  0C8B  0DF1               	rlf	i1___awdiv@divisor+1,f
  6512  0C8C  3EFF               	addlw	-1
  6513  0C8D  1D03               	skipz
  6514  0C8E  2C89               	goto	u241_25
  6515  0C8F                     i1l3125:
  6516  0C8F  3001               	movlw	1
  6517  0C90  00FF               	movwf	btemp+1
  6518  0C91  087F               	movf	btemp+1,w
  6519  0C92  07F4               	addwf	i1___awdiv@counter,f
  6520  0C93                     i1l3127:
  6521  0C93  1FF1               	btfss	i1___awdiv@divisor+1,7
  6522  0C94  2C96               	goto	u242_21
  6523  0C95  2C97               	goto	u242_20
  6524  0C96                     u242_21:
  6525  0C96  2C88               	goto	i1l3123
  6526  0C97                     u242_20:
  6527  0C97                     i1l3129:
  6528  0C97  3001               	movlw	1
  6529  0C98                     u243_25:
  6530  0C98  1003               	clrc
  6531  0C99  0DF6               	rlf	i1___awdiv@quotient,f
  6532  0C9A  0DF7               	rlf	i1___awdiv@quotient+1,f
  6533  0C9B  3EFF               	addlw	-1
  6534  0C9C  1D03               	skipz
  6535  0C9D  2C98               	goto	u243_25
  6536  0C9E  0871               	movf	i1___awdiv@divisor+1,w
  6537  0C9F  0273               	subwf	i1___awdiv@dividend+1,w
  6538  0CA0  1D03               	skipz
  6539  0CA1  2CA4               	goto	u244_25
  6540  0CA2  0870               	movf	i1___awdiv@divisor,w
  6541  0CA3  0272               	subwf	i1___awdiv@dividend,w
  6542  0CA4                     u244_25:
  6543  0CA4  1C03               	skipc
  6544  0CA5  2CA7               	goto	u244_21
  6545  0CA6  2CA8               	goto	u244_20
  6546  0CA7                     u244_21:
  6547  0CA7  2CAF               	goto	i1l3135
  6548  0CA8                     u244_20:
  6549  0CA8                     i1l3131:
  6550  0CA8  0870               	movf	i1___awdiv@divisor,w
  6551  0CA9  02F2               	subwf	i1___awdiv@dividend,f
  6552  0CAA  0871               	movf	i1___awdiv@divisor+1,w
  6553  0CAB  1C03               	skipc
  6554  0CAC  03F3               	decf	i1___awdiv@dividend+1,f
  6555  0CAD  02F3               	subwf	i1___awdiv@dividend+1,f
  6556  0CAE                     i1l3133:
  6557  0CAE  1476               	bsf	i1___awdiv@quotient,0
  6558  0CAF                     i1l3135:
  6559  0CAF  3001               	movlw	1
  6560  0CB0                     u245_25:
  6561  0CB0  1003               	clrc
  6562  0CB1  0CF1               	rrf	i1___awdiv@divisor+1,f
  6563  0CB2  0CF0               	rrf	i1___awdiv@divisor,f
  6564  0CB3  3EFF               	addlw	-1
  6565  0CB4  1D03               	skipz
  6566  0CB5  2CB0               	goto	u245_25
  6567  0CB6                     i1l3137:
  6568  0CB6  3001               	movlw	1
  6569  0CB7  02F4               	subwf	i1___awdiv@counter,f
  6570  0CB8  1D03               	btfss	3,2
  6571  0CB9  2CBB               	goto	u246_21
  6572  0CBA  2CBC               	goto	u246_20
  6573  0CBB                     u246_21:
  6574  0CBB  2C97               	goto	i1l3129
  6575  0CBC                     u246_20:
  6576  0CBC                     i1l3139:
  6577  0CBC  0875               	movf	i1___awdiv@sign,w
  6578  0CBD  1903               	btfsc	3,2
  6579  0CBE  2CC0               	goto	u247_21
  6580  0CBF  2CC1               	goto	u247_20
  6581  0CC0                     u247_21:
  6582  0CC0  2CC6               	goto	i1l3143
  6583  0CC1                     u247_20:
  6584  0CC1                     i1l3141:
  6585  0CC1  09F6               	comf	i1___awdiv@quotient,f
  6586  0CC2  09F7               	comf	i1___awdiv@quotient+1,f
  6587  0CC3  0AF6               	incf	i1___awdiv@quotient,f
  6588  0CC4  1903               	skipnz
  6589  0CC5  0AF7               	incf	i1___awdiv@quotient+1,f
  6590  0CC6                     i1l3143:
  6591  0CC6  0877               	movf	i1___awdiv@quotient+1,w
  6592  0CC7  00F1               	movwf	?i1___awdiv+1
  6593  0CC8  0876               	movf	i1___awdiv@quotient,w
  6594  0CC9  00F0               	movwf	?i1___awdiv
  6595  0CCA                     i1l912:
  6596  0CCA  0008               	return
  6597  0CCB                     __end_ofi1___awdiv:
  6598                           
  6599                           	psect	text38
  6600  0890                     __ptext38:	
  6601 ;; *************** function i1_SSD_Write *****************
  6602 ;; Defined at:
  6603 ;;		line 35 in file "SSD.c"
  6604 ;; Parameters:    Size  Location     Type
  6605 ;;  ID              1    wreg     unsigned char 
  6606 ;;  Number          1    8[COMMON] unsigned char 
  6607 ;; Auto vars:     Size  Location     Type
  6608 ;;  ID              1    9[COMMON] unsigned char 
  6609 ;; Return value:  Size  Location     Type
  6610 ;;                  1    wreg      unsigned char 
  6611 ;; Registers used:
  6612 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6613 ;; Tracked objects:
  6614 ;;		On entry : 0/0
  6615 ;;		On exit  : 0/0
  6616 ;;		Unchanged: 0/0
  6617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6618 ;;      Params:         1       0       0       0       0
  6619 ;;      Locals:         1       0       0       0       0
  6620 ;;      Temps:          0       0       0       0       0
  6621 ;;      Totals:         2       0       0       0       0
  6622 ;;Total ram usage:        2 bytes
  6623 ;; Hardware stack levels used:    1
  6624 ;; Hardware stack levels required when called:    1
  6625 ;; This function calls:
  6626 ;;		i1_SSD_config
  6627 ;; This function is called by:
  6628 ;;		i1_Heater_Display
  6629 ;; This function uses a non-reentrant model
  6630 ;;
  6631                           
  6632                           
  6633                           ;psect for function i1_SSD_Write
  6634  0890                     i1_SSD_Write:
  6635                           
  6636                           ;incstack = 0
  6637 ;; hardware stack exceeded
  6638                           ; Regs used in i1_SSD_Write: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6639                           ;i1SSD_Write@ID stored from wreg
  6640  0890  00F9               	movwf	i1SSD_Write@ID
  6641  0891                     i1l3091:
  6642                           
  6643                           ;SSD.c: 35: Std_ReturnType SSD_Write(SSD_ID ID ,SSD_Number Number);SSD.c: 36: {;SSD.c: 3
      +                          8:     SSD_config(ID,ON);
  6644  0891  01F0               	clrf	i1SSD_config@SSD_state
  6645  0892  0AF0               	incf	i1SSD_config@SSD_state,f
  6646  0893  0879               	movf	i1SSD_Write@ID,w
  6647  0894  120A  158A  2607  120A  158A  	fcall	i1_SSD_config
  6648  0899                     i1l3093:
  6649                           
  6650                           ;SSD.c: 40:     ((TRISD)=(0u));
  6651  0899  1683               	bsf	3,5	;RP0=1, select bank1
  6652  089A  1303               	bcf	3,6	;RP1=0, select bank1
  6653  089B  0188               	clrf	8	;volatile
  6654  089C                     i1l3095:
  6655                           
  6656                           ;SSD.c: 42:     if((Number>=0) && (Number<=9))
  6657  089C  300A               	movlw	10
  6658  089D  0278               	subwf	i1SSD_Write@Number,w
  6659  089E  1803               	skipnc
  6660  089F  28A1               	goto	u237_21
  6661  08A0  28A2               	goto	u237_20
  6662  08A1                     u237_21:
  6663  08A1  28AA               	goto	i1l663
  6664  08A2                     u237_20:
  6665  08A2                     i1l3097:
  6666                           
  6667                           ;SSD.c: 43:     {;SSD.c: 45:         ((PORTD)=(SSD_code[Number]));
  6668  08A2  0878               	movf	i1SSD_Write@Number,w
  6669  08A3  3EC9               	addlw	(low (_SSD_code| 0))& (0+255)
  6670  08A4  0084               	movwf	4
  6671  08A5  1383               	bcf	3,7	;select IRP bank1
  6672  08A6  0800               	movf	0,w
  6673  08A7  1283               	bcf	3,5	;RP0=0, select bank0
  6674  08A8  1303               	bcf	3,6	;RP1=0, select bank0
  6675  08A9  0088               	movwf	8	;volatile
  6676  08AA                     i1l663:
  6677  08AA  0008               	return
  6678  08AB                     __end_ofi1_SSD_Write:
  6679                           
  6680                           	psect	text39
  6681  0E07                     __ptext39:	
  6682 ;; *************** function i1_SSD_config *****************
  6683 ;; Defined at:
  6684 ;;		line 11 in file "SSD.c"
  6685 ;; Parameters:    Size  Location     Type
  6686 ;;  ID              1    wreg     unsigned char 
  6687 ;;  SSD_state       1    0[COMMON] enum E13
  6688 ;; Auto vars:     Size  Location     Type
  6689 ;;  ID              1    3[COMMON] unsigned char 
  6690 ;; Return value:  Size  Location     Type
  6691 ;;                  1    wreg      void 
  6692 ;; Registers used:
  6693 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  6694 ;; Tracked objects:
  6695 ;;		On entry : 0/0
  6696 ;;		On exit  : 0/0
  6697 ;;		Unchanged: 0/0
  6698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6699 ;;      Params:         1       0       0       0       0
  6700 ;;      Locals:         1       0       0       0       0
  6701 ;;      Temps:          2       0       0       0       0
  6702 ;;      Totals:         4       0       0       0       0
  6703 ;;Total ram usage:        4 bytes
  6704 ;; Hardware stack levels used:    1
  6705 ;; This function calls:
  6706 ;;		Nothing
  6707 ;; This function is called by:
  6708 ;;		i1_SSD_Write
  6709 ;;		i1_Heater_Display
  6710 ;; This function uses a non-reentrant model
  6711 ;;
  6712                           
  6713                           
  6714                           ;psect for function i1_SSD_config
  6715  0E07                     i1_SSD_config:
  6716                           
  6717                           ;incstack = 0
  6718 ;; hardware stack exceeded
  6719                           ; Regs used in i1_SSD_config: [wreg-fsr0h+status,2+status,0+btemp+1]
  6720                           ;i1SSD_config@ID stored from wreg
  6721  0E07  00F3               	movwf	i1SSD_config@ID
  6722  0E08                     i1l2943:
  6723                           
  6724                           ;SSD.c: 11: static void SSD_config (SSD_ID ID ,tState SSD_state);SSD.c: 12: {;SSD.c: 15:
      +                               switch(ID)
  6725  0E08  2E61               	goto	i1l2987
  6726  0E09                     i1l2947:
  6727  0E09  30FB               	movlw	251
  6728  0E0A  00FF               	movwf	btemp+1
  6729  0E0B  087F               	movf	btemp+1,w
  6730  0E0C  1683               	bsf	3,5	;RP0=1, select bank1
  6731  0E0D  1303               	bcf	3,6	;RP1=0, select bank1
  6732  0E0E  0585               	andwf	5,f	;volatile
  6733  0E0F                     i1l2949:
  6734                           
  6735                           ;SSD.c: 19:             (SSD_state)?(PORTA |= (1<<2)) : (PORTA &= ~(1<<2));
  6736  0E0F  0870               	movf	i1SSD_config@SSD_state,w
  6737  0E10  1903               	btfsc	3,2
  6738  0E11  2E13               	goto	u220_21
  6739  0E12  2E14               	goto	u220_20
  6740  0E13                     u220_21:
  6741  0E13  2E18               	goto	i1l2953
  6742  0E14                     u220_20:
  6743  0E14                     i1l2951:
  6744  0E14  1283               	bcf	3,5	;RP0=0, select bank0
  6745  0E15  1303               	bcf	3,6	;RP1=0, select bank0
  6746  0E16  1505               	bsf	5,2	;volatile
  6747  0E17  2E77               	goto	i1l659
  6748  0E18                     i1l2953:
  6749  0E18  30FB               	movlw	251
  6750  0E19  00FF               	movwf	btemp+1
  6751  0E1A  087F               	movf	btemp+1,w
  6752  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  6753  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  6754  0E1D  0585               	andwf	5,f	;volatile
  6755  0E1E  2E77               	goto	i1l659
  6756  0E1F                     i1l2957:
  6757  0E1F  30F7               	movlw	247
  6758  0E20  00FF               	movwf	btemp+1
  6759  0E21  087F               	movf	btemp+1,w
  6760  0E22  1683               	bsf	3,5	;RP0=1, select bank1
  6761  0E23  1303               	bcf	3,6	;RP1=0, select bank1
  6762  0E24  0585               	andwf	5,f	;volatile
  6763  0E25                     i1l2959:
  6764                           
  6765                           ;SSD.c: 23:             (SSD_state)?(PORTA |= (1<<3)) : (PORTA &= ~(1<<3));
  6766  0E25  0870               	movf	i1SSD_config@SSD_state,w
  6767  0E26  1903               	btfsc	3,2
  6768  0E27  2E29               	goto	u221_21
  6769  0E28  2E2A               	goto	u221_20
  6770  0E29                     u221_21:
  6771  0E29  2E2E               	goto	i1l2963
  6772  0E2A                     u221_20:
  6773  0E2A                     i1l2961:
  6774  0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  6775  0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  6776  0E2C  1585               	bsf	5,3	;volatile
  6777  0E2D  2E77               	goto	i1l659
  6778  0E2E                     i1l2963:
  6779  0E2E  30F7               	movlw	247
  6780  0E2F  00FF               	movwf	btemp+1
  6781  0E30  087F               	movf	btemp+1,w
  6782  0E31  1283               	bcf	3,5	;RP0=0, select bank0
  6783  0E32  1303               	bcf	3,6	;RP1=0, select bank0
  6784  0E33  0585               	andwf	5,f	;volatile
  6785  0E34  2E77               	goto	i1l659
  6786  0E35                     i1l2967:
  6787  0E35  30EF               	movlw	239
  6788  0E36  00FF               	movwf	btemp+1
  6789  0E37  087F               	movf	btemp+1,w
  6790  0E38  1683               	bsf	3,5	;RP0=1, select bank1
  6791  0E39  1303               	bcf	3,6	;RP1=0, select bank1
  6792  0E3A  0585               	andwf	5,f	;volatile
  6793  0E3B                     i1l2969:
  6794                           
  6795                           ;SSD.c: 27:             (SSD_state)?(PORTA |= (1<<4)) : (PORTA &= ~(1<<4));
  6796  0E3B  0870               	movf	i1SSD_config@SSD_state,w
  6797  0E3C  1903               	btfsc	3,2
  6798  0E3D  2E3F               	goto	u222_21
  6799  0E3E  2E40               	goto	u222_20
  6800  0E3F                     u222_21:
  6801  0E3F  2E44               	goto	i1l2973
  6802  0E40                     u222_20:
  6803  0E40                     i1l2971:
  6804  0E40  1283               	bcf	3,5	;RP0=0, select bank0
  6805  0E41  1303               	bcf	3,6	;RP1=0, select bank0
  6806  0E42  1605               	bsf	5,4	;volatile
  6807  0E43  2E77               	goto	i1l659
  6808  0E44                     i1l2973:
  6809  0E44  30EF               	movlw	239
  6810  0E45  00FF               	movwf	btemp+1
  6811  0E46  087F               	movf	btemp+1,w
  6812  0E47  1283               	bcf	3,5	;RP0=0, select bank0
  6813  0E48  1303               	bcf	3,6	;RP1=0, select bank0
  6814  0E49  0585               	andwf	5,f	;volatile
  6815  0E4A  2E77               	goto	i1l659
  6816  0E4B                     i1l2977:
  6817  0E4B  30DF               	movlw	223
  6818  0E4C  00FF               	movwf	btemp+1
  6819  0E4D  087F               	movf	btemp+1,w
  6820  0E4E  1683               	bsf	3,5	;RP0=1, select bank1
  6821  0E4F  1303               	bcf	3,6	;RP1=0, select bank1
  6822  0E50  0585               	andwf	5,f	;volatile
  6823  0E51                     i1l2979:
  6824                           
  6825                           ;SSD.c: 31:             (SSD_state)?(PORTA |= (1<<5)) : (PORTA &= ~(1<<5));
  6826  0E51  0870               	movf	i1SSD_config@SSD_state,w
  6827  0E52  1903               	btfsc	3,2
  6828  0E53  2E55               	goto	u223_21
  6829  0E54  2E56               	goto	u223_20
  6830  0E55                     u223_21:
  6831  0E55  2E5A               	goto	i1l2983
  6832  0E56                     u223_20:
  6833  0E56                     i1l2981:
  6834  0E56  1283               	bcf	3,5	;RP0=0, select bank0
  6835  0E57  1303               	bcf	3,6	;RP1=0, select bank0
  6836  0E58  1685               	bsf	5,5	;volatile
  6837  0E59  2E77               	goto	i1l659
  6838  0E5A                     i1l2983:
  6839  0E5A  30DF               	movlw	223
  6840  0E5B  00FF               	movwf	btemp+1
  6841  0E5C  087F               	movf	btemp+1,w
  6842  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  6843  0E5E  1303               	bcf	3,6	;RP1=0, select bank0
  6844  0E5F  0585               	andwf	5,f	;volatile
  6845  0E60  2E77               	goto	i1l659
  6846  0E61                     i1l2987:
  6847  0E61  0873               	movf	i1SSD_config@ID,w
  6848  0E62  00F1               	movwf	??i1_SSD_config
  6849  0E63  01F2               	clrf	??i1_SSD_config+1
  6850                           
  6851                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6852                           ; Switch size 1, requested type "simple"
  6853                           ; Number of cases is 1, Range of values is 0 to 0
  6854                           ; switch strategies available:
  6855                           ; Name         Instructions Cycles
  6856                           ; simple_byte            4     3 (average)
  6857                           ; direct_byte           11     8 (fixed)
  6858                           ; jumptable            260     6 (fixed)
  6859                           ;	Chosen strategy is simple_byte
  6860  0E64  0872               	movf	??i1_SSD_config+1,w
  6861  0E65  3A00               	xorlw	0	; case 0
  6862  0E66  1903               	skipnz
  6863  0E67  2E69               	goto	i1l4197
  6864  0E68  2E77               	goto	i1l659
  6865  0E69                     i1l4197:
  6866                           
  6867                           ; Switch size 1, requested type "simple"
  6868                           ; Number of cases is 4, Range of values is 2 to 5
  6869                           ; switch strategies available:
  6870                           ; Name         Instructions Cycles
  6871                           ; simple_byte           13     7 (average)
  6872                           ; direct_byte           23    11 (fixed)
  6873                           ; jumptable            263     9 (fixed)
  6874                           ;	Chosen strategy is simple_byte
  6875  0E69  0871               	movf	??i1_SSD_config,w
  6876  0E6A  3A02               	xorlw	2	; case 2
  6877  0E6B  1903               	skipnz
  6878  0E6C  2E09               	goto	i1l2947
  6879  0E6D  3A01               	xorlw	1	; case 3
  6880  0E6E  1903               	skipnz
  6881  0E6F  2E1F               	goto	i1l2957
  6882  0E70  3A07               	xorlw	7	; case 4
  6883  0E71  1903               	skipnz
  6884  0E72  2E35               	goto	i1l2967
  6885  0E73  3A01               	xorlw	1	; case 5
  6886  0E74  1903               	skipnz
  6887  0E75  2E4B               	goto	i1l2977
  6888  0E76  2E77               	goto	i1l659
  6889  0E77                     i1l659:
  6890  0E77  0008               	return
  6891  0E78                     __end_ofi1_SSD_config:
  6892                           
  6893                           	psect	text40
  6894  0674                     __ptext40:	
  6895 ;; *************** function ___xxtofl *****************
  6896 ;; Defined at:
  6897 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\xxtofl.c"
  6898 ;; Parameters:    Size  Location     Type
  6899 ;;  sign            1    wreg     unsigned char 
  6900 ;;  val             4    0[COMMON] long 
  6901 ;; Auto vars:     Size  Location     Type
  6902 ;;  sign            1    8[COMMON] unsigned char 
  6903 ;;  arg             4   10[COMMON] unsigned long 
  6904 ;;  exp             1    9[COMMON] unsigned char 
  6905 ;; Return value:  Size  Location     Type
  6906 ;;                  4    0[COMMON] unsigned char 
  6907 ;; Registers used:
  6908 ;;		wreg, status,2, status,0, btemp+1
  6909 ;; Tracked objects:
  6910 ;;		On entry : 0/0
  6911 ;;		On exit  : 0/0
  6912 ;;		Unchanged: 0/0
  6913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6914 ;;      Params:         4       0       0       0       0
  6915 ;;      Locals:         6       0       0       0       0
  6916 ;;      Temps:          4       0       0       0       0
  6917 ;;      Totals:        14       0       0       0       0
  6918 ;;Total ram usage:       14 bytes
  6919 ;; Hardware stack levels used:    1
  6920 ;; This function calls:
  6921 ;;		Nothing
  6922 ;; This function is called by:
  6923 ;;		_ISR
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927                           
  6928                           ;psect for function ___xxtofl
  6929  0674                     ___xxtofl:
  6930                           
  6931                           ;incstack = 0
  6932                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  6933                           ;___xxtofl@sign stored from wreg
  6934  0674  00F8               	movwf	___xxtofl@sign
  6935  0675                     i1l3723:
  6936  0675  0878               	movf	___xxtofl@sign,w
  6937  0676  1903               	btfsc	3,2
  6938  0677  2E79               	goto	u344_21
  6939  0678  2E7A               	goto	u344_20
  6940  0679                     u344_21:
  6941  0679  2E8E               	goto	i1l3729
  6942  067A                     u344_20:
  6943  067A                     i1l3725:
  6944  067A  1FF3               	btfss	___xxtofl@val+3,7
  6945  067B  2E7D               	goto	u345_21
  6946  067C  2E7E               	goto	u345_20
  6947  067D                     u345_21:
  6948  067D  2E8E               	goto	i1l3729
  6949  067E                     u345_20:
  6950  067E                     i1l3727:
  6951  067E  0970               	comf	___xxtofl@val,w
  6952  067F  00FA               	movwf	___xxtofl@arg
  6953  0680  0971               	comf	___xxtofl@val+1,w
  6954  0681  00FB               	movwf	___xxtofl@arg+1
  6955  0682  0972               	comf	___xxtofl@val+2,w
  6956  0683  00FC               	movwf	___xxtofl@arg+2
  6957  0684  0973               	comf	___xxtofl@val+3,w
  6958  0685  00FD               	movwf	___xxtofl@arg+3
  6959  0686  0AFA               	incf	___xxtofl@arg,f
  6960  0687  1903               	skipnz
  6961  0688  0AFB               	incf	___xxtofl@arg+1,f
  6962  0689  1903               	skipnz
  6963  068A  0AFC               	incf	___xxtofl@arg+2,f
  6964  068B  1903               	skipnz
  6965  068C  0AFD               	incf	___xxtofl@arg+3,f
  6966  068D  2E96               	goto	i1l1192
  6967  068E                     i1l3729:
  6968  068E  0873               	movf	___xxtofl@val+3,w
  6969  068F  00FD               	movwf	___xxtofl@arg+3
  6970  0690  0872               	movf	___xxtofl@val+2,w
  6971  0691  00FC               	movwf	___xxtofl@arg+2
  6972  0692  0871               	movf	___xxtofl@val+1,w
  6973  0693  00FB               	movwf	___xxtofl@arg+1
  6974  0694  0870               	movf	___xxtofl@val,w
  6975  0695  00FA               	movwf	___xxtofl@arg
  6976  0696                     i1l1192:
  6977  0696  0873               	movf	___xxtofl@val+3,w
  6978  0697  0472               	iorwf	___xxtofl@val+2,w
  6979  0698  0471               	iorwf	___xxtofl@val+1,w
  6980  0699  0470               	iorwf	___xxtofl@val,w
  6981  069A  1D03               	skipz
  6982  069B  2E9D               	goto	u346_21
  6983  069C  2E9E               	goto	u346_20
  6984  069D                     u346_21:
  6985  069D  2EA7               	goto	i1l3735
  6986  069E                     u346_20:
  6987  069E                     i1l3731:
  6988  069E  3000               	movlw	0
  6989  069F  00F3               	movwf	?___xxtofl+3
  6990  06A0  3000               	movlw	0
  6991  06A1  00F2               	movwf	?___xxtofl+2
  6992  06A2  3000               	movlw	0
  6993  06A3  00F1               	movwf	?___xxtofl+1
  6994  06A4  3000               	movlw	0
  6995  06A5  00F0               	movwf	?___xxtofl
  6996  06A6  2F2D               	goto	i1l1194
  6997  06A7                     i1l3735:
  6998  06A7  3096               	movlw	150
  6999  06A8  00FF               	movwf	btemp+1
  7000  06A9  087F               	movf	btemp+1,w
  7001  06AA  00F9               	movwf	___xxtofl@exp
  7002  06AB  2EB9               	goto	i1l3741
  7003  06AC                     i1l3737:
  7004  06AC  3001               	movlw	1
  7005  06AD  00FF               	movwf	btemp+1
  7006  06AE  087F               	movf	btemp+1,w
  7007  06AF  07F9               	addwf	___xxtofl@exp,f
  7008  06B0                     i1l3739:
  7009  06B0  3001               	movlw	1
  7010  06B1                     u347_25:
  7011  06B1  1003               	clrc
  7012  06B2  0CFD               	rrf	___xxtofl@arg+3,f
  7013  06B3  0CFC               	rrf	___xxtofl@arg+2,f
  7014  06B4  0CFB               	rrf	___xxtofl@arg+1,f
  7015  06B5  0CFA               	rrf	___xxtofl@arg,f
  7016  06B6  3EFF               	addlw	-1
  7017  06B7  1D03               	skipz
  7018  06B8  2EB1               	goto	u347_25
  7019  06B9                     i1l3741:
  7020  06B9  30FE               	movlw	254
  7021  06BA  057D               	andwf	___xxtofl@arg+3,w
  7022  06BB  1D03               	btfss	3,2
  7023  06BC  2EBE               	goto	u348_21
  7024  06BD  2EBF               	goto	u348_20
  7025  06BE                     u348_21:
  7026  06BE  2EAC               	goto	i1l3737
  7027  06BF                     u348_20:
  7028  06BF  2EDB               	goto	i1l3749
  7029  06C0                     i1l3743:
  7030  06C0  3001               	movlw	1
  7031  06C1  00FF               	movwf	btemp+1
  7032  06C2  087F               	movf	btemp+1,w
  7033  06C3  07F9               	addwf	___xxtofl@exp,f
  7034  06C4                     i1l3745:
  7035  06C4  3001               	movlw	1
  7036  06C5  07FA               	addwf	___xxtofl@arg,f
  7037  06C6  3000               	movlw	0
  7038  06C7  1803               	skipnc
  7039  06C8  3001               	movlw	1
  7040  06C9  07FB               	addwf	___xxtofl@arg+1,f
  7041  06CA  3000               	movlw	0
  7042  06CB  1803               	skipnc
  7043  06CC  3001               	movlw	1
  7044  06CD  07FC               	addwf	___xxtofl@arg+2,f
  7045  06CE  3000               	movlw	0
  7046  06CF  1803               	skipnc
  7047  06D0  3001               	movlw	1
  7048  06D1  07FD               	addwf	___xxtofl@arg+3,f
  7049  06D2                     i1l3747:
  7050  06D2  3001               	movlw	1
  7051  06D3                     u349_25:
  7052  06D3  1003               	clrc
  7053  06D4  0CFD               	rrf	___xxtofl@arg+3,f
  7054  06D5  0CFC               	rrf	___xxtofl@arg+2,f
  7055  06D6  0CFB               	rrf	___xxtofl@arg+1,f
  7056  06D7  0CFA               	rrf	___xxtofl@arg,f
  7057  06D8  3EFF               	addlw	-1
  7058  06D9  1D03               	skipz
  7059  06DA  2ED3               	goto	u349_25
  7060  06DB                     i1l3749:
  7061  06DB  30FF               	movlw	255
  7062  06DC  057D               	andwf	___xxtofl@arg+3,w
  7063  06DD  1D03               	btfss	3,2
  7064  06DE  2EE0               	goto	u350_21
  7065  06DF  2EE1               	goto	u350_20
  7066  06E0                     u350_21:
  7067  06E0  2EC0               	goto	i1l3743
  7068  06E1                     u350_20:
  7069  06E1  2EED               	goto	i1l3753
  7070  06E2                     i1l3751:
  7071  06E2  3001               	movlw	1
  7072  06E3  02F9               	subwf	___xxtofl@exp,f
  7073  06E4  3001               	movlw	1
  7074  06E5  00F4               	movwf	??___xxtofl
  7075  06E6                     u351_25:
  7076  06E6  1003               	clrc
  7077  06E7  0DFA               	rlf	___xxtofl@arg,f
  7078  06E8  0DFB               	rlf	___xxtofl@arg+1,f
  7079  06E9  0DFC               	rlf	___xxtofl@arg+2,f
  7080  06EA  0DFD               	rlf	___xxtofl@arg+3,f
  7081  06EB  0BF4               	decfsz	??___xxtofl,f
  7082  06EC  2EE6               	goto	u351_25
  7083  06ED                     i1l3753:
  7084  06ED  1BFC               	btfsc	___xxtofl@arg+2,7
  7085  06EE  2EF0               	goto	u352_21
  7086  06EF  2EF1               	goto	u352_20
  7087  06F0                     u352_21:
  7088  06F0  2EF7               	goto	i1l1205
  7089  06F1                     u352_20:
  7090  06F1                     i1l3755:
  7091  06F1  3002               	movlw	2
  7092  06F2  0279               	subwf	___xxtofl@exp,w
  7093  06F3  1803               	skipnc
  7094  06F4  2EF6               	goto	u353_21
  7095  06F5  2EF7               	goto	u353_20
  7096  06F6                     u353_21:
  7097  06F6  2EE2               	goto	i1l3751
  7098  06F7                     u353_20:
  7099  06F7                     i1l1205:
  7100  06F7  1879               	btfsc	___xxtofl@exp,0
  7101  06F8  2EFA               	goto	u354_21
  7102  06F9  2EFB               	goto	u354_20
  7103  06FA                     u354_21:
  7104  06FA  2F03               	goto	i1l1206
  7105  06FB                     u354_20:
  7106  06FB                     i1l3757:
  7107  06FB  30FF               	movlw	255
  7108  06FC  05FA               	andwf	___xxtofl@arg,f
  7109  06FD  30FF               	movlw	255
  7110  06FE  05FB               	andwf	___xxtofl@arg+1,f
  7111  06FF  307F               	movlw	127
  7112  0700  05FC               	andwf	___xxtofl@arg+2,f
  7113  0701  30FF               	movlw	255
  7114  0702  05FD               	andwf	___xxtofl@arg+3,f
  7115  0703                     i1l1206:
  7116  0703  1003               	clrc
  7117  0704  0CF9               	rrf	___xxtofl@exp,f
  7118  0705                     i1l3759:
  7119  0705  0879               	movf	___xxtofl@exp,w
  7120  0706  00F4               	movwf	??___xxtofl
  7121  0707  01F5               	clrf	??___xxtofl+1
  7122  0708  01F6               	clrf	??___xxtofl+2
  7123  0709  01F7               	clrf	??___xxtofl+3
  7124  070A  3018               	movlw	24
  7125  070B                     u355_25:
  7126  070B  1003               	clrc
  7127  070C  0DF4               	rlf	??___xxtofl,f
  7128  070D  0DF5               	rlf	??___xxtofl+1,f
  7129  070E  0DF6               	rlf	??___xxtofl+2,f
  7130  070F  0DF7               	rlf	??___xxtofl+3,f
  7131  0710                     u355_20:
  7132  0710  3EFF               	addlw	-1
  7133  0711  1D03               	skipz
  7134  0712  2F0B               	goto	u355_25
  7135  0713  0874               	movf	??___xxtofl,w
  7136  0714  04FA               	iorwf	___xxtofl@arg,f
  7137  0715  0875               	movf	??___xxtofl+1,w
  7138  0716  04FB               	iorwf	___xxtofl@arg+1,f
  7139  0717  0876               	movf	??___xxtofl+2,w
  7140  0718  04FC               	iorwf	___xxtofl@arg+2,f
  7141  0719  0877               	movf	??___xxtofl+3,w
  7142  071A  04FD               	iorwf	___xxtofl@arg+3,f
  7143  071B                     i1l3761:
  7144  071B  0878               	movf	___xxtofl@sign,w
  7145  071C  1903               	btfsc	3,2
  7146  071D  2F1F               	goto	u356_21
  7147  071E  2F20               	goto	u356_20
  7148  071F                     u356_21:
  7149  071F  2F25               	goto	i1l3767
  7150  0720                     u356_20:
  7151  0720                     i1l3763:
  7152  0720  1FF3               	btfss	___xxtofl@val+3,7
  7153  0721  2F23               	goto	u357_21
  7154  0722  2F24               	goto	u357_20
  7155  0723                     u357_21:
  7156  0723  2F25               	goto	i1l3767
  7157  0724                     u357_20:
  7158  0724                     i1l3765:
  7159  0724  17FD               	bsf	___xxtofl@arg+3,7
  7160  0725                     i1l3767:
  7161  0725  087D               	movf	___xxtofl@arg+3,w
  7162  0726  00F3               	movwf	?___xxtofl+3
  7163  0727  087C               	movf	___xxtofl@arg+2,w
  7164  0728  00F2               	movwf	?___xxtofl+2
  7165  0729  087B               	movf	___xxtofl@arg+1,w
  7166  072A  00F1               	movwf	?___xxtofl+1
  7167  072B  087A               	movf	___xxtofl@arg,w
  7168  072C  00F0               	movwf	?___xxtofl
  7169  072D                     i1l1194:
  7170  072D  0008               	return
  7171  072E                     __end_of___xxtofl:
  7172                           
  7173                           	psect	text41
  7174  0E78                     __ptext41:	
  7175 ;; *************** function ___fltol *****************
  7176 ;; Defined at:
  7177 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fltol.c"
  7178 ;; Parameters:    Size  Location     Type
  7179 ;;  f1              4   26[BANK0 ] unsigned char 
  7180 ;; Auto vars:     Size  Location     Type
  7181 ;;  exp1            1   35[BANK0 ] unsigned char 
  7182 ;;  sign1           1   34[BANK0 ] unsigned char 
  7183 ;; Return value:  Size  Location     Type
  7184 ;;                  4   26[BANK0 ] long 
  7185 ;; Registers used:
  7186 ;;		wreg, status,2, status,0, btemp+1
  7187 ;; Tracked objects:
  7188 ;;		On entry : 0/0
  7189 ;;		On exit  : 0/0
  7190 ;;		Unchanged: 0/0
  7191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7192 ;;      Params:         0       4       0       0       0
  7193 ;;      Locals:         0       2       0       0       0
  7194 ;;      Temps:          0       4       0       0       0
  7195 ;;      Totals:         0      10       0       0       0
  7196 ;;Total ram usage:       10 bytes
  7197 ;; Hardware stack levels used:    1
  7198 ;; This function calls:
  7199 ;;		Nothing
  7200 ;; This function is called by:
  7201 ;;		_ISR
  7202 ;; This function uses a non-reentrant model
  7203 ;;
  7204                           
  7205                           
  7206                           ;psect for function ___fltol
  7207  0E78                     ___fltol:
  7208  0E78                     i1l3543:	
  7209                           ;incstack = 0
  7210                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  7211                           
  7212  0E78  1003               	clrc
  7213  0E79  1283               	bcf	3,5	;RP0=0, select bank0
  7214  0E7A  1303               	bcf	3,6	;RP1=0, select bank0
  7215  0E7B  0D3C               	rlf	___fltol@f1+2,w
  7216  0E7C  0D3D               	rlf	___fltol@f1+3,w
  7217  0E7D  00FF               	movwf	btemp+1
  7218  0E7E  087F               	movf	btemp+1,w
  7219  0E7F  00C3               	movwf	___fltol@exp1
  7220  0E80  0843               	movf	___fltol@exp1,w
  7221  0E81  1D03               	btfss	3,2
  7222  0E82  2E84               	goto	u297_21
  7223  0E83  2E85               	goto	u297_20
  7224  0E84                     u297_21:
  7225  0E84  2E8E               	goto	i1l3549
  7226  0E85                     u297_20:
  7227  0E85                     i1l3545:
  7228  0E85  3000               	movlw	0
  7229  0E86  00BD               	movwf	?___fltol+3
  7230  0E87  3000               	movlw	0
  7231  0E88  00BC               	movwf	?___fltol+2
  7232  0E89  3000               	movlw	0
  7233  0E8A  00BB               	movwf	?___fltol+1
  7234  0E8B  3000               	movlw	0
  7235  0E8C  00BA               	movwf	?___fltol
  7236  0E8D  2EF3               	goto	i1l945
  7237  0E8E                     i1l3549:
  7238  0E8E  083A               	movf	___fltol@f1,w
  7239  0E8F  00BE               	movwf	??___fltol
  7240  0E90  083B               	movf	___fltol@f1+1,w
  7241  0E91  00BF               	movwf	??___fltol+1
  7242  0E92  083C               	movf	___fltol@f1+2,w
  7243  0E93  00C0               	movwf	??___fltol+2
  7244  0E94  083D               	movf	___fltol@f1+3,w
  7245  0E95  00C1               	movwf	??___fltol+3
  7246  0E96  301F               	movlw	31
  7247  0E97                     u298_25:
  7248  0E97  1003               	clrc
  7249  0E98  0CC1               	rrf	??___fltol+3,f
  7250  0E99  0CC0               	rrf	??___fltol+2,f
  7251  0E9A  0CBF               	rrf	??___fltol+1,f
  7252  0E9B  0CBE               	rrf	??___fltol,f
  7253  0E9C                     u298_20:
  7254  0E9C  3EFF               	addlw	-1
  7255  0E9D  1D03               	skipz
  7256  0E9E  2E97               	goto	u298_25
  7257  0E9F  083E               	movf	??___fltol,w
  7258  0EA0  00FF               	movwf	btemp+1
  7259  0EA1  087F               	movf	btemp+1,w
  7260  0EA2  00C2               	movwf	___fltol@sign1
  7261  0EA3                     i1l3551:
  7262  0EA3  17BC               	bsf	___fltol@f1+2,7
  7263  0EA4                     i1l3553:
  7264  0EA4  30FF               	movlw	255
  7265  0EA5  05BA               	andwf	___fltol@f1,f
  7266  0EA6  30FF               	movlw	255
  7267  0EA7  05BB               	andwf	___fltol@f1+1,f
  7268  0EA8  30FF               	movlw	255
  7269  0EA9  05BC               	andwf	___fltol@f1+2,f
  7270  0EAA  3000               	movlw	0
  7271  0EAB  05BD               	andwf	___fltol@f1+3,f
  7272  0EAC                     i1l3555:
  7273  0EAC  3096               	movlw	150
  7274  0EAD  02C3               	subwf	___fltol@exp1,f
  7275  0EAE                     i1l3557:
  7276  0EAE  1FC3               	btfss	___fltol@exp1,7
  7277  0EAF  2EB1               	goto	u299_21
  7278  0EB0  2EB2               	goto	u299_20
  7279  0EB1                     u299_21:
  7280  0EB1  2ECC               	goto	i1l3569
  7281  0EB2                     u299_20:
  7282  0EB2                     i1l3559:
  7283  0EB2  0843               	movf	___fltol@exp1,w
  7284  0EB3  3A80               	xorlw	128
  7285  0EB4  3E97               	addlw	151
  7286  0EB5  1803               	skipnc
  7287  0EB6  2EB8               	goto	u300_21
  7288  0EB7  2EB9               	goto	u300_20
  7289  0EB8                     u300_21:
  7290  0EB8  2EBA               	goto	i1l3565
  7291  0EB9                     u300_20:
  7292  0EB9  2E85               	goto	i1l3545
  7293  0EBA                     i1l3565:
  7294  0EBA  3001               	movlw	1
  7295  0EBB                     u301_25:
  7296  0EBB  1003               	clrc
  7297  0EBC  0CBD               	rrf	___fltol@f1+3,f
  7298  0EBD  0CBC               	rrf	___fltol@f1+2,f
  7299  0EBE  0CBB               	rrf	___fltol@f1+1,f
  7300  0EBF  0CBA               	rrf	___fltol@f1,f
  7301  0EC0  3EFF               	addlw	-1
  7302  0EC1  1D03               	skipz
  7303  0EC2  2EBB               	goto	u301_25
  7304  0EC3                     i1l3567:
  7305  0EC3  3001               	movlw	1
  7306  0EC4  00FF               	movwf	btemp+1
  7307  0EC5  087F               	movf	btemp+1,w
  7308  0EC6  07C3               	addwf	___fltol@exp1,f
  7309  0EC7  1D03               	btfss	3,2
  7310  0EC8  2ECA               	goto	u302_21
  7311  0EC9  2ECB               	goto	u302_20
  7312  0ECA                     u302_21:
  7313  0ECA  2EBA               	goto	i1l3565
  7314  0ECB                     u302_20:
  7315  0ECB  2EE3               	goto	i1l3577
  7316  0ECC                     i1l3569:
  7317  0ECC  3020               	movlw	32
  7318  0ECD  0243               	subwf	___fltol@exp1,w
  7319  0ECE  1C03               	skipc
  7320  0ECF  2ED1               	goto	u303_21
  7321  0ED0  2ED2               	goto	u303_20
  7322  0ED1                     u303_21:
  7323  0ED1  2EDE               	goto	i1l952
  7324  0ED2                     u303_20:
  7325  0ED2  2E85               	goto	i1l3545
  7326  0ED3                     i1l3575:
  7327  0ED3  3001               	movlw	1
  7328  0ED4  00BE               	movwf	??___fltol
  7329  0ED5                     u304_25:
  7330  0ED5  1003               	clrc
  7331  0ED6  0DBA               	rlf	___fltol@f1,f
  7332  0ED7  0DBB               	rlf	___fltol@f1+1,f
  7333  0ED8  0DBC               	rlf	___fltol@f1+2,f
  7334  0ED9  0DBD               	rlf	___fltol@f1+3,f
  7335  0EDA  0BBE               	decfsz	??___fltol,f
  7336  0EDB  2ED5               	goto	u304_25
  7337  0EDC  3001               	movlw	1
  7338  0EDD  02C3               	subwf	___fltol@exp1,f
  7339  0EDE                     i1l952:
  7340  0EDE  0843               	movf	___fltol@exp1,w
  7341  0EDF  1D03               	btfss	3,2
  7342  0EE0  2EE2               	goto	u305_21
  7343  0EE1  2EE3               	goto	u305_20
  7344  0EE2                     u305_21:
  7345  0EE2  2ED3               	goto	i1l3575
  7346  0EE3                     u305_20:
  7347  0EE3                     i1l3577:
  7348  0EE3  0842               	movf	___fltol@sign1,w
  7349  0EE4  1903               	btfsc	3,2
  7350  0EE5  2EE7               	goto	u306_21
  7351  0EE6  2EE8               	goto	u306_20
  7352  0EE7                     u306_21:
  7353  0EE7  2EF3               	goto	i1l955
  7354  0EE8                     u306_20:
  7355  0EE8                     i1l3579:
  7356  0EE8  09BA               	comf	___fltol@f1,f
  7357  0EE9  09BB               	comf	___fltol@f1+1,f
  7358  0EEA  09BC               	comf	___fltol@f1+2,f
  7359  0EEB  09BD               	comf	___fltol@f1+3,f
  7360  0EEC  0ABA               	incf	___fltol@f1,f
  7361  0EED  1903               	skipnz
  7362  0EEE  0ABB               	incf	___fltol@f1+1,f
  7363  0EEF  1903               	skipnz
  7364  0EF0  0ABC               	incf	___fltol@f1+2,f
  7365  0EF1  1903               	skipnz
  7366  0EF2  0ABD               	incf	___fltol@f1+3,f
  7367  0EF3                     i1l955:
  7368  0EF3                     i1l945:
  7369  0EF3  0008               	return
  7370  0EF4                     __end_of___fltol:
  7371                           
  7372                           	psect	text42
  7373  0037                     __ptext42:	
  7374 ;; *************** function ___flmul *****************
  7375 ;; Defined at:
  7376 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcmul.c"
  7377 ;; Parameters:    Size  Location     Type
  7378 ;;  b               4    0[BANK0 ] long 
  7379 ;;  a               4    4[BANK0 ] long 
  7380 ;; Auto vars:     Size  Location     Type
  7381 ;;  prod            4   20[BANK0 ] struct .
  7382 ;;  grs             4   14[BANK0 ] unsigned long 
  7383 ;;  temp            2   24[BANK0 ] struct .
  7384 ;;  bexp            1   19[BANK0 ] unsigned char 
  7385 ;;  aexp            1   18[BANK0 ] unsigned char 
  7386 ;;  sign            1   13[BANK0 ] unsigned char 
  7387 ;; Return value:  Size  Location     Type
  7388 ;;                  4    0[BANK0 ] unsigned char 
  7389 ;; Registers used:
  7390 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7391 ;; Tracked objects:
  7392 ;;		On entry : 0/0
  7393 ;;		On exit  : 0/0
  7394 ;;		Unchanged: 0/0
  7395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7396 ;;      Params:         0       8       0       0       0
  7397 ;;      Locals:         0      13       0       0       0
  7398 ;;      Temps:          0       5       0       0       0
  7399 ;;      Totals:         0      26       0       0       0
  7400 ;;Total ram usage:       26 bytes
  7401 ;; Hardware stack levels used:    1
  7402 ;; Hardware stack levels required when called:    1
  7403 ;; This function calls:
  7404 ;;		__Umul8_16
  7405 ;; This function is called by:
  7406 ;;		_ISR
  7407 ;; This function uses a non-reentrant model
  7408 ;;
  7409                           
  7410                           
  7411                           ;psect for function ___flmul
  7412  0037                     ___flmul:
  7413  0037                     i1l3581:	
  7414                           ;incstack = 0
  7415 ;; hardware stack exceeded
  7416                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7417                           
  7418  0037  1283               	bcf	3,5	;RP0=0, select bank0
  7419  0038  1303               	bcf	3,6	;RP1=0, select bank0
  7420  0039  0823               	movf	___flmul@b+3,w
  7421  003A  3980               	andlw	128
  7422  003B  00FF               	movwf	btemp+1
  7423  003C  087F               	movf	btemp+1,w
  7424  003D  00AD               	movwf	___flmul@sign
  7425  003E                     i1l3583:
  7426  003E  0823               	movf	___flmul@b+3,w
  7427  003F  00A8               	movwf	??___flmul
  7428  0040  0728               	addwf	??___flmul,w
  7429  0041  00FF               	movwf	btemp+1
  7430  0042  087F               	movf	btemp+1,w
  7431  0043  00B3               	movwf	___flmul@bexp
  7432  0044                     i1l3585:
  7433  0044  1FA2               	btfss	___flmul@b+2,7
  7434  0045  2847               	goto	u307_21
  7435  0046  2848               	goto	u307_20
  7436  0047                     u307_21:
  7437  0047  2849               	goto	i1l3589
  7438  0048                     u307_20:
  7439  0048                     i1l3587:
  7440  0048  1433               	bsf	___flmul@bexp,0
  7441  0049                     i1l3589:
  7442  0049  0833               	movf	___flmul@bexp,w
  7443  004A  1903               	btfsc	3,2
  7444  004B  284D               	goto	u308_21
  7445  004C  284E               	goto	u308_20
  7446  004D                     u308_21:
  7447  004D  285D               	goto	i1l3597
  7448  004E                     u308_20:
  7449  004E                     i1l3591:
  7450  004E  0A33               	incf	___flmul@bexp,w
  7451  004F  1D03               	btfss	3,2
  7452  0050  2852               	goto	u309_21
  7453  0051  2853               	goto	u309_20
  7454  0052                     u309_21:
  7455  0052  285B               	goto	i1l3595
  7456  0053                     u309_20:
  7457  0053                     i1l3593:
  7458  0053  3000               	movlw	0
  7459  0054  00A3               	movwf	___flmul@b+3
  7460  0055  3000               	movlw	0
  7461  0056  00A2               	movwf	___flmul@b+2
  7462  0057  3000               	movlw	0
  7463  0058  00A1               	movwf	___flmul@b+1
  7464  0059  3000               	movlw	0
  7465  005A  00A0               	movwf	___flmul@b
  7466  005B                     i1l3595:
  7467  005B  17A2               	bsf	___flmul@b+2,7
  7468  005C  2865               	goto	i1l3599
  7469  005D                     i1l3597:
  7470  005D  3000               	movlw	0
  7471  005E  00A3               	movwf	___flmul@b+3
  7472  005F  3000               	movlw	0
  7473  0060  00A2               	movwf	___flmul@b+2
  7474  0061  3000               	movlw	0
  7475  0062  00A1               	movwf	___flmul@b+1
  7476  0063  3000               	movlw	0
  7477  0064  00A0               	movwf	___flmul@b
  7478  0065                     i1l3599:
  7479  0065  0827               	movf	___flmul@a+3,w
  7480  0066  3980               	andlw	128
  7481  0067  00FF               	movwf	btemp+1
  7482  0068  087F               	movf	btemp+1,w
  7483  0069  06AD               	xorwf	___flmul@sign,f
  7484  006A                     i1l3601:
  7485  006A  0827               	movf	___flmul@a+3,w
  7486  006B  00A8               	movwf	??___flmul
  7487  006C  0728               	addwf	??___flmul,w
  7488  006D  00FF               	movwf	btemp+1
  7489  006E  087F               	movf	btemp+1,w
  7490  006F  00B2               	movwf	___flmul@aexp
  7491  0070                     i1l3603:
  7492  0070  1FA6               	btfss	___flmul@a+2,7
  7493  0071  2873               	goto	u310_21
  7494  0072  2874               	goto	u310_20
  7495  0073                     u310_21:
  7496  0073  2875               	goto	i1l3607
  7497  0074                     u310_20:
  7498  0074                     i1l3605:
  7499  0074  1432               	bsf	___flmul@aexp,0
  7500  0075                     i1l3607:
  7501  0075  0832               	movf	___flmul@aexp,w
  7502  0076  1903               	btfsc	3,2
  7503  0077  2879               	goto	u311_21
  7504  0078  287A               	goto	u311_20
  7505  0079                     u311_21:
  7506  0079  2889               	goto	i1l3615
  7507  007A                     u311_20:
  7508  007A                     i1l3609:
  7509  007A  0A32               	incf	___flmul@aexp,w
  7510  007B  1D03               	btfss	3,2
  7511  007C  287E               	goto	u312_21
  7512  007D  287F               	goto	u312_20
  7513  007E                     u312_21:
  7514  007E  2887               	goto	i1l3613
  7515  007F                     u312_20:
  7516  007F                     i1l3611:
  7517  007F  3000               	movlw	0
  7518  0080  00A7               	movwf	___flmul@a+3
  7519  0081  3000               	movlw	0
  7520  0082  00A6               	movwf	___flmul@a+2
  7521  0083  3000               	movlw	0
  7522  0084  00A5               	movwf	___flmul@a+1
  7523  0085  3000               	movlw	0
  7524  0086  00A4               	movwf	___flmul@a
  7525  0087                     i1l3613:
  7526  0087  17A6               	bsf	___flmul@a+2,7
  7527  0088  2891               	goto	i1l3617
  7528  0089                     i1l3615:
  7529  0089  3000               	movlw	0
  7530  008A  00A7               	movwf	___flmul@a+3
  7531  008B  3000               	movlw	0
  7532  008C  00A6               	movwf	___flmul@a+2
  7533  008D  3000               	movlw	0
  7534  008E  00A5               	movwf	___flmul@a+1
  7535  008F  3000               	movlw	0
  7536  0090  00A4               	movwf	___flmul@a
  7537  0091                     i1l3617:
  7538  0091  0832               	movf	___flmul@aexp,w
  7539  0092  1903               	btfsc	3,2
  7540  0093  2895               	goto	u313_21
  7541  0094  2896               	goto	u313_20
  7542  0095                     u313_21:
  7543  0095  289B               	goto	i1l3621
  7544  0096                     u313_20:
  7545  0096                     i1l3619:
  7546  0096  0833               	movf	___flmul@bexp,w
  7547  0097  1D03               	btfss	3,2
  7548  0098  289A               	goto	u314_21
  7549  0099  289B               	goto	u314_20
  7550  009A                     u314_21:
  7551  009A  28A4               	goto	i1l3625
  7552  009B                     u314_20:
  7553  009B                     i1l3621:
  7554  009B  3000               	movlw	0
  7555  009C  00A3               	movwf	?___flmul+3
  7556  009D  3000               	movlw	0
  7557  009E  00A2               	movwf	?___flmul+2
  7558  009F  3000               	movlw	0
  7559  00A0  00A1               	movwf	?___flmul+1
  7560  00A1  3000               	movlw	0
  7561  00A2  00A0               	movwf	?___flmul
  7562  00A3  2B97               	goto	i1l1148
  7563  00A4                     i1l3625:
  7564  00A4  0820               	movf	___flmul@b,w
  7565  00A5  00FF               	movwf	btemp+1
  7566  00A6  087F               	movf	btemp+1,w
  7567  00A7  00F0               	movwf	__Umul8_16@multiplicand
  7568  00A8  0826               	movf	___flmul@a+2,w
  7569  00A9  120A  158A  2103  120A  118A  	fcall	__Umul8_16
  7570  00AE  0871               	movf	?__Umul8_16+1,w
  7571  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  7572  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  7573  00B1  00B9               	movwf	___flmul@temp+1
  7574  00B2  0870               	movf	?__Umul8_16,w
  7575  00B3  00B8               	movwf	___flmul@temp
  7576  00B4                     i1l3627:
  7577  00B4  0838               	movf	___flmul@temp,w
  7578  00B5  00A8               	movwf	??___flmul
  7579  00B6  01A9               	clrf	??___flmul+1
  7580  00B7  01AA               	clrf	??___flmul+2
  7581  00B8  01AB               	clrf	??___flmul+3
  7582  00B9  082B               	movf	??___flmul+3,w
  7583  00BA  00B1               	movwf	___flmul@grs+3
  7584  00BB  082A               	movf	??___flmul+2,w
  7585  00BC  00B0               	movwf	___flmul@grs+2
  7586  00BD  0829               	movf	??___flmul+1,w
  7587  00BE  00AF               	movwf	___flmul@grs+1
  7588  00BF  0828               	movf	??___flmul,w
  7589  00C0  00AE               	movwf	___flmul@grs
  7590  00C1                     i1l3629:
  7591  00C1  0839               	movf	___flmul@temp+1,w
  7592  00C2  00A8               	movwf	??___flmul
  7593  00C3  01A9               	clrf	??___flmul+1
  7594  00C4  01AA               	clrf	??___flmul+2
  7595  00C5  01AB               	clrf	??___flmul+3
  7596  00C6  082B               	movf	??___flmul+3,w
  7597  00C7  00B7               	movwf	___flmul@prod+3
  7598  00C8  082A               	movf	??___flmul+2,w
  7599  00C9  00B6               	movwf	___flmul@prod+2
  7600  00CA  0829               	movf	??___flmul+1,w
  7601  00CB  00B5               	movwf	___flmul@prod+1
  7602  00CC  0828               	movf	??___flmul,w
  7603  00CD  00B4               	movwf	___flmul@prod
  7604  00CE  0821               	movf	___flmul@b+1,w
  7605  00CF  00FF               	movwf	btemp+1
  7606  00D0  087F               	movf	btemp+1,w
  7607  00D1  00F0               	movwf	__Umul8_16@multiplicand
  7608  00D2  0825               	movf	___flmul@a+1,w
  7609  00D3  120A  158A  2103  120A  118A  	fcall	__Umul8_16
  7610  00D8  0871               	movf	?__Umul8_16+1,w
  7611  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  7612  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  7613  00DB  00B9               	movwf	___flmul@temp+1
  7614  00DC  0870               	movf	?__Umul8_16,w
  7615  00DD  00B8               	movwf	___flmul@temp
  7616  00DE                     i1l3631:
  7617  00DE  0838               	movf	___flmul@temp,w
  7618  00DF  00A8               	movwf	??___flmul
  7619  00E0  01A9               	clrf	??___flmul+1
  7620  00E1  01AA               	clrf	??___flmul+2
  7621  00E2  01AB               	clrf	??___flmul+3
  7622  00E3  0828               	movf	??___flmul,w
  7623  00E4  07AE               	addwf	___flmul@grs,f
  7624  00E5  0829               	movf	??___flmul+1,w
  7625  00E6  1103               	clrz
  7626  00E7  1803               	skipnc
  7627  00E8  3E01               	addlw	1
  7628  00E9  1903               	skipnz
  7629  00EA  28EC               	goto	u315_21
  7630  00EB  07AF               	addwf	___flmul@grs+1,f
  7631  00EC                     u315_21:
  7632  00EC  082A               	movf	??___flmul+2,w
  7633  00ED  1103               	clrz
  7634  00EE  1803               	skipnc
  7635  00EF  3E01               	addlw	1
  7636  00F0  1903               	skipnz
  7637  00F1  28F3               	goto	u315_22
  7638  00F2  07B0               	addwf	___flmul@grs+2,f
  7639  00F3                     u315_22:
  7640  00F3  082B               	movf	??___flmul+3,w
  7641  00F4  1103               	clrz
  7642  00F5  1803               	skipnc
  7643  00F6  3E01               	addlw	1
  7644  00F7  1903               	skipnz
  7645  00F8  28FA               	goto	u315_23
  7646  00F9  07B1               	addwf	___flmul@grs+3,f
  7647  00FA                     u315_23:
  7648  00FA                     i1l3633:
  7649  00FA  0839               	movf	___flmul@temp+1,w
  7650  00FB  00A8               	movwf	??___flmul
  7651  00FC  01A9               	clrf	??___flmul+1
  7652  00FD  01AA               	clrf	??___flmul+2
  7653  00FE  01AB               	clrf	??___flmul+3
  7654  00FF  0828               	movf	??___flmul,w
  7655  0100  07B4               	addwf	___flmul@prod,f
  7656  0101  0829               	movf	??___flmul+1,w
  7657  0102  1103               	clrz
  7658  0103  1803               	skipnc
  7659  0104  3E01               	addlw	1
  7660  0105  1903               	skipnz
  7661  0106  2908               	goto	u316_21
  7662  0107  07B5               	addwf	___flmul@prod+1,f
  7663  0108                     u316_21:
  7664  0108  082A               	movf	??___flmul+2,w
  7665  0109  1103               	clrz
  7666  010A  1803               	skipnc
  7667  010B  3E01               	addlw	1
  7668  010C  1903               	skipnz
  7669  010D  290F               	goto	u316_22
  7670  010E  07B6               	addwf	___flmul@prod+2,f
  7671  010F                     u316_22:
  7672  010F  082B               	movf	??___flmul+3,w
  7673  0110  1103               	clrz
  7674  0111  1803               	skipnc
  7675  0112  3E01               	addlw	1
  7676  0113  1903               	skipnz
  7677  0114  2916               	goto	u316_23
  7678  0115  07B7               	addwf	___flmul@prod+3,f
  7679  0116                     u316_23:
  7680  0116  0822               	movf	___flmul@b+2,w
  7681  0117  00FF               	movwf	btemp+1
  7682  0118  087F               	movf	btemp+1,w
  7683  0119  00F0               	movwf	__Umul8_16@multiplicand
  7684  011A  0824               	movf	___flmul@a,w
  7685  011B  120A  158A  2103  120A  118A  	fcall	__Umul8_16
  7686  0120  0871               	movf	?__Umul8_16+1,w
  7687  0121  1283               	bcf	3,5	;RP0=0, select bank0
  7688  0122  1303               	bcf	3,6	;RP1=0, select bank0
  7689  0123  00B9               	movwf	___flmul@temp+1
  7690  0124  0870               	movf	?__Umul8_16,w
  7691  0125  00B8               	movwf	___flmul@temp
  7692  0126                     i1l3635:
  7693  0126  0838               	movf	___flmul@temp,w
  7694  0127  00A8               	movwf	??___flmul
  7695  0128  01A9               	clrf	??___flmul+1
  7696  0129  01AA               	clrf	??___flmul+2
  7697  012A  01AB               	clrf	??___flmul+3
  7698  012B  0828               	movf	??___flmul,w
  7699  012C  07AE               	addwf	___flmul@grs,f
  7700  012D  0829               	movf	??___flmul+1,w
  7701  012E  1103               	clrz
  7702  012F  1803               	skipnc
  7703  0130  3E01               	addlw	1
  7704  0131  1903               	skipnz
  7705  0132  2934               	goto	u317_21
  7706  0133  07AF               	addwf	___flmul@grs+1,f
  7707  0134                     u317_21:
  7708  0134  082A               	movf	??___flmul+2,w
  7709  0135  1103               	clrz
  7710  0136  1803               	skipnc
  7711  0137  3E01               	addlw	1
  7712  0138  1903               	skipnz
  7713  0139  293B               	goto	u317_22
  7714  013A  07B0               	addwf	___flmul@grs+2,f
  7715  013B                     u317_22:
  7716  013B  082B               	movf	??___flmul+3,w
  7717  013C  1103               	clrz
  7718  013D  1803               	skipnc
  7719  013E  3E01               	addlw	1
  7720  013F  1903               	skipnz
  7721  0140  2942               	goto	u317_23
  7722  0141  07B1               	addwf	___flmul@grs+3,f
  7723  0142                     u317_23:
  7724  0142                     i1l3637:
  7725  0142  0839               	movf	___flmul@temp+1,w
  7726  0143  00A8               	movwf	??___flmul
  7727  0144  01A9               	clrf	??___flmul+1
  7728  0145  01AA               	clrf	??___flmul+2
  7729  0146  01AB               	clrf	??___flmul+3
  7730  0147  0828               	movf	??___flmul,w
  7731  0148  07B4               	addwf	___flmul@prod,f
  7732  0149  0829               	movf	??___flmul+1,w
  7733  014A  1103               	clrz
  7734  014B  1803               	skipnc
  7735  014C  3E01               	addlw	1
  7736  014D  1903               	skipnz
  7737  014E  2950               	goto	u318_21
  7738  014F  07B5               	addwf	___flmul@prod+1,f
  7739  0150                     u318_21:
  7740  0150  082A               	movf	??___flmul+2,w
  7741  0151  1103               	clrz
  7742  0152  1803               	skipnc
  7743  0153  3E01               	addlw	1
  7744  0154  1903               	skipnz
  7745  0155  2957               	goto	u318_22
  7746  0156  07B6               	addwf	___flmul@prod+2,f
  7747  0157                     u318_22:
  7748  0157  082B               	movf	??___flmul+3,w
  7749  0158  1103               	clrz
  7750  0159  1803               	skipnc
  7751  015A  3E01               	addlw	1
  7752  015B  1903               	skipnz
  7753  015C  295E               	goto	u318_23
  7754  015D  07B7               	addwf	___flmul@prod+3,f
  7755  015E                     u318_23:
  7756  015E                     i1l3639:
  7757  015E  3008               	movlw	8
  7758  015F  00A8               	movwf	??___flmul
  7759  0160                     u319_25:
  7760  0160  1003               	clrc
  7761  0161  0DAE               	rlf	___flmul@grs,f
  7762  0162  0DAF               	rlf	___flmul@grs+1,f
  7763  0163  0DB0               	rlf	___flmul@grs+2,f
  7764  0164  0DB1               	rlf	___flmul@grs+3,f
  7765  0165  0BA8               	decfsz	??___flmul,f
  7766  0166  2960               	goto	u319_25
  7767  0167                     i1l3641:
  7768  0167  0821               	movf	___flmul@b+1,w
  7769  0168  00FF               	movwf	btemp+1
  7770  0169  087F               	movf	btemp+1,w
  7771  016A  00F0               	movwf	__Umul8_16@multiplicand
  7772  016B  0824               	movf	___flmul@a,w
  7773  016C  120A  158A  2103  120A  118A  	fcall	__Umul8_16
  7774  0171  0871               	movf	?__Umul8_16+1,w
  7775  0172  1283               	bcf	3,5	;RP0=0, select bank0
  7776  0173  1303               	bcf	3,6	;RP1=0, select bank0
  7777  0174  00B9               	movwf	___flmul@temp+1
  7778  0175  0870               	movf	?__Umul8_16,w
  7779  0176  00B8               	movwf	___flmul@temp
  7780  0177                     i1l3643:
  7781  0177  0838               	movf	___flmul@temp,w
  7782  0178  00A8               	movwf	??___flmul
  7783  0179  0839               	movf	___flmul@temp+1,w
  7784  017A  00A9               	movwf	??___flmul+1
  7785  017B  01AA               	clrf	??___flmul+2
  7786  017C  01AB               	clrf	??___flmul+3
  7787  017D  0828               	movf	??___flmul,w
  7788  017E  07AE               	addwf	___flmul@grs,f
  7789  017F  0829               	movf	??___flmul+1,w
  7790  0180  1103               	clrz
  7791  0181  1803               	skipnc
  7792  0182  3E01               	addlw	1
  7793  0183  1903               	skipnz
  7794  0184  2986               	goto	u320_21
  7795  0185  07AF               	addwf	___flmul@grs+1,f
  7796  0186                     u320_21:
  7797  0186  082A               	movf	??___flmul+2,w
  7798  0187  1103               	clrz
  7799  0188  1803               	skipnc
  7800  0189  3E01               	addlw	1
  7801  018A  1903               	skipnz
  7802  018B  298D               	goto	u320_22
  7803  018C  07B0               	addwf	___flmul@grs+2,f
  7804  018D                     u320_22:
  7805  018D  082B               	movf	??___flmul+3,w
  7806  018E  1103               	clrz
  7807  018F  1803               	skipnc
  7808  0190  3E01               	addlw	1
  7809  0191  1903               	skipnz
  7810  0192  2994               	goto	u320_23
  7811  0193  07B1               	addwf	___flmul@grs+3,f
  7812  0194                     u320_23:
  7813  0194                     i1l3645:
  7814  0194  0820               	movf	___flmul@b,w
  7815  0195  00FF               	movwf	btemp+1
  7816  0196  087F               	movf	btemp+1,w
  7817  0197  00F0               	movwf	__Umul8_16@multiplicand
  7818  0198  0825               	movf	___flmul@a+1,w
  7819  0199  120A  158A  2103  120A  118A  	fcall	__Umul8_16
  7820  019E  0871               	movf	?__Umul8_16+1,w
  7821  019F  1283               	bcf	3,5	;RP0=0, select bank0
  7822  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  7823  01A1  00B9               	movwf	___flmul@temp+1
  7824  01A2  0870               	movf	?__Umul8_16,w
  7825  01A3  00B8               	movwf	___flmul@temp
  7826  01A4                     i1l3647:
  7827  01A4  0838               	movf	___flmul@temp,w
  7828  01A5  00A8               	movwf	??___flmul
  7829  01A6  0839               	movf	___flmul@temp+1,w
  7830  01A7  00A9               	movwf	??___flmul+1
  7831  01A8  01AA               	clrf	??___flmul+2
  7832  01A9  01AB               	clrf	??___flmul+3
  7833  01AA  0828               	movf	??___flmul,w
  7834  01AB  07AE               	addwf	___flmul@grs,f
  7835  01AC  0829               	movf	??___flmul+1,w
  7836  01AD  1103               	clrz
  7837  01AE  1803               	skipnc
  7838  01AF  3E01               	addlw	1
  7839  01B0  1903               	skipnz
  7840  01B1  29B3               	goto	u321_21
  7841  01B2  07AF               	addwf	___flmul@grs+1,f
  7842  01B3                     u321_21:
  7843  01B3  082A               	movf	??___flmul+2,w
  7844  01B4  1103               	clrz
  7845  01B5  1803               	skipnc
  7846  01B6  3E01               	addlw	1
  7847  01B7  1903               	skipnz
  7848  01B8  29BA               	goto	u321_22
  7849  01B9  07B0               	addwf	___flmul@grs+2,f
  7850  01BA                     u321_22:
  7851  01BA  082B               	movf	??___flmul+3,w
  7852  01BB  1103               	clrz
  7853  01BC  1803               	skipnc
  7854  01BD  3E01               	addlw	1
  7855  01BE  1903               	skipnz
  7856  01BF  29C1               	goto	u321_23
  7857  01C0  07B1               	addwf	___flmul@grs+3,f
  7858  01C1                     u321_23:
  7859  01C1                     i1l3649:
  7860  01C1  3008               	movlw	8
  7861  01C2  00A8               	movwf	??___flmul
  7862  01C3                     u322_25:
  7863  01C3  1003               	clrc
  7864  01C4  0DAE               	rlf	___flmul@grs,f
  7865  01C5  0DAF               	rlf	___flmul@grs+1,f
  7866  01C6  0DB0               	rlf	___flmul@grs+2,f
  7867  01C7  0DB1               	rlf	___flmul@grs+3,f
  7868  01C8  0BA8               	decfsz	??___flmul,f
  7869  01C9  29C3               	goto	u322_25
  7870  01CA  0820               	movf	___flmul@b,w
  7871  01CB  00FF               	movwf	btemp+1
  7872  01CC  087F               	movf	btemp+1,w
  7873  01CD  00F0               	movwf	__Umul8_16@multiplicand
  7874  01CE  0824               	movf	___flmul@a,w
  7875  01CF  120A  158A  2103  120A  118A  	fcall	__Umul8_16
  7876  01D4  0871               	movf	?__Umul8_16+1,w
  7877  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  7878  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  7879  01D7  00B9               	movwf	___flmul@temp+1
  7880  01D8  0870               	movf	?__Umul8_16,w
  7881  01D9  00B8               	movwf	___flmul@temp
  7882  01DA                     i1l3651:
  7883  01DA  0838               	movf	___flmul@temp,w
  7884  01DB  00A8               	movwf	??___flmul
  7885  01DC  0839               	movf	___flmul@temp+1,w
  7886  01DD  00A9               	movwf	??___flmul+1
  7887  01DE  01AA               	clrf	??___flmul+2
  7888  01DF  01AB               	clrf	??___flmul+3
  7889  01E0  0828               	movf	??___flmul,w
  7890  01E1  07AE               	addwf	___flmul@grs,f
  7891  01E2  0829               	movf	??___flmul+1,w
  7892  01E3  1103               	clrz
  7893  01E4  1803               	skipnc
  7894  01E5  3E01               	addlw	1
  7895  01E6  1903               	skipnz
  7896  01E7  29E9               	goto	u323_21
  7897  01E8  07AF               	addwf	___flmul@grs+1,f
  7898  01E9                     u323_21:
  7899  01E9  082A               	movf	??___flmul+2,w
  7900  01EA  1103               	clrz
  7901  01EB  1803               	skipnc
  7902  01EC  3E01               	addlw	1
  7903  01ED  1903               	skipnz
  7904  01EE  29F0               	goto	u323_22
  7905  01EF  07B0               	addwf	___flmul@grs+2,f
  7906  01F0                     u323_22:
  7907  01F0  082B               	movf	??___flmul+3,w
  7908  01F1  1103               	clrz
  7909  01F2  1803               	skipnc
  7910  01F3  3E01               	addlw	1
  7911  01F4  1903               	skipnz
  7912  01F5  29F7               	goto	u323_23
  7913  01F6  07B1               	addwf	___flmul@grs+3,f
  7914  01F7                     u323_23:
  7915  01F7                     i1l3653:
  7916  01F7  0821               	movf	___flmul@b+1,w
  7917  01F8  00FF               	movwf	btemp+1
  7918  01F9  087F               	movf	btemp+1,w
  7919  01FA  00F0               	movwf	__Umul8_16@multiplicand
  7920  01FB  0826               	movf	___flmul@a+2,w
  7921  01FC  120A  158A  2103  120A  118A  	fcall	__Umul8_16
  7922  0201  0871               	movf	?__Umul8_16+1,w
  7923  0202  1283               	bcf	3,5	;RP0=0, select bank0
  7924  0203  1303               	bcf	3,6	;RP1=0, select bank0
  7925  0204  00B9               	movwf	___flmul@temp+1
  7926  0205  0870               	movf	?__Umul8_16,w
  7927  0206  00B8               	movwf	___flmul@temp
  7928  0207  0838               	movf	___flmul@temp,w
  7929  0208  00A8               	movwf	??___flmul
  7930  0209  0839               	movf	___flmul@temp+1,w
  7931  020A  00A9               	movwf	??___flmul+1
  7932  020B  01AA               	clrf	??___flmul+2
  7933  020C  01AB               	clrf	??___flmul+3
  7934  020D  0828               	movf	??___flmul,w
  7935  020E  07B4               	addwf	___flmul@prod,f
  7936  020F  0829               	movf	??___flmul+1,w
  7937  0210  1103               	clrz
  7938  0211  1803               	skipnc
  7939  0212  3E01               	addlw	1
  7940  0213  1903               	skipnz
  7941  0214  2A16               	goto	u324_21
  7942  0215  07B5               	addwf	___flmul@prod+1,f
  7943  0216                     u324_21:
  7944  0216  082A               	movf	??___flmul+2,w
  7945  0217  1103               	clrz
  7946  0218  1803               	skipnc
  7947  0219  3E01               	addlw	1
  7948  021A  1903               	skipnz
  7949  021B  2A1D               	goto	u324_22
  7950  021C  07B6               	addwf	___flmul@prod+2,f
  7951  021D                     u324_22:
  7952  021D  082B               	movf	??___flmul+3,w
  7953  021E  1103               	clrz
  7954  021F  1803               	skipnc
  7955  0220  3E01               	addlw	1
  7956  0221  1903               	skipnz
  7957  0222  2A24               	goto	u324_23
  7958  0223  07B7               	addwf	___flmul@prod+3,f
  7959  0224                     u324_23:
  7960  0224                     i1l3655:
  7961  0224  0822               	movf	___flmul@b+2,w
  7962  0225  00FF               	movwf	btemp+1
  7963  0226  087F               	movf	btemp+1,w
  7964  0227  00F0               	movwf	__Umul8_16@multiplicand
  7965  0228  0825               	movf	___flmul@a+1,w
  7966  0229  120A  158A  2103  120A  118A  	fcall	__Umul8_16
  7967  022E  0871               	movf	?__Umul8_16+1,w
  7968  022F  1283               	bcf	3,5	;RP0=0, select bank0
  7969  0230  1303               	bcf	3,6	;RP1=0, select bank0
  7970  0231  00B9               	movwf	___flmul@temp+1
  7971  0232  0870               	movf	?__Umul8_16,w
  7972  0233  00B8               	movwf	___flmul@temp
  7973  0234                     i1l3657:
  7974  0234  0838               	movf	___flmul@temp,w
  7975  0235  00A8               	movwf	??___flmul
  7976  0236  0839               	movf	___flmul@temp+1,w
  7977  0237  00A9               	movwf	??___flmul+1
  7978  0238  01AA               	clrf	??___flmul+2
  7979  0239  01AB               	clrf	??___flmul+3
  7980  023A  0828               	movf	??___flmul,w
  7981  023B  07B4               	addwf	___flmul@prod,f
  7982  023C  0829               	movf	??___flmul+1,w
  7983  023D  1103               	clrz
  7984  023E  1803               	skipnc
  7985  023F  3E01               	addlw	1
  7986  0240  1903               	skipnz
  7987  0241  2A43               	goto	u325_21
  7988  0242  07B5               	addwf	___flmul@prod+1,f
  7989  0243                     u325_21:
  7990  0243  082A               	movf	??___flmul+2,w
  7991  0244  1103               	clrz
  7992  0245  1803               	skipnc
  7993  0246  3E01               	addlw	1
  7994  0247  1903               	skipnz
  7995  0248  2A4A               	goto	u325_22
  7996  0249  07B6               	addwf	___flmul@prod+2,f
  7997  024A                     u325_22:
  7998  024A  082B               	movf	??___flmul+3,w
  7999  024B  1103               	clrz
  8000  024C  1803               	skipnc
  8001  024D  3E01               	addlw	1
  8002  024E  1903               	skipnz
  8003  024F  2A51               	goto	u325_23
  8004  0250  07B7               	addwf	___flmul@prod+3,f
  8005  0251                     u325_23:
  8006  0251  0822               	movf	___flmul@b+2,w
  8007  0252  00FF               	movwf	btemp+1
  8008  0253  087F               	movf	btemp+1,w
  8009  0254  00F0               	movwf	__Umul8_16@multiplicand
  8010  0255  0826               	movf	___flmul@a+2,w
  8011  0256  120A  158A  2103  120A  118A  	fcall	__Umul8_16
  8012  025B  0871               	movf	?__Umul8_16+1,w
  8013  025C  1283               	bcf	3,5	;RP0=0, select bank0
  8014  025D  1303               	bcf	3,6	;RP1=0, select bank0
  8015  025E  00B9               	movwf	___flmul@temp+1
  8016  025F  0870               	movf	?__Umul8_16,w
  8017  0260  00B8               	movwf	___flmul@temp
  8018  0261                     i1l3659:
  8019  0261  0838               	movf	___flmul@temp,w
  8020  0262  00A8               	movwf	??___flmul
  8021  0263  0839               	movf	___flmul@temp+1,w
  8022  0264  00A9               	movwf	??___flmul+1
  8023  0265  01AA               	clrf	??___flmul+2
  8024  0266  01AB               	clrf	??___flmul+3
  8025  0267  3008               	movlw	8
  8026  0268                     u326_25:
  8027  0268  1003               	clrc
  8028  0269  0DA8               	rlf	??___flmul,f
  8029  026A  0DA9               	rlf	??___flmul+1,f
  8030  026B  0DAA               	rlf	??___flmul+2,f
  8031  026C  0DAB               	rlf	??___flmul+3,f
  8032  026D                     u326_20:
  8033  026D  3EFF               	addlw	-1
  8034  026E  1D03               	skipz
  8035  026F  2A68               	goto	u326_25
  8036  0270  0828               	movf	??___flmul,w
  8037  0271  07B4               	addwf	___flmul@prod,f
  8038  0272  0829               	movf	??___flmul+1,w
  8039  0273  1103               	clrz
  8040  0274  1803               	skipnc
  8041  0275  3E01               	addlw	1
  8042  0276  1903               	skipnz
  8043  0277  2A79               	goto	u327_21
  8044  0278  07B5               	addwf	___flmul@prod+1,f
  8045  0279                     u327_21:
  8046  0279  082A               	movf	??___flmul+2,w
  8047  027A  1103               	clrz
  8048  027B  1803               	skipnc
  8049  027C  3E01               	addlw	1
  8050  027D  1903               	skipnz
  8051  027E  2A80               	goto	u327_22
  8052  027F  07B6               	addwf	___flmul@prod+2,f
  8053  0280                     u327_22:
  8054  0280  082B               	movf	??___flmul+3,w
  8055  0281  1103               	clrz
  8056  0282  1803               	skipnc
  8057  0283  3E01               	addlw	1
  8058  0284  1903               	skipnz
  8059  0285  2A87               	goto	u327_23
  8060  0286  07B7               	addwf	___flmul@prod+3,f
  8061  0287                     u327_23:
  8062  0287                     i1l3661:
  8063  0287  082E               	movf	___flmul@grs,w
  8064  0288  00A8               	movwf	??___flmul
  8065  0289  082F               	movf	___flmul@grs+1,w
  8066  028A  00A9               	movwf	??___flmul+1
  8067  028B  0830               	movf	___flmul@grs+2,w
  8068  028C  00AA               	movwf	??___flmul+2
  8069  028D  0831               	movf	___flmul@grs+3,w
  8070  028E  00AB               	movwf	??___flmul+3
  8071  028F  3018               	movlw	24
  8072  0290                     u328_25:
  8073  0290  1003               	clrc
  8074  0291  0CAB               	rrf	??___flmul+3,f
  8075  0292  0CAA               	rrf	??___flmul+2,f
  8076  0293  0CA9               	rrf	??___flmul+1,f
  8077  0294  0CA8               	rrf	??___flmul,f
  8078  0295                     u328_20:
  8079  0295  3EFF               	addlw	-1
  8080  0296  1D03               	skipz
  8081  0297  2A90               	goto	u328_25
  8082  0298  0828               	movf	??___flmul,w
  8083  0299  07B4               	addwf	___flmul@prod,f
  8084  029A  0829               	movf	??___flmul+1,w
  8085  029B  1103               	clrz
  8086  029C  1803               	skipnc
  8087  029D  3E01               	addlw	1
  8088  029E  1903               	skipnz
  8089  029F  2AA1               	goto	u329_21
  8090  02A0  07B5               	addwf	___flmul@prod+1,f
  8091  02A1                     u329_21:
  8092  02A1  082A               	movf	??___flmul+2,w
  8093  02A2  1103               	clrz
  8094  02A3  1803               	skipnc
  8095  02A4  3E01               	addlw	1
  8096  02A5  1903               	skipnz
  8097  02A6  2AA8               	goto	u329_22
  8098  02A7  07B6               	addwf	___flmul@prod+2,f
  8099  02A8                     u329_22:
  8100  02A8  082B               	movf	??___flmul+3,w
  8101  02A9  1103               	clrz
  8102  02AA  1803               	skipnc
  8103  02AB  3E01               	addlw	1
  8104  02AC  1903               	skipnz
  8105  02AD  2AAF               	goto	u329_23
  8106  02AE  07B7               	addwf	___flmul@prod+3,f
  8107  02AF                     u329_23:
  8108  02AF                     i1l3663:
  8109  02AF  3008               	movlw	8
  8110  02B0  00A8               	movwf	??___flmul
  8111  02B1                     u330_25:
  8112  02B1  1003               	clrc
  8113  02B2  0DAE               	rlf	___flmul@grs,f
  8114  02B3  0DAF               	rlf	___flmul@grs+1,f
  8115  02B4  0DB0               	rlf	___flmul@grs+2,f
  8116  02B5  0DB1               	rlf	___flmul@grs+3,f
  8117  02B6  0BA8               	decfsz	??___flmul,f
  8118  02B7  2AB1               	goto	u330_25
  8119  02B8                     i1l3665:
  8120  02B8  0833               	movf	___flmul@bexp,w
  8121  02B9  0732               	addwf	___flmul@aexp,w
  8122  02BA  00A8               	movwf	??___flmul
  8123  02BB  01A9               	clrf	??___flmul+1
  8124  02BC  0DA9               	rlf	??___flmul+1,f
  8125  02BD  0828               	movf	??___flmul,w
  8126  02BE  3E82               	addlw	130
  8127  02BF  00B8               	movwf	___flmul@temp
  8128  02C0  0829               	movf	??___flmul+1,w
  8129  02C1  1803               	skipnc
  8130  02C2  3E01               	addlw	1
  8131  02C3  3EFF               	addlw	255
  8132  02C4  00B9               	movwf	___flmul@temp+1
  8133  02C5  2AE3               	goto	i1l3677
  8134  02C6                     i1l3667:
  8135  02C6  3001               	movlw	1
  8136  02C7  00A8               	movwf	??___flmul
  8137  02C8                     u331_25:
  8138  02C8  1003               	clrc
  8139  02C9  0DB4               	rlf	___flmul@prod,f
  8140  02CA  0DB5               	rlf	___flmul@prod+1,f
  8141  02CB  0DB6               	rlf	___flmul@prod+2,f
  8142  02CC  0DB7               	rlf	___flmul@prod+3,f
  8143  02CD  0BA8               	decfsz	??___flmul,f
  8144  02CE  2AC8               	goto	u331_25
  8145  02CF                     i1l3669:
  8146  02CF  1FB1               	btfss	___flmul@grs+3,7
  8147  02D0  2AD2               	goto	u332_21
  8148  02D1  2AD3               	goto	u332_20
  8149  02D2                     u332_21:
  8150  02D2  2AD4               	goto	i1l3673
  8151  02D3                     u332_20:
  8152  02D3                     i1l3671:
  8153  02D3  1434               	bsf	___flmul@prod,0
  8154  02D4                     i1l3673:
  8155  02D4  3001               	movlw	1
  8156  02D5  00A8               	movwf	??___flmul
  8157  02D6                     u333_25:
  8158  02D6  1003               	clrc
  8159  02D7  0DAE               	rlf	___flmul@grs,f
  8160  02D8  0DAF               	rlf	___flmul@grs+1,f
  8161  02D9  0DB0               	rlf	___flmul@grs+2,f
  8162  02DA  0DB1               	rlf	___flmul@grs+3,f
  8163  02DB  0BA8               	decfsz	??___flmul,f
  8164  02DC  2AD6               	goto	u333_25
  8165  02DD                     i1l3675:
  8166  02DD  30FF               	movlw	255
  8167  02DE  07B8               	addwf	___flmul@temp,f
  8168  02DF  1803               	skipnc
  8169  02E0  0AB9               	incf	___flmul@temp+1,f
  8170  02E1  30FF               	movlw	255
  8171  02E2  07B9               	addwf	___flmul@temp+1,f
  8172  02E3                     i1l3677:
  8173  02E3  1FB6               	btfss	___flmul@prod+2,7
  8174  02E4  2AE6               	goto	u334_21
  8175  02E5  2AE7               	goto	u334_20
  8176  02E6                     u334_21:
  8177  02E6  2AC6               	goto	i1l3667
  8178  02E7                     u334_20:
  8179  02E7                     i1l3679:
  8180  02E7  01B2               	clrf	___flmul@aexp
  8181  02E8                     i1l3681:
  8182  02E8  1FB1               	btfss	___flmul@grs+3,7
  8183  02E9  2AEB               	goto	u335_21
  8184  02EA  2AEC               	goto	u335_20
  8185  02EB                     u335_21:
  8186  02EB  2B08               	goto	i1l3689
  8187  02EC                     u335_20:
  8188  02EC                     i1l3683:
  8189  02EC  30FF               	movlw	255
  8190  02ED  052E               	andwf	___flmul@grs,w
  8191  02EE  00A8               	movwf	??___flmul
  8192  02EF  30FF               	movlw	255
  8193  02F0  052F               	andwf	___flmul@grs+1,w
  8194  02F1  00A9               	movwf	??___flmul+1
  8195  02F2  30FF               	movlw	255
  8196  02F3  0530               	andwf	___flmul@grs+2,w
  8197  02F4  00AA               	movwf	??___flmul+2
  8198  02F5  307F               	movlw	127
  8199  02F6  0531               	andwf	___flmul@grs+3,w
  8200  02F7  00AB               	movwf	??___flmul+3
  8201  02F8  082B               	movf	??___flmul+3,w
  8202  02F9  042A               	iorwf	??___flmul+2,w
  8203  02FA  0429               	iorwf	??___flmul+1,w
  8204  02FB  0428               	iorwf	??___flmul,w
  8205  02FC  1903               	skipnz
  8206  02FD  2AFF               	goto	u336_21
  8207  02FE  2B00               	goto	u336_20
  8208  02FF                     u336_21:
  8209  02FF  2B03               	goto	i1l1154
  8210  0300                     u336_20:
  8211  0300                     i1l3685:
  8212  0300  01B2               	clrf	___flmul@aexp
  8213  0301  0AB2               	incf	___flmul@aexp,f
  8214  0302  2B08               	goto	i1l3689
  8215  0303                     i1l1154:
  8216  0303  1C34               	btfss	___flmul@prod,0
  8217  0304  2B06               	goto	u337_21
  8218  0305  2B07               	goto	u337_20
  8219  0306                     u337_21:
  8220  0306  2B08               	goto	i1l3689
  8221  0307                     u337_20:
  8222  0307  2B00               	goto	i1l3685
  8223  0308                     i1l3689:
  8224  0308  0832               	movf	___flmul@aexp,w
  8225  0309  1903               	btfsc	3,2
  8226  030A  2B0C               	goto	u338_21
  8227  030B  2B0D               	goto	u338_20
  8228  030C                     u338_21:
  8229  030C  2B3E               	goto	i1l3699
  8230  030D                     u338_20:
  8231  030D                     i1l3691:
  8232  030D  3001               	movlw	1
  8233  030E  07B4               	addwf	___flmul@prod,f
  8234  030F  3000               	movlw	0
  8235  0310  1803               	skipnc
  8236  0311  3001               	movlw	1
  8237  0312  07B5               	addwf	___flmul@prod+1,f
  8238  0313  3000               	movlw	0
  8239  0314  1803               	skipnc
  8240  0315  3001               	movlw	1
  8241  0316  07B6               	addwf	___flmul@prod+2,f
  8242  0317  3000               	movlw	0
  8243  0318  1803               	skipnc
  8244  0319  3001               	movlw	1
  8245  031A  07B7               	addwf	___flmul@prod+3,f
  8246  031B                     i1l3693:
  8247  031B  1C37               	btfss	___flmul@prod+3,0
  8248  031C  2B1E               	goto	u339_21
  8249  031D  2B1F               	goto	u339_20
  8250  031E                     u339_21:
  8251  031E  2B3E               	goto	i1l3699
  8252  031F                     u339_20:
  8253  031F                     i1l3695:
  8254  031F  0834               	movf	___flmul@prod,w
  8255  0320  00A8               	movwf	??___flmul
  8256  0321  0835               	movf	___flmul@prod+1,w
  8257  0322  00A9               	movwf	??___flmul+1
  8258  0323  0836               	movf	___flmul@prod+2,w
  8259  0324  00AA               	movwf	??___flmul+2
  8260  0325  0837               	movf	___flmul@prod+3,w
  8261  0326  00AB               	movwf	??___flmul+3
  8262  0327  3001               	movlw	1
  8263  0328  00AC               	movwf	??___flmul+4
  8264  0329                     u340_25:
  8265  0329  0D2B               	rlf	??___flmul+3,w
  8266  032A  0CAB               	rrf	??___flmul+3,f
  8267  032B  0CAA               	rrf	??___flmul+2,f
  8268  032C  0CA9               	rrf	??___flmul+1,f
  8269  032D  0CA8               	rrf	??___flmul,f
  8270  032E                     u340_20:
  8271  032E  0BAC               	decfsz	??___flmul+4,f
  8272  032F  2B29               	goto	u340_25
  8273  0330  082B               	movf	??___flmul+3,w
  8274  0331  00B7               	movwf	___flmul@prod+3
  8275  0332  082A               	movf	??___flmul+2,w
  8276  0333  00B6               	movwf	___flmul@prod+2
  8277  0334  0829               	movf	??___flmul+1,w
  8278  0335  00B5               	movwf	___flmul@prod+1
  8279  0336  0828               	movf	??___flmul,w
  8280  0337  00B4               	movwf	___flmul@prod
  8281  0338                     i1l3697:
  8282  0338  3001               	movlw	1
  8283  0339  07B8               	addwf	___flmul@temp,f
  8284  033A  1803               	skipnc
  8285  033B  0AB9               	incf	___flmul@temp+1,f
  8286  033C  3000               	movlw	0
  8287  033D  07B9               	addwf	___flmul@temp+1,f
  8288  033E                     i1l3699:
  8289  033E  0839               	movf	___flmul@temp+1,w
  8290  033F  3A80               	xorlw	128
  8291  0340  00FF               	movwf	btemp+1
  8292  0341  3080               	movlw	128
  8293  0342  027F               	subwf	btemp+1,w
  8294  0343  1D03               	skipz
  8295  0344  2B47               	goto	u341_25
  8296  0345  30FF               	movlw	255
  8297  0346  0238               	subwf	___flmul@temp,w
  8298  0347                     u341_25:
  8299  0347  1C03               	skipc
  8300  0348  2B4A               	goto	u341_21
  8301  0349  2B4B               	goto	u341_20
  8302  034A                     u341_21:
  8303  034A  2B56               	goto	i1l3703
  8304  034B                     u341_20:
  8305  034B                     i1l3701:
  8306  034B  307F               	movlw	127
  8307  034C  1283               	bcf	3,5	;RP0=0, select bank0
  8308  034D  1303               	bcf	3,6	;RP1=0, select bank0
  8309  034E  00B7               	movwf	___flmul@prod+3
  8310  034F  3080               	movlw	128
  8311  0350  00B6               	movwf	___flmul@prod+2
  8312  0351  3000               	movlw	0
  8313  0352  00B5               	movwf	___flmul@prod+1
  8314  0353  3000               	movlw	0
  8315  0354  00B4               	movwf	___flmul@prod
  8316  0355  2B8B               	goto	i1l1160
  8317  0356                     i1l3703:
  8318  0356  1283               	bcf	3,5	;RP0=0, select bank0
  8319  0357  1303               	bcf	3,6	;RP1=0, select bank0
  8320  0358  0839               	movf	___flmul@temp+1,w
  8321  0359  3A80               	xorlw	128
  8322  035A  00FF               	movwf	btemp+1
  8323  035B  3080               	movlw	128
  8324  035C  027F               	subwf	btemp+1,w
  8325  035D  1D03               	skipz
  8326  035E  2B61               	goto	u342_25
  8327  035F  3001               	movlw	1
  8328  0360  0238               	subwf	___flmul@temp,w
  8329  0361                     u342_25:
  8330  0361  1803               	skipnc
  8331  0362  2B64               	goto	u342_21
  8332  0363  2B65               	goto	u342_20
  8333  0364                     u342_21:
  8334  0364  2B71               	goto	i1l3709
  8335  0365                     u342_20:
  8336  0365                     i1l3705:
  8337  0365  3000               	movlw	0
  8338  0366  1283               	bcf	3,5	;RP0=0, select bank0
  8339  0367  1303               	bcf	3,6	;RP1=0, select bank0
  8340  0368  00B7               	movwf	___flmul@prod+3
  8341  0369  3000               	movlw	0
  8342  036A  00B6               	movwf	___flmul@prod+2
  8343  036B  3000               	movlw	0
  8344  036C  00B5               	movwf	___flmul@prod+1
  8345  036D  3000               	movlw	0
  8346  036E  00B4               	movwf	___flmul@prod
  8347  036F                     i1l3707:
  8348  036F  01AD               	clrf	___flmul@sign
  8349  0370  2B8B               	goto	i1l1160
  8350  0371                     i1l3709:
  8351  0371  1283               	bcf	3,5	;RP0=0, select bank0
  8352  0372  1303               	bcf	3,6	;RP1=0, select bank0
  8353  0373  0838               	movf	___flmul@temp,w
  8354  0374  00FF               	movwf	btemp+1
  8355  0375  087F               	movf	btemp+1,w
  8356  0376  00B3               	movwf	___flmul@bexp
  8357  0377                     i1l3711:
  8358  0377  30FF               	movlw	255
  8359  0378  05B4               	andwf	___flmul@prod,f
  8360  0379  30FF               	movlw	255
  8361  037A  05B5               	andwf	___flmul@prod+1,f
  8362  037B  307F               	movlw	127
  8363  037C  05B6               	andwf	___flmul@prod+2,f
  8364  037D  3000               	movlw	0
  8365  037E  05B7               	andwf	___flmul@prod+3,f
  8366  037F                     i1l3713:
  8367  037F  1C33               	btfss	___flmul@bexp,0
  8368  0380  2B82               	goto	u343_21
  8369  0381  2B83               	goto	u343_20
  8370  0382                     u343_21:
  8371  0382  2B84               	goto	i1l3717
  8372  0383                     u343_20:
  8373  0383                     i1l3715:
  8374  0383  17B6               	bsf	___flmul@prod+2,7
  8375  0384                     i1l3717:
  8376  0384  0833               	movf	___flmul@bexp,w
  8377  0385  00A8               	movwf	??___flmul
  8378  0386  1003               	clrc
  8379  0387  0C28               	rrf	??___flmul,w
  8380  0388  00FF               	movwf	btemp+1
  8381  0389  087F               	movf	btemp+1,w
  8382  038A  00B7               	movwf	___flmul@prod+3
  8383  038B                     i1l1160:
  8384  038B  082D               	movf	___flmul@sign,w
  8385  038C  00FF               	movwf	btemp+1
  8386  038D  087F               	movf	btemp+1,w
  8387  038E  04B7               	iorwf	___flmul@prod+3,f
  8388  038F                     i1l3719:
  8389  038F  0837               	movf	___flmul@prod+3,w
  8390  0390  00A3               	movwf	?___flmul+3
  8391  0391  0836               	movf	___flmul@prod+2,w
  8392  0392  00A2               	movwf	?___flmul+2
  8393  0393  0835               	movf	___flmul@prod+1,w
  8394  0394  00A1               	movwf	?___flmul+1
  8395  0395  0834               	movf	___flmul@prod,w
  8396  0396  00A0               	movwf	?___flmul
  8397  0397                     i1l1148:
  8398  0397  0008               	return
  8399  0398                     __end_of___flmul:
  8400                           
  8401                           	psect	text43
  8402  0903                     __ptext43:	
  8403 ;; *************** function __Umul8_16 *****************
  8404 ;; Defined at:
  8405 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8_16.c"
  8406 ;; Parameters:    Size  Location     Type
  8407 ;;  multiplier      1    wreg     unsigned char 
  8408 ;;  multiplicand    1    0[COMMON] unsigned char 
  8409 ;; Auto vars:     Size  Location     Type
  8410 ;;  multiplier      1    8[COMMON] unsigned char 
  8411 ;;  word_mpld       2    6[COMMON] unsigned int 
  8412 ;;  product         2    4[COMMON] unsigned int 
  8413 ;; Return value:  Size  Location     Type
  8414 ;;                  2    0[COMMON] unsigned int 
  8415 ;; Registers used:
  8416 ;;		wreg, status,2, status,0
  8417 ;; Tracked objects:
  8418 ;;		On entry : 0/0
  8419 ;;		On exit  : 0/0
  8420 ;;		Unchanged: 0/0
  8421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8422 ;;      Params:         2       0       0       0       0
  8423 ;;      Locals:         5       0       0       0       0
  8424 ;;      Temps:          2       0       0       0       0
  8425 ;;      Totals:         9       0       0       0       0
  8426 ;;Total ram usage:        9 bytes
  8427 ;; Hardware stack levels used:    1
  8428 ;; This function calls:
  8429 ;;		Nothing
  8430 ;; This function is called by:
  8431 ;;		___flmul
  8432 ;; This function uses a non-reentrant model
  8433 ;;
  8434                           
  8435                           
  8436                           ;psect for function __Umul8_16
  8437  0903                     __Umul8_16:
  8438                           
  8439                           ;incstack = 0
  8440 ;; hardware stack exceeded
  8441                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8442                           ;__Umul8_16@multiplier stored from wreg
  8443  0903  00F8               	movwf	__Umul8_16@multiplier
  8444  0904                     i1l3077:
  8445  0904  01F4               	clrf	__Umul8_16@product
  8446  0905  01F5               	clrf	__Umul8_16@product+1
  8447  0906                     i1l3079:
  8448  0906  0870               	movf	__Umul8_16@multiplicand,w
  8449  0907  00F2               	movwf	??__Umul8_16
  8450  0908  01F3               	clrf	??__Umul8_16+1
  8451  0909  0872               	movf	??__Umul8_16,w
  8452  090A  00F6               	movwf	__Umul8_16@word_mpld
  8453  090B  0873               	movf	??__Umul8_16+1,w
  8454  090C  00F7               	movwf	__Umul8_16@word_mpld+1
  8455  090D                     i1l3081:
  8456  090D  1C78               	btfss	__Umul8_16@multiplier,0
  8457  090E  2910               	goto	u234_21
  8458  090F  2911               	goto	u234_20
  8459  0910                     u234_21:
  8460  0910  2917               	goto	i1l1167
  8461  0911                     u234_20:
  8462  0911                     i1l3083:
  8463  0911  0876               	movf	__Umul8_16@word_mpld,w
  8464  0912  07F4               	addwf	__Umul8_16@product,f
  8465  0913  1803               	skipnc
  8466  0914  0AF5               	incf	__Umul8_16@product+1,f
  8467  0915  0877               	movf	__Umul8_16@word_mpld+1,w
  8468  0916  07F5               	addwf	__Umul8_16@product+1,f
  8469  0917                     i1l1167:
  8470  0917  3001               	movlw	1
  8471  0918                     u235_25:
  8472  0918  1003               	clrc
  8473  0919  0DF6               	rlf	__Umul8_16@word_mpld,f
  8474  091A  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  8475  091B  3EFF               	addlw	-1
  8476  091C  1D03               	skipz
  8477  091D  2918               	goto	u235_25
  8478  091E  1003               	clrc
  8479  091F  0CF8               	rrf	__Umul8_16@multiplier,f
  8480  0920                     i1l3085:
  8481  0920  0878               	movf	__Umul8_16@multiplier,w
  8482  0921  1D03               	btfss	3,2
  8483  0922  2924               	goto	u236_21
  8484  0923  2925               	goto	u236_20
  8485  0924                     u236_21:
  8486  0924  290D               	goto	i1l3081
  8487  0925                     u236_20:
  8488  0925                     i1l3087:
  8489  0925  0875               	movf	__Umul8_16@product+1,w
  8490  0926  00F1               	movwf	?__Umul8_16+1
  8491  0927  0874               	movf	__Umul8_16@product,w
  8492  0928  00F0               	movwf	?__Umul8_16
  8493  0929                     i1l1169:
  8494  0929  0008               	return
  8495  092A                     __end_of__Umul8_16:
  8496                           
  8497                           	psect	text44
  8498  07BE                     __ptext44:	
  8499 ;; *************** function _DD_GetState *****************
  8500 ;; Defined at:
  8501 ;;		line 50 in file "DD.c"
  8502 ;; Parameters:    Size  Location     Type
  8503 ;;  device          1    wreg     enum E880
  8504 ;; Auto vars:     Size  Location     Type
  8505 ;;  device          1    2[COMMON] enum E880
  8506 ;; Return value:  Size  Location     Type
  8507 ;;                  1    wreg      enum E13
  8508 ;; Registers used:
  8509 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8510 ;; Tracked objects:
  8511 ;;		On entry : 0/0
  8512 ;;		On exit  : 0/0
  8513 ;;		Unchanged: 0/0
  8514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8515 ;;      Params:         0       0       0       0       0
  8516 ;;      Locals:         1       0       0       0       0
  8517 ;;      Temps:          2       0       0       0       0
  8518 ;;      Totals:         3       0       0       0       0
  8519 ;;Total ram usage:        3 bytes
  8520 ;; Hardware stack levels used:    1
  8521 ;; This function calls:
  8522 ;;		Nothing
  8523 ;; This function is called by:
  8524 ;;		_ISR
  8525 ;; This function uses a non-reentrant model
  8526 ;;
  8527                           
  8528                           
  8529                           ;psect for function _DD_GetState
  8530  07BE                     _DD_GetState:
  8531                           
  8532                           ;incstack = 0
  8533                           ; Regs used in _DD_GetState: [wreg-fsr0h+status,2+status,0]
  8534                           ;DD_GetState@device stored from wreg
  8535  07BE  00F2               	movwf	DD_GetState@device
  8536  07BF                     i1l3505:
  8537                           
  8538                           ;DD.c: 50: tState DD_GetState(tDD device);DD.c: 51: {;DD.c: 52:     switch(device)
  8539  07BF  2FE7               	goto	i1l3527
  8540  07C0                     i1l3507:
  8541                           
  8542                           ;DD.c: 55:             return ((PORTC & (1<<5)) >> 5);
  8543  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  8544  07C1  1303               	bcf	3,6	;RP1=0, select bank0
  8545  07C2  0807               	movf	7,w	;volatile
  8546  07C3  00F0               	movwf	??_DD_GetState
  8547  07C4  3005               	movlw	5
  8548  07C5                     u292_25:
  8549  07C5  1003               	clrc
  8550  07C6  0CF0               	rrf	??_DD_GetState,f
  8551  07C7  3EFF               	addlw	-1
  8552  07C8  1D03               	skipz
  8553  07C9  2FC5               	goto	u292_25
  8554  07CA  0870               	movf	??_DD_GetState,w
  8555  07CB  3901               	andlw	1
  8556  07CC  2FFA               	goto	i1l279
  8557  07CD                     i1l3513:
  8558                           
  8559                           ;DD.c: 58:             return ((PORTC & (1<<2)) >> 2);
  8560  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  8561  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  8562  07CF  0807               	movf	7,w	;volatile
  8563  07D0  00F0               	movwf	??_DD_GetState
  8564  07D1  3002               	movlw	2
  8565  07D2                     u293_25:
  8566  07D2  1003               	clrc
  8567  07D3  0CF0               	rrf	??_DD_GetState,f
  8568  07D4  3EFF               	addlw	-1
  8569  07D5  1D03               	skipz
  8570  07D6  2FD2               	goto	u293_25
  8571  07D7  0870               	movf	??_DD_GetState,w
  8572  07D8  3901               	andlw	1
  8573  07D9  2FFA               	goto	i1l279
  8574  07DA                     i1l3519:
  8575                           
  8576                           ;DD.c: 61:             return ((PORTB & (1<<7)) >> 7);
  8577  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  8578  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  8579  07DC  0806               	movf	6,w	;volatile
  8580  07DD  00F0               	movwf	??_DD_GetState
  8581  07DE  3007               	movlw	7
  8582  07DF                     u294_25:
  8583  07DF  1003               	clrc
  8584  07E0  0CF0               	rrf	??_DD_GetState,f
  8585  07E1  3EFF               	addlw	-1
  8586  07E2  1D03               	skipz
  8587  07E3  2FDF               	goto	u294_25
  8588  07E4  0870               	movf	??_DD_GetState,w
  8589  07E5  3901               	andlw	1
  8590  07E6  2FFA               	goto	i1l279
  8591  07E7                     i1l3527:
  8592  07E7  0872               	movf	DD_GetState@device,w
  8593  07E8  00F0               	movwf	??_DD_GetState
  8594  07E9  01F1               	clrf	??_DD_GetState+1
  8595                           
  8596                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8597                           ; Switch size 1, requested type "simple"
  8598                           ; Number of cases is 1, Range of values is 0 to 0
  8599                           ; switch strategies available:
  8600                           ; Name         Instructions Cycles
  8601                           ; simple_byte            4     3 (average)
  8602                           ; direct_byte           11     8 (fixed)
  8603                           ; jumptable            260     6 (fixed)
  8604                           ;	Chosen strategy is simple_byte
  8605  07EA  0871               	movf	??_DD_GetState+1,w
  8606  07EB  3A00               	xorlw	0	; case 0
  8607  07EC  1903               	skipnz
  8608  07ED  2FEF               	goto	i1l4199
  8609  07EE  2FFA               	goto	i1l279
  8610  07EF                     i1l4199:
  8611                           
  8612                           ; Switch size 1, requested type "simple"
  8613                           ; Number of cases is 3, Range of values is 0 to 2
  8614                           ; switch strategies available:
  8615                           ; Name         Instructions Cycles
  8616                           ; simple_byte           10     6 (average)
  8617                           ; direct_byte           17     8 (fixed)
  8618                           ; jumptable            260     6 (fixed)
  8619                           ;	Chosen strategy is simple_byte
  8620  07EF  0870               	movf	??_DD_GetState,w
  8621  07F0  3A00               	xorlw	0	; case 0
  8622  07F1  1903               	skipnz
  8623  07F2  2FC0               	goto	i1l3507
  8624  07F3  3A01               	xorlw	1	; case 1
  8625  07F4  1903               	skipnz
  8626  07F5  2FCD               	goto	i1l3513
  8627  07F6  3A03               	xorlw	3	; case 2
  8628  07F7  1903               	skipnz
  8629  07F8  2FDA               	goto	i1l3519
  8630  07F9  2FFA               	goto	i1l279
  8631  07FA                     i1l279:
  8632  07FA  0008               	return
  8633  07FB                     __end_of_DD_GetState:
  8634                           
  8635                           	psect	text45
  8636  0953                     __ptext45:	
  8637 ;; *************** function _ADC_ReadChannel *****************
  8638 ;; Defined at:
  8639 ;;		line 69 in file "adc.c"
  8640 ;; Parameters:    Size  Location     Type
  8641 ;;  channel         1    wreg     enum E865
  8642 ;; Auto vars:     Size  Location     Type
  8643 ;;  channel         1    5[COMMON] enum E865
  8644 ;;  result          2    3[COMMON] unsigned short 
  8645 ;; Return value:  Size  Location     Type
  8646 ;;                  2    0[COMMON] unsigned short 
  8647 ;; Registers used:
  8648 ;;		wreg, status,2, status,0, btemp+1
  8649 ;; Tracked objects:
  8650 ;;		On entry : 0/0
  8651 ;;		On exit  : 0/0
  8652 ;;		Unchanged: 0/0
  8653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8654 ;;      Params:         2       0       0       0       0
  8655 ;;      Locals:         3       0       0       0       0
  8656 ;;      Temps:          1       0       0       0       0
  8657 ;;      Totals:         6       0       0       0       0
  8658 ;;Total ram usage:        6 bytes
  8659 ;; Hardware stack levels used:    1
  8660 ;; This function calls:
  8661 ;;		Nothing
  8662 ;; This function is called by:
  8663 ;;		_ISR
  8664 ;; This function uses a non-reentrant model
  8665 ;;
  8666                           
  8667                           
  8668                           ;psect for function _ADC_ReadChannel
  8669  0953                     _ADC_ReadChannel:
  8670                           
  8671                           ;incstack = 0
  8672                           ; Regs used in _ADC_ReadChannel: [wreg+status,2+status,0+btemp+1]
  8673                           ;ADC_ReadChannel@channel stored from wreg
  8674  0953  00F5               	movwf	ADC_ReadChannel@channel
  8675  0954                     i1l3533:
  8676                           
  8677                           ;adc.c: 69: uint16_t ADC_ReadChannel(tADC_Channel_Select channel);adc.c: 70: {;adc.c: 72
      +                          :     ADCON0 &= ~(7<<3);
  8678  0954  30C7               	movlw	199
  8679  0955  00FF               	movwf	btemp+1
  8680  0956  087F               	movf	btemp+1,w
  8681  0957  1283               	bcf	3,5	;RP0=0, select bank0
  8682  0958  1303               	bcf	3,6	;RP1=0, select bank0
  8683  0959  059F               	andwf	31,f	;volatile
  8684                           
  8685                           ;adc.c: 75:     ADCON0 |= ((channel)<<3);
  8686  095A  0875               	movf	ADC_ReadChannel@channel,w	;volatile
  8687  095B  00F2               	movwf	??_ADC_ReadChannel
  8688  095C  3002               	movlw	2
  8689  095D                     u295_25:
  8690  095D  1003               	clrc
  8691  095E  0DF2               	rlf	??_ADC_ReadChannel,f
  8692  095F  3EFF               	addlw	-1
  8693  0960  1D03               	skipz
  8694  0961  295D               	goto	u295_25
  8695  0962  1003               	clrc
  8696  0963  0D72               	rlf	??_ADC_ReadChannel,w
  8697  0964  00FF               	movwf	btemp+1
  8698  0965  087F               	movf	btemp+1,w
  8699  0966  049F               	iorwf	31,f	;volatile
  8700  0967                     i1l3535:
  8701                           
  8702                           ;adc.c: 78:     _delay((unsigned long)((30)*(4000000/4000000.0)));
  8703  0967  3009               	movlw	9
  8704  0968  00F2               	movwf	??_ADC_ReadChannel
  8705  0969                     u387_27:
  8706  0969  0BF2               	decfsz	??_ADC_ReadChannel,f
  8707  096A  2969               	goto	u387_27
  8708  096B  296C               	nop2
  8709  096C                     i1l3537:
  8710                           
  8711                           ;adc.c: 81:     (ADCON0|=(1<<2));
  8712  096C  1283               	bcf	3,5	;RP0=0, select bank0
  8713  096D  1303               	bcf	3,6	;RP1=0, select bank0
  8714  096E  151F               	bsf	31,2	;volatile
  8715  096F                     i1l329:	
  8716                           ;adc.c: 84:     while((ADCON0 & (1<<2)));
  8717                           
  8718  096F  191F               	btfsc	31,2	;volatile
  8719  0970  2972               	goto	u296_21
  8720  0971  2973               	goto	u296_20
  8721  0972                     u296_21:
  8722  0972  296F               	goto	i1l329
  8723  0973                     u296_20:
  8724  0973                     i1l3539:
  8725                           
  8726                           ;adc.c: 87:     uint16_t result =((ADRESH<<8) + ADRESL) ;
  8727  0973  081E               	movf	30,w	;volatile
  8728  0974  00F4               	movwf	ADC_ReadChannel@result+1
  8729  0975  1683               	bsf	3,5	;RP0=1, select bank1
  8730  0976  1303               	bcf	3,6	;RP1=0, select bank1
  8731  0977  081E               	movf	30,w	;volatile
  8732  0978  00F3               	movwf	ADC_ReadChannel@result
  8733                           
  8734                           ;adc.c: 89:     return result;
  8735  0979  0874               	movf	ADC_ReadChannel@result+1,w
  8736  097A  00F1               	movwf	?_ADC_ReadChannel+1
  8737  097B  0873               	movf	ADC_ReadChannel@result,w
  8738  097C  00F0               	movwf	?_ADC_ReadChannel
  8739  097D                     i1l332:
  8740  097D  0008               	return
  8741  097E                     __end_of_ADC_ReadChannel:
  8742  007E                     btemp	set	126	;btemp
  8743  007E                     wtemp0	set	126
  8744                           
  8745                           	psect	config
  8746                           
  8747                           ;Config register CONFIG @ 0x2007
  8748                           ;	Oscillator Selection bits
  8749                           ;	FOSC = XT, XT oscillator
  8750                           ;	Watchdog Timer Enable bit
  8751                           ;	WDTE = OFF, WDT disabled
  8752                           ;	Power-up Timer Enable bit
  8753                           ;	PWRTE = ON, PWRT enabled
  8754                           ;	Brown-out Reset Enable bit
  8755                           ;	BOREN = ON, BOR enabled
  8756                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  8757                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  8758                           ;	Data EEPROM Memory Code Protection bit
  8759                           ;	CPD = OFF, Data EEPROM code protection off
  8760                           ;	Flash Program Memory Write Enable bits
  8761                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  8762                           ;	In-Circuit Debugger Mode bit
  8763                           ;	DEBUG = 0x1, unprogrammed default
  8764                           ;	Flash Program Memory Code Protection bit
  8765                           ;	CP = OFF, Code protection off
  8766  2007                     	org	8199
  8767  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     44      57
    BANK1            80     31      51
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    TMR1_Init@config	PTR struct . size(1) Largest target is 2
		 -> main@TMR1_cfg(BANK1[2]), 

    ADC_Init@config	PTR struct . size(1) Largest target is 4
		 -> main@adc_config(BANK1[4]), 

    I2C_Init@i2c_config	PTR struct . size(1) Largest target is 6
		 -> main@i2c_config(BANK1[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___xxtofl
    _ISR->i1_Heater_Display
    i1_Heater_Display->i1_SSD_Write
    i1_SSD_Write->i1___awdiv
    ___fltol->___xxtofl
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    _main->_EWH_Operating_Mode
    _I2C_Init->___lldiv
    _EWH_SSD_OFF->_SSD_OFF
    _SSD_OFF->_SSD_config
    _EWH_SetTemp_Mode->_Heater_Display
    _EWH_EEPROM_Update->_EEPROM_WriteByte
    _EWH_PowerUP_Mode->_Heater_Display
    _EWH_EEPROM_Read->_EEPROM_ReadByte
    _EEPROM_ReadByte->_I2C_Master_ReadByte
    _EWH_Operating_Mode->_Heater_Display
    _Heater_Display->_SSD_Write
    _SSD_Write->___awdiv
    _EWH_EEPROM_Init->_EEPROM_WriteByte
    _EEPROM_WriteByte->_I2C_Master_WriteByte

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   14191
                                             17 BANK1     14    14      0
                           _ADC_Init
                            _DD_Init
                    _EWH_EEPROM_Init
                 _EWH_Operating_Mode
                   _EWH_PowerUP_Mode
                   _EWH_SetTemp_Mode
                     _EWH_Sleep_Mode
                           _I2C_Init
                            _SW_Init
                          _TMR1_Init
 ---------------------------------------------------------------------------------
 (1) _TMR1_Init                                            3     3      0      77
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SW_Init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             1     1      0     413
                                             14 BANK1      1     1      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (1) _EWH_Sleep_Mode                                       0     0      0    1502
                        _DD_SetState
                        _EWH_SSD_OFF
                          _TMR1_Stop
 ---------------------------------------------------------------------------------
 (2) _EWH_SSD_OFF                                          0     0      0     512
                            _SSD_OFF
 ---------------------------------------------------------------------------------
 (3) _SSD_OFF                                              1     1      0     512
                                              4 BANK1      1     1      0
                         _SSD_config
 ---------------------------------------------------------------------------------
 (1) _EWH_SetTemp_Mode                                     2     2      0    4505
                                             14 BANK1      2     2      0
                        _DD_SetState
                    _EWH_EEPROM_Read
                  _EWH_EEPROM_Update
                     _Heater_Display
                         _TMR1_Start
 ---------------------------------------------------------------------------------
 (2) _EWH_EEPROM_Update                                    1     1      0     414
                                              6 BANK1      1     1      0
                   _EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (1) _EWH_PowerUP_Mode                                     2     2      0    3101
                                             14 BANK1      2     2      0
                    _EWH_EEPROM_Read
                     _Heater_Display
 ---------------------------------------------------------------------------------
 (2) _EWH_EEPROM_Read                                      0     0      0     210
                    _EEPROM_ReadByte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_ReadByte                                      5     3      2     210
                                              2 BANK1      5     3      2
                _I2C_Master_ReadByte
      _I2C_Master_Send_RepeatedStart
              _I2C_Master_Send_Start
               _I2C_Master_Send_Stop
               _I2C_Master_WriteByte
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_ReadByte                                  2     2      0      23
                                              0 BANK1      2     2      0
                _I2C_Master_Send_ACK
               _I2C_Master_Send_NACK
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Send_NACK                                 0     0      0       0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Send_ACK                                  0     0      0       0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (1) _EWH_Operating_Mode                                   3     3      0    3881
                                             14 BANK1      3     3      0
                        _DD_SetState
                     _Heater_Display
                         _TMR1_Start
                          _TMR1_Stop
 ---------------------------------------------------------------------------------
 (2) _TMR1_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Heater_Display                                       4     2      2    2891
                                             10 BANK1      4     2      2
                          _SSD_Write
                         _SSD_config
                            ___awdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     463
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (3) _SSD_Write                                            2     1      1     860
                                              8 BANK1      2     1      1
                         _SSD_config
                            ___awdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _SSD_config                                           4     3      1     490
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (2) _DD_SetState                                          4     3      1     990
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (1) _EWH_EEPROM_Init                                      0     0      0     392
                   _EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_WriteByte                                     5     2      3     392
                                              1 BANK1      5     2      3
      _I2C_Master_Send_RepeatedStart
              _I2C_Master_Send_Start
               _I2C_Master_Send_Stop
               _I2C_Master_WriteByte
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_WriteByte                                 1     1      0      22
                                              0 BANK1      1     1      0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Send_Stop                                 0     0      0       0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Send_Start                                0     0      0       0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Send_RepeatedStart                        0     0      0       0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (5) _I2C_Wait_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DD_Init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             3     3      0      99
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  8     8      0    4337
                                             36 BANK0      8     8      0
                    _ADC_ReadChannel
                        _DD_GetState
                            ___flmul
                            ___fltol
                           ___xxtofl
                   i1_Heater_Display
 ---------------------------------------------------------------------------------
 (8) i1_Heater_Display                                     4     2      2    1127
                                             10 COMMON     4     2      2
                        i1_SSD_Write
                       i1_SSD_config
                          i1___awdiv
                          i1___lwmod
 ---------------------------------------------------------------------------------
 (9) i1___lwmod                                            5     1      4     211
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (9) i1___awdiv                                            8     4      4     352
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (9) i1_SSD_Write                                          2     1      1     306
                                              8 COMMON     2     1      1
                       i1_SSD_config
                          i1___awdiv (ARG)
                          i1___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (9) i1_SSD_config                                         4     3      1     188
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (8) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (8) ___fltol                                             10     6      4     305
                                             26 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             26    18      8    2417
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (9) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (8) _DD_GetState                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (8) _ADC_ReadChannel                                      6     4      2      45
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _DD_Init
   _EWH_EEPROM_Init
     _EEPROM_WriteByte
       _I2C_Master_Send_RepeatedStart
         _I2C_Wait_IDLE
       _I2C_Master_Send_Start
         _I2C_Wait_IDLE
       _I2C_Master_Send_Stop
         _I2C_Wait_IDLE
       _I2C_Master_WriteByte
         _I2C_Wait_IDLE
   _EWH_Operating_Mode
     _DD_SetState
     _Heater_Display
       _SSD_Write
         _SSD_config
         ___awdiv (ARG)
         ___lwmod (ARG)
       _SSD_config
       ___awdiv
       ___lwmod
     _TMR1_Start
     _TMR1_Stop
   _EWH_PowerUP_Mode
     _EWH_EEPROM_Read
       _EEPROM_ReadByte
         _I2C_Master_ReadByte
           _I2C_Master_Send_ACK
             _I2C_Wait_IDLE
           _I2C_Master_Send_NACK
             _I2C_Wait_IDLE
           _I2C_Wait_IDLE
         _I2C_Master_Send_RepeatedStart
           _I2C_Wait_IDLE
         _I2C_Master_Send_Start
           _I2C_Wait_IDLE
         _I2C_Master_Send_Stop
           _I2C_Wait_IDLE
         _I2C_Master_WriteByte
           _I2C_Wait_IDLE
     _Heater_Display
       _SSD_Write
         _SSD_config
         ___awdiv (ARG)
         ___lwmod (ARG)
       _SSD_config
       ___awdiv
       ___lwmod
   _EWH_SetTemp_Mode
     _DD_SetState
     _EWH_EEPROM_Read
       _EEPROM_ReadByte
         _I2C_Master_ReadByte
           _I2C_Master_Send_ACK
             _I2C_Wait_IDLE
           _I2C_Master_Send_NACK
             _I2C_Wait_IDLE
           _I2C_Wait_IDLE
         _I2C_Master_Send_RepeatedStart
           _I2C_Wait_IDLE
         _I2C_Master_Send_Start
           _I2C_Wait_IDLE
         _I2C_Master_Send_Stop
           _I2C_Wait_IDLE
         _I2C_Master_WriteByte
           _I2C_Wait_IDLE
     _EWH_EEPROM_Update
       _EEPROM_WriteByte
         _I2C_Master_Send_RepeatedStart
           _I2C_Wait_IDLE
         _I2C_Master_Send_Start
           _I2C_Wait_IDLE
         _I2C_Master_Send_Stop
           _I2C_Wait_IDLE
         _I2C_Master_WriteByte
           _I2C_Wait_IDLE
     _Heater_Display
       _SSD_Write
         _SSD_config
         ___awdiv (ARG)
         ___lwmod (ARG)
       _SSD_config
       ___awdiv
       ___lwmod
     _TMR1_Start
   _EWH_Sleep_Mode
     _DD_SetState
     _EWH_SSD_OFF
       _SSD_OFF
         _SSD_config
     _TMR1_Stop
   _I2C_Init
     ___lldiv
   _SW_Init
   _TMR1_Init

 _ISR (ROOT)
   _ADC_ReadChannel
   _DD_GetState
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   i1_Heater_Display
     i1_SSD_Write
       i1_SSD_config
       i1___awdiv (ARG)
       i1___lwmod (ARG)
     i1_SSD_config
     i1___awdiv
     i1___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1F      33       7       63.7%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2C      39       5       71.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      7A      12        0.0%
ABS                  0      0      7A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Jul 08 06:27:13 2020

                          ?_DD_SetState 00A0                                       pc 0002  
                                    l13 09FD                                      l31 0C01  
                                    l16 0A2C            __size_of_I2C_Master_ReadByte 0029  
                                    l28 0BB2                                      l91 0832  
                                    l94 083E                                      l88 0AB2  
                                    l97 17E3                            ___awdiv@sign 00A5  
                                    fsr 0004                              _SSD_config 0D9C  
          __size_of_I2C_Master_Send_ACK 000A                     __Umul8_16@word_mpld 0076  
                 _I2C_Master_Send_Start 17DB                                     l100 17EC  
                                   l103 17DA                                     l112 08F3  
                                   l120 0952                                     l114 08F7  
                                   l106 17FF                                     l115 0902  
                                   l109 0810                                     l322 0F1B  
                                   l323 0F22                                     l253 08C7  
                                   l326 0F71                                     l318 0F02  
                                   l319 0F06                                     l360 0AB7  
                                   l409 17F5                                     l274 0BA6  
                                   l362 0ABC                                     l515 0FFF  
                                   l363 0AC1                                     l372 086B  
                                   l364 0AC6                                     l366 0AE4  
                                   l544 0673                                     l368 0AE6  
                                   l289 084B                                     l369 0AFC  
                                   l378 07FE                                     l580 087C  
                                   l574 04AA                                     l670 0825  
                                   l663 08E4                                     l583 0831  
                                   l495 09F1                                     l912 0D9B  
                                   l568 0470                                     l577 085B  
                                   l659 0E06                                     l667 0C63  
                                   l795 0D32                                     _GIE 005F  
                                   _PEN 048A                                     _ISR 04AB  
                                   _SEN 0488                                     fsr0 0004  
                                   indf 0000                         TMR1_Init@config 00A2  
            __size_of_EWH_EEPROM_Update 0011                      I2C_Init@i2c_config 00AE  
                          ___flmul@aexp 0032                            ___flmul@bexp 0033  
                          ___flmul@sign 002D                            ___flmul@temp 0038  
                          ___flmul@prod 0034           __size_of_I2C_Master_Send_NACK 000A  
                       __end_of_DD_Init 08C8                                    ?_ISR 0070  
                          ___fltol@exp1 0043                                    l1041 0A68  
                                  l3001 0B60                                    l3011 0B7D  
                                  l3003 0B67                                    l3013 0B82  
                                  l3005 0B6C                                    l3021 0B93  
                                  l3015 0B86                                    l3007 0B70  
                                  l3031 085C                                    l3017 0B8C  
                                  l3009 0B76                                    l3041 0C26  
                                  l3033 07FB                                    l3043 0C31  
                                  l3035 0826                                    l3051 0CCB  
                                  l3221 0F17                                    l3213 0EF7  
                                  l3045 0C3A                                    l3029 083F  
                                  l3301 09E3                                    l3061 0CF1  
                                  l3053 0CDD                                    l3231 0F69  
                                  l3215 0EFB                                    l3223 0F29  
                                  l3047 0C58                                    l3039 0C02  
                                  l3311 0F72                                    l3071 0D24  
                                  l3063 0CFA                                    l3055 0CE0  
                                  l3217 0F0A                                    l3225 0F4E  
                                  l3401 0445                                    l3321 0F79  
                                  l3049 086F                                    l3305 09E9  
                                  l3065 0D0C                                    l3057 0CE9  
                                  l3073 0D2A                                    l3227 0F60  
                                  l3219 0F11                                    l3251 08B5  
                                  l3243 08AB                                    l3411 047B  
                                  l3403 0450                                    l3331 0F83  
                                  l3323 0F7D                                    l3067 0D1A  
                                  l3059 0CED                                    l3171 0A6E  
                                  l3229 0F62                                    l3421 0499  
                                  l3413 0488                                    l3405 0460  
                                  l3341 0FB5                                    l3333 0F84  
                                  l3325 0F80                                    l3317 0F75  
                                  l3501 066E                                    l3309 09ED  
                                  l3069 0D1B                                    l3173 0A77  
                                  l3263 08C3                                    l3255 08B9  
                                  l3247 08B1                                    l3239 08AB  
                                  l3423 049E                                    l3415 048D  
                                  l3407 0475                                    l3351 0FE1  
                                  l3343 0FC5                                    l3335 0F8E  
                                  l3327 0F81                                    l3503 066F  
                                  l3183 0AA0                                    l3175 0A98  
                                  l3191 0AB6                                    l2801 0DAD  
                                  l3425 049F                                    l3417 048E  
                                  l3361 0398                                    l3353 0FEC  
                                  l3345 0FC7                                    l3337 0F9A  
                                  l3329 0F82                                    l3441 059A  
                                  l3433 0593                                    l3177 0A9B  
                                  l3169 0A6C                                    l3281 17F4  
                                  l3273 17F1                                    l3265 17ED  
                                  l3259 08BF                                    l3283 084C  
                                  l2811 0DC1                                    l3427 04A4  
                                  l3419 0493                                    l3371 03A2  
                                  l3355 0FFC                                    l3347 0FCA  
                                  l3339 0FAA                                    l3451 05A4  
                                  l3443 059E                                    l3435 0599  
                                  l3291 09DD                                    l3187 0AA1  
                                  l3179 0A9F                                    l3195 0ACB  
                                  l2821 0DD5                                    l2805 0DB4  
                                  l2901 0D64                                    l3381 03A8  
                                  l3365 0398                                    l2741 17F6  
                                  l3349 0FD1                                    l3461 05D1  
                                  l3453 05AE                                    l3445 05A1  
                                  l3429 0593                                    l3293 09E0  
                                  l3285 09B8                                    l3189 0AAA  
                                  l3277 17F2                                    l3269 17F0  
                                  l4191 0DF8                                    l2831 0DE9  
                                  l2815 0DC8                                    l2807 0DB8  
                                  l2911 0D87                                    l2903 0D68  
                                  l3391 03D6                                    l3383 03A9  
                                  l3375 03A3                                    l2743 17FB  
                                  l2751 080F                                    l3471 0606  
                                  l3463 05E1                                    l3455 05B5  
                                  l3447 05A2                                    l3295 09E1  
                                  l3287 09CF                                    l3279 17F3  
                                  l3199 0AE8                                    l2737 0832  
                                  l2753 17DB                                    l2761 08E8  
                                  l4193 0B9B                                    l2825 0DDC  
                                  l2817 0DCC                                    l2809 0DBD  
                                  l2905 0D79                                    l2913 0D8D  
                                  l2921 0A2D                                    l3393 03F4  
                                  l3385 03AD                                    l3377 03A6  
                                  l3369 039E                                    l2745 17FE  
                                  l3481 063B                                    l3465 05E7  
                                  l3473 060A                                    l3457 05BE  
                                  l3449 05A3                                    l3297 09E2  
                                  l3289 09D4                                    l4185 07AD  
                                  l4195 0F37                                    l2739 0838  
                                  l2755 17E0                                    l2771 17E4  
                                  l2763 08ED                                    l2843 09F2  
                                  l2827 0DE0                                    l2819 0DD1  
                                  l2835 0DF0                                    l2915 0D92  
                                  l2907 0D7F                                    l2931 0A47  
                                  l2923 0A35                                    l3395 0408  
                                  l3387 03B2                                    l3379 03A7  
                                  l2747 0807                                    l2851 0BAD  
                                  l3491 0651                                    l3475 061A  
                                  l3467 05F2                                    l3459 05CC  
                                  l4187 0AD6                                    l2757 17D2  
                                  l2773 17E9                                    l2765 08F8  
                                  l2845 09F8                                    l2829 0DE5  
                                  l2917 0D97                                    l2909 0D80  
                                  l2933 0A51                                    l2925 0A38  
                                  l3397 0425                                    l3389 03C0  
                                  l2749 080C                                    l2781 093D  
                                  l2853 0BCC                                    l3493 065E  
                                  l3477 0620                                    l3469 0602  
                                  l3485 063E                                    l4189 0AF4  
                                  l3821 073C                                    l2759 17D7  
                                  l2767 08FD                                    l2847 0A17  
                                  l2791 0D9F                                    l2871 08DC  
                                  l2935 0A57                                    l2927 0A3F  
                                  l3399 0435                                    l2783 0944  
                                  l2775 092D                                    l2855 0BEE  
                                  l3495 0665                                    l3487 0645  
                                  l3479 062B                                    l2863 081E  
                                  l3831 074F                                    l3823 0740  
                                  l3815 072E                                    l2865 08CB  
                                  l2881 0D3A                                    l2937 0A5E  
                                  l2929 0A43                                    l2785 094A  
                                  l2777 0932                                    l2857 0BF9  
                                  l2849 0BA7                                    l3497 0666  
                                  l3489 064A                                    l3833 0753  
                                  l3825 0744                                    l3817 0734  
                                  l2795 0DA0                                    l2867 08D3  
                                  l2891 0D4E                                    l2883 0D3F  
                                  l2939 0A64                                    l2787 094F  
                                  l2779 093A                                    l2859 0BFE  
                                  l3499 0669                                    l3851 0779  
                                  l3843 076F                                    l3835 075A  
                                  l3827 0746                                    l3819 0736  
                                  l2797 0DA4                                    l2869 08D6  
                                  l2893 0D50                                    l2885 0D41  
                                  l2877 0D33                                    l3837 075F  
                                  l3829 0747                                    l2799 0DA9  
                                  l2895 0D56                                    l2887 0D45  
                                  l2879 0D36                                    l3871 079E  
                                  l3863 0787                                    l3855 077D  
                                  l3847 0775                                    l3839 076A  
                                  l2993 0B50                                    l2897 0D59  
                                  l2889 0D4A                                    l3865 078C  
                                  l2995 0B51                                    l2899 0D60  
                                  l3867 0792                                    l3875 07A3  
                                  l3859 0783                                    l2997 0B56  
                                  l3869 0798                                    l2999 0B5A  
                                  _ADIE 0466                                    _ADIF 0066  
                                  _ADON 00F8           __size_of_I2C_Master_Send_Stop 0009  
                                  _T0CS 040D                                    u2010 0BCC  
                                  u2011 0BCB                                    u2100 0D79  
                                  u2101 0D78                                    u2005 0BB9  
                                  u2030 08DC                                    u2031 08DB  
                                  u2120 0D8D                                    u2040 0D3A  
                                  u2121 0D8C                                    u2105 0D75  
                                  u2041 0D39                                    u2025 0BE0  
                                  u2130 0D92                                    u2050 0D45  
                                  u2131 0D91                                    u2115 0D81  
                                  u2051 0D44                                    u2060 0D56  
                                  u2140 0A35                                    u2061 0D55  
                                  u2141 0A34                                    u2310 0D0C  
                                  u2311 0D0B                                    u2240 0B56  
                                  u2080 0D68                                    u2160 0A47  
                                  u2241 0B55                                    u2081 0D67  
                                  u2161 0A46                                    u2305 0CF3  
                                  u2250 0B6C                                    u2170 0A51  
                                  u2330 0D2A                                    u2251 0B6B  
                                  u2075 0D5A                                    u2171 0A50  
                                  u2155 0A39                                    u2331 0D29  
                                  u2315 0D08                                    u2260 0B82  
                                  u2261 0B81                                    u2325 0D1C  
                                  u2190 0A64                                    u2270 0CDD  
                                  u2095 0D69                                    u2191 0A63  
                                  u2175 0A4D                                    u2271 0CDC  
                                  u2600 0FC5                                    u2185 0A58  
                                  u2601 0FC4                                    u2290 0CF1  
                                  u2291 0CF0                                    u1900 0838  
                                  u2700 0445                                    u2620 0FE1  
                                  u2540 0AAA                                    u1901 0837  
                                  u2701 0444                                    u2621 0FE0  
                                  u2285 0CE2                                    u2541 0AA9  
                                  u1910 083E                                    u1911 083D  
                                  u2615 0FD8                                    u2560 0F69  
                                  u1920 08F7                                    u2720 0460  
                                  u2640 0FFC                                    u2800 05E7  
                                  u2561 0F68                                    u1921 08F6  
                                  u2721 045F                                    u2641 0FFB  
                                  u2801 05E6                                    u2650 03D6  
                                  u1930 0944                                    u2555 0F56  
                                  u2715 0457                                    u2651 03D5  
                                  u1931 0943                                    u2635 0FF3  
                                  u1940 0DA9                                    u2740 0470  
                                  u2660 0408                                    u2580 0FAA  
                                  u2900 0665                                    u2820 0602  
                                  u1941 0DA8                                    u2741 046F  
                                  u2661 0407                                    u2581 0FA9  
                                  u2901 0664                                    u2821 0601  
                                  u1950 0DBD                                    u2750 047A  
                                  u2910 066E                                    u1951 0DBC  
                                  u2751 0479                                    u2735 0467  
                                  u2655 03D2                                    u2575 0FA1  
                                  u2911 066D                                    u2815 05F9  
                                  u1960 0DD1                                    u2760 048D  
                                  u2680 0435                                    u2840 061A  
                                  u1961 0DD0                                    u2761 048C  
                                  u2681 0434                                    u2665 0404  
                                  u2841 0619                                    u1970 0DE5  
                                  u2770 049E                                    u2850 0620  
                                  u1971 0DE4                                    u2771 049D  
                                  u2675 042C                                    u2595 0FBC  
                                  u2851 061F                                    u2835 0611  
                                  _PEIE 005E                                    _INTE 005C  
                                  u1990 0A17                                    u2870 063B  
                                  u2790 05E1                                    _INTF 0059  
                                  u1991 0A16                                    u2695 043C  
                                  u3807 0FB0                                    u2871 063A  
                                  u2791 05E0                                    u2880 0645  
                                  u1985 0A04                                    u3817 0FE7  
                                  u2881 0644                                    u2865 0632  
                                  u2785 05D8                                    u2890 064A  
                                  u3827 044B                                    u2891 0649  
                                  _RCEN 048B                                    u3837 0C2C  
                                  u3847 0C5E                                    u3787 05ED  
                                  u3797 0626                                    _TMR1 000E  
                                  _RSEN 0489                                    _main 072E  
                       __end_of_SSD_OFF 0826                        __end_of_I2C_Init 0AB3  
                                  _temp 0052                                    btemp 007E  
                  EEPROM_WriteByte@data 00A3                        __end_of_ADC_Init 0F72  
                                  start 0012                __size_of_EEPROM_ReadByte 005B  
              __size_of_EWH_EEPROM_Init 0010                __size_of_EWH_EEPROM_Read 000C  
                       __end_of_SW_Init 17F6                            ?_EWH_SSD_OFF 0070  
                       _ADC_ReadChannel 0953                                   ??_ISR 0044  
                         ___fltol@sign1 0042                                   ?_main 0070  
                        i1___awdiv@sign 0075                                   _ACKEN 048C  
                                 _ACKDT 048D                         __end_of___awdiv 0D9C  
                       __end_of___flmul 0398                         __end_of___fltol 0EF4  
                       __end_of___lldiv 0D33                         ___awdiv@divisor 00A0  
                                 i1l332 097D                                   i1l329 096F  
                       __end_of___lwmod 0A69                                   i1l606 0588  
                                 i1l279 07FA                                   i1l590 04CB  
                                 i1l663 08AA                                   i1l912 0CCA  
                                 i1l592 04CA                                   i1l659 0E77  
                                 i1l667 0B4C                                   i1l952 0EDE  
                                 i1l945 0EF3                                   i1l955 0EF3  
                       ___awdiv@counter 00A4           __size_of_I2C_Master_WriteByte 001E  
                     ?i1_Heater_Display 007A                                   _PORTA 0005  
                                 _PORTB 0006                                   _PORTC 0007  
                                 _PORTD 0008                                   _TRISA 0085  
                                 _TRISB 0086                                   _TRISC 0087  
                                 _TRISD 0088                                   _SSPIE 0463  
                                 _SSPEN 00A5                                   _SSPIF 0063  
               __size_of_Heater_Display 0062                          main@i2c_config 00B5  
                    ??i1_Heater_Display 007C                      i1___lwmod@dividend 0072  
                    __size_of_TMR1_Init 004A                             ?_TMR1_Start 0070  
                    __size_of_TMR1_Stop 0004                                   pclath 000A  
                                 status 0003                                   wtemp0 007E  
                    __size_ofi1___awdiv 0067                      __size_of_SSD_Write 001D  
                    __size_ofi1___lwmod 003A                  __size_of_I2C_Wait_IDLE 000D  
                       __initialization 0015               __size_of_EWH_SetTemp_Mode 00E1  
                          __end_of_main 07BE                           i1SSD_Write@ID 0079  
                ?_I2C_Master_Send_Start 0070                             ?_SSD_config 00A0  
                                ??_main 00B1                            ?i1_SSD_Write 0078  
                             ??_DD_Init 00A0                                  _ADCON0 001F  
                                _ADCON1 009F                               ??_SSD_OFF 00A4  
                                _ADRESH 001E                                  _ADRESL 009E  
                      ___awdiv@dividend 00A2                                  i1l1041 09B7  
                                i1l1205 06F7                                  i1l1206 0703  
                                i1l1160 038B                                  i1l1154 0303  
                                i1l1148 0397                                  i1l1167 0917  
                                i1l3111 0C70                                  i1l3103 0C64  
                                i1l1192 0696                                  i1l1169 0929  
                                i1l3121 0C85                                  i1l3113 0C74  
                                i1l3105 0C65                                  i1l1194 072D  
                                i1l3131 0CA8                                  i1l3123 0C88  
                                i1l3115 0C79                                  i1l3107 0C69  
                                i1l3141 0CC1                                  i1l3133 0CAE  
                                i1l3125 0C8F                                  i1l3117 0C7D  
                                i1l3109 0C6E                                  i1l3143 0CC6  
                                i1l3135 0CAF                                  i1l3127 0C93  
                                i1l3119 0C7F                                  i1l3151 0987  
                                i1l3081 090D                                  i1l3137 0CB6  
                                i1l3129 0C97                                  i1l3161 09A6  
                                i1l3153 098E                                  i1l3083 0911  
                                i1l3091 0891                                  i1l3139 0CBC  
                                i1l3163 09AD                                  i1l3155 0992  
                                i1l3147 097E                                  i1l3085 0920  
                                i1l3077 0904                                  i1l3093 0899  
                                i1l3157 0996                                  i1l3149 0984  
                                i1l3165 09B3                                  i1l3087 0925  
                                i1l3079 0906                                  i1l3095 089C  
                                i1l3159 09A0                                  i1l3513 07CD  
                                i1l3505 07BF                                  i1l3601 006A  
                                i1l3097 08A2                                  i1l3507 07C0  
                                i1l3611 007F                                  i1l3603 0070  
                                i1l3533 0954                                  i1l3701 034B  
                                i1l3621 009B                                  i1l3613 0087  
                                i1l3605 0074                                  i1l3535 0967  
                                i1l3519 07DA                                  i1l3527 07E7  
                                i1l3711 0377                                  i1l3703 0356  
                                i1l3631 00DE                                  i1l3615 0089  
                                i1l3607 0075                                  i1l3551 0EA3  
                                i1l3543 0E78                                  i1l3537 096C  
                                i1l3713 037F                                  i1l3705 0365  
                                i1l3641 0167                                  i1l3633 00FA  
                                i1l3625 00A4                                  i1l3617 0091  
                                i1l3609 007A                                  i1l3553 0EA4  
                                i1l3545 0E85                                  i1l3539 0973  
                                i1l3715 0383                                  i1l3707 036F  
                                i1l3651 01DA                                  i1l3643 0177  
                                i1l3635 0126                                  i1l3627 00B4  
                                i1l3619 0096                                  i1l3555 0EAC  
                                i1l3731 069E                                  i1l3723 0675  
                                i1l3717 0384                                  i1l3709 0371  
                                i1l3661 0287                                  i1l3653 01F7  
                                i1l3645 0194                                  i1l3637 0142  
                                i1l3629 00C1                                  i1l3581 0037  
                                i1l3565 0EBA                                  i1l3557 0EAE  
                                i1l3549 0E8E                                  i1l3741 06B9  
                                i1l3725 067A                                  i1l4197 0E69  
                                i1l4199 07EF                                  i1l3719 038F  
                                i1l3671 02D3                                  i1l3663 02AF  
                                i1l3655 0224                                  i1l3647 01A4  
                                i1l3639 015E                                  i1l3591 004E  
                                i1l3583 003E                                  i1l3575 0ED3  
                                i1l3567 0EC3                                  i1l3559 0EB2  
                                i1l3751 06E2                                  i1l3743 06C0  
                                i1l3735 06A7                                  i1l3727 067E  
                                i1l2951 0E14                                  i1l2943 0E08  
                                u300_20 0EB9                                  u220_20 0E14  
                                i1l3681 02E8                                  i1l3673 02D4  
                                i1l3665 02B8                                  i1l3657 0234  
                                i1l3649 01C1                                  i1l3593 0053  
                                i1l3585 0044                                  i1l3577 0EE3  
                                u300_21 0EB8                                  i1l3569 0ECC  
                                i1l3761 071B                                  i1l3753 06ED  
                                i1l3745 06C4                                  i1l3737 06AC  
                                i1l3729 068E                                  i1l2961 0E2A  
                                i1l2953 0E18                                  u220_21 0E13  
                                i1l3921 04BA                                  i1l3691 030D  
                                i1l3683 02EC                                  i1l3675 02DD  
                                i1l3667 02C6                                  i1l3659 0261  
                                i1l3595 005B                                  i1l3587 0048  
                                i1l3579 0EE8                                  i1l3763 0720  
                                i1l3755 06F1                                  i1l3747 06D2  
                                i1l3739 06B0                                  i1l2971 0E40  
                                i1l2963 0E2E                                  i1l2947 0E09  
                                i1l3771 0AFD                                  i1l3931 04DC  
                                i1l3923 04BF                                  i1l3915 04AB  
                                i1l3693 031B                                  i1l3685 0300  
                                i1l3669 02CF                                  i1l3677 02E3  
                                i1l3597 005D                                  i1l3589 0049  
                                i1l3765 0724                                  i1l3757 06FB  
                                i1l3749 06DB                                  i1l2981 0E56  
                                i1l2973 0E44                                  i1l2957 0E1F  
                                i1l2949 0E0F                                  i1l3773 0B1B  
                                i1l3941 0546                                  i1l3933 0522  
                                i1l3925 04C4                                  i1l3917 04AF  
                                i1l3695 031F                                  i1l3679 02E7  
                                i1l3599 0065                                  i1l3767 0725  
                                i1l3759 0705                                  i1l2983 0E5A  
                                i1l2967 0E35                                  i1l2959 0E25  
                                i1l3775 0B23                                  i1l3951 056A  
                                i1l3943 054C                                  i1l3935 0530  
                                i1l3927 04D0                                  i1l3919 04B3  
                                u221_20 0E2A                                  i1l3697 0338  
                                i1l3689 0308                                  i1l2977 0E4B  
                                i1l2969 0E3B                                  u221_21 0E29  
                                i1l3777 0B2A                                  i1l3953 0572  
                                i1l3945 0550                                  i1l3937 0538  
                                i1l3961 0583                                  i1l3929 04D4  
                                i1l3699 033E                                  i1l2979 0E51  
                                i1l2987 0E61                                  i1l3779 0B44  
                                i1l3963 0584                                  i1l3955 057D  
                                i1l3947 0558                                  i1l3939 0540  
                                u301_25 0EBB                                  i1l3949 0563  
                                i1l3959 0580                                  u310_20 0074  
                                u302_20 0ECB                                  u222_20 0E40  
                                u310_21 0073                                  u302_21 0ECA  
                                u222_21 0E3F                                  _INTEDG 040E  
                                u311_20 007A                                  u303_20 0ED2  
                                u223_20 0E56                                  u311_21 0079  
                                u303_21 0ED1                                  u223_21 0E55  
                                u312_20 007F                                  u240_20 0C85  
                                u320_21 0186                                  u312_21 007E  
                                u240_21 0C84                                  u320_22 018D  
                                u320_23 0194                                  u304_25 0ED5  
                                u313_20 0096                                  u305_20 0EE3  
                                u321_21 01B3                                  u313_21 0095  
                                u305_21 0EE2                                  u321_22 01BA  
                                u321_23 01C1                                  u241_25 0C89  
                                u234_20 0911                                  u314_20 009B  
                                u306_20 0EE8                                  u242_20 0C97  
                                u250_20 0996                                  u234_21 0910  
                                u314_21 009A                                  u306_21 0EE7  
                                u242_21 0C96                                  u250_21 0995  
                                u330_25 02B1                                  u322_25 01C3  
                                u307_20 0048                                  u251_20 09A0  
                                u323_21 01E9                                  u315_21 00EC  
                                u307_21 0047                                  u251_21 099F  
                                u323_22 01F0                                  u315_22 00F3  
                                u323_23 01F7                                  u315_23 00FA  
                                u235_25 0918                                  u331_25 02C8  
                                u243_25 0C98                                  u251_25 099C  
                                u236_20 0925                                  u340_20 032E  
                                u332_20 02D3                                  u308_20 004E  
                                u244_20 0CA8                                  u236_21 0924  
                                u332_21 02D2                                  u324_21 0216  
                                u316_21 0108                                  u308_21 004D  
                                u244_21 0CA7                                  u324_22 021D  
                                u316_22 010F                                  u324_23 0224  
                                u316_23 0116                                  u340_25 0329  
                                u244_25 0CA4                                  u252_25 09A7  
                                u341_20 034B                                  u309_20 0053  
                                u237_20 08A2                                  u253_20 09B3  
                                u341_21 034A                                  u325_21 0243  
                                u317_21 0134                                  u309_21 0052  
                                u237_21 08A1                                  u253_21 09B2  
                                u325_22 024A                                  u317_22 013B  
                                u325_23 0251                                  u317_23 0142  
                                u341_25 0347                                  u333_25 02D6  
                                u245_25 0CB0                                  u342_20 0365  
                                u334_20 02E7                                  u326_20 026D  
                                u350_20 06E1                                  u246_20 0CBC  
                                u238_20 0C69                                  u342_21 0364  
                                u334_21 02E6                                  u318_21 0150  
                                u350_21 06E0                                  u246_21 0CBB  
                                u238_21 0C68                                  u318_22 0157  
                                u318_23 015E                                  u342_25 0361  
                                u326_25 0268                                  u343_20 0383  
                                u335_20 02EC                                  u247_20 0CC1  
                                u239_20 0C74                                  u343_21 0382  
                                u335_21 02EB                                  u327_21 0279  
                                u247_21 0CC0                                  u239_21 0C73  
                                u327_22 0280                                  u327_23 0287  
                                u319_25 0160                                  u351_25 06E6  
                                u336_20 0300                                  u328_20 0295  
                                u352_20 06F1                                  u344_20 067A  
                                u248_20 0984                                  u336_21 02FF  
                                u352_21 06F0                                  u344_21 0679  
                                u248_21 0983                                  u328_25 0290  
                                u337_20 0307                                  u353_20 06F7  
                                u345_20 067E                                  u337_21 0306  
                                u329_21 02A1                                  u353_21 06F6  
                                u345_21 067D                                  u329_22 02A8  
                                u329_23 02AF                                  u249_25 0988  
                                u338_20 030D                                  u354_20 06FB  
                                u346_20 069E                                  u370_20 04DC  
                                u338_21 030C                                  u354_21 06FA  
                                u346_21 069D                                  u370_21 04DB  
                                u339_20 031F                                  u355_20 0710  
                                u371_20 0538                                  u339_21 031E  
                                u371_21 0537                                  u355_25 070B  
                                u347_25 06B1                                  u356_20 0720  
                                u348_20 06BF                                  u372_20 0540  
                                u356_21 071F                                  u348_21 06BE  
                                u372_21 053F                                  u292_25 07C5  
                                u357_20 0724                                  u373_20 054C  
                                u357_21 0723                                  u373_21 054B  
                                u293_25 07D2                                  u349_25 06D3  
                                u374_20 0558                                  u366_20 04AF  
                                u374_21 0557                                  u366_21 04AE  
                                u294_25 07DF                                  u375_20 0563  
                                u367_20 04BA                                  u375_21 0562  
                                u367_21 04B9                                  u295_25 095D  
                                u296_20 0973                                  u376_20 0572  
                                u368_20 04C4                                  u296_21 0972  
                                u376_21 0571                                  u368_21 04C3  
                                u297_20 0E85                                  u377_20 057D  
                                u369_20 04D0                                  u297_21 0E84  
                                u377_21 057C                                  u369_21 04CF  
                                u385_27 0B1F                                  u298_20 0E9C  
                                u298_25 0E97                                  u386_27 0B48  
                                u299_20 0EB2                                  u299_21 0EB1  
                                u387_27 0969                               ??_SW_Init 00A0  
                                _TMR1IE 0460                                  _TMR1IF 0060  
                                _TMR1ON 0080                                  _SSPADD 0093  
                                _SSPCON 0014                                  _SSPBUF 0013  
               __end_of_ADC_ReadChannel 097E                        __end_of___xxtofl 072E  
                  __size_of_DD_GetState 003D                       __end_of_TMR1_Init 0AFD  
                     __end_of_TMR1_Stop 07FF                               ??___awdiv 00A4  
                             ??___flmul 0028                               ??___fltol 003E  
                             ??___lldiv 00A8                     __size_of_TMR1_Start 0010  
                             ??___lwmod 00A4                       ??_EEPROM_ReadByte 00A4  
                     ??_EWH_EEPROM_Init 00A6                       ??_EWH_EEPROM_Read 00A7  
                 ADC_ReadChannel@result 0073                    __size_of_DD_SetState 005A  
                      ___awdiv@quotient 00A6                __end_of_EEPROM_WriteByte 0A2D  
                     __end_ofi1___awdiv 0CCB                       __end_of_SSD_Write 08E5  
                     __end_ofi1___lwmod 09B8                               ?_I2C_Init 0070  
                    __size_of__Umul8_16 0027                           _I2C_Wait_IDLE 0832  
                             ?_ADC_Init 0070                                  saved_w 007E  
                        main@adc_config 00BB                     _I2C_Master_ReadByte 092A  
                          ___xxtofl@arg 007A                            ___xxtofl@exp 0079  
                          ___xxtofl@val 0070                 __end_of__initialization 0033  
                   _I2C_Master_Send_ACK 17F6                     __size_of_SSD_config 006B  
            __end_of_EWH_Operating_Mode 04AB                              ___fltol@f1 003A  
                          SSD_config@ID 00A3                          __pcstackCOMMON 0070  
                          __pidataBANK1 0811                    __size_of_EWH_SSD_OFF 000D  
                  ?_I2C_Master_ReadByte 0070                    ?_I2C_Master_Send_ACK 0070  
             __size_of_EWH_PowerUP_Mode 008E                          _Heater_Display 0C02  
                        ?_I2C_Wait_IDLE 0070                              ??_I2C_Init 00AE  
                            ??_ADC_Init 00A0                       i1SSD_Write@Number 0078  
                            __pbssBANK0 004C                              __pbssBANK1 00BF  
                         ?i1_SSD_config 0070                        ?_ADC_ReadChannel 0070  
                   SSD_config@SSD_state 00A0                       __end_of__Umul8_16 092A  
                            __pmaintext 072E            __end_of_I2C_Master_Send_NACK 0811  
                        i1SSD_config@ID 0073                        _EWH_SetTemp_Mode 0593  
          __end_of_I2C_Master_Send_Stop 17ED                   ??_I2C_Master_ReadByte 00A0  
                            __pintentry 0004                                 _ACKSTAT 048E  
                 ??_I2C_Master_Send_ACK 00A0                  __end_of_Heater_Display 0C64  
                               _T1CKPS0 0084                                 _T1CKPS1 0085  
                               _DD_Init 08AB                      i1___awdiv@dividend 0072  
                             ?___xxtofl 0070                    __size_ofi1_SSD_Write 001B  
                          ??_TMR1_Start 00A0                                 _SSPCON2 0091  
                               _SSD_OFF 081B                                 _SSPSTAT 0094  
                             SSD_OFF@ID 00A4                          ??i1_SSD_config 0071  
                               _SW_Init 17ED            __end_of_I2C_Master_WriteByte 0903  
             __size_ofi1_Heater_Display 0050                                 _Reading 0054  
                    i1___awdiv@quotient 0076                 __size_of_EWH_Sleep_Mode 003A  
               ??_I2C_Master_Send_Start 00A0                                 ___awdiv 0D33  
                               ___flmul 0037                                 ___fltol 0E78  
                               ___lldiv 0CCB                  ADC_ReadChannel@channel 0075  
                               ___lwmod 0A2D                      __end_of_TMR1_Start 086C  
                          ??_SSD_config 00A1                         ?_Heater_Display 00AA  
                       ??_I2C_Wait_IDLE 00A0                                 __ptext1 0AB3  
                               __ptext2 17ED                                 __ptext3 0A69  
                               __ptext4 0CCB                                 __ptext5 09B8  
                               __ptext6 083F                                 __ptext7 081B  
                               __ptext8 0593                                 __ptext9 086C  
                          __size_of_ISR 00E8                  EEPROM_ReadByte@address 00A2  
                            ??___xxtofl 0074                 EEPROM_WriteByte@address 00A1  
                               clrloop0 17CB                    end_of_initialization 0033  
                    __end_of_SSD_config 0E07                               _EWH_State 0058  
                       _EEPROM_ReadByte 0BA7                         _EWH_EEPROM_Init 084C  
                       _EWH_EEPROM_Read 0826                         ___lldiv@divisor 00A0  
                       ___lldiv@counter 00AD                        DD_SetState@state 00A0  
                             _TMR1_Init 0AB3                               _TMR1_Stop 07FB  
                      _EWH_PowerUP_Mode 0F72                       ?_EEPROM_WriteByte 00A1  
                    ??_EEPROM_WriteByte 00A4                           ___xxtofl@sign 0078  
                             i1___awdiv 0C64                       __size_of_I2C_Init 004A  
                  _I2C_Master_Send_NACK 0807                               _SSD_Write 08C8  
                     __size_of_ADC_Init 007E                               i1___lwmod 097E  
                  _I2C_Master_Send_Stop 17E4                           ??_DD_GetState 0070  
                           ___flmul@grs 002E                           ??_DD_SetState 00A1  
                  __end_ofi1_SSD_config 0E78                              ?_TMR1_Init 0070  
                    _EWH_Operating_Mode 0398                       i1___lwmod@divisor 0070  
                            ?_TMR1_Stop 0070                       i1___lwmod@counter 0074  
                  _I2C_Master_WriteByte 08E5                     start_initialization 0015  
                           __end_of_ISR 0593                     ?_EWH_Operating_Mode 0070  
                 ?_I2C_Master_Send_NACK 0070                              ?i1___awdiv 0070  
              __end_of_EWH_SetTemp_Mode 0674                              ?_SSD_Write 00A8  
                            ?i1___lwmod 0070                   ?_I2C_Master_Send_Stop 0070  
               __end_of_EEPROM_ReadByte 0C02                 __end_of_EWH_EEPROM_Init 085C  
               __end_of_EWH_EEPROM_Read 0832                        i1_Heater_Display 0AFD  
       ??_I2C_Master_Send_RepeatedStart 00A0                           ??_EWH_SSD_OFF 00A5  
                   __end_of_DD_GetState 07FB                          _EWH_Sleep_Mode 09B8  
                  ??_EWH_Operating_Mode 00AE                          ADC_Init@config 00A2  
                           SSD_Write@ID 00A9                              init_fetch0 087D  
                             __Umul8_16 0903                             __pdataBANK1 00C9  
                            ISR@Reading 004A                     __end_of_DD_SetState 0BA7  
                 ?_I2C_Master_WriteByte 0070                                ?_DD_Init 0070  
                             ___flmul@a 0024                               ___flmul@b 0020  
                         _Devices_State 00C3                               ___latbits 0002  
                         __pcstackBANK0 0020                           __pcstackBANK1 00A0  
                     __size_of___xxtofl 00BA                                ?_SSD_OFF 0070  
                       _SW_StateControl 004F                                ?_SW_Init 0070  
                          _current_Temp 00C6                  __end_of_EWH_Sleep_Mode 09F2  
           __end_of_I2C_Master_ReadByte 0953                                ISR@count 0056  
           __end_of_I2C_Master_Send_ACK 1800                        ??_Heater_Display 00AC  
                              ?___awdiv 00A0                                ?___flmul 0020  
                              ?___fltol 003A                                ?___lldiv 00A0  
                            ?__Umul8_16 0070                __size_of_ADC_ReadChannel 002B  
                              ?___lwmod 00A0          __size_of_I2C_Master_Send_Start 0009  
         __end_of_I2C_Master_Send_Start 17E4                       i1___awdiv@divisor 0070  
                   __end_of_EWH_SSD_OFF 084C                       i1___awdiv@counter 0074  
                           ??_TMR1_Init 00A0                             ??_TMR1_Stop 00A0  
                         ??i1_SSD_Write 0079                                _I2C_Init 0A69  
                              _ADC_Init 0EF4                    i1Heater_Display@temp 007A  
                ??_I2C_Master_Send_NACK 00A0                             ??i1___awdiv 0074  
                ??_I2C_Master_Send_Stop 00A0                       DD_GetState@device 0072  
                           ??_SSD_Write 00A9                             ??i1___lwmod 0074  
                      ?_EEPROM_ReadByte 00A2                        ?_EWH_EEPROM_Init 0070  
                      ?_EWH_EEPROM_Read 0070                             _DD_GetState 07BE  
                       SSD_Write@Number 00A8                       interrupt_function 0004  
              __end_of_EWH_PowerUP_Mode 1000                               clear_ram0 17CA  
                       ?_EWH_Sleep_Mode 0070                                _EWH_Mode 00C8  
                 __size_ofi1_SSD_config 0071   __end_of_I2C_Master_Send_RepeatedStart 17DB  
__size_of_I2C_Master_Send_RepeatedStart 0009           _I2C_Master_Send_RepeatedStart 17D2  
                           _DD_SetState 0B4D           I2C_Master_ReadByte@Read_State 00A1  
                ??_I2C_Master_WriteByte 00A0                                _SSD_code 00C9  
                 __end_of_I2C_Wait_IDLE 083F                        __size_of_DD_Init 001D  
                              _SW_State 004C                     __end_ofi1_SSD_Write 08AB  
                      __size_of_SSD_OFF 000B                            i1_SSD_config 0E07  
             __size_of_EEPROM_WriteByte 003B                        __size_of_SW_Init 0009  
                 i1SSD_config@SSD_state 0070                             _EWH_SSD_OFF 083F  
                           ??__Umul8_16 0072                        __size_of___awdiv 0069  
                      __size_of___flmul 0361                        __size_of___fltol 007C  
                      __size_of___lldiv 0068                        __size_of___lwmod 003C  
           EWH_EEPROM_Update@newSetTemp 00A6                __end_ofi1_Heater_Display 0B4D  
                     ??_ADC_ReadChannel 0072                                ___xxtofl 0674  
                     _NoPress_Sec_count 0057                                __ptext10 0F72  
                              __ptext11 0826                                __ptext20 0A2D  
                              __ptext12 0BA7                                __ptext21 0D33  
                              __ptext13 092A                                __ptext30 17D2  
                              __ptext22 08C8                                __ptext14 0807  
                              __ptext31 0832                                __ptext23 0D9C  
                              __ptext15 17F6                                __ptext40 0674  
                              __ptext32 08AB                                __ptext24 0B4D  
                              __ptext16 0398                                __ptext41 0E78  
                              __ptext33 0EF4                                __ptext25 084C  
                              __ptext17 07FB                                __ptext42 0037  
                              __ptext34 04AB                                __ptext26 09F2  
                              __ptext18 085C                                __ptext43 0903  
                              __ptext35 0AFD                                __ptext27 08E5  
                              __ptext19 0C02                                __ptext44 07BE  
                              __ptext36 097E                                __ptext28 17E4  
                              __ptext45 0953                                __ptext37 0C64  
                              __ptext29 17DB                                __ptext38 0890  
                              __ptext39 0E07                       _EWH_EEPROM_Update 086C  
                     ?_EWH_SetTemp_Mode 0070                      ?_EWH_EEPROM_Update 0070  
                    ??_EWH_SetTemp_Mode 00AE                           __size_of_main 0090  
                   ??_EWH_EEPROM_Update 00A6                                _set_Temp 00C7  
        ?_I2C_Master_Send_RepeatedStart 0070                             i1_SSD_Write 0890  
             __end_of_EWH_EEPROM_Update 087D                                init_ram0 0881  
                            _EWH_Events 00BF                                intlevel1 0000  
                      ___lwmod@dividend 00A2                        ___lldiv@dividend 00A4  
                   EEPROM_ReadByte@data 00A6             __size_of_EWH_Operating_Mode 0113  
                     DD_SetState@device 00A3                  __Umul8_16@multiplicand 0070  
                      ___lldiv@quotient 00A9                         ___lwmod@divisor 00A0  
                       ___lwmod@counter 00A4                      Heater_Display@temp 00AA  
                            _TMR1_Start 085C                I2C_Master_WriteByte@Data 00A0  
                      ??_EWH_Sleep_Mode 00A5                            ?_DD_GetState 0070  
                      _EEPROM_WriteByte 09F2                            main@TMR1_cfg 00B3  
                  __Umul8_16@multiplier 0078                       ?_EWH_PowerUP_Mode 0070  
                    ??_EWH_PowerUP_Mode 00AE                       __Umul8_16@product 0074  
