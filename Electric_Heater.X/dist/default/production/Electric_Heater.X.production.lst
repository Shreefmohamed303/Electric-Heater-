

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Jul 12 08:50:59 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	intentry,global,class=CODE,delta=2
    56                           	psect	text41,local,class=CODE,merge=1,delta=2
    57                           	psect	text42,local,class=CODE,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    59                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text45,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text47,local,class=CODE,merge=1,delta=2,group=1
    63                           	psect	text48,local,class=CODE,merge=1,delta=2
    64                           	psect	text49,local,class=CODE,merge=1,delta=2
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    66                           	dabs	1,0x7E,2
    67  0000                     
    68                           ; Version 2.20
    69                           ; Generated 12/02/2020 GMT
    70                           ; 
    71                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC16F877A Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     	;# 
   103  0001                     	;# 
   104  0002                     	;# 
   105  0003                     	;# 
   106  0004                     	;# 
   107  0005                     	;# 
   108  0006                     	;# 
   109  0007                     	;# 
   110  0008                     	;# 
   111  0009                     	;# 
   112  000A                     	;# 
   113  000B                     	;# 
   114  000C                     	;# 
   115  000D                     	;# 
   116  000E                     	;# 
   117  000E                     	;# 
   118  000F                     	;# 
   119  0010                     	;# 
   120  0011                     	;# 
   121  0012                     	;# 
   122  0013                     	;# 
   123  0014                     	;# 
   124  0015                     	;# 
   125  0015                     	;# 
   126  0016                     	;# 
   127  0017                     	;# 
   128  0018                     	;# 
   129  0019                     	;# 
   130  001A                     	;# 
   131  001B                     	;# 
   132  001B                     	;# 
   133  001C                     	;# 
   134  001D                     	;# 
   135  001E                     	;# 
   136  001F                     	;# 
   137  0081                     	;# 
   138  0085                     	;# 
   139  0086                     	;# 
   140  0087                     	;# 
   141  0088                     	;# 
   142  0089                     	;# 
   143  008C                     	;# 
   144  008D                     	;# 
   145  008E                     	;# 
   146  0091                     	;# 
   147  0092                     	;# 
   148  0093                     	;# 
   149  0094                     	;# 
   150  0098                     	;# 
   151  0099                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  010C                     	;# 
   157  010D                     	;# 
   158  010E                     	;# 
   159  010F                     	;# 
   160  018C                     	;# 
   161  018D                     	;# 
   162  0000                     	;# 
   163  0001                     	;# 
   164  0002                     	;# 
   165  0003                     	;# 
   166  0004                     	;# 
   167  0005                     	;# 
   168  0006                     	;# 
   169  0007                     	;# 
   170  0008                     	;# 
   171  0009                     	;# 
   172  000A                     	;# 
   173  000B                     	;# 
   174  000C                     	;# 
   175  000D                     	;# 
   176  000E                     	;# 
   177  000E                     	;# 
   178  000F                     	;# 
   179  0010                     	;# 
   180  0011                     	;# 
   181  0012                     	;# 
   182  0013                     	;# 
   183  0014                     	;# 
   184  0015                     	;# 
   185  0015                     	;# 
   186  0016                     	;# 
   187  0017                     	;# 
   188  0018                     	;# 
   189  0019                     	;# 
   190  001A                     	;# 
   191  001B                     	;# 
   192  001B                     	;# 
   193  001C                     	;# 
   194  001D                     	;# 
   195  001E                     	;# 
   196  001F                     	;# 
   197  0081                     	;# 
   198  0085                     	;# 
   199  0086                     	;# 
   200  0087                     	;# 
   201  0088                     	;# 
   202  0089                     	;# 
   203  008C                     	;# 
   204  008D                     	;# 
   205  008E                     	;# 
   206  0091                     	;# 
   207  0092                     	;# 
   208  0093                     	;# 
   209  0094                     	;# 
   210  0098                     	;# 
   211  0099                     	;# 
   212  009C                     	;# 
   213  009D                     	;# 
   214  009E                     	;# 
   215  009F                     	;# 
   216  010C                     	;# 
   217  010D                     	;# 
   218  010E                     	;# 
   219  010F                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  000E                     	;# 
   238  000F                     	;# 
   239  0010                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001D                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  0081                     	;# 
   258  0085                     	;# 
   259  0086                     	;# 
   260  0087                     	;# 
   261  0088                     	;# 
   262  0089                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0094                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  018C                     	;# 
   281  018D                     	;# 
   282  0000                     	;# 
   283  0001                     	;# 
   284  0002                     	;# 
   285  0003                     	;# 
   286  0004                     	;# 
   287  0005                     	;# 
   288  0006                     	;# 
   289  0007                     	;# 
   290  0008                     	;# 
   291  0009                     	;# 
   292  000A                     	;# 
   293  000B                     	;# 
   294  000C                     	;# 
   295  000D                     	;# 
   296  000E                     	;# 
   297  000E                     	;# 
   298  000F                     	;# 
   299  0010                     	;# 
   300  0011                     	;# 
   301  0012                     	;# 
   302  0013                     	;# 
   303  0014                     	;# 
   304  0015                     	;# 
   305  0015                     	;# 
   306  0016                     	;# 
   307  0017                     	;# 
   308  0018                     	;# 
   309  0019                     	;# 
   310  001A                     	;# 
   311  001B                     	;# 
   312  001B                     	;# 
   313  001C                     	;# 
   314  001D                     	;# 
   315  001E                     	;# 
   316  001F                     	;# 
   317  0081                     	;# 
   318  0085                     	;# 
   319  0086                     	;# 
   320  0087                     	;# 
   321  0088                     	;# 
   322  0089                     	;# 
   323  008C                     	;# 
   324  008D                     	;# 
   325  008E                     	;# 
   326  0091                     	;# 
   327  0092                     	;# 
   328  0093                     	;# 
   329  0094                     	;# 
   330  0098                     	;# 
   331  0099                     	;# 
   332  009C                     	;# 
   333  009D                     	;# 
   334  009E                     	;# 
   335  009F                     	;# 
   336  010C                     	;# 
   337  010D                     	;# 
   338  010E                     	;# 
   339  010F                     	;# 
   340  018C                     	;# 
   341  018D                     	;# 
   342  0000                     	;# 
   343  0001                     	;# 
   344  0002                     	;# 
   345  0003                     	;# 
   346  0004                     	;# 
   347  0005                     	;# 
   348  0006                     	;# 
   349  0007                     	;# 
   350  0008                     	;# 
   351  0009                     	;# 
   352  000A                     	;# 
   353  000B                     	;# 
   354  000C                     	;# 
   355  000D                     	;# 
   356  000E                     	;# 
   357  000E                     	;# 
   358  000F                     	;# 
   359  0010                     	;# 
   360  0011                     	;# 
   361  0012                     	;# 
   362  0013                     	;# 
   363  0014                     	;# 
   364  0015                     	;# 
   365  0015                     	;# 
   366  0016                     	;# 
   367  0017                     	;# 
   368  0018                     	;# 
   369  0019                     	;# 
   370  001A                     	;# 
   371  001B                     	;# 
   372  001B                     	;# 
   373  001C                     	;# 
   374  001D                     	;# 
   375  001E                     	;# 
   376  001F                     	;# 
   377  0081                     	;# 
   378  0085                     	;# 
   379  0086                     	;# 
   380  0087                     	;# 
   381  0088                     	;# 
   382  0089                     	;# 
   383  008C                     	;# 
   384  008D                     	;# 
   385  008E                     	;# 
   386  0091                     	;# 
   387  0092                     	;# 
   388  0093                     	;# 
   389  0094                     	;# 
   390  0098                     	;# 
   391  0099                     	;# 
   392  009C                     	;# 
   393  009D                     	;# 
   394  009E                     	;# 
   395  009F                     	;# 
   396  010C                     	;# 
   397  010D                     	;# 
   398  010E                     	;# 
   399  010F                     	;# 
   400  018C                     	;# 
   401  018D                     	;# 
   402  0000                     	;# 
   403  0001                     	;# 
   404  0002                     	;# 
   405  0003                     	;# 
   406  0004                     	;# 
   407  0005                     	;# 
   408  0006                     	;# 
   409  0007                     	;# 
   410  0008                     	;# 
   411  0009                     	;# 
   412  000A                     	;# 
   413  000B                     	;# 
   414  000C                     	;# 
   415  000D                     	;# 
   416  000E                     	;# 
   417  000E                     	;# 
   418  000F                     	;# 
   419  0010                     	;# 
   420  0011                     	;# 
   421  0012                     	;# 
   422  0013                     	;# 
   423  0014                     	;# 
   424  0015                     	;# 
   425  0015                     	;# 
   426  0016                     	;# 
   427  0017                     	;# 
   428  0018                     	;# 
   429  0019                     	;# 
   430  001A                     	;# 
   431  001B                     	;# 
   432  001B                     	;# 
   433  001C                     	;# 
   434  001D                     	;# 
   435  001E                     	;# 
   436  001F                     	;# 
   437  0081                     	;# 
   438  0085                     	;# 
   439  0086                     	;# 
   440  0087                     	;# 
   441  0088                     	;# 
   442  0089                     	;# 
   443  008C                     	;# 
   444  008D                     	;# 
   445  008E                     	;# 
   446  0091                     	;# 
   447  0092                     	;# 
   448  0093                     	;# 
   449  0094                     	;# 
   450  0098                     	;# 
   451  0099                     	;# 
   452  009C                     	;# 
   453  009D                     	;# 
   454  009E                     	;# 
   455  009F                     	;# 
   456  010C                     	;# 
   457  010D                     	;# 
   458  010E                     	;# 
   459  010F                     	;# 
   460  018C                     	;# 
   461  018D                     	;# 
   462  0000                     	;# 
   463  0001                     	;# 
   464  0002                     	;# 
   465  0003                     	;# 
   466  0004                     	;# 
   467  0005                     	;# 
   468  0006                     	;# 
   469  0007                     	;# 
   470  0008                     	;# 
   471  0009                     	;# 
   472  000A                     	;# 
   473  000B                     	;# 
   474  000C                     	;# 
   475  000D                     	;# 
   476  000E                     	;# 
   477  000E                     	;# 
   478  000F                     	;# 
   479  0010                     	;# 
   480  0011                     	;# 
   481  0012                     	;# 
   482  0013                     	;# 
   483  0014                     	;# 
   484  0015                     	;# 
   485  0015                     	;# 
   486  0016                     	;# 
   487  0017                     	;# 
   488  0018                     	;# 
   489  0019                     	;# 
   490  001A                     	;# 
   491  001B                     	;# 
   492  001B                     	;# 
   493  001C                     	;# 
   494  001D                     	;# 
   495  001E                     	;# 
   496  001F                     	;# 
   497  0081                     	;# 
   498  0085                     	;# 
   499  0086                     	;# 
   500  0087                     	;# 
   501  0088                     	;# 
   502  0089                     	;# 
   503  008C                     	;# 
   504  008D                     	;# 
   505  008E                     	;# 
   506  0091                     	;# 
   507  0092                     	;# 
   508  0093                     	;# 
   509  0094                     	;# 
   510  0098                     	;# 
   511  0099                     	;# 
   512  009C                     	;# 
   513  009D                     	;# 
   514  009E                     	;# 
   515  009F                     	;# 
   516  010C                     	;# 
   517  010D                     	;# 
   518  010E                     	;# 
   519  010F                     	;# 
   520  018C                     	;# 
   521  018D                     	;# 
   522  0000                     	;# 
   523  0001                     	;# 
   524  0002                     	;# 
   525  0003                     	;# 
   526  0004                     	;# 
   527  0005                     	;# 
   528  0006                     	;# 
   529  0007                     	;# 
   530  0008                     	;# 
   531  0009                     	;# 
   532  000A                     	;# 
   533  000B                     	;# 
   534  000C                     	;# 
   535  000D                     	;# 
   536  000E                     	;# 
   537  000E                     	;# 
   538  000F                     	;# 
   539  0010                     	;# 
   540  0011                     	;# 
   541  0012                     	;# 
   542  0013                     	;# 
   543  0014                     	;# 
   544  0015                     	;# 
   545  0015                     	;# 
   546  0016                     	;# 
   547  0017                     	;# 
   548  0018                     	;# 
   549  0019                     	;# 
   550  001A                     	;# 
   551  001B                     	;# 
   552  001B                     	;# 
   553  001C                     	;# 
   554  001D                     	;# 
   555  001E                     	;# 
   556  001F                     	;# 
   557  0081                     	;# 
   558  0085                     	;# 
   559  0086                     	;# 
   560  0087                     	;# 
   561  0088                     	;# 
   562  0089                     	;# 
   563  008C                     	;# 
   564  008D                     	;# 
   565  008E                     	;# 
   566  0091                     	;# 
   567  0092                     	;# 
   568  0093                     	;# 
   569  0094                     	;# 
   570  0098                     	;# 
   571  0099                     	;# 
   572  009C                     	;# 
   573  009D                     	;# 
   574  009E                     	;# 
   575  009F                     	;# 
   576  010C                     	;# 
   577  010D                     	;# 
   578  010E                     	;# 
   579  010F                     	;# 
   580  018C                     	;# 
   581  018D                     	;# 
   582  0000                     	;# 
   583  0001                     	;# 
   584  0002                     	;# 
   585  0003                     	;# 
   586  0004                     	;# 
   587  0005                     	;# 
   588  0006                     	;# 
   589  0007                     	;# 
   590  0008                     	;# 
   591  0009                     	;# 
   592  000A                     	;# 
   593  000B                     	;# 
   594  000C                     	;# 
   595  000D                     	;# 
   596  000E                     	;# 
   597  000E                     	;# 
   598  000F                     	;# 
   599  0010                     	;# 
   600  0011                     	;# 
   601  0012                     	;# 
   602  0013                     	;# 
   603  0014                     	;# 
   604  0015                     	;# 
   605  0015                     	;# 
   606  0016                     	;# 
   607  0017                     	;# 
   608  0018                     	;# 
   609  0019                     	;# 
   610  001A                     	;# 
   611  001B                     	;# 
   612  001B                     	;# 
   613  001C                     	;# 
   614  001D                     	;# 
   615  001E                     	;# 
   616  001F                     	;# 
   617  0081                     	;# 
   618  0085                     	;# 
   619  0086                     	;# 
   620  0087                     	;# 
   621  0088                     	;# 
   622  0089                     	;# 
   623  008C                     	;# 
   624  008D                     	;# 
   625  008E                     	;# 
   626  0091                     	;# 
   627  0092                     	;# 
   628  0093                     	;# 
   629  0094                     	;# 
   630  0098                     	;# 
   631  0099                     	;# 
   632  009C                     	;# 
   633  009D                     	;# 
   634  009E                     	;# 
   635  009F                     	;# 
   636  010C                     	;# 
   637  010D                     	;# 
   638  010E                     	;# 
   639  010F                     	;# 
   640  018C                     	;# 
   641  018D                     	;# 
   642  0000                     	;# 
   643  0001                     	;# 
   644  0002                     	;# 
   645  0003                     	;# 
   646  0004                     	;# 
   647  0005                     	;# 
   648  0006                     	;# 
   649  0007                     	;# 
   650  0008                     	;# 
   651  0009                     	;# 
   652  000A                     	;# 
   653  000B                     	;# 
   654  000C                     	;# 
   655  000D                     	;# 
   656  000E                     	;# 
   657  000E                     	;# 
   658  000F                     	;# 
   659  0010                     	;# 
   660  0011                     	;# 
   661  0012                     	;# 
   662  0013                     	;# 
   663  0014                     	;# 
   664  0015                     	;# 
   665  0015                     	;# 
   666  0016                     	;# 
   667  0017                     	;# 
   668  0018                     	;# 
   669  0019                     	;# 
   670  001A                     	;# 
   671  001B                     	;# 
   672  001B                     	;# 
   673  001C                     	;# 
   674  001D                     	;# 
   675  001E                     	;# 
   676  001F                     	;# 
   677  0081                     	;# 
   678  0085                     	;# 
   679  0086                     	;# 
   680  0087                     	;# 
   681  0088                     	;# 
   682  0089                     	;# 
   683  008C                     	;# 
   684  008D                     	;# 
   685  008E                     	;# 
   686  0091                     	;# 
   687  0092                     	;# 
   688  0093                     	;# 
   689  0094                     	;# 
   690  0098                     	;# 
   691  0099                     	;# 
   692  009C                     	;# 
   693  009D                     	;# 
   694  009E                     	;# 
   695  009F                     	;# 
   696  010C                     	;# 
   697  010D                     	;# 
   698  010E                     	;# 
   699  010F                     	;# 
   700  018C                     	;# 
   701  018D                     	;# 
   702                           
   703                           	psect	idataBANK1
   704  0870                     __pidataBANK1:
   705                           
   706                           ;initializer for _SSD_code
   707  0870  343F               	retlw	63
   708  0871  3406               	retlw	6
   709  0872  345B               	retlw	91
   710  0873  344F               	retlw	79
   711  0874  3466               	retlw	102
   712  0875  346D               	retlw	109
   713  0876  347D               	retlw	125
   714  0877  3407               	retlw	7
   715  0878  347F               	retlw	127
   716  0879  346F               	retlw	111
   717  000E                     _TMR1	set	14
   718  0008                     _PORTD	set	8
   719  0005                     _PORTA	set	5
   720  001E                     _ADRESH	set	30
   721  001F                     _ADCON0	set	31
   722  0007                     _PORTC	set	7
   723  0006                     _PORTB	set	6
   724  0013                     _SSPBUF	set	19
   725  0014                     _SSPCON	set	20
   726  0059                     _INTF	set	89
   727  005C                     _INTE	set	92
   728  0080                     _TMR1ON	set	128
   729  0060                     _TMR1IF	set	96
   730  0085                     _T1CKPS1	set	133
   731  0084                     _T1CKPS0	set	132
   732  0066                     _ADIF	set	102
   733  00F8                     _ADON	set	248
   734  0063                     _SSPIF	set	99
   735  005E                     _PEIE	set	94
   736  005F                     _GIE	set	95
   737  00A5                     _SSPEN	set	165
   738  0088                     _TRISD	set	136
   739  0085                     _TRISA	set	133
   740  009E                     _ADRESL	set	158
   741  009F                     _ADCON1	set	159
   742  0086                     _TRISB	set	134
   743  0087                     _TRISC	set	135
   744  0093                     _SSPADD	set	147
   745  0094                     _SSPSTAT	set	148
   746  0091                     _SSPCON2	set	145
   747  040E                     _INTEDG	set	1038
   748  0460                     _TMR1IE	set	1120
   749  040D                     _T0CS	set	1037
   750  0466                     _ADIE	set	1126
   751  048B                     _RCEN	set	1163
   752  048E                     _ACKSTAT	set	1166
   753  048C                     _ACKEN	set	1164
   754  048D                     _ACKDT	set	1165
   755  0489                     _RSEN	set	1161
   756  048A                     _PEN	set	1162
   757  0488                     _SEN	set	1160
   758  0463                     _SSPIE	set	1123
   759                           
   760                           	psect	cinit
   761  0015                     start_initialization:	
   762                           ; #config settings
   763                           
   764  0015                     __initialization:
   765                           
   766                           ; Initialize objects allocated to BANK1
   767  0015  1383               	bcf	3,7	;select IRP bank0
   768  0016  30DF               	movlw	low (__pdataBANK1+10)
   769  0017  00FD               	movwf	btemp+-1
   770  0018  3008               	movlw	high __pidataBANK1
   771  0019  00FE               	movwf	btemp
   772  001A  3070               	movlw	low __pidataBANK1
   773  001B  00FF               	movwf	btemp+1
   774  001C  30D5               	movlw	low __pdataBANK1
   775  001D  0084               	movwf	4
   776  001E  120A  158A  20E0  120A  118A  	fcall	init_ram0
   777                           
   778                           ; Clear objects allocated to BANK1
   779  0023  30BD               	movlw	low __pbssBANK1
   780  0024  0084               	movwf	4
   781  0025  30D5               	movlw	low (__pbssBANK1+24)
   782  0026  120A  158A  201D  120A  118A  	fcall	clear_ram0
   783                           
   784                           ; Clear objects allocated to BANK0
   785  002B  304C               	movlw	low __pbssBANK0
   786  002C  0084               	movwf	4
   787  002D  3055               	movlw	low (__pbssBANK0+9)
   788  002E  120A  158A  201D  120A  118A  	fcall	clear_ram0
   789  0033                     end_of_initialization:	
   790                           ;End of C runtime variable initialization code
   791                           
   792  0033                     __end_of__initialization:
   793  0033  0183               	clrf	3
   794  0034  120A  158A  2BF2   	ljmp	_main	;jump to C main() function
   795                           
   796                           	psect	bssBANK0
   797  004C                     __pbssBANK0:
   798  004C                     _SW_State:
   799  004C                     	ds	3
   800  004F                     _SW_StateControl:
   801  004F                     	ds	3
   802  0052                     ISR@count:
   803  0052                     	ds	1
   804  0053                     _NoPress_Sec_count:
   805  0053                     	ds	1
   806  0054                     _EWH_State:
   807  0054                     	ds	1
   808                           
   809                           	psect	bssBANK1
   810  00BD                     __pbssBANK1:
   811  00BD                     _EWH_Events:
   812  00BD                     	ds	4
   813  00C1                     _Devices_State:
   814  00C1                     	ds	3
   815  00C4                     _TempavgReading:
   816  00C4                     	ds	1
   817  00C5                     _ReadingBufferFull:
   818  00C5                     	ds	1
   819  00C6                     _SSD_Blink_flag:
   820  00C6                     	ds	1
   821  00C7                     _TempReading_count:
   822  00C7                     	ds	1
   823  00C8                     _current_Temp:
   824  00C8                     	ds	1
   825  00C9                     _set_Temp:
   826  00C9                     	ds	1
   827  00CA                     _EWH_Mode:
   828  00CA                     	ds	1
   829  00CB                     _ReadingBuffer:
   830  00CB                     	ds	10
   831                           
   832                           	psect	dataBANK1
   833  00D5                     __pdataBANK1:
   834  00D5                     _SSD_code:
   835  00D5                     	ds	10
   836                           
   837                           	psect	inittext
   838  08DC                     init_fetch0:	
   839                           ;	Called with low address in FSR and high address in W
   840                           
   841  08DC  087E               	movf	btemp,w
   842  08DD  008A               	movwf	10
   843  08DE  087F               	movf	btemp+1,w
   844  08DF  0082               	movwf	2
   845  08E0                     init_ram0:	
   846                           ;Called with:
   847                           ;	high address of idata address in btemp 
   848                           ;	low address of idata address in btemp+1 
   849                           ;	low address of data in FSR
   850                           ;	high address + 1 of data in btemp-1
   851                           
   852  08E0  120A  158A  20DC  120A  158A  	fcall	init_fetch0
   853  08E5  0080               	movwf	0
   854  08E6  0A84               	incf	4,f
   855  08E7  0804               	movf	4,w
   856  08E8  067D               	xorwf	btemp+-1,w
   857  08E9  1903               	btfsc	3,2
   858  08EA  3400               	retlw	0
   859  08EB  0AFF               	incf	btemp+1,f
   860  08EC  1903               	btfsc	3,2
   861  08ED  0AFE               	incf	btemp,f
   862  08EE  28E0               	goto	init_ram0
   863                           
   864                           	psect	clrtext
   865  081D                     clear_ram0:	
   866                           ;	Called with FSR containing the base address, and
   867                           ;	W with the last address+1
   868                           
   869  081D  0064               	clrwdt	;clear the watchdog before getting into this loop
   870  081E                     clrloop0:
   871  081E  0180               	clrf	0	;clear RAM location pointed to by FSR
   872  081F  0A84               	incf	4,f	;increment pointer
   873  0820  0604               	xorwf	4,w	;XOR with final address
   874  0821  1903               	btfsc	3,2	;have we reached the end yet?
   875  0822  3400               	retlw	0	;all done for this memory range, return
   876  0823  0604               	xorwf	4,w	;XOR again to restore value
   877  0824  281E               	goto	clrloop0	;do the next byte
   878                           
   879                           	psect	cstackBANK1
   880  00A0                     __pcstackBANK1:
   881  00A0                     ??_I2C_Master_Send_Start:
   882  00A0                     ??_I2C_Master_Send_RepeatedStart:	
   883                           ; 1 bytes @ 0x0
   884                           
   885  00A0                     ??_I2C_Master_WriteByte:	
   886                           ; 1 bytes @ 0x0
   887                           
   888  00A0                     ??_I2C_Master_Send_Stop:	
   889                           ; 1 bytes @ 0x0
   890                           
   891  00A0                     ??_I2C_Master_ReadByte:	
   892                           ; 1 bytes @ 0x0
   893                           
   894  00A0                     ??_EWH_ClearEvent:	
   895                           ; 1 bytes @ 0x0
   896                           
   897  00A0                     ??_EWH_SetMode:	
   898                           ; 1 bytes @ 0x0
   899                           
   900  00A0                     ??_EWH_SetEvent:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  00A0                     ??_I2C_Wait_IDLE:	
   904                           ; 1 bytes @ 0x0
   905                           
   906  00A0                     ??_I2C_Master_Send_ACK:	
   907                           ; 1 bytes @ 0x0
   908                           
   909  00A0                     ??_I2C_Master_Send_NACK:	
   910                           ; 1 bytes @ 0x0
   911                           
   912  00A0                     ??_DD_Init:	
   913                           ; 1 bytes @ 0x0
   914                           
   915  00A0                     ?_DD_SetState:	
   916                           ; 1 bytes @ 0x0
   917                           
   918  00A0                     ??_ADC_Init:	
   919                           ; 1 bytes @ 0x0
   920                           
   921  00A0                     ??_TMR1_Init:	
   922                           ; 1 bytes @ 0x0
   923                           
   924  00A0                     ??_TMR1_Start:	
   925                           ; 1 bytes @ 0x0
   926                           
   927  00A0                     ??_TMR1_Stop:	
   928                           ; 1 bytes @ 0x0
   929                           
   930  00A0                     ??_SW_Init:	
   931                           ; 1 bytes @ 0x0
   932                           
   933  00A0                     ?_SSD_config:	
   934                           ; 1 bytes @ 0x0
   935                           
   936  00A0                     ?___awdiv:	
   937                           ; 1 bytes @ 0x0
   938                           
   939  00A0                     ?___lwdiv:	
   940                           ; 2 bytes @ 0x0
   941                           
   942  00A0                     ?___lwmod:	
   943                           ; 2 bytes @ 0x0
   944                           
   945  00A0                     ?___lldiv:	
   946                           ; 2 bytes @ 0x0
   947                           
   948  00A0                     I2C_Master_WriteByte@Data:	
   949                           ; 4 bytes @ 0x0
   950                           
   951  00A0                     DD_SetState@state:	
   952                           ; 1 bytes @ 0x0
   953                           
   954  00A0                     EWH_SetMode@new_mode:	
   955                           ; 1 bytes @ 0x0
   956                           
   957  00A0                     EWH_SetEvent@Event_index:	
   958                           ; 1 bytes @ 0x0
   959                           
   960  00A0                     EWH_ClearEvent@Event_index:	
   961                           ; 1 bytes @ 0x0
   962                           
   963  00A0                     SSD_config@SSD_state:	
   964                           ; 1 bytes @ 0x0
   965                           
   966  00A0                     ___awdiv@divisor:	
   967                           ; 1 bytes @ 0x0
   968                           
   969  00A0                     ___lwdiv@divisor:	
   970                           ; 2 bytes @ 0x0
   971                           
   972  00A0                     ___lwmod@divisor:	
   973                           ; 2 bytes @ 0x0
   974                           
   975  00A0                     ___lldiv@divisor:	
   976                           ; 2 bytes @ 0x0
   977                           
   978                           
   979                           ; 4 bytes @ 0x0
   980  00A0                     	ds	1
   981  00A1                     ?_EEPROM_WriteByte:
   982  00A1                     ??_DD_SetState:	
   983                           ; 1 bytes @ 0x1
   984                           
   985  00A1                     ??_SSD_config:	
   986                           ; 1 bytes @ 0x1
   987                           
   988  00A1                     I2C_Master_ReadByte@Read_State:	
   989                           ; 1 bytes @ 0x1
   990                           
   991  00A1                     EEPROM_WriteByte@address:	
   992                           ; 1 bytes @ 0x1
   993                           
   994                           
   995                           ; 2 bytes @ 0x1
   996  00A1                     	ds	1
   997  00A2                     ?_EEPROM_ReadByte:
   998  00A2                     ADC_Init@config:	
   999                           ; 1 bytes @ 0x2
  1000                           
  1001  00A2                     TMR1_Init@config:	
  1002                           ; 1 bytes @ 0x2
  1003                           
  1004  00A2                     EEPROM_ReadByte@address:	
  1005                           ; 1 bytes @ 0x2
  1006                           
  1007  00A2                     ___awdiv@dividend:	
  1008                           ; 2 bytes @ 0x2
  1009                           
  1010  00A2                     ___lwdiv@dividend:	
  1011                           ; 2 bytes @ 0x2
  1012                           
  1013  00A2                     ___lwmod@dividend:	
  1014                           ; 2 bytes @ 0x2
  1015                           
  1016                           
  1017                           ; 2 bytes @ 0x2
  1018  00A2                     	ds	1
  1019  00A3                     EEPROM_WriteByte@data:
  1020  00A3                     DD_SetState@device:	
  1021                           ; 1 bytes @ 0x3
  1022                           
  1023  00A3                     SSD_config@ID:	
  1024                           ; 1 bytes @ 0x3
  1025                           
  1026                           
  1027                           ; 1 bytes @ 0x3
  1028  00A3                     	ds	1
  1029  00A4                     ??_SSD_OFF:
  1030  00A4                     ??_EEPROM_WriteByte:	
  1031                           ; 1 bytes @ 0x4
  1032                           
  1033  00A4                     ??_EEPROM_ReadByte:	
  1034                           ; 1 bytes @ 0x4
  1035                           
  1036  00A4                     ??___awdiv:	
  1037                           ; 1 bytes @ 0x4
  1038                           
  1039  00A4                     ??___lwdiv:	
  1040                           ; 1 bytes @ 0x4
  1041                           
  1042  00A4                     ??___lwmod:	
  1043                           ; 1 bytes @ 0x4
  1044                           
  1045  00A4                     SSD_OFF@ID:	
  1046                           ; 1 bytes @ 0x4
  1047                           
  1048  00A4                     ___awdiv@counter:	
  1049                           ; 1 bytes @ 0x4
  1050                           
  1051  00A4                     ___lwmod@counter:	
  1052                           ; 1 bytes @ 0x4
  1053                           
  1054  00A4                     ___lwdiv@quotient:	
  1055                           ; 1 bytes @ 0x4
  1056                           
  1057  00A4                     ___lldiv@dividend:	
  1058                           ; 2 bytes @ 0x4
  1059                           
  1060                           
  1061                           ; 4 bytes @ 0x4
  1062  00A4                     	ds	1
  1063  00A5                     ??_EWH_Sleep_Mode:
  1064  00A5                     ??_EWH_SSD_OFF:	
  1065                           ; 1 bytes @ 0x5
  1066                           
  1067  00A5                     ___awdiv@sign:	
  1068                           ; 1 bytes @ 0x5
  1069                           
  1070                           
  1071                           ; 1 bytes @ 0x5
  1072  00A5                     	ds	1
  1073  00A6                     ??_EWH_EEPROM_Update:
  1074  00A6                     ??_EWH_EEPROM_Init:	
  1075                           ; 1 bytes @ 0x6
  1076                           
  1077  00A6                     EEPROM_ReadByte@data:	
  1078                           ; 1 bytes @ 0x6
  1079                           
  1080  00A6                     EWH_EEPROM_Update@newSetTemp:	
  1081                           ; 1 bytes @ 0x6
  1082                           
  1083  00A6                     ___lwdiv@counter:	
  1084                           ; 1 bytes @ 0x6
  1085                           
  1086  00A6                     ___awdiv@quotient:	
  1087                           ; 1 bytes @ 0x6
  1088                           
  1089                           
  1090                           ; 2 bytes @ 0x6
  1091  00A6                     	ds	1
  1092  00A7                     ??_EWH_EEPROM_Read:
  1093  00A7                     ?_EWH_getAvrgTempReading:	
  1094                           ; 1 bytes @ 0x7
  1095                           
  1096  00A7                     EWH_getAvrgTempReading@length:	
  1097                           ; 1 bytes @ 0x7
  1098                           
  1099                           
  1100                           ; 1 bytes @ 0x7
  1101  00A7                     	ds	1
  1102  00A8                     ??_EWH_getAvrgTempReading:
  1103  00A8                     ?_SSD_Write:	
  1104                           ; 1 bytes @ 0x8
  1105                           
  1106  00A8                     ??___lldiv:	
  1107                           ; 1 bytes @ 0x8
  1108                           
  1109  00A8                     SSD_Write@Number:	
  1110                           ; 1 bytes @ 0x8
  1111                           
  1112                           
  1113                           ; 1 bytes @ 0x8
  1114  00A8                     	ds	1
  1115  00A9                     ??_SSD_Write:
  1116  00A9                     SSD_Write@ID:	
  1117                           ; 1 bytes @ 0x9
  1118                           
  1119  00A9                     ___lldiv@quotient:	
  1120                           ; 1 bytes @ 0x9
  1121                           
  1122                           
  1123                           ; 4 bytes @ 0x9
  1124  00A9                     	ds	1
  1125  00AA                     ?_EWH_SSD_Update:
  1126  00AA                     EWH_SSD_Update@temp:	
  1127                           ; 1 bytes @ 0xA
  1128                           
  1129                           
  1130                           ; 2 bytes @ 0xA
  1131  00AA                     	ds	1
  1132  00AB                     EWH_getAvrgTempReading@sumOfReadings:
  1133                           
  1134                           ; 2 bytes @ 0xB
  1135  00AB                     	ds	1
  1136  00AC                     ??_EWH_SSD_Update:
  1137                           
  1138                           ; 1 bytes @ 0xC
  1139  00AC                     	ds	1
  1140  00AD                     EWH_getAvrgTempReading@averageReading:
  1141  00AD                     ___lldiv@counter:	
  1142                           ; 1 bytes @ 0xD
  1143                           
  1144                           
  1145                           ; 1 bytes @ 0xD
  1146  00AD                     	ds	1
  1147  00AE                     ??_EWH_WakeUP_Mode:
  1148  00AE                     ??_EWH_SetTemp_Mode:	
  1149                           ; 1 bytes @ 0xE
  1150                           
  1151  00AE                     ??_I2C_Init:	
  1152                           ; 1 bytes @ 0xE
  1153                           
  1154  00AE                     I2C_Init@i2c_config:	
  1155                           ; 1 bytes @ 0xE
  1156                           
  1157  00AE                     EWH_getAvrgTempReading@buffer:	
  1158                           ; 1 bytes @ 0xE
  1159                           
  1160                           
  1161                           ; 1 bytes @ 0xE
  1162  00AE                     	ds	1
  1163  00AF                     ??_EWH_Init:
  1164  00AF                     EWH_getAvrgTempReading@i:	
  1165                           ; 1 bytes @ 0xF
  1166                           
  1167  00AF                     EWH_Init@TMR1_cfg:	
  1168                           ; 1 bytes @ 0xF
  1169                           
  1170                           
  1171                           ; 2 bytes @ 0xF
  1172  00AF                     	ds	1
  1173  00B0                     ??_EWH_Operating_Mode:
  1174                           
  1175                           ; 1 bytes @ 0x10
  1176  00B0                     	ds	1
  1177  00B1                     EWH_Init@i2c_config:
  1178                           
  1179                           ; 6 bytes @ 0x11
  1180  00B1                     	ds	6
  1181  00B7                     EWH_Init@adc_config:
  1182                           
  1183                           ; 4 bytes @ 0x17
  1184  00B7                     	ds	4
  1185  00BB                     ??_main:
  1186                           
  1187                           ; 1 bytes @ 0x1B
  1188  00BB                     	ds	2
  1189                           
  1190                           	psect	cstackCOMMON
  1191  0070                     __pcstackCOMMON:
  1192  0070                     ?_I2C_Master_Send_Start:
  1193  0070                     ?_I2C_Master_Send_RepeatedStart:	
  1194                           ; 1 bytes @ 0x0
  1195                           
  1196  0070                     ?_I2C_Master_WriteByte:	
  1197                           ; 1 bytes @ 0x0
  1198                           
  1199  0070                     ?_I2C_Master_Send_Stop:	
  1200                           ; 1 bytes @ 0x0
  1201                           
  1202  0070                     ?_I2C_Master_ReadByte:	
  1203                           ; 1 bytes @ 0x0
  1204                           
  1205  0070                     ?_EWH_Init:	
  1206                           ; 1 bytes @ 0x0
  1207                           
  1208  0070                     ?_EWH_Sleep_Mode:	
  1209                           ; 1 bytes @ 0x0
  1210                           
  1211  0070                     ?_EWH_WakeUP_Mode:	
  1212                           ; 1 bytes @ 0x0
  1213                           
  1214  0070                     ?_EWH_Operating_Mode:	
  1215                           ; 1 bytes @ 0x0
  1216                           
  1217  0070                     ?_EWH_SetTemp_Mode:	
  1218                           ; 1 bytes @ 0x0
  1219                           
  1220  0070                     ?_EWH_SSD_OFF:	
  1221                           ; 1 bytes @ 0x0
  1222                           
  1223  0070                     ?_EWH_ClearEvent:	
  1224                           ; 1 bytes @ 0x0
  1225                           
  1226  0070                     ?_EWH_EEPROM_Read:	
  1227                           ; 1 bytes @ 0x0
  1228                           
  1229  0070                     ?_EWH_SetMode:	
  1230                           ; 1 bytes @ 0x0
  1231                           
  1232  0070                     ?_EWH_EEPROM_Update:	
  1233                           ; 1 bytes @ 0x0
  1234                           
  1235  0070                     ?_EWH_SetEvent:	
  1236                           ; 1 bytes @ 0x0
  1237                           
  1238  0070                     ?_EWH_EEPROM_Init:	
  1239                           ; 1 bytes @ 0x0
  1240                           
  1241  0070                     ?_SSD_OFF:	
  1242                           ; 1 bytes @ 0x0
  1243                           
  1244  0070                     ?_I2C_Init:	
  1245                           ; 1 bytes @ 0x0
  1246                           
  1247  0070                     ?_I2C_Wait_IDLE:	
  1248                           ; 1 bytes @ 0x0
  1249                           
  1250  0070                     ?_I2C_Master_Send_ACK:	
  1251                           ; 1 bytes @ 0x0
  1252                           
  1253  0070                     ?_I2C_Master_Send_NACK:	
  1254                           ; 1 bytes @ 0x0
  1255                           
  1256  0070                     ?_main:	
  1257                           ; 1 bytes @ 0x0
  1258                           
  1259  0070                     ?_DD_Init:	
  1260                           ; 1 bytes @ 0x0
  1261                           
  1262  0070                     ?_DD_GetState:	
  1263                           ; 1 bytes @ 0x0
  1264                           
  1265  0070                     ??_DD_GetState:	
  1266                           ; 1 bytes @ 0x0
  1267                           
  1268  0070                     ?_ADC_Init:	
  1269                           ; 1 bytes @ 0x0
  1270                           
  1271  0070                     ?_TMR1_Init:	
  1272                           ; 1 bytes @ 0x0
  1273                           
  1274  0070                     ?_TMR1_Start:	
  1275                           ; 1 bytes @ 0x0
  1276                           
  1277  0070                     ?_TMR1_Stop:	
  1278                           ; 1 bytes @ 0x0
  1279                           
  1280  0070                     ?_SW_Init:	
  1281                           ; 1 bytes @ 0x0
  1282                           
  1283  0070                     ?_ISR:	
  1284                           ; 1 bytes @ 0x0
  1285                           
  1286  0070                     ?i1_EWH_SetMode:	
  1287                           ; 1 bytes @ 0x0
  1288                           
  1289  0070                     ??i1_EWH_SetMode:	
  1290                           ; 1 bytes @ 0x0
  1291                           
  1292  0070                     ?i1_EWH_SetEvent:	
  1293                           ; 1 bytes @ 0x0
  1294                           
  1295  0070                     ??i1_EWH_SetEvent:	
  1296                           ; 1 bytes @ 0x0
  1297                           
  1298  0070                     ?__Umul8_16:	
  1299                           ; 1 bytes @ 0x0
  1300                           
  1301  0070                     ?_ADC_ReadChannel:	
  1302                           ; 2 bytes @ 0x0
  1303                           
  1304  0070                     ?___awmod:	
  1305                           ; 2 bytes @ 0x0
  1306                           
  1307  0070                     ?___xxtofl:	
  1308                           ; 2 bytes @ 0x0
  1309                           
  1310  0070                     __Umul8_16@multiplicand:	
  1311                           ; 4 bytes @ 0x0
  1312                           
  1313  0070                     i1EWH_SetMode@new_mode:	
  1314                           ; 1 bytes @ 0x0
  1315                           
  1316  0070                     i1EWH_SetEvent@Event_index:	
  1317                           ; 1 bytes @ 0x0
  1318                           
  1319  0070                     ___awmod@divisor:	
  1320                           ; 1 bytes @ 0x0
  1321                           
  1322  0070                     ___xxtofl@val:	
  1323                           ; 2 bytes @ 0x0
  1324                           
  1325                           
  1326                           ; 4 bytes @ 0x0
  1327  0070                     	ds	2
  1328  0072                     ??__Umul8_16:
  1329  0072                     ??_ADC_ReadChannel:	
  1330                           ; 1 bytes @ 0x2
  1331                           
  1332  0072                     DD_GetState@device:	
  1333                           ; 1 bytes @ 0x2
  1334                           
  1335  0072                     ___awmod@dividend:	
  1336                           ; 1 bytes @ 0x2
  1337                           
  1338                           
  1339                           ; 2 bytes @ 0x2
  1340  0072                     	ds	1
  1341  0073                     ADC_ReadChannel@result:
  1342                           
  1343                           ; 2 bytes @ 0x3
  1344  0073                     	ds	1
  1345  0074                     ??___awmod:
  1346  0074                     ??___xxtofl:	
  1347                           ; 1 bytes @ 0x4
  1348                           
  1349  0074                     ___awmod@counter:	
  1350                           ; 1 bytes @ 0x4
  1351                           
  1352  0074                     __Umul8_16@product:	
  1353                           ; 1 bytes @ 0x4
  1354                           
  1355                           
  1356                           ; 2 bytes @ 0x4
  1357  0074                     	ds	1
  1358  0075                     ADC_ReadChannel@channel:
  1359  0075                     ___awmod@sign:	
  1360                           ; 1 bytes @ 0x5
  1361                           
  1362                           
  1363                           ; 1 bytes @ 0x5
  1364  0075                     	ds	1
  1365  0076                     __Umul8_16@word_mpld:
  1366                           
  1367                           ; 2 bytes @ 0x6
  1368  0076                     	ds	2
  1369  0078                     __Umul8_16@multiplier:
  1370  0078                     ___xxtofl@sign:	
  1371                           ; 1 bytes @ 0x8
  1372                           
  1373                           
  1374                           ; 1 bytes @ 0x8
  1375  0078                     	ds	1
  1376  0079                     ___xxtofl@exp:
  1377                           
  1378                           ; 1 bytes @ 0x9
  1379  0079                     	ds	1
  1380  007A                     ___xxtofl@arg:
  1381                           
  1382                           ; 4 bytes @ 0xA
  1383  007A                     	ds	4
  1384                           
  1385                           	psect	cstackBANK0
  1386  0020                     __pcstackBANK0:
  1387  0020                     ?___flmul:
  1388  0020                     ___flmul@b:	
  1389                           ; 4 bytes @ 0x0
  1390                           
  1391                           
  1392                           ; 4 bytes @ 0x0
  1393  0020                     	ds	4
  1394  0024                     ___flmul@a:
  1395                           
  1396                           ; 4 bytes @ 0x4
  1397  0024                     	ds	4
  1398  0028                     ??___flmul:
  1399                           
  1400                           ; 1 bytes @ 0x8
  1401  0028                     	ds	5
  1402  002D                     ___flmul@sign:
  1403                           
  1404                           ; 1 bytes @ 0xD
  1405  002D                     	ds	1
  1406  002E                     ___flmul@grs:
  1407                           
  1408                           ; 4 bytes @ 0xE
  1409  002E                     	ds	4
  1410  0032                     ___flmul@aexp:
  1411                           
  1412                           ; 1 bytes @ 0x12
  1413  0032                     	ds	1
  1414  0033                     ___flmul@bexp:
  1415                           
  1416                           ; 1 bytes @ 0x13
  1417  0033                     	ds	1
  1418  0034                     ___flmul@prod:
  1419                           
  1420                           ; 4 bytes @ 0x14
  1421  0034                     	ds	4
  1422  0038                     ___flmul@temp:
  1423                           
  1424                           ; 2 bytes @ 0x18
  1425  0038                     	ds	2
  1426  003A                     ?___fltol:
  1427  003A                     ___fltol@f1:	
  1428                           ; 4 bytes @ 0x1A
  1429                           
  1430                           
  1431                           ; 4 bytes @ 0x1A
  1432  003A                     	ds	4
  1433  003E                     ??___fltol:
  1434                           
  1435                           ; 1 bytes @ 0x1E
  1436  003E                     	ds	4
  1437  0042                     ___fltol@sign1:
  1438                           
  1439                           ; 1 bytes @ 0x22
  1440  0042                     	ds	1
  1441  0043                     ___fltol@exp1:
  1442                           
  1443                           ; 1 bytes @ 0x23
  1444  0043                     	ds	1
  1445  0044                     ??_ISR:
  1446                           
  1447                           ; 1 bytes @ 0x24
  1448  0044                     	ds	6
  1449  004A                     ISR@Reading:
  1450                           
  1451                           ; 2 bytes @ 0x2A
  1452  004A                     	ds	2
  1453                           
  1454                           	psect	maintext
  1455  0BF2                     __pmaintext:	
  1456 ;;
  1457 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1458 ;;
  1459 ;; *************** function _main *****************
  1460 ;; Defined at:
  1461 ;;		line 5 in file "main.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;		None
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;		None
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  1    wreg      void 
  1468 ;; Registers used:
  1469 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1470 ;; Tracked objects:
  1471 ;;		On entry : B00/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1475 ;;      Params:         0       0       0       0       0
  1476 ;;      Locals:         0       0       0       0       0
  1477 ;;      Temps:          0       0       2       0       0
  1478 ;;      Totals:         0       0       2       0       0
  1479 ;;Total ram usage:        2 bytes
  1480 ;; Hardware stack levels required when called:    9
  1481 ;; This function calls:
  1482 ;;		_EWH_Init
  1483 ;;		_EWH_Operating_Mode
  1484 ;;		_EWH_SetTemp_Mode
  1485 ;;		_EWH_Sleep_Mode
  1486 ;;		_EWH_WakeUP_Mode
  1487 ;; This function is called by:
  1488 ;;		Startup code after reset
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492                           
  1493                           ;psect for function _main
  1494  0BF2                     _main:
  1495  0BF2                     l3590:	
  1496                           ;incstack = 0
  1497 ;; hardware stack exceeded
  1498                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1499                           
  1500                           
  1501                           ;main.c: 7:     EWH_Init();
  1502  0BF2  120A  158A  22D4  120A  158A  	fcall	_EWH_Init
  1503  0BF7                     l3594:	
  1504                           ;main.c: 9:     (0u)? (TRISB |= (1<<4)) : (TRISB &= ~(1<<4));
  1505                           
  1506  0BF7  30EF               	movlw	239
  1507  0BF8  00FF               	movwf	btemp+1
  1508  0BF9  087F               	movf	btemp+1,w
  1509  0BFA  1683               	bsf	3,5	;RP0=1, select bank1
  1510  0BFB  1303               	bcf	3,6	;RP1=0, select bank1
  1511  0BFC  0586               	andwf	6,f	;volatile
  1512  0BFD                     l3598:
  1513  0BFD  30DF               	movlw	223
  1514  0BFE  00FF               	movwf	btemp+1
  1515  0BFF  087F               	movf	btemp+1,w
  1516  0C00  0586               	andwf	6,f	;volatile
  1517  0C01                     l3602:
  1518  0C01  30BF               	movlw	191
  1519  0C02  00FF               	movwf	btemp+1
  1520  0C03  087F               	movf	btemp+1,w
  1521  0C04  0586               	andwf	6,f	;volatile
  1522  0C05                     l3606:
  1523  0C05  30EF               	movlw	239
  1524  0C06  00FF               	movwf	btemp+1
  1525  0C07  087F               	movf	btemp+1,w
  1526  0C08  1283               	bcf	3,5	;RP0=0, select bank0
  1527  0C09  1303               	bcf	3,6	;RP1=0, select bank0
  1528  0C0A  0586               	andwf	6,f	;volatile
  1529  0C0B                     l3610:
  1530  0C0B  30DF               	movlw	223
  1531  0C0C  00FF               	movwf	btemp+1
  1532  0C0D  087F               	movf	btemp+1,w
  1533  0C0E  0586               	andwf	6,f	;volatile
  1534  0C0F                     l3614:
  1535  0C0F  30BF               	movlw	191
  1536  0C10  00FF               	movwf	btemp+1
  1537  0C11  087F               	movf	btemp+1,w
  1538  0C12  0586               	andwf	6,f	;volatile
  1539  0C13  2C2B               	goto	l3626
  1540  0C14                     l3616:
  1541                           
  1542                           ;main.c: 21:                 EWH_Sleep_Mode();
  1543  0C14  120A  158A  2147  120A  158A  	fcall	_EWH_Sleep_Mode
  1544                           
  1545                           ;main.c: 22:                 break;
  1546  0C19  2C2B               	goto	l3626
  1547  0C1A                     l3618:
  1548                           
  1549                           ;main.c: 24:                 EWH_WakeUP_Mode();
  1550  0C1A  120A  158A  2768  120A  158A  	fcall	_EWH_WakeUP_Mode
  1551                           
  1552                           ;main.c: 25:                 break;
  1553  0C1F  2C2B               	goto	l3626
  1554  0C20                     l3620:
  1555                           
  1556                           ;main.c: 27:                 EWH_Operating_Mode();
  1557  0C20  120A  118A  2398  120A  158A  	fcall	_EWH_Operating_Mode
  1558                           
  1559                           ;main.c: 28:                 break;
  1560  0C25  2C2B               	goto	l3626
  1561  0C26                     l3622:
  1562                           
  1563                           ;main.c: 30:                 EWH_SetTemp_Mode();
  1564  0C26  120A  118A  25D7  120A  158A  	fcall	_EWH_SetTemp_Mode
  1565  0C2B                     l3626:	
  1566                           ;main.c: 31:                 break;
  1567                           
  1568  0C2B  1683               	bsf	3,5	;RP0=1, select bank1
  1569  0C2C  1303               	bcf	3,6	;RP1=0, select bank1
  1570  0C2D  084A               	movf	_EWH_Mode^(0+128),w
  1571  0C2E  00BB               	movwf	??_main^(0+128)
  1572  0C2F  01BC               	clrf	(??_main^(0+128)+1)
  1573                           
  1574                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1575                           ; Switch size 1, requested type "simple"
  1576                           ; Number of cases is 1, Range of values is 0 to 0
  1577                           ; switch strategies available:
  1578                           ; Name         Instructions Cycles
  1579                           ; simple_byte            4     3 (average)
  1580                           ; direct_byte           11     8 (fixed)
  1581                           ; jumptable            260     6 (fixed)
  1582                           ;	Chosen strategy is simple_byte
  1583  0C30  083C               	movf	(??_main+1)^(0+128),w
  1584  0C31  3A00               	xorlw	0	; case 0
  1585  0C32  1903               	skipnz
  1586  0C33  2C35               	goto	l3922
  1587  0C34  2C2B               	goto	l3626
  1588  0C35                     l3922:
  1589                           
  1590                           ; Switch size 1, requested type "simple"
  1591                           ; Number of cases is 4, Range of values is 0 to 3
  1592                           ; switch strategies available:
  1593                           ; Name         Instructions Cycles
  1594                           ; simple_byte           13     7 (average)
  1595                           ; direct_byte           20     8 (fixed)
  1596                           ; jumptable            260     6 (fixed)
  1597                           ;	Chosen strategy is simple_byte
  1598  0C35  083B               	movf	??_main^(0+128),w
  1599  0C36  3A00               	xorlw	0	; case 0
  1600  0C37  1903               	skipnz
  1601  0C38  2C14               	goto	l3616
  1602  0C39  3A01               	xorlw	1	; case 1
  1603  0C3A  1903               	skipnz
  1604  0C3B  2C1A               	goto	l3618
  1605  0C3C  3A03               	xorlw	3	; case 2
  1606  0C3D  1903               	skipnz
  1607  0C3E  2C26               	goto	l3622
  1608  0C3F  3A01               	xorlw	1	; case 3
  1609  0C40  1903               	skipnz
  1610  0C41  2C20               	goto	l3620
  1611  0C42  2C2B               	goto	l3626
  1612  0C43  120A  118A  2812   	ljmp	start
  1613  0C46                     __end_of_main:
  1614                           
  1615                           	psect	text1
  1616  0F68                     __ptext1:	
  1617 ;; *************** function _EWH_WakeUP_Mode *****************
  1618 ;; Defined at:
  1619 ;;		line 35 in file "EWH.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;		None
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;		None
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      void 
  1626 ;; Registers used:
  1627 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1633 ;;      Params:         0       0       0       0       0
  1634 ;;      Locals:         0       0       0       0       0
  1635 ;;      Temps:          0       0       2       0       0
  1636 ;;      Totals:         0       0       2       0       0
  1637 ;;Total ram usage:        2 bytes
  1638 ;; Hardware stack levels used:    1
  1639 ;; Hardware stack levels required when called:    8
  1640 ;; This function calls:
  1641 ;;		_EWH_ClearEvent
  1642 ;;		_EWH_EEPROM_Read
  1643 ;;		_EWH_SSD_Update
  1644 ;;		_EWH_SetMode
  1645 ;; This function is called by:
  1646 ;;		_main
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           
  1651                           ;psect for function _EWH_WakeUP_Mode
  1652  0F68                     _EWH_WakeUP_Mode:
  1653  0F68                     l3090:	
  1654                           ;incstack = 0
  1655 ;; hardware stack exceeded
  1656                           ; Regs used in _EWH_WakeUP_Mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1657                           
  1658                           
  1659                           ;EWH.c: 42:     EWH_ClearEvent(0);
  1660  0F68  3000               	movlw	0
  1661  0F69  120A  158A  2049  120A  158A  	fcall	_EWH_ClearEvent
  1662  0F6E                     l3092:
  1663                           
  1664                           ;EWH.c: 45:     set_Temp = EWH_EEPROM_Read();
  1665  0F6E  120A  158A  2085  120A  158A  	fcall	_EWH_EEPROM_Read
  1666  0F73  00FF               	movwf	btemp+1
  1667  0F74  087F               	movf	btemp+1,w
  1668  0F75  1683               	bsf	3,5	;RP0=1, select bank1
  1669  0F76  1303               	bcf	3,6	;RP1=0, select bank1
  1670  0F77  00C9               	movwf	_set_Temp^(0+128)
  1671  0F78                     l3094:
  1672                           
  1673                           ;EWH.c: 48:     {;EWH.c: 50:         EWH_SSD_Update(set_Temp);
  1674  0F78  0849               	movf	_set_Temp^(0+128),w
  1675  0F79  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  1676  0F7A  01AF               	clrf	(??_EWH_WakeUP_Mode^(0+128)+1)
  1677  0F7B  082E               	movf	??_EWH_WakeUP_Mode^(0+128),w
  1678  0F7C  00AA               	movwf	EWH_SSD_Update@temp^(0+128)
  1679  0F7D  082F               	movf	(??_EWH_WakeUP_Mode+1)^(0+128),w
  1680  0F7E  00AB               	movwf	(EWH_SSD_Update@temp+1)^(0+128)
  1681  0F7F  120A  158A  2554  120A  158A  	fcall	_EWH_SSD_Update
  1682  0F84                     l3096:
  1683                           
  1684                           ;EWH.c: 53:         if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED))
  1685  0F84  1283               	bcf	3,5	;RP0=0, select bank0
  1686  0F85  1303               	bcf	3,6	;RP1=0, select bank0
  1687  0F86  0806               	movf	6,w	;volatile
  1688  0F87  1683               	bsf	3,5	;RP0=1, select bank1
  1689  0F88  1303               	bcf	3,6	;RP1=0, select bank1
  1690  0F89  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  1691  0F8A  3002               	movlw	2
  1692  0F8B                     u2435:
  1693  0F8B  1003               	clrc
  1694  0F8C  0CAE               	rrf	??_EWH_WakeUP_Mode^(0+128),f
  1695  0F8D  3EFF               	addlw	-1
  1696  0F8E  1D03               	skipz
  1697  0F8F  2F8B               	goto	u2435
  1698  0F90  182E               	btfsc	??_EWH_WakeUP_Mode^(0+128),0
  1699  0F91  2F93               	goto	u2441
  1700  0F92  2F94               	goto	u2440
  1701  0F93                     u2441:
  1702  0F93  2FB9               	goto	l3106
  1703  0F94                     u2440:
  1704  0F94                     l3098:
  1705                           
  1706                           ;EWH.c: 54:         {;EWH.c: 55:             _delay((unsigned long)((50)*(4000000/4000.0
      +                          )));
  1707  0F94  3041               	movlw	65
  1708  0F95  1683               	bsf	3,5	;RP0=1, select bank1
  1709  0F96  1303               	bcf	3,6	;RP1=0, select bank1
  1710  0F97  00AF               	movwf	(??_EWH_WakeUP_Mode^(0+128)+1)
  1711  0F98  30ED               	movlw	237
  1712  0F99  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  1713  0F9A                     u3767:
  1714  0F9A  0BAE               	decfsz	??_EWH_WakeUP_Mode^(0+128),f
  1715  0F9B  2F9A               	goto	u3767
  1716  0F9C  0BAF               	decfsz	(??_EWH_WakeUP_Mode^(0+128)+1),f
  1717  0F9D  2F9A               	goto	u3767
  1718  0F9E  2F9F               	nop2
  1719  0F9F                     l3100:
  1720                           
  1721                           ;EWH.c: 56:             if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED))
  1722  0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  1723  0FA0  1303               	bcf	3,6	;RP1=0, select bank0
  1724  0FA1  0806               	movf	6,w	;volatile
  1725  0FA2  1683               	bsf	3,5	;RP0=1, select bank1
  1726  0FA3  1303               	bcf	3,6	;RP1=0, select bank1
  1727  0FA4  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  1728  0FA5  3002               	movlw	2
  1729  0FA6                     u2455:
  1730  0FA6  1003               	clrc
  1731  0FA7  0CAE               	rrf	??_EWH_WakeUP_Mode^(0+128),f
  1732  0FA8  3EFF               	addlw	-1
  1733  0FA9  1D03               	skipz
  1734  0FAA  2FA6               	goto	u2455
  1735  0FAB  182E               	btfsc	??_EWH_WakeUP_Mode^(0+128),0
  1736  0FAC  2FAE               	goto	u2461
  1737  0FAD  2FAF               	goto	u2460
  1738  0FAE                     u2461:
  1739  0FAE  2FB9               	goto	l3106
  1740  0FAF                     u2460:
  1741  0FAF                     l3102:
  1742                           
  1743                           ;EWH.c: 57:             {;EWH.c: 63:                 NoPress_Sec_count=0;
  1744  0FAF  1283               	bcf	3,5	;RP0=0, select bank0
  1745  0FB0  1303               	bcf	3,6	;RP1=0, select bank0
  1746  0FB1  01D3               	clrf	_NoPress_Sec_count
  1747  0FB2                     l3104:
  1748                           
  1749                           ;EWH.c: 65:                 EWH_SetMode(EWH_SET_TEMP_MODE);
  1750  0FB2  3002               	movlw	2
  1751  0FB3  120A  158A  2015  120A  158A  	fcall	_EWH_SetMode
  1752                           
  1753                           ;EWH.c: 67:                 break;
  1754  0FB8  2FFF               	goto	l506
  1755  0FB9                     l3106:
  1756                           
  1757                           ;EWH.c: 70:         if((!((PORTB & (1<<1)) >> 1)==SW_PRESSED))
  1758  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  1759  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  1760  0FBB  0806               	movf	6,w	;volatile
  1761  0FBC  1683               	bsf	3,5	;RP0=1, select bank1
  1762  0FBD  1303               	bcf	3,6	;RP1=0, select bank1
  1763  0FBE  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  1764  0FBF  3001               	movlw	1
  1765  0FC0                     u2475:
  1766  0FC0  1003               	clrc
  1767  0FC1  0CAE               	rrf	??_EWH_WakeUP_Mode^(0+128),f
  1768  0FC2  3EFF               	addlw	-1
  1769  0FC3  1D03               	skipz
  1770  0FC4  2FC0               	goto	u2475
  1771  0FC5  182E               	btfsc	??_EWH_WakeUP_Mode^(0+128),0
  1772  0FC6  2FC8               	goto	u2481
  1773  0FC7  2FC9               	goto	u2480
  1774  0FC8                     u2481:
  1775  0FC8  2FEE               	goto	l3116
  1776  0FC9                     u2480:
  1777  0FC9                     l3108:
  1778                           
  1779                           ;EWH.c: 71:         {;EWH.c: 72:             _delay((unsigned long)((50)*(4000000/4000.0
      +                          )));
  1780  0FC9  3041               	movlw	65
  1781  0FCA  1683               	bsf	3,5	;RP0=1, select bank1
  1782  0FCB  1303               	bcf	3,6	;RP1=0, select bank1
  1783  0FCC  00AF               	movwf	(??_EWH_WakeUP_Mode^(0+128)+1)
  1784  0FCD  30ED               	movlw	237
  1785  0FCE  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  1786  0FCF                     u3777:
  1787  0FCF  0BAE               	decfsz	??_EWH_WakeUP_Mode^(0+128),f
  1788  0FD0  2FCF               	goto	u3777
  1789  0FD1  0BAF               	decfsz	(??_EWH_WakeUP_Mode^(0+128)+1),f
  1790  0FD2  2FCF               	goto	u3777
  1791  0FD3  2FD4               	nop2
  1792  0FD4                     l3110:
  1793                           
  1794                           ;EWH.c: 73:             if((!((PORTB & (1<<1)) >> 1)==SW_PRESSED))
  1795  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  1796  0FD5  1303               	bcf	3,6	;RP1=0, select bank0
  1797  0FD6  0806               	movf	6,w	;volatile
  1798  0FD7  1683               	bsf	3,5	;RP0=1, select bank1
  1799  0FD8  1303               	bcf	3,6	;RP1=0, select bank1
  1800  0FD9  00AE               	movwf	??_EWH_WakeUP_Mode^(0+128)
  1801  0FDA  3001               	movlw	1
  1802  0FDB                     u2495:
  1803  0FDB  1003               	clrc
  1804  0FDC  0CAE               	rrf	??_EWH_WakeUP_Mode^(0+128),f
  1805  0FDD  3EFF               	addlw	-1
  1806  0FDE  1D03               	skipz
  1807  0FDF  2FDB               	goto	u2495
  1808  0FE0  182E               	btfsc	??_EWH_WakeUP_Mode^(0+128),0
  1809  0FE1  2FE3               	goto	u2501
  1810  0FE2  2FE4               	goto	u2500
  1811  0FE3                     u2501:
  1812  0FE3  2FEE               	goto	l3116
  1813  0FE4                     u2500:
  1814  0FE4                     l3112:
  1815                           
  1816                           ;EWH.c: 74:             {;EWH.c: 80:                 NoPress_Sec_count=0;
  1817  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  1818  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  1819  0FE6  01D3               	clrf	_NoPress_Sec_count
  1820  0FE7                     l3114:
  1821                           
  1822                           ;EWH.c: 82:                 EWH_SetMode(EWH_SET_TEMP_MODE);
  1823  0FE7  3002               	movlw	2
  1824  0FE8  120A  158A  2015  120A  158A  	fcall	_EWH_SetMode
  1825                           
  1826                           ;EWH.c: 84:                 break;
  1827  0FED  2FFF               	goto	l506
  1828  0FEE                     l3116:
  1829                           
  1830                           ;EWH.c: 87:         if(EWH_Events[0]==1)
  1831  0FEE  033D               	decf	_EWH_Events^(0+128),w
  1832  0FEF  1D03               	btfss	3,2
  1833  0FF0  2FF2               	goto	u2511
  1834  0FF1  2FF3               	goto	u2510
  1835  0FF2                     u2511:
  1836  0FF2  2F78               	goto	l3094
  1837  0FF3                     u2510:
  1838  0FF3                     l3118:
  1839                           
  1840                           ;EWH.c: 88:         {;EWH.c: 90:             EWH_ClearEvent(0);
  1841  0FF3  3000               	movlw	0
  1842  0FF4  120A  158A  2049  120A  158A  	fcall	_EWH_ClearEvent
  1843  0FF9                     l3120:
  1844                           
  1845                           ;EWH.c: 92:             EWH_SetMode(EWH_SLEEP_MODE);
  1846  0FF9  3000               	movlw	0
  1847  0FFA  120A  158A  2015  120A  158A  	fcall	_EWH_SetMode
  1848  0FFF                     l506:	
  1849                           ;EWH.c: 94:             break ;
  1850                           
  1851  0FFF  0008               	return
  1852  1000                     __end_of_EWH_WakeUP_Mode:
  1853                           
  1854                           	psect	text2
  1855  0885                     __ptext2:	
  1856 ;; *************** function _EWH_EEPROM_Read *****************
  1857 ;; Defined at:
  1858 ;;		line 322 in file "EWH.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;		None
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;		None
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      unsigned char 
  1865 ;; Registers used:
  1866 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1872 ;;      Params:         0       0       0       0       0
  1873 ;;      Locals:         0       0       0       0       0
  1874 ;;      Temps:          0       0       0       0       0
  1875 ;;      Totals:         0       0       0       0       0
  1876 ;;Total ram usage:        0 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    7
  1879 ;; This function calls:
  1880 ;;		_EEPROM_ReadByte
  1881 ;; This function is called by:
  1882 ;;		_EWH_WakeUP_Mode
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           
  1887                           ;psect for function _EWH_EEPROM_Read
  1888  0885                     _EWH_EEPROM_Read:
  1889  0885                     l3008:	
  1890                           ;incstack = 0
  1891 ;; hardware stack exceeded
  1892                           ; Regs used in _EWH_EEPROM_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1893                           
  1894                           
  1895                           ;EWH.c: 324:     return EEPROM_ReadByte(0x0020);
  1896  0885  3020               	movlw	32
  1897  0886  1683               	bsf	3,5	;RP0=1, select bank1
  1898  0887  1303               	bcf	3,6	;RP1=0, select bank1
  1899  0888  00A2               	movwf	EEPROM_ReadByte@address^(0+128)
  1900  0889  3000               	movlw	0
  1901  088A  00A3               	movwf	(EEPROM_ReadByte@address^(0+128)+1)
  1902  088B  120A  158A  24F9  120A  158A  	fcall	_EEPROM_ReadByte
  1903  0890                     l558:
  1904  0890  0008               	return
  1905  0891                     __end_of_EWH_EEPROM_Read:
  1906                           
  1907                           	psect	text3
  1908  0CF9                     __ptext3:	
  1909 ;; *************** function _EEPROM_ReadByte *****************
  1910 ;; Defined at:
  1911 ;;		line 48 in file "EEPROM.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;  address         2    2[BANK1 ] unsigned short 
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;  data            1    6[BANK1 ] unsigned char 
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      unsigned char 
  1918 ;; Registers used:
  1919 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1925 ;;      Params:         0       0       2       0       0
  1926 ;;      Locals:         0       0       1       0       0
  1927 ;;      Temps:          0       0       2       0       0
  1928 ;;      Totals:         0       0       5       0       0
  1929 ;;Total ram usage:        5 bytes
  1930 ;; Hardware stack levels used:    1
  1931 ;; Hardware stack levels required when called:    6
  1932 ;; This function calls:
  1933 ;;		_I2C_Master_ReadByte
  1934 ;;		_I2C_Master_Send_RepeatedStart
  1935 ;;		_I2C_Master_Send_Start
  1936 ;;		_I2C_Master_Send_Stop
  1937 ;;		_I2C_Master_WriteByte
  1938 ;; This function is called by:
  1939 ;;		_EWH_EEPROM_Read
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943                           
  1944                           ;psect for function _EEPROM_ReadByte
  1945  0CF9                     _EEPROM_ReadByte:
  1946  0CF9                     l2704:	
  1947                           ;incstack = 0
  1948 ;; hardware stack exceeded
  1949                           ; Regs used in _EEPROM_ReadByte: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1950                           
  1951                           
  1952                           ;EEPROM.c: 48: uint8_t EEPROM_ReadByte(uint16_t address );EEPROM.c: 49: {;EEPROM.c: 50: 
      +                              uint8_t data;;EEPROM.c: 52:     I2C_Master_Send_Start();
  1953  0CF9  120A  158A  202E  120A  158A  	fcall	_I2C_Master_Send_Start
  1954                           
  1955                           ;EEPROM.c: 54:     while(I2C_Master_WriteByte(0xA0 | ((address & 0x0700)>>7)) )
  1956  0CFE  2D04               	goto	l28
  1957  0CFF                     l2706:
  1958                           
  1959                           ;EEPROM.c: 55:         I2C_Master_Send_RepeatedStart();
  1960  0CFF  120A  158A  2025  120A  158A  	fcall	_I2C_Master_Send_RepeatedStart
  1961  0D04                     l28:
  1962                           
  1963                           ;EEPROM.c: 54:     while(I2C_Master_WriteByte(0xA0 | ((address & 0x0700)>>7)) )
  1964  0D04  1683               	bsf	3,5	;RP0=1, select bank1
  1965  0D05  1303               	bcf	3,6	;RP1=0, select bank1
  1966  0D06  0823               	movf	(EEPROM_ReadByte@address+1)^(0+128),w
  1967  0D07  00A5               	movwf	(??_EEPROM_ReadByte^(0+128)+1)
  1968  0D08  0822               	movf	EEPROM_ReadByte@address^(0+128),w
  1969  0D09  00A4               	movwf	??_EEPROM_ReadByte^(0+128)
  1970  0D0A  3007               	movlw	7
  1971  0D0B                     u1995:
  1972  0D0B  1003               	clrc
  1973  0D0C  0CA5               	rrf	(??_EEPROM_ReadByte^(0+128)+1),f
  1974  0D0D  0CA4               	rrf	??_EEPROM_ReadByte^(0+128),f
  1975  0D0E  3EFF               	addlw	-1
  1976  0D0F  1D03               	skipz
  1977  0D10  2D0B               	goto	u1995
  1978  0D11  0824               	movf	??_EEPROM_ReadByte^(0+128),w
  1979  0D12  390E               	andlw	14
  1980  0D13  38A0               	iorlw	160
  1981  0D14  120A  158A  2129  120A  158A  	fcall	_I2C_Master_WriteByte
  1982  0D19  3A00               	xorlw	0
  1983  0D1A  1D03               	skipz
  1984  0D1B  2D1D               	goto	u2001
  1985  0D1C  2D1E               	goto	u2000
  1986  0D1D                     u2001:
  1987  0D1D  2CFF               	goto	l2706
  1988  0D1E                     u2000:
  1989  0D1E                     l2708:
  1990                           
  1991                           ;EEPROM.c: 58:     I2C_Master_WriteByte((uint8_t)address);
  1992  0D1E  1683               	bsf	3,5	;RP0=1, select bank1
  1993  0D1F  1303               	bcf	3,6	;RP1=0, select bank1
  1994  0D20  0822               	movf	EEPROM_ReadByte@address^(0+128),w
  1995  0D21  120A  158A  2129  120A  158A  	fcall	_I2C_Master_WriteByte
  1996                           
  1997                           ;EEPROM.c: 60:     I2C_Master_Send_RepeatedStart();
  1998  0D26  120A  158A  2025  120A  158A  	fcall	_I2C_Master_Send_RepeatedStart
  1999                           
  2000                           ;EEPROM.c: 61:     I2C_Master_WriteByte(0xA1 | ((address & 0x0700)>>7));
  2001  0D2B  1683               	bsf	3,5	;RP0=1, select bank1
  2002  0D2C  1303               	bcf	3,6	;RP1=0, select bank1
  2003  0D2D  0823               	movf	(EEPROM_ReadByte@address+1)^(0+128),w
  2004  0D2E  00A5               	movwf	(??_EEPROM_ReadByte^(0+128)+1)
  2005  0D2F  0822               	movf	EEPROM_ReadByte@address^(0+128),w
  2006  0D30  00A4               	movwf	??_EEPROM_ReadByte^(0+128)
  2007  0D31  3007               	movlw	7
  2008  0D32                     u2015:
  2009  0D32  1003               	clrc
  2010  0D33  0CA5               	rrf	(??_EEPROM_ReadByte^(0+128)+1),f
  2011  0D34  0CA4               	rrf	??_EEPROM_ReadByte^(0+128),f
  2012  0D35  3EFF               	addlw	-1
  2013  0D36  1D03               	skipz
  2014  0D37  2D32               	goto	u2015
  2015  0D38  0824               	movf	??_EEPROM_ReadByte^(0+128),w
  2016  0D39  390E               	andlw	14
  2017  0D3A  38A1               	iorlw	161
  2018  0D3B  120A  158A  2129  120A  158A  	fcall	_I2C_Master_WriteByte
  2019  0D40                     l2710:
  2020                           
  2021                           ;EEPROM.c: 63:     data=I2C_Master_ReadByte(I2C_STOP_READING);
  2022  0D40  3001               	movlw	1
  2023  0D41  120A  158A  2194  120A  158A  	fcall	_I2C_Master_ReadByte
  2024  0D46  00FF               	movwf	btemp+1
  2025  0D47  087F               	movf	btemp+1,w
  2026  0D48  1683               	bsf	3,5	;RP0=1, select bank1
  2027  0D49  1303               	bcf	3,6	;RP1=0, select bank1
  2028  0D4A  00A6               	movwf	EEPROM_ReadByte@data^(0+128)
  2029  0D4B                     l2712:
  2030                           
  2031                           ;EEPROM.c: 64:     I2C_Master_Send_Stop();
  2032  0D4B  120A  158A  2037  120A  158A  	fcall	_I2C_Master_Send_Stop
  2033  0D50                     l2714:
  2034                           
  2035                           ;EEPROM.c: 66:     return data;
  2036  0D50  1683               	bsf	3,5	;RP0=1, select bank1
  2037  0D51  1303               	bcf	3,6	;RP1=0, select bank1
  2038  0D52  0826               	movf	EEPROM_ReadByte@data^(0+128),w
  2039  0D53                     l31:
  2040  0D53  0008               	return
  2041  0D54                     __end_of_EEPROM_ReadByte:
  2042                           
  2043                           	psect	text4
  2044  0994                     __ptext4:	
  2045 ;; *************** function _I2C_Master_ReadByte *****************
  2046 ;; Defined at:
  2047 ;;		line 110 in file "i2c.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;  Read_State      1    wreg     enum E881
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;  Read_State      1    1[BANK1 ] enum E881
  2052 ;;  data            1    0        unsigned char 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  1    wreg      unsigned char 
  2055 ;; Registers used:
  2056 ;;		wreg, status,2, status,0, pclath, cstack
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2062 ;;      Params:         0       0       0       0       0
  2063 ;;      Locals:         0       0       2       0       0
  2064 ;;      Temps:          0       0       0       0       0
  2065 ;;      Totals:         0       0       2       0       0
  2066 ;;Total ram usage:        2 bytes
  2067 ;; Hardware stack levels used:    1
  2068 ;; Hardware stack levels required when called:    5
  2069 ;; This function calls:
  2070 ;;		_I2C_Master_Send_ACK
  2071 ;;		_I2C_Master_Send_NACK
  2072 ;;		_I2C_Wait_IDLE
  2073 ;; This function is called by:
  2074 ;;		_EEPROM_ReadByte
  2075 ;;		_EEPROM_ReadPage
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           
  2080                           ;psect for function _I2C_Master_ReadByte
  2081  0994                     _I2C_Master_ReadByte:
  2082                           
  2083                           ;incstack = 0
  2084 ;; hardware stack exceeded
  2085                           ; Regs used in _I2C_Master_ReadByte: [wreg+status,2+status,0+pclath+cstack]
  2086                           ;I2C_Master_ReadByte@Read_State stored from wreg
  2087  0994  1683               	bsf	3,5	;RP0=1, select bank1
  2088  0995  1303               	bcf	3,6	;RP1=0, select bank1
  2089  0996  00A1               	movwf	I2C_Master_ReadByte@Read_State^(0+128)
  2090  0997                     l2630:
  2091                           
  2092                           ;i2c.c: 110: uint8_t I2C_Master_ReadByte(tI2C_ReadingState Read_State);i2c.c: 111: {;i2c
      +                          .c: 113:     uint8_t data;;i2c.c: 115:     I2C_Wait_IDLE();
  2093  0997  120A  158A  2091  120A  158A  	fcall	_I2C_Wait_IDLE
  2094  099C                     l2632:
  2095                           
  2096                           ;i2c.c: 116:     RCEN=1;
  2097  099C  1683               	bsf	3,5	;RP0=1, select bank1
  2098  099D  1303               	bcf	3,6	;RP1=0, select bank1
  2099  099E  1591               	bsf	17,3	;volatile
  2100                           
  2101                           ;i2c.c: 117:     I2C_Wait_IDLE();
  2102  099F  120A  158A  2091  120A  158A  	fcall	_I2C_Wait_IDLE
  2103  09A4                     l2634:
  2104  09A4  1283               	bcf	3,5	;RP0=0, select bank0
  2105  09A5  1303               	bcf	3,6	;RP1=0, select bank0
  2106  09A6  0813               	movf	19,w	;volatile
  2107  09A7                     l2636:
  2108                           
  2109                           ;i2c.c: 120:     if(Read_State==I2C_STOP_READING)
  2110  09A7  1683               	bsf	3,5	;RP0=1, select bank1
  2111  09A8  1303               	bcf	3,6	;RP1=0, select bank1
  2112  09A9  0321               	decf	I2C_Master_ReadByte@Read_State^(0+128),w
  2113  09AA  1D03               	btfss	3,2
  2114  09AB  29AD               	goto	u1921
  2115  09AC  29AE               	goto	u1920
  2116  09AD                     u1921:
  2117  09AD  29B4               	goto	l2640
  2118  09AE                     u1920:
  2119  09AE                     l2638:
  2120                           
  2121                           ;i2c.c: 121:         I2C_Master_Send_NACK();
  2122  09AE  120A  158A  2066  120A  158A  	fcall	_I2C_Master_Send_NACK
  2123  09B3  29B9               	goto	l2642
  2124  09B4                     l2640:
  2125                           
  2126                           ;i2c.c: 123:         I2C_Master_Send_ACK();
  2127  09B4  120A  158A  205C  120A  158A  	fcall	_I2C_Master_Send_ACK
  2128  09B9                     l2642:
  2129                           
  2130                           ;i2c.c: 125:     return SSPBUF ;
  2131  09B9  1283               	bcf	3,5	;RP0=0, select bank0
  2132  09BA  1303               	bcf	3,6	;RP1=0, select bank0
  2133  09BB  0813               	movf	19,w	;volatile
  2134  09BC                     l120:
  2135  09BC  0008               	return
  2136  09BD                     __end_of_I2C_Master_ReadByte:
  2137                           
  2138                           	psect	text5
  2139  0866                     __ptext5:	
  2140 ;; *************** function _I2C_Master_Send_NACK *****************
  2141 ;; Defined at:
  2142 ;;		line 92 in file "i2c.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;		None
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;		None
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  1    wreg      void 
  2149 ;; Registers used:
  2150 ;;		wreg, status,2, status,0, pclath, cstack
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2156 ;;      Params:         0       0       0       0       0
  2157 ;;      Locals:         0       0       0       0       0
  2158 ;;      Temps:          0       0       0       0       0
  2159 ;;      Totals:         0       0       0       0       0
  2160 ;;Total ram usage:        0 bytes
  2161 ;; Hardware stack levels used:    1
  2162 ;; Hardware stack levels required when called:    4
  2163 ;; This function calls:
  2164 ;;		_I2C_Wait_IDLE
  2165 ;; This function is called by:
  2166 ;;		_I2C_Master_ReadByte
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           
  2171                           ;psect for function _I2C_Master_Send_NACK
  2172  0866                     _I2C_Master_Send_NACK:
  2173  0866                     l2602:	
  2174                           ;incstack = 0
  2175 ;; hardware stack exceeded
  2176                           ; Regs used in _I2C_Master_Send_NACK: [wreg+status,2+status,0+pclath+cstack]
  2177                           
  2178                           
  2179                           ;i2c.c: 95:     I2C_Wait_IDLE();
  2180  0866  120A  158A  2091  120A  158A  	fcall	_I2C_Wait_IDLE
  2181  086B                     l2604:
  2182                           
  2183                           ;i2c.c: 97:     ACKDT=1;
  2184  086B  1683               	bsf	3,5	;RP0=1, select bank1
  2185  086C  1303               	bcf	3,6	;RP1=0, select bank1
  2186  086D  1691               	bsf	17,5	;volatile
  2187  086E                     l2606:
  2188                           
  2189                           ;i2c.c: 98:     ACKEN=1;
  2190  086E  1611               	bsf	17,4	;volatile
  2191  086F                     l109:
  2192  086F  0008               	return
  2193  0870                     __end_of_I2C_Master_Send_NACK:
  2194                           
  2195                           	psect	text6
  2196  085C                     __ptext6:	
  2197 ;; *************** function _I2C_Master_Send_ACK *****************
  2198 ;; Defined at:
  2199 ;;		line 84 in file "i2c.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;		None
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;		None
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      void 
  2206 ;; Registers used:
  2207 ;;		wreg, status,2, status,0, pclath, cstack
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2213 ;;      Params:         0       0       0       0       0
  2214 ;;      Locals:         0       0       0       0       0
  2215 ;;      Temps:          0       0       0       0       0
  2216 ;;      Totals:         0       0       0       0       0
  2217 ;;Total ram usage:        0 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; Hardware stack levels required when called:    4
  2220 ;; This function calls:
  2221 ;;		_I2C_Wait_IDLE
  2222 ;; This function is called by:
  2223 ;;		_I2C_Master_ReadByte
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227                           
  2228                           ;psect for function _I2C_Master_Send_ACK
  2229  085C                     _I2C_Master_Send_ACK:
  2230  085C                     l2596:	
  2231                           ;incstack = 0
  2232 ;; hardware stack exceeded
  2233                           ; Regs used in _I2C_Master_Send_ACK: [wreg+status,2+status,0+pclath+cstack]
  2234                           
  2235                           
  2236                           ;i2c.c: 87:     I2C_Wait_IDLE();
  2237  085C  120A  158A  2091  120A  158A  	fcall	_I2C_Wait_IDLE
  2238  0861                     l2598:
  2239                           
  2240                           ;i2c.c: 89:     ACKDT=0;
  2241  0861  1683               	bsf	3,5	;RP0=1, select bank1
  2242  0862  1303               	bcf	3,6	;RP1=0, select bank1
  2243  0863  1291               	bcf	17,5	;volatile
  2244  0864                     l2600:
  2245                           
  2246                           ;i2c.c: 90:     ACKEN=1;
  2247  0864  1611               	bsf	17,4	;volatile
  2248  0865                     l106:
  2249  0865  0008               	return
  2250  0866                     __end_of_I2C_Master_Send_ACK:
  2251                           
  2252                           	psect	text7
  2253  0947                     __ptext7:	
  2254 ;; *************** function _EWH_Sleep_Mode *****************
  2255 ;; Defined at:
  2256 ;;		line 17 in file "EWH.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;		None
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;		None
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  1    wreg      void 
  2263 ;; Registers used:
  2264 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2270 ;;      Params:         0       0       0       0       0
  2271 ;;      Locals:         0       0       0       0       0
  2272 ;;      Temps:          0       0       0       0       0
  2273 ;;      Totals:         0       0       0       0       0
  2274 ;;Total ram usage:        0 bytes
  2275 ;; Hardware stack levels used:    1
  2276 ;; Hardware stack levels required when called:    6
  2277 ;; This function calls:
  2278 ;;		_DD_SetState
  2279 ;;		_EWH_SSD_OFF
  2280 ;;		_TMR1_Stop
  2281 ;; This function is called by:
  2282 ;;		_main
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           
  2287                           ;psect for function _EWH_Sleep_Mode
  2288  0947                     _EWH_Sleep_Mode:
  2289  0947                     l3086:	
  2290                           ;incstack = 0
  2291                           ; Regs used in _EWH_Sleep_Mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2292                           
  2293                           
  2294                           ;EWH.c: 23:     EWH_SSD_OFF();
  2295  0947  120A  158A  209E  120A  158A  	fcall	_EWH_SSD_OFF
  2296                           
  2297                           ;EWH.c: 25:     DD_SetState(HEATER,OFF);
  2298  094C  1683               	bsf	3,5	;RP0=1, select bank1
  2299  094D  1303               	bcf	3,6	;RP1=0, select bank1
  2300  094E  01A0               	clrf	DD_SetState@state^(0+128)
  2301  094F  3000               	movlw	0
  2302  0950  120A  158A  249F  120A  158A  	fcall	_DD_SetState
  2303                           
  2304                           ;EWH.c: 27:     DD_SetState(COOLER,OFF);
  2305  0955  1683               	bsf	3,5	;RP0=1, select bank1
  2306  0956  1303               	bcf	3,6	;RP1=0, select bank1
  2307  0957  01A0               	clrf	DD_SetState@state^(0+128)
  2308  0958  3001               	movlw	1
  2309  0959  120A  158A  249F  120A  158A  	fcall	_DD_SetState
  2310                           
  2311                           ;EWH.c: 29:     DD_SetState(HEATER_LED,OFF);
  2312  095E  1683               	bsf	3,5	;RP0=1, select bank1
  2313  095F  1303               	bcf	3,6	;RP1=0, select bank1
  2314  0960  01A0               	clrf	DD_SetState@state^(0+128)
  2315  0961  3002               	movlw	2
  2316  0962  120A  158A  249F  120A  158A  	fcall	_DD_SetState
  2317  0967                     l3088:
  2318                           
  2319                           ;EWH.c: 31:     TMR1_Stop();
  2320  0967  120A  158A  2001  120A  158A  	fcall	_TMR1_Stop
  2321  096C                     l495:
  2322  096C  0008               	return
  2323  096D                     __end_of_EWH_Sleep_Mode:
  2324                           
  2325                           	psect	text8
  2326  05D7                     __ptext8:	
  2327 ;; *************** function _EWH_SetTemp_Mode *****************
  2328 ;; Defined at:
  2329 ;;		line 99 in file "EWH.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;		None
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;		None
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  1    wreg      void 
  2336 ;; Registers used:
  2337 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2343 ;;      Params:         0       0       0       0       0
  2344 ;;      Locals:         0       0       0       0       0
  2345 ;;      Temps:          0       0       2       0       0
  2346 ;;      Totals:         0       0       2       0       0
  2347 ;;Total ram usage:        2 bytes
  2348 ;; Hardware stack levels used:    1
  2349 ;; Hardware stack levels required when called:    7
  2350 ;; This function calls:
  2351 ;;		_DD_SetState
  2352 ;;		_EWH_ClearEvent
  2353 ;;		_EWH_EEPROM_Update
  2354 ;;		_EWH_SSD_OFF
  2355 ;;		_EWH_SSD_Update
  2356 ;;		_EWH_SetMode
  2357 ;;		_TMR1_Start
  2358 ;; This function is called by:
  2359 ;;		_main
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363                           
  2364                           ;psect for function _EWH_SetTemp_Mode
  2365  05D7                     _EWH_SetTemp_Mode:
  2366  05D7                     l3186:	
  2367                           ;incstack = 0
  2368                           ; Regs used in _EWH_SetTemp_Mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2369                           
  2370                           
  2371                           ;EWH.c: 106:     TMR1_Start();
  2372  05D7  120A  158A  20BB  120A  118A  	fcall	_TMR1_Start
  2373  05DC                     l3188:
  2374                           
  2375                           ;EWH.c: 108:     NoPress_Sec_count=0;
  2376  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  2377  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  2378  05DE  01D3               	clrf	_NoPress_Sec_count
  2379  05DF                     l3190:
  2380                           
  2381                           ;EWH.c: 110:     DD_SetState(HEATER,OFF);
  2382  05DF  1683               	bsf	3,5	;RP0=1, select bank1
  2383  05E0  1303               	bcf	3,6	;RP1=0, select bank1
  2384  05E1  01A0               	clrf	DD_SetState@state^(0+128)
  2385  05E2  3000               	movlw	0
  2386  05E3  120A  158A  249F  120A  118A  	fcall	_DD_SetState
  2387  05E8                     l3192:
  2388                           
  2389                           ;EWH.c: 111:     DD_SetState(COOLER,OFF);
  2390  05E8  1683               	bsf	3,5	;RP0=1, select bank1
  2391  05E9  1303               	bcf	3,6	;RP1=0, select bank1
  2392  05EA  01A0               	clrf	DD_SetState@state^(0+128)
  2393  05EB  3001               	movlw	1
  2394  05EC  120A  158A  249F  120A  118A  	fcall	_DD_SetState
  2395  05F1                     l3194:
  2396                           
  2397                           ;EWH.c: 112:     DD_SetState(HEATER_LED,OFF);
  2398  05F1  1683               	bsf	3,5	;RP0=1, select bank1
  2399  05F2  1303               	bcf	3,6	;RP1=0, select bank1
  2400  05F3  01A0               	clrf	DD_SetState@state^(0+128)
  2401  05F4  3002               	movlw	2
  2402  05F5  120A  158A  249F  120A  118A  	fcall	_DD_SetState
  2403  05FA                     l3196:
  2404                           
  2405                           ;EWH.c: 114:     EWH_SSD_Update(set_Temp);
  2406  05FA  1683               	bsf	3,5	;RP0=1, select bank1
  2407  05FB  1303               	bcf	3,6	;RP1=0, select bank1
  2408  05FC  0849               	movf	_set_Temp^(0+128),w
  2409  05FD  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2410  05FE  01AF               	clrf	(??_EWH_SetTemp_Mode^(0+128)+1)
  2411  05FF  082E               	movf	??_EWH_SetTemp_Mode^(0+128),w
  2412  0600  00AA               	movwf	EWH_SSD_Update@temp^(0+128)
  2413  0601  082F               	movf	(??_EWH_SetTemp_Mode+1)^(0+128),w
  2414  0602  00AB               	movwf	(EWH_SSD_Update@temp+1)^(0+128)
  2415  0603  120A  158A  2554  120A  118A  	fcall	_EWH_SSD_Update
  2416  0608                     l3198:
  2417                           
  2418                           ;EWH.c: 117:     {;EWH.c: 118:         if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED) && set_
      +                          Temp<75)
  2419  0608  1283               	bcf	3,5	;RP0=0, select bank0
  2420  0609  1303               	bcf	3,6	;RP1=0, select bank0
  2421  060A  0806               	movf	6,w	;volatile
  2422  060B  1683               	bsf	3,5	;RP0=1, select bank1
  2423  060C  1303               	bcf	3,6	;RP1=0, select bank1
  2424  060D  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2425  060E  3002               	movlw	2
  2426  060F                     u2675:
  2427  060F  1003               	clrc
  2428  0610  0CAE               	rrf	??_EWH_SetTemp_Mode^(0+128),f
  2429  0611  3EFF               	addlw	-1
  2430  0612  1D03               	skipz
  2431  0613  2E0F               	goto	u2675
  2432  0614  182E               	btfsc	??_EWH_SetTemp_Mode^(0+128),0
  2433  0615  2E17               	goto	u2681
  2434  0616  2E18               	goto	u2680
  2435  0617                     u2681:
  2436  0617  2E41               	goto	l3210
  2437  0618                     u2680:
  2438  0618                     l3200:
  2439  0618  304B               	movlw	75
  2440  0619  0249               	subwf	_set_Temp^(0+128),w
  2441  061A  1803               	skipnc
  2442  061B  2E1D               	goto	u2691
  2443  061C  2E1E               	goto	u2690
  2444  061D                     u2691:
  2445  061D  2E41               	goto	l3210
  2446  061E                     u2690:
  2447  061E                     l3202:
  2448                           
  2449                           ;EWH.c: 119:         {;EWH.c: 120:             _delay((unsigned long)((50)*(4000000/4000
      +                          .0)));
  2450  061E  3041               	movlw	65
  2451  061F  1683               	bsf	3,5	;RP0=1, select bank1
  2452  0620  1303               	bcf	3,6	;RP1=0, select bank1
  2453  0621  00AF               	movwf	(??_EWH_SetTemp_Mode^(0+128)+1)
  2454  0622  30ED               	movlw	237
  2455  0623  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2456  0624                     u3787:
  2457  0624  0BAE               	decfsz	??_EWH_SetTemp_Mode^(0+128),f
  2458  0625  2E24               	goto	u3787
  2459  0626  0BAF               	decfsz	(??_EWH_SetTemp_Mode^(0+128)+1),f
  2460  0627  2E24               	goto	u3787
  2461  0628  2E29               	nop2
  2462  0629                     l3204:
  2463                           
  2464                           ;EWH.c: 121:             if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED))
  2465  0629  1283               	bcf	3,5	;RP0=0, select bank0
  2466  062A  1303               	bcf	3,6	;RP1=0, select bank0
  2467  062B  0806               	movf	6,w	;volatile
  2468  062C  1683               	bsf	3,5	;RP0=1, select bank1
  2469  062D  1303               	bcf	3,6	;RP1=0, select bank1
  2470  062E  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2471  062F  3002               	movlw	2
  2472  0630                     u2705:
  2473  0630  1003               	clrc
  2474  0631  0CAE               	rrf	??_EWH_SetTemp_Mode^(0+128),f
  2475  0632  3EFF               	addlw	-1
  2476  0633  1D03               	skipz
  2477  0634  2E30               	goto	u2705
  2478  0635  182E               	btfsc	??_EWH_SetTemp_Mode^(0+128),0
  2479  0636  2E38               	goto	u2711
  2480  0637  2E39               	goto	u2710
  2481  0638                     u2711:
  2482  0638  2E75               	goto	l3222
  2483  0639                     u2710:
  2484  0639                     l3206:
  2485                           
  2486                           ;EWH.c: 122:             {;EWH.c: 123:                 set_Temp+=5;
  2487  0639  3005               	movlw	5
  2488  063A  00FF               	movwf	btemp+1
  2489  063B  087F               	movf	btemp+1,w
  2490  063C  07C9               	addwf	_set_Temp^(0+128),f
  2491  063D                     l3208:
  2492                           
  2493                           ;EWH.c: 124:                 NoPress_Sec_count=0;
  2494  063D  1283               	bcf	3,5	;RP0=0, select bank0
  2495  063E  1303               	bcf	3,6	;RP1=0, select bank0
  2496  063F  01D3               	clrf	_NoPress_Sec_count
  2497  0640  2E75               	goto	l3222
  2498  0641                     l3210:
  2499  0641  1283               	bcf	3,5	;RP0=0, select bank0
  2500  0642  1303               	bcf	3,6	;RP1=0, select bank0
  2501  0643  0806               	movf	6,w	;volatile
  2502  0644  1683               	bsf	3,5	;RP0=1, select bank1
  2503  0645  1303               	bcf	3,6	;RP1=0, select bank1
  2504  0646  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2505  0647  3001               	movlw	1
  2506  0648                     u2725:
  2507  0648  1003               	clrc
  2508  0649  0CAE               	rrf	??_EWH_SetTemp_Mode^(0+128),f
  2509  064A  3EFF               	addlw	-1
  2510  064B  1D03               	skipz
  2511  064C  2E48               	goto	u2725
  2512  064D  182E               	btfsc	??_EWH_SetTemp_Mode^(0+128),0
  2513  064E  2E50               	goto	u2731
  2514  064F  2E51               	goto	u2730
  2515  0650                     u2731:
  2516  0650  2E75               	goto	l3222
  2517  0651                     u2730:
  2518  0651                     l3212:
  2519  0651  3024               	movlw	36
  2520  0652  0249               	subwf	_set_Temp^(0+128),w
  2521  0653  1C03               	skipc
  2522  0654  2E56               	goto	u2741
  2523  0655  2E57               	goto	u2740
  2524  0656                     u2741:
  2525  0656  2E75               	goto	l3222
  2526  0657                     u2740:
  2527  0657                     l3214:
  2528                           
  2529                           ;EWH.c: 128:         {;EWH.c: 129:             _delay((unsigned long)((50)*(4000000/4000
      +                          .0)));
  2530  0657  3041               	movlw	65
  2531  0658  1683               	bsf	3,5	;RP0=1, select bank1
  2532  0659  1303               	bcf	3,6	;RP1=0, select bank1
  2533  065A  00AF               	movwf	(??_EWH_SetTemp_Mode^(0+128)+1)
  2534  065B  30ED               	movlw	237
  2535  065C  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2536  065D                     u3797:
  2537  065D  0BAE               	decfsz	??_EWH_SetTemp_Mode^(0+128),f
  2538  065E  2E5D               	goto	u3797
  2539  065F  0BAF               	decfsz	(??_EWH_SetTemp_Mode^(0+128)+1),f
  2540  0660  2E5D               	goto	u3797
  2541  0661  2E62               	nop2
  2542  0662                     l3216:
  2543                           
  2544                           ;EWH.c: 130:             if((!((PORTB & (1<<1)) >> 1)==SW_PRESSED))
  2545  0662  1283               	bcf	3,5	;RP0=0, select bank0
  2546  0663  1303               	bcf	3,6	;RP1=0, select bank0
  2547  0664  0806               	movf	6,w	;volatile
  2548  0665  1683               	bsf	3,5	;RP0=1, select bank1
  2549  0666  1303               	bcf	3,6	;RP1=0, select bank1
  2550  0667  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2551  0668  3001               	movlw	1
  2552  0669                     u2755:
  2553  0669  1003               	clrc
  2554  066A  0CAE               	rrf	??_EWH_SetTemp_Mode^(0+128),f
  2555  066B  3EFF               	addlw	-1
  2556  066C  1D03               	skipz
  2557  066D  2E69               	goto	u2755
  2558  066E  182E               	btfsc	??_EWH_SetTemp_Mode^(0+128),0
  2559  066F  2E71               	goto	u2761
  2560  0670  2E72               	goto	u2760
  2561  0671                     u2761:
  2562  0671  2E75               	goto	l3222
  2563  0672                     u2760:
  2564  0672                     l3218:
  2565                           
  2566                           ;EWH.c: 131:             {;EWH.c: 132:                 set_Temp-=5;
  2567  0672  3005               	movlw	5
  2568  0673  02C9               	subwf	_set_Temp^(0+128),f
  2569  0674  2E3D               	goto	l3208
  2570  0675                     l3222:
  2571                           
  2572                           ;EWH.c: 137:         if(SSD_Blink_flag)
  2573  0675  1683               	bsf	3,5	;RP0=1, select bank1
  2574  0676  1303               	bcf	3,6	;RP1=0, select bank1
  2575  0677  0846               	movf	_SSD_Blink_flag^(0+128),w
  2576  0678  1903               	btfsc	3,2
  2577  0679  2E7B               	goto	u2771
  2578  067A  2E7C               	goto	u2770
  2579  067B                     u2771:
  2580  067B  2E89               	goto	l3226
  2581  067C                     u2770:
  2582  067C                     l3224:
  2583                           
  2584                           ;EWH.c: 138:         {;EWH.c: 139:             EWH_SSD_Update(set_Temp);
  2585  067C  0849               	movf	_set_Temp^(0+128),w
  2586  067D  00AE               	movwf	??_EWH_SetTemp_Mode^(0+128)
  2587  067E  01AF               	clrf	(??_EWH_SetTemp_Mode^(0+128)+1)
  2588  067F  082E               	movf	??_EWH_SetTemp_Mode^(0+128),w
  2589  0680  00AA               	movwf	EWH_SSD_Update@temp^(0+128)
  2590  0681  082F               	movf	(??_EWH_SetTemp_Mode+1)^(0+128),w
  2591  0682  00AB               	movwf	(EWH_SSD_Update@temp+1)^(0+128)
  2592  0683  120A  158A  2554  120A  118A  	fcall	_EWH_SSD_Update
  2593                           
  2594                           ;EWH.c: 140:         }
  2595  0688  2E8E               	goto	l3228
  2596  0689                     l3226:
  2597                           
  2598                           ;EWH.c: 142:         {;EWH.c: 143:             EWH_SSD_OFF();
  2599  0689  120A  158A  209E  120A  118A  	fcall	_EWH_SSD_OFF
  2600  068E                     l3228:
  2601                           
  2602                           ;EWH.c: 147:         if(EWH_Events[0]==1)
  2603  068E  1683               	bsf	3,5	;RP0=1, select bank1
  2604  068F  1303               	bcf	3,6	;RP1=0, select bank1
  2605  0690  033D               	decf	_EWH_Events^(0+128),w
  2606  0691  1D03               	btfss	3,2
  2607  0692  2E94               	goto	u2781
  2608  0693  2E95               	goto	u2780
  2609  0694                     u2781:
  2610  0694  2EA8               	goto	l3236
  2611  0695                     u2780:
  2612  0695                     l3230:
  2613                           
  2614                           ;EWH.c: 148:         {;EWH.c: 150:             EWH_EEPROM_Update(set_Temp);
  2615  0695  0849               	movf	_set_Temp^(0+128),w
  2616  0696  120A  158A  20CB  120A  118A  	fcall	_EWH_EEPROM_Update
  2617  069B                     l3232:
  2618                           
  2619                           ;EWH.c: 152:             EWH_ClearEvent(0);
  2620  069B  3000               	movlw	0
  2621  069C  120A  158A  2049  120A  118A  	fcall	_EWH_ClearEvent
  2622  06A1                     l3234:
  2623                           
  2624                           ;EWH.c: 154:             EWH_SetMode(EWH_SLEEP_MODE);
  2625  06A1  3000               	movlw	0
  2626  06A2  120A  158A  2015  120A  118A  	fcall	_EWH_SetMode
  2627                           
  2628                           ;EWH.c: 156:             break ;
  2629  06A7  2EC7               	goto	l521
  2630  06A8                     l3236:
  2631                           
  2632                           ;EWH.c: 158:         if(EWH_Events[3]==1 && (EWH_Mode!=EWH_SLEEP_MODE))
  2633  06A8  0340               	decf	(_EWH_Events^(0+128)+3),w
  2634  06A9  1D03               	btfss	3,2
  2635  06AA  2EAC               	goto	u2791
  2636  06AB  2EAD               	goto	u2790
  2637  06AC                     u2791:
  2638  06AC  2E08               	goto	l3198
  2639  06AD                     u2790:
  2640  06AD                     l3238:
  2641  06AD  084A               	movf	_EWH_Mode^(0+128),w
  2642  06AE  1903               	btfsc	3,2
  2643  06AF  2EB1               	goto	u2801
  2644  06B0  2EB2               	goto	u2800
  2645  06B1                     u2801:
  2646  06B1  2E08               	goto	l3198
  2647  06B2                     u2800:
  2648  06B2                     l3240:
  2649                           
  2650                           ;EWH.c: 159:         {;EWH.c: 161:             EWH_EEPROM_Update(set_Temp);
  2651  06B2  0849               	movf	_set_Temp^(0+128),w
  2652  06B3  120A  158A  20CB  120A  118A  	fcall	_EWH_EEPROM_Update
  2653  06B8                     l3242:
  2654                           
  2655                           ;EWH.c: 163:             EWH_ClearEvent(3);
  2656  06B8  3003               	movlw	3
  2657  06B9  120A  158A  2049  120A  118A  	fcall	_EWH_ClearEvent
  2658  06BE                     l3244:
  2659                           
  2660                           ;EWH.c: 165:             NoPress_Sec_count=0;
  2661  06BE  1283               	bcf	3,5	;RP0=0, select bank0
  2662  06BF  1303               	bcf	3,6	;RP1=0, select bank0
  2663  06C0  01D3               	clrf	_NoPress_Sec_count
  2664  06C1                     l3246:
  2665                           
  2666                           ;EWH.c: 167:             EWH_SetMode(EWH_OPERATING_MODE);
  2667  06C1  3003               	movlw	3
  2668  06C2  120A  158A  2015  120A  118A  	fcall	_EWH_SetMode
  2669  06C7                     l521:	
  2670                           ;EWH.c: 169:             break ;
  2671                           
  2672  06C7  0008               	return
  2673  06C8                     __end_of_EWH_SetTemp_Mode:
  2674                           
  2675                           	psect	text9
  2676  089E                     __ptext9:	
  2677 ;; *************** function _EWH_SSD_OFF *****************
  2678 ;; Defined at:
  2679 ;;		line 332 in file "EWH.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;		None
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;		None
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  1    wreg      void 
  2686 ;; Registers used:
  2687 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2693 ;;      Params:         0       0       0       0       0
  2694 ;;      Locals:         0       0       0       0       0
  2695 ;;      Temps:          0       0       0       0       0
  2696 ;;      Totals:         0       0       0       0       0
  2697 ;;Total ram usage:        0 bytes
  2698 ;; Hardware stack levels used:    1
  2699 ;; Hardware stack levels required when called:    5
  2700 ;; This function calls:
  2701 ;;		_SSD_OFF
  2702 ;; This function is called by:
  2703 ;;		_EWH_Sleep_Mode
  2704 ;;		_EWH_SetTemp_Mode
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           
  2709                           ;psect for function _EWH_SSD_OFF
  2710  089E                     _EWH_SSD_OFF:
  2711  089E                     l3004:	
  2712                           ;incstack = 0
  2713                           ; Regs used in _EWH_SSD_OFF: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2714                           
  2715                           
  2716                           ;EWH.c: 334:     SSD_OFF(3);
  2717  089E  3003               	movlw	3
  2718  089F  120A  158A  207A  120A  158A  	fcall	_SSD_OFF
  2719                           
  2720                           ;EWH.c: 335:     SSD_OFF(4);
  2721  08A4  3004               	movlw	4
  2722  08A5  120A  158A  207A  120A  158A  	fcall	_SSD_OFF
  2723  08AA                     l564:
  2724  08AA  0008               	return
  2725  08AB                     __end_of_EWH_SSD_OFF:
  2726                           
  2727                           	psect	text10
  2728  08CB                     __ptext10:	
  2729 ;; *************** function _EWH_EEPROM_Update *****************
  2730 ;; Defined at:
  2731 ;;		line 318 in file "EWH.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;  newSetTemp      1    wreg     unsigned char 
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;  newSetTemp      1    6[BANK1 ] unsigned char 
  2736 ;; Return value:  Size  Location     Type
  2737 ;;                  1    wreg      void 
  2738 ;; Registers used:
  2739 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2740 ;; Tracked objects:
  2741 ;;		On entry : 0/0
  2742 ;;		On exit  : 0/0
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2745 ;;      Params:         0       0       0       0       0
  2746 ;;      Locals:         0       0       1       0       0
  2747 ;;      Temps:          0       0       0       0       0
  2748 ;;      Totals:         0       0       1       0       0
  2749 ;;Total ram usage:        1 bytes
  2750 ;; Hardware stack levels used:    1
  2751 ;; Hardware stack levels required when called:    6
  2752 ;; This function calls:
  2753 ;;		_EEPROM_WriteByte
  2754 ;; This function is called by:
  2755 ;;		_EWH_SetTemp_Mode
  2756 ;; This function uses a non-reentrant model
  2757 ;;
  2758                           
  2759                           
  2760                           ;psect for function _EWH_EEPROM_Update
  2761  08CB                     _EWH_EEPROM_Update:
  2762                           
  2763                           ;incstack = 0
  2764                           ; Regs used in _EWH_EEPROM_Update: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2765                           ;EWH_EEPROM_Update@newSetTemp stored from wreg
  2766  08CB  1683               	bsf	3,5	;RP0=1, select bank1
  2767  08CC  1303               	bcf	3,6	;RP1=0, select bank1
  2768  08CD  00A6               	movwf	EWH_EEPROM_Update@newSetTemp^(0+128)
  2769  08CE                     l3024:
  2770                           
  2771                           ;EWH.c: 318: void EWH_EEPROM_Update(uint8_t newSetTemp);EWH.c: 319: {;EWH.c: 320:     EE
      +                          PROM_WriteByte(0x0020,newSetTemp);
  2772  08CE  3020               	movlw	32
  2773  08CF  00A1               	movwf	EEPROM_WriteByte@address^(0+128)
  2774  08D0  3000               	movlw	0
  2775  08D1  00A2               	movwf	(EEPROM_WriteByte@address^(0+128)+1)
  2776  08D2  0826               	movf	EWH_EEPROM_Update@newSetTemp^(0+128),w
  2777  08D3  00FF               	movwf	btemp+1
  2778  08D4  087F               	movf	btemp+1,w
  2779  08D5  00A3               	movwf	EEPROM_WriteByte@data^(0+128)
  2780  08D6  120A  158A  2220  120A  158A  	fcall	_EEPROM_WriteByte
  2781  08DB                     l555:
  2782  08DB  0008               	return
  2783  08DC                     __end_of_EWH_EEPROM_Update:
  2784                           
  2785                           	psect	text11
  2786  0398                     __ptext11:	
  2787 ;; *************** function _EWH_Operating_Mode *****************
  2788 ;; Defined at:
  2789 ;;		line 175 in file "EWH.c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;		None
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;		None
  2794 ;; Return value:  Size  Location     Type
  2795 ;;                  1    wreg      void 
  2796 ;; Registers used:
  2797 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2803 ;;      Params:         0       0       0       0       0
  2804 ;;      Locals:         0       0       0       0       0
  2805 ;;      Temps:          0       0       3       0       0
  2806 ;;      Totals:         0       0       3       0       0
  2807 ;;Total ram usage:        3 bytes
  2808 ;; Hardware stack levels used:    1
  2809 ;; Hardware stack levels required when called:    6
  2810 ;; This function calls:
  2811 ;;		_DD_SetState
  2812 ;;		_EWH_ClearEvent
  2813 ;;		_EWH_SSD_Update
  2814 ;;		_EWH_SetEvent
  2815 ;;		_EWH_SetMode
  2816 ;;		_EWH_getAvrgTempReading
  2817 ;;		_TMR1_Start
  2818 ;;		_TMR1_Stop
  2819 ;; This function is called by:
  2820 ;;		_main
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           
  2825                           ;psect for function _EWH_Operating_Mode
  2826  0398                     _EWH_Operating_Mode:
  2827  0398                     l3122:	
  2828                           ;incstack = 0
  2829                           ; Regs used in _EWH_Operating_Mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2830                           
  2831                           
  2832                           ;EWH.c: 182:     TMR1_Start();
  2833  0398  120A  158A  20BB  120A  118A  	fcall	_TMR1_Start
  2834  039D                     l3124:
  2835                           
  2836                           ;EWH.c: 185:     {;EWH.c: 186:         EWH_SSD_Update(current_Temp);
  2837  039D  1683               	bsf	3,5	;RP0=1, select bank1
  2838  039E  1303               	bcf	3,6	;RP1=0, select bank1
  2839  039F  0848               	movf	_current_Temp^(0+128),w
  2840  03A0  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  2841  03A1  01B1               	clrf	(??_EWH_Operating_Mode^(0+128)+1)
  2842  03A2  0830               	movf	??_EWH_Operating_Mode^(0+128),w
  2843  03A3  00AA               	movwf	EWH_SSD_Update@temp^(0+128)
  2844  03A4  0831               	movf	(??_EWH_Operating_Mode+1)^(0+128),w
  2845  03A5  00AB               	movwf	(EWH_SSD_Update@temp+1)^(0+128)
  2846  03A6  120A  158A  2554  120A  118A  	fcall	_EWH_SSD_Update
  2847  03AB                     l3126:
  2848                           
  2849                           ;EWH.c: 188:         if(TempReading_count==9)
  2850  03AB  3009               	movlw	9
  2851  03AC  1683               	bsf	3,5	;RP0=1, select bank1
  2852  03AD  1303               	bcf	3,6	;RP1=0, select bank1
  2853  03AE  0647               	xorwf	_TempReading_count^(0+128),w
  2854  03AF  1D03               	btfss	3,2
  2855  03B0  2BB2               	goto	u2521
  2856  03B1  2BB3               	goto	u2520
  2857  03B2                     u2521:
  2858  03B2  2BC4               	goto	l3132
  2859  03B3                     u2520:
  2860  03B3                     l3128:
  2861                           
  2862                           ;EWH.c: 189:         {;EWH.c: 190:             TempavgReading= EWH_getAvrgTempReading(Re
      +                          adingBuffer,10);
  2863  03B3  300A               	movlw	10
  2864  03B4  00FF               	movwf	btemp+1
  2865  03B5  087F               	movf	btemp+1,w
  2866  03B6  00A7               	movwf	EWH_getAvrgTempReading@length^(0+128)
  2867  03B7  30CB               	movlw	(low (_ReadingBuffer| 0))& (0+255)
  2868  03B8  120A  158A  21E8  120A  118A  	fcall	_EWH_getAvrgTempReading
  2869  03BD  00FF               	movwf	btemp+1
  2870  03BE  087F               	movf	btemp+1,w
  2871  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  2872  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  2873  03C1  00C4               	movwf	_TempavgReading^(0+128)
  2874  03C2                     l3130:
  2875                           
  2876                           ;EWH.c: 191:             ReadingBufferFull=TRUE;
  2877  03C2  01C5               	clrf	_ReadingBufferFull^(0+128)
  2878  03C3  0AC5               	incf	_ReadingBufferFull^(0+128),f
  2879  03C4                     l3132:
  2880                           
  2881                           ;EWH.c: 193:         if(ReadingBufferFull)
  2882  03C4  0845               	movf	_ReadingBufferFull^(0+128),w
  2883  03C5  1903               	btfsc	3,2
  2884  03C6  2BC8               	goto	u2531
  2885  03C7  2BC9               	goto	u2530
  2886  03C8                     u2531:
  2887  03C8  2C18               	goto	l3142
  2888  03C9                     u2530:
  2889  03C9                     l3134:
  2890                           
  2891                           ;EWH.c: 194:         {;EWH.c: 195:             if(TempavgReading>=(set_Temp+5))
  2892  03C9  0849               	movf	_set_Temp^(0+128),w
  2893  03CA  3E05               	addlw	5
  2894  03CB  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  2895  03CC  3000               	movlw	0
  2896  03CD  1803               	skipnc
  2897  03CE  3001               	movlw	1
  2898  03CF  00B1               	movwf	(??_EWH_Operating_Mode^(0+128)+1)
  2899  03D0  0831               	movf	(??_EWH_Operating_Mode+1)^(0+128),w
  2900  03D1  3A80               	xorlw	128
  2901  03D2  3C80               	sublw	128
  2902  03D3  1D03               	skipz
  2903  03D4  2BD7               	goto	u2545
  2904  03D5  0830               	movf	??_EWH_Operating_Mode^(0+128),w
  2905  03D6  0244               	subwf	_TempavgReading^(0+128),w
  2906  03D7                     u2545:
  2907  03D7  1C03               	skipc
  2908  03D8  2BDA               	goto	u2541
  2909  03D9  2BDB               	goto	u2540
  2910  03DA                     u2541:
  2911  03DA  2BEF               	goto	l3138
  2912  03DB                     u2540:
  2913  03DB                     l3136:
  2914                           
  2915                           ;EWH.c: 196:             {;EWH.c: 197:                 DD_SetState(HEATER,OFF);
  2916  03DB  1683               	bsf	3,5	;RP0=1, select bank1
  2917  03DC  1303               	bcf	3,6	;RP1=0, select bank1
  2918  03DD  01A0               	clrf	DD_SetState@state^(0+128)
  2919  03DE  3000               	movlw	0
  2920  03DF  120A  158A  249F  120A  118A  	fcall	_DD_SetState
  2921                           
  2922                           ;EWH.c: 198:                 DD_SetState(COOLER,ON);
  2923  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  2924  03E5  1303               	bcf	3,6	;RP1=0, select bank1
  2925  03E6  01A0               	clrf	DD_SetState@state^(0+128)
  2926  03E7  0AA0               	incf	DD_SetState@state^(0+128),f
  2927  03E8  3001               	movlw	1
  2928  03E9  120A  158A  249F  120A  118A  	fcall	_DD_SetState
  2929                           
  2930                           ;EWH.c: 199:             }
  2931  03EE  2C18               	goto	l3142
  2932  03EF                     l3138:
  2933  03EF  1683               	bsf	3,5	;RP0=1, select bank1
  2934  03F0  1303               	bcf	3,6	;RP1=0, select bank1
  2935  03F1  0849               	movf	_set_Temp^(0+128),w
  2936  03F2  3EFB               	addlw	251
  2937  03F3  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  2938  03F4  30FF               	movlw	255
  2939  03F5  1803               	skipnc
  2940  03F6  3000               	movlw	0
  2941  03F7  00B1               	movwf	(??_EWH_Operating_Mode^(0+128)+1)
  2942  03F8  0831               	movf	(??_EWH_Operating_Mode+1)^(0+128),w
  2943  03F9  3A80               	xorlw	128
  2944  03FA  00B2               	movwf	(??_EWH_Operating_Mode+2)^(0+128)
  2945  03FB  3080               	movlw	128
  2946  03FC  0232               	subwf	(??_EWH_Operating_Mode+2)^(0+128),w
  2947  03FD  1D03               	skipz
  2948  03FE  2C01               	goto	u2555
  2949  03FF  0844               	movf	_TempavgReading^(0+128),w
  2950  0400  0230               	subwf	??_EWH_Operating_Mode^(0+128),w
  2951  0401                     u2555:
  2952  0401  1C03               	skipc
  2953  0402  2C04               	goto	u2551
  2954  0403  2C05               	goto	u2550
  2955  0404                     u2551:
  2956  0404  2C18               	goto	l3142
  2957  0405                     u2550:
  2958  0405                     l3140:
  2959                           
  2960                           ;EWH.c: 201:             {;EWH.c: 202:                 DD_SetState(HEATER,ON);
  2961  0405  1683               	bsf	3,5	;RP0=1, select bank1
  2962  0406  1303               	bcf	3,6	;RP1=0, select bank1
  2963  0407  01A0               	clrf	DD_SetState@state^(0+128)
  2964  0408  0AA0               	incf	DD_SetState@state^(0+128),f
  2965  0409  3000               	movlw	0
  2966  040A  120A  158A  249F  120A  118A  	fcall	_DD_SetState
  2967                           
  2968                           ;EWH.c: 203:                 DD_SetState(COOLER,OFF);
  2969  040F  1683               	bsf	3,5	;RP0=1, select bank1
  2970  0410  1303               	bcf	3,6	;RP1=0, select bank1
  2971  0411  01A0               	clrf	DD_SetState@state^(0+128)
  2972  0412  3001               	movlw	1
  2973  0413  120A  158A  249F  120A  118A  	fcall	_DD_SetState
  2974  0418                     l3142:
  2975                           
  2976                           ;EWH.c: 208:         if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED) && (EWH_Mode!=EWH_SLEEP_M
      +                          ODE))
  2977  0418  1283               	bcf	3,5	;RP0=0, select bank0
  2978  0419  1303               	bcf	3,6	;RP1=0, select bank0
  2979  041A  0806               	movf	6,w	;volatile
  2980  041B  1683               	bsf	3,5	;RP0=1, select bank1
  2981  041C  1303               	bcf	3,6	;RP1=0, select bank1
  2982  041D  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  2983  041E  3002               	movlw	2
  2984  041F                     u2565:
  2985  041F  1003               	clrc
  2986  0420  0CB0               	rrf	??_EWH_Operating_Mode^(0+128),f
  2987  0421  3EFF               	addlw	-1
  2988  0422  1D03               	skipz
  2989  0423  2C1F               	goto	u2565
  2990  0424  1830               	btfsc	??_EWH_Operating_Mode^(0+128),0
  2991  0425  2C27               	goto	u2571
  2992  0426  2C28               	goto	u2570
  2993  0427                     u2571:
  2994  0427  2C63               	goto	l3160
  2995  0428                     u2570:
  2996  0428                     l3144:
  2997  0428  084A               	movf	_EWH_Mode^(0+128),w
  2998  0429  1903               	btfsc	3,2
  2999  042A  2C2C               	goto	u2581
  3000  042B  2C2D               	goto	u2580
  3001  042C                     u2581:
  3002  042C  2C63               	goto	l3160
  3003  042D                     u2580:
  3004  042D                     l3146:
  3005                           
  3006                           ;EWH.c: 209:         {;EWH.c: 210:             _delay((unsigned long)((50)*(4000000/4000
      +                          .0)));
  3007  042D  3041               	movlw	65
  3008  042E  1683               	bsf	3,5	;RP0=1, select bank1
  3009  042F  1303               	bcf	3,6	;RP1=0, select bank1
  3010  0430  00B1               	movwf	(??_EWH_Operating_Mode^(0+128)+1)
  3011  0431  30ED               	movlw	237
  3012  0432  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  3013  0433                     u3807:
  3014  0433  0BB0               	decfsz	??_EWH_Operating_Mode^(0+128),f
  3015  0434  2C33               	goto	u3807
  3016  0435  0BB1               	decfsz	(??_EWH_Operating_Mode^(0+128)+1),f
  3017  0436  2C33               	goto	u3807
  3018  0437  2C38               	nop2
  3019  0438                     l3148:
  3020                           
  3021                           ;EWH.c: 211:             if((!((PORTB & (1<<2)) >> 2)==SW_PRESSED))
  3022  0438  1283               	bcf	3,5	;RP0=0, select bank0
  3023  0439  1303               	bcf	3,6	;RP1=0, select bank0
  3024  043A  0806               	movf	6,w	;volatile
  3025  043B  1683               	bsf	3,5	;RP0=1, select bank1
  3026  043C  1303               	bcf	3,6	;RP1=0, select bank1
  3027  043D  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  3028  043E  3002               	movlw	2
  3029  043F                     u2595:
  3030  043F  1003               	clrc
  3031  0440  0CB0               	rrf	??_EWH_Operating_Mode^(0+128),f
  3032  0441  3EFF               	addlw	-1
  3033  0442  1D03               	skipz
  3034  0443  2C3F               	goto	u2595
  3035  0444  1830               	btfsc	??_EWH_Operating_Mode^(0+128),0
  3036  0445  2C47               	goto	u2601
  3037  0446  2C48               	goto	u2600
  3038  0447                     u2601:
  3039  0447  2C63               	goto	l3160
  3040  0448                     u2600:
  3041  0448                     l3150:
  3042                           
  3043                           ;EWH.c: 212:             {;EWH.c: 214:                 EWH_SetEvent(1);
  3044  0448  3001               	movlw	1
  3045  0449  120A  158A  2052  120A  118A  	fcall	_EWH_SetEvent
  3046  044E                     l3152:
  3047                           
  3048                           ;EWH.c: 216:                 TMR1_Stop();
  3049  044E  120A  158A  2001  120A  118A  	fcall	_TMR1_Stop
  3050  0453                     l3154:
  3051                           
  3052                           ;EWH.c: 218:                 EWH_ClearEvent(1);
  3053  0453  3001               	movlw	1
  3054  0454  120A  158A  2049  120A  118A  	fcall	_EWH_ClearEvent
  3055  0459                     l3156:
  3056                           
  3057                           ;EWH.c: 220:                 NoPress_Sec_count=0;
  3058  0459  1283               	bcf	3,5	;RP0=0, select bank0
  3059  045A  1303               	bcf	3,6	;RP1=0, select bank0
  3060  045B  01D3               	clrf	_NoPress_Sec_count
  3061  045C                     l3158:
  3062                           
  3063                           ;EWH.c: 222:                 EWH_SetMode(EWH_SET_TEMP_MODE);
  3064  045C  3002               	movlw	2
  3065  045D  120A  158A  2015  120A  118A  	fcall	_EWH_SetMode
  3066                           
  3067                           ;EWH.c: 224:                 break;
  3068  0462  2CCD               	goto	l537
  3069  0463                     l3160:
  3070                           
  3071                           ;EWH.c: 227:         if((!((PORTB & (1<<1)) >> 1)==SW_PRESSED) && (EWH_Mode!=EWH_SLEEP_M
      +                          ODE))
  3072  0463  1283               	bcf	3,5	;RP0=0, select bank0
  3073  0464  1303               	bcf	3,6	;RP1=0, select bank0
  3074  0465  0806               	movf	6,w	;volatile
  3075  0466  1683               	bsf	3,5	;RP0=1, select bank1
  3076  0467  1303               	bcf	3,6	;RP1=0, select bank1
  3077  0468  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  3078  0469  3001               	movlw	1
  3079  046A                     u2615:
  3080  046A  1003               	clrc
  3081  046B  0CB0               	rrf	??_EWH_Operating_Mode^(0+128),f
  3082  046C  3EFF               	addlw	-1
  3083  046D  1D03               	skipz
  3084  046E  2C6A               	goto	u2615
  3085  046F  1830               	btfsc	??_EWH_Operating_Mode^(0+128),0
  3086  0470  2C72               	goto	u2621
  3087  0471  2C73               	goto	u2620
  3088  0472                     u2621:
  3089  0472  2CAE               	goto	l3178
  3090  0473                     u2620:
  3091  0473                     l3162:
  3092  0473  084A               	movf	_EWH_Mode^(0+128),w
  3093  0474  1903               	btfsc	3,2
  3094  0475  2C77               	goto	u2631
  3095  0476  2C78               	goto	u2630
  3096  0477                     u2631:
  3097  0477  2CAE               	goto	l3178
  3098  0478                     u2630:
  3099  0478                     l3164:
  3100                           
  3101                           ;EWH.c: 228:         {;EWH.c: 229:             _delay((unsigned long)((50)*(4000000/4000
      +                          .0)));
  3102  0478  3041               	movlw	65
  3103  0479  1683               	bsf	3,5	;RP0=1, select bank1
  3104  047A  1303               	bcf	3,6	;RP1=0, select bank1
  3105  047B  00B1               	movwf	(??_EWH_Operating_Mode^(0+128)+1)
  3106  047C  30ED               	movlw	237
  3107  047D  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  3108  047E                     u3817:
  3109  047E  0BB0               	decfsz	??_EWH_Operating_Mode^(0+128),f
  3110  047F  2C7E               	goto	u3817
  3111  0480  0BB1               	decfsz	(??_EWH_Operating_Mode^(0+128)+1),f
  3112  0481  2C7E               	goto	u3817
  3113  0482  2C83               	nop2
  3114  0483                     l3166:
  3115                           
  3116                           ;EWH.c: 230:             if((!((PORTB & (1<<1)) >> 1)==SW_PRESSED))
  3117  0483  1283               	bcf	3,5	;RP0=0, select bank0
  3118  0484  1303               	bcf	3,6	;RP1=0, select bank0
  3119  0485  0806               	movf	6,w	;volatile
  3120  0486  1683               	bsf	3,5	;RP0=1, select bank1
  3121  0487  1303               	bcf	3,6	;RP1=0, select bank1
  3122  0488  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  3123  0489  3001               	movlw	1
  3124  048A                     u2645:
  3125  048A  1003               	clrc
  3126  048B  0CB0               	rrf	??_EWH_Operating_Mode^(0+128),f
  3127  048C  3EFF               	addlw	-1
  3128  048D  1D03               	skipz
  3129  048E  2C8A               	goto	u2645
  3130  048F  1830               	btfsc	??_EWH_Operating_Mode^(0+128),0
  3131  0490  2C92               	goto	u2651
  3132  0491  2C93               	goto	u2650
  3133  0492                     u2651:
  3134  0492  2CAE               	goto	l3178
  3135  0493                     u2650:
  3136  0493                     l3168:
  3137                           
  3138                           ;EWH.c: 231:             {;EWH.c: 233:                 EWH_SetEvent(2);
  3139  0493  3002               	movlw	2
  3140  0494  120A  158A  2052  120A  118A  	fcall	_EWH_SetEvent
  3141  0499                     l3170:
  3142                           
  3143                           ;EWH.c: 235:                 TMR1_Stop();
  3144  0499  120A  158A  2001  120A  118A  	fcall	_TMR1_Stop
  3145  049E                     l3172:
  3146                           
  3147                           ;EWH.c: 237:                 EWH_ClearEvent(2);
  3148  049E  3002               	movlw	2
  3149  049F  120A  158A  2049  120A  118A  	fcall	_EWH_ClearEvent
  3150  04A4                     l3174:
  3151                           
  3152                           ;EWH.c: 239:                 NoPress_Sec_count=0;
  3153  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  3154  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  3155  04A6  01D3               	clrf	_NoPress_Sec_count
  3156  04A7                     l3176:
  3157                           
  3158                           ;EWH.c: 241:                 EWH_SetMode(EWH_SET_TEMP_MODE);
  3159  04A7  3002               	movlw	2
  3160  04A8  120A  158A  2015  120A  118A  	fcall	_EWH_SetMode
  3161                           
  3162                           ;EWH.c: 243:                 break;
  3163  04AD  2CCD               	goto	l537
  3164  04AE                     l3178:
  3165                           
  3166                           ;EWH.c: 246:         if(EWH_Events[0]==1)
  3167  04AE  033D               	decf	_EWH_Events^(0+128),w
  3168  04AF  1D03               	btfss	3,2
  3169  04B0  2CB2               	goto	u2661
  3170  04B1  2CB3               	goto	u2660
  3171  04B2                     u2661:
  3172  04B2  2CC0               	goto	l3184
  3173  04B3                     u2660:
  3174  04B3                     l3180:
  3175                           
  3176                           ;EWH.c: 247:         {;EWH.c: 249:             EWH_ClearEvent(0);
  3177  04B3  3000               	movlw	0
  3178  04B4  120A  158A  2049  120A  118A  	fcall	_EWH_ClearEvent
  3179  04B9                     l3182:
  3180                           
  3181                           ;EWH.c: 251:             EWH_SetMode(EWH_SLEEP_MODE);
  3182  04B9  3000               	movlw	0
  3183  04BA  120A  158A  2015  120A  118A  	fcall	_EWH_SetMode
  3184                           
  3185                           ;EWH.c: 253:             break ;
  3186  04BF  2CCD               	goto	l537
  3187  04C0                     l3184:
  3188                           
  3189                           ;EWH.c: 256:         EWH_SSD_Update(current_Temp);
  3190  04C0  0848               	movf	_current_Temp^(0+128),w
  3191  04C1  00B0               	movwf	??_EWH_Operating_Mode^(0+128)
  3192  04C2  01B1               	clrf	(??_EWH_Operating_Mode^(0+128)+1)
  3193  04C3  0830               	movf	??_EWH_Operating_Mode^(0+128),w
  3194  04C4  00AA               	movwf	EWH_SSD_Update@temp^(0+128)
  3195  04C5  0831               	movf	(??_EWH_Operating_Mode+1)^(0+128),w
  3196  04C6  00AB               	movwf	(EWH_SSD_Update@temp+1)^(0+128)
  3197  04C7  120A  158A  2554  120A  118A  	fcall	_EWH_SSD_Update
  3198  04CC  2B9D               	goto	l3124
  3199  04CD                     l537:
  3200  04CD  0008               	return
  3201  04CE                     __end_of_EWH_Operating_Mode:
  3202                           
  3203                           	psect	text12
  3204  0801                     __ptext12:	
  3205 ;; *************** function _TMR1_Stop *****************
  3206 ;; Defined at:
  3207 ;;		line 53 in file "TMR1.c"
  3208 ;; Parameters:    Size  Location     Type
  3209 ;;		None
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;		None
  3212 ;; Return value:  Size  Location     Type
  3213 ;;                  1    wreg      void 
  3214 ;; Registers used:
  3215 ;;		None
  3216 ;; Tracked objects:
  3217 ;;		On entry : 0/0
  3218 ;;		On exit  : 0/0
  3219 ;;		Unchanged: 0/0
  3220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3221 ;;      Params:         0       0       0       0       0
  3222 ;;      Locals:         0       0       0       0       0
  3223 ;;      Temps:          0       0       0       0       0
  3224 ;;      Totals:         0       0       0       0       0
  3225 ;;Total ram usage:        0 bytes
  3226 ;; Hardware stack levels used:    1
  3227 ;; Hardware stack levels required when called:    3
  3228 ;; This function calls:
  3229 ;;		Nothing
  3230 ;; This function is called by:
  3231 ;;		_EWH_Sleep_Mode
  3232 ;;		_EWH_Operating_Mode
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           
  3237                           ;psect for function _TMR1_Stop
  3238  0801                     _TMR1_Stop:
  3239  0801                     l2984:	
  3240                           ;incstack = 0
  3241                           ; Regs used in _TMR1_Stop: []
  3242                           
  3243                           
  3244                           ;TMR1.c: 55:     (TMR1ON = 0);
  3245  0801  1283               	bcf	3,5	;RP0=0, select bank0
  3246  0802  1303               	bcf	3,6	;RP1=0, select bank0
  3247  0803  1010               	bcf	16,0	;volatile
  3248  0804                     l354:
  3249  0804  0008               	return
  3250  0805                     __end_of_TMR1_Stop:
  3251                           
  3252                           	psect	text13
  3253  08BB                     __ptext13:	
  3254 ;; *************** function _TMR1_Start *****************
  3255 ;; Defined at:
  3256 ;;		line 43 in file "TMR1.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;		None
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;		None
  3261 ;; Return value:  Size  Location     Type
  3262 ;;                  1    wreg      void 
  3263 ;; Registers used:
  3264 ;;		None
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3270 ;;      Params:         0       0       0       0       0
  3271 ;;      Locals:         0       0       0       0       0
  3272 ;;      Temps:          0       0       0       0       0
  3273 ;;      Totals:         0       0       0       0       0
  3274 ;;Total ram usage:        0 bytes
  3275 ;; Hardware stack levels used:    1
  3276 ;; Hardware stack levels required when called:    3
  3277 ;; This function calls:
  3278 ;;		Nothing
  3279 ;; This function is called by:
  3280 ;;		_EWH_SetTemp_Mode
  3281 ;;		_EWH_Operating_Mode
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285                           
  3286                           ;psect for function _TMR1_Start
  3287  08BB                     _TMR1_Start:
  3288  08BB                     l2982:	
  3289                           ;incstack = 0
  3290                           ; Regs used in _TMR1_Start: []
  3291                           
  3292                           
  3293                           ;TMR1.c: 45:     (TMR1IF = 0);
  3294  08BB  1283               	bcf	3,5	;RP0=0, select bank0
  3295  08BC  1303               	bcf	3,6	;RP1=0, select bank0
  3296  08BD  100C               	bcf	12,0	;volatile
  3297                           
  3298                           ;TMR1.c: 46:     (TMR1IE = 1);
  3299  08BE  1683               	bsf	3,5	;RP0=1, select bank1
  3300  08BF  1303               	bcf	3,6	;RP1=0, select bank1
  3301  08C0  140C               	bsf	12,0	;volatile
  3302                           
  3303                           ;TMR1.c: 47:     (PEIE = 1);
  3304  08C1  170B               	bsf	11,6	;volatile
  3305                           
  3306                           ;TMR1.c: 48:     (GIE = 1);
  3307  08C2  178B               	bsf	11,7	;volatile
  3308                           
  3309                           ;TMR1.c: 49:     TMR1=40536;
  3310  08C3  309E               	movlw	158
  3311  08C4  1283               	bcf	3,5	;RP0=0, select bank0
  3312  08C5  1303               	bcf	3,6	;RP1=0, select bank0
  3313  08C6  008F               	movwf	15	;volatile
  3314  08C7  3058               	movlw	88
  3315  08C8  008E               	movwf	14	;volatile
  3316                           
  3317                           ;TMR1.c: 50:     (TMR1ON = 1);
  3318  08C9  1410               	bsf	16,0	;volatile
  3319  08CA                     l351:
  3320  08CA  0008               	return
  3321  08CB                     __end_of_TMR1_Start:
  3322                           
  3323                           	psect	text14
  3324  09E8                     __ptext14:	
  3325 ;; *************** function _EWH_getAvrgTempReading *****************
  3326 ;; Defined at:
  3327 ;;		line 347 in file "EWH.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;  buffer          1    wreg     PTR unsigned char 
  3330 ;;		 -> ReadingBuffer(10), 
  3331 ;;  length          1    7[BANK1 ] unsigned char 
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;  buffer          1   14[BANK1 ] PTR unsigned char 
  3334 ;;		 -> ReadingBuffer(10), 
  3335 ;;  i               1   15[BANK1 ] unsigned char 
  3336 ;;  sumOfReading    2   11[BANK1 ] unsigned short 
  3337 ;;  averageReadi    1   13[BANK1 ] unsigned char 
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  1    wreg      unsigned char 
  3340 ;; Registers used:
  3341 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3347 ;;      Params:         0       0       1       0       0
  3348 ;;      Locals:         0       0       5       0       0
  3349 ;;      Temps:          0       0       3       0       0
  3350 ;;      Totals:         0       0       9       0       0
  3351 ;;Total ram usage:        9 bytes
  3352 ;; Hardware stack levels used:    1
  3353 ;; Hardware stack levels required when called:    4
  3354 ;; This function calls:
  3355 ;;		___lwdiv
  3356 ;; This function is called by:
  3357 ;;		_EWH_Operating_Mode
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           
  3362                           ;psect for function _EWH_getAvrgTempReading
  3363  09E8                     _EWH_getAvrgTempReading:
  3364                           
  3365                           ;incstack = 0
  3366                           ; Regs used in _EWH_getAvrgTempReading: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  3367                           ;EWH_getAvrgTempReading@buffer stored from wreg
  3368  09E8  1683               	bsf	3,5	;RP0=1, select bank1
  3369  09E9  1303               	bcf	3,6	;RP1=0, select bank1
  3370  09EA  00AE               	movwf	EWH_getAvrgTempReading@buffer^(0+128)
  3371  09EB                     l3026:
  3372                           
  3373                           ;EWH.c: 347: uint8_t EWH_getAvrgTempReading(uint8_t *buffer, uint8_t length);EWH.c: 348:
      +                           {;EWH.c: 349:     uint16_t sumOfReadings=0;
  3374  09EB  01AB               	clrf	EWH_getAvrgTempReading@sumOfReadings^(0+128)
  3375  09EC  01AC               	clrf	(EWH_getAvrgTempReading@sumOfReadings+1)^(0+128)
  3376                           
  3377                           ;EWH.c: 350:     for(uint8_t i=0 ; i<length ; i++)
  3378  09ED  01AF               	clrf	EWH_getAvrgTempReading@i^(0+128)
  3379  09EE  2A02               	goto	l3032
  3380  09EF                     l3028:
  3381                           
  3382                           ;EWH.c: 351:     {;EWH.c: 352:         sumOfReadings += buffer[i];
  3383  09EF  082F               	movf	EWH_getAvrgTempReading@i^(0+128),w
  3384  09F0  072E               	addwf	EWH_getAvrgTempReading@buffer^(0+128),w
  3385  09F1  00A8               	movwf	??_EWH_getAvrgTempReading^(0+128)
  3386  09F2  0828               	movf	??_EWH_getAvrgTempReading^(0+128),w
  3387  09F3  0084               	movwf	4
  3388  09F4  1383               	bcf	3,7	;select IRP bank0
  3389  09F5  0800               	movf	0,w
  3390  09F6  00A9               	movwf	(??_EWH_getAvrgTempReading+1)^(0+128)
  3391  09F7  01AA               	clrf	((??_EWH_getAvrgTempReading+1)^(0+128)+1)
  3392  09F8  0829               	movf	(??_EWH_getAvrgTempReading+1)^(0+128),w
  3393  09F9  07AB               	addwf	EWH_getAvrgTempReading@sumOfReadings^(0+128),f
  3394  09FA  1803               	skipnc
  3395  09FB  0AAC               	incf	(EWH_getAvrgTempReading@sumOfReadings+1)^(0+128),f
  3396  09FC  082A               	movf	(??_EWH_getAvrgTempReading+2)^(0+128),w
  3397  09FD  07AC               	addwf	(EWH_getAvrgTempReading@sumOfReadings+1)^(0+128),f
  3398  09FE                     l3030:
  3399                           
  3400                           ;EWH.c: 353:     }
  3401  09FE  3001               	movlw	1
  3402  09FF  00FF               	movwf	btemp+1
  3403  0A00  087F               	movf	btemp+1,w
  3404  0A01  07AF               	addwf	EWH_getAvrgTempReading@i^(0+128),f
  3405  0A02                     l3032:
  3406  0A02  0827               	movf	EWH_getAvrgTempReading@length^(0+128),w
  3407  0A03  022F               	subwf	EWH_getAvrgTempReading@i^(0+128),w
  3408  0A04  1C03               	skipc
  3409  0A05  2A07               	goto	u2391
  3410  0A06  2A08               	goto	u2390
  3411  0A07                     u2391:
  3412  0A07  29EF               	goto	l3028
  3413  0A08                     u2390:
  3414  0A08                     l3034:
  3415                           
  3416                           ;EWH.c: 354:     uint8_t averageReading= sumOfReadings/length;
  3417  0A08  0827               	movf	EWH_getAvrgTempReading@length^(0+128),w
  3418  0A09  00A8               	movwf	??_EWH_getAvrgTempReading^(0+128)
  3419  0A0A  01A9               	clrf	(??_EWH_getAvrgTempReading^(0+128)+1)
  3420  0A0B  0828               	movf	??_EWH_getAvrgTempReading^(0+128),w
  3421  0A0C  00A0               	movwf	___lwdiv@divisor^(0+128)
  3422  0A0D  0829               	movf	(??_EWH_getAvrgTempReading+1)^(0+128),w
  3423  0A0E  00A1               	movwf	(___lwdiv@divisor+1)^(0+128)
  3424  0A0F  082C               	movf	(EWH_getAvrgTempReading@sumOfReadings+1)^(0+128),w
  3425  0A10  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  3426  0A11  082B               	movf	EWH_getAvrgTempReading@sumOfReadings^(0+128),w
  3427  0A12  00A2               	movwf	___lwdiv@dividend^(0+128)
  3428  0A13  120A  158A  2318  120A  158A  	fcall	___lwdiv
  3429  0A18  1683               	bsf	3,5	;RP0=1, select bank1
  3430  0A19  1303               	bcf	3,6	;RP1=0, select bank1
  3431  0A1A  0820               	movf	?___lwdiv^(0+128),w
  3432  0A1B  00FF               	movwf	btemp+1
  3433  0A1C  087F               	movf	btemp+1,w
  3434  0A1D  00AD               	movwf	EWH_getAvrgTempReading@averageReading^(0+128)
  3435  0A1E                     l3036:
  3436                           
  3437                           ;EWH.c: 355:     return averageReading;
  3438  0A1E  082D               	movf	EWH_getAvrgTempReading@averageReading^(0+128),w
  3439  0A1F                     l573:
  3440  0A1F  0008               	return
  3441  0A20                     __end_of_EWH_getAvrgTempReading:
  3442                           
  3443                           	psect	text15
  3444  0B18                     __ptext15:	
  3445 ;; *************** function ___lwdiv *****************
  3446 ;; Defined at:
  3447 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;  divisor         2    0[BANK1 ] unsigned int 
  3450 ;;  dividend        2    2[BANK1 ] unsigned int 
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;  quotient        2    4[BANK1 ] unsigned int 
  3453 ;;  counter         1    6[BANK1 ] unsigned char 
  3454 ;; Return value:  Size  Location     Type
  3455 ;;                  2    0[BANK1 ] unsigned int 
  3456 ;; Registers used:
  3457 ;;		wreg, status,2, status,0, btemp+1
  3458 ;; Tracked objects:
  3459 ;;		On entry : 0/0
  3460 ;;		On exit  : 0/0
  3461 ;;		Unchanged: 0/0
  3462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3463 ;;      Params:         0       0       4       0       0
  3464 ;;      Locals:         0       0       3       0       0
  3465 ;;      Temps:          0       0       0       0       0
  3466 ;;      Totals:         0       0       7       0       0
  3467 ;;Total ram usage:        7 bytes
  3468 ;; Hardware stack levels used:    1
  3469 ;; Hardware stack levels required when called:    3
  3470 ;; This function calls:
  3471 ;;		Nothing
  3472 ;; This function is called by:
  3473 ;;		_EWH_getAvrgTempReading
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477                           
  3478                           ;psect for function ___lwdiv
  3479  0B18                     ___lwdiv:
  3480  0B18                     l2802:	
  3481                           ;incstack = 0
  3482                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  3483                           
  3484  0B18  1683               	bsf	3,5	;RP0=1, select bank1
  3485  0B19  1303               	bcf	3,6	;RP1=0, select bank1
  3486  0B1A  01A4               	clrf	___lwdiv@quotient^(0+128)
  3487  0B1B  01A5               	clrf	(___lwdiv@quotient+1)^(0+128)
  3488  0B1C                     l2804:
  3489  0B1C  0820               	movf	___lwdiv@divisor^(0+128),w
  3490  0B1D  0421               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  3491  0B1E  1903               	btfsc	3,2
  3492  0B1F  2B21               	goto	u2201
  3493  0B20  2B22               	goto	u2200
  3494  0B21                     u2201:
  3495  0B21  2B59               	goto	l2824
  3496  0B22                     u2200:
  3497  0B22                     l2806:
  3498  0B22  01A6               	clrf	___lwdiv@counter^(0+128)
  3499  0B23  0AA6               	incf	___lwdiv@counter^(0+128),f
  3500  0B24  2B30               	goto	l2812
  3501  0B25                     l2808:
  3502  0B25  3001               	movlw	1
  3503  0B26                     u2215:
  3504  0B26  1003               	clrc
  3505  0B27  0DA0               	rlf	___lwdiv@divisor^(0+128),f
  3506  0B28  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
  3507  0B29  3EFF               	addlw	-1
  3508  0B2A  1D03               	skipz
  3509  0B2B  2B26               	goto	u2215
  3510  0B2C                     l2810:
  3511  0B2C  3001               	movlw	1
  3512  0B2D  00FF               	movwf	btemp+1
  3513  0B2E  087F               	movf	btemp+1,w
  3514  0B2F  07A6               	addwf	___lwdiv@counter^(0+128),f
  3515  0B30                     l2812:
  3516  0B30  1FA1               	btfss	(___lwdiv@divisor+1)^(0+128),7
  3517  0B31  2B33               	goto	u2221
  3518  0B32  2B34               	goto	u2220
  3519  0B33                     u2221:
  3520  0B33  2B25               	goto	l2808
  3521  0B34                     u2220:
  3522  0B34                     l2814:
  3523  0B34  3001               	movlw	1
  3524  0B35                     u2235:
  3525  0B35  1003               	clrc
  3526  0B36  0DA4               	rlf	___lwdiv@quotient^(0+128),f
  3527  0B37  0DA5               	rlf	(___lwdiv@quotient+1)^(0+128),f
  3528  0B38  3EFF               	addlw	-1
  3529  0B39  1D03               	skipz
  3530  0B3A  2B35               	goto	u2235
  3531  0B3B  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  3532  0B3C  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
  3533  0B3D  1D03               	skipz
  3534  0B3E  2B41               	goto	u2245
  3535  0B3F  0820               	movf	___lwdiv@divisor^(0+128),w
  3536  0B40  0222               	subwf	___lwdiv@dividend^(0+128),w
  3537  0B41                     u2245:
  3538  0B41  1C03               	skipc
  3539  0B42  2B44               	goto	u2241
  3540  0B43  2B45               	goto	u2240
  3541  0B44                     u2241:
  3542  0B44  2B4C               	goto	l2820
  3543  0B45                     u2240:
  3544  0B45                     l2816:
  3545  0B45  0820               	movf	___lwdiv@divisor^(0+128),w
  3546  0B46  02A2               	subwf	___lwdiv@dividend^(0+128),f
  3547  0B47  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  3548  0B48  1C03               	skipc
  3549  0B49  03A3               	decf	(___lwdiv@dividend+1)^(0+128),f
  3550  0B4A  02A3               	subwf	(___lwdiv@dividend+1)^(0+128),f
  3551  0B4B                     l2818:
  3552  0B4B  1424               	bsf	___lwdiv@quotient^(0+128),0
  3553  0B4C                     l2820:
  3554  0B4C  3001               	movlw	1
  3555  0B4D                     u2255:
  3556  0B4D  1003               	clrc
  3557  0B4E  0CA1               	rrf	(___lwdiv@divisor+1)^(0+128),f
  3558  0B4F  0CA0               	rrf	___lwdiv@divisor^(0+128),f
  3559  0B50  3EFF               	addlw	-1
  3560  0B51  1D03               	skipz
  3561  0B52  2B4D               	goto	u2255
  3562  0B53                     l2822:
  3563  0B53  3001               	movlw	1
  3564  0B54  02A6               	subwf	___lwdiv@counter^(0+128),f
  3565  0B55  1D03               	btfss	3,2
  3566  0B56  2B58               	goto	u2261
  3567  0B57  2B59               	goto	u2260
  3568  0B58                     u2261:
  3569  0B58  2B34               	goto	l2814
  3570  0B59                     u2260:
  3571  0B59                     l2824:
  3572  0B59  0825               	movf	(___lwdiv@quotient+1)^(0+128),w
  3573  0B5A  00A1               	movwf	(?___lwdiv+1)^(0+128)
  3574  0B5B  0824               	movf	___lwdiv@quotient^(0+128),w
  3575  0B5C  00A0               	movwf	?___lwdiv^(0+128)
  3576  0B5D                     l1016:
  3577  0B5D  0008               	return
  3578  0B5E                     __end_of___lwdiv:
  3579                           
  3580                           	psect	text16
  3581  0815                     __ptext16:	
  3582 ;; *************** function _EWH_SetMode *****************
  3583 ;; Defined at:
  3584 ;;		line 301 in file "EWH.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;  new_mode        1    wreg     enum E1009
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;  new_mode        1    0[BANK1 ] enum E1009
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  1    wreg      void 
  3591 ;; Registers used:
  3592 ;;		wreg, btemp+1
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3598 ;;      Params:         0       0       0       0       0
  3599 ;;      Locals:         0       0       1       0       0
  3600 ;;      Temps:          0       0       0       0       0
  3601 ;;      Totals:         0       0       1       0       0
  3602 ;;Total ram usage:        1 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; Hardware stack levels required when called:    3
  3605 ;; This function calls:
  3606 ;;		Nothing
  3607 ;; This function is called by:
  3608 ;;		_EWH_WakeUP_Mode
  3609 ;;		_EWH_SetTemp_Mode
  3610 ;;		_EWH_Operating_Mode
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614                           
  3615                           ;psect for function _EWH_SetMode
  3616  0815                     _EWH_SetMode:
  3617                           
  3618                           ;incstack = 0
  3619                           ; Regs used in _EWH_SetMode: [wreg+btemp+1]
  3620                           ;EWH_SetMode@new_mode stored from wreg
  3621  0815  1683               	bsf	3,5	;RP0=1, select bank1
  3622  0816  1303               	bcf	3,6	;RP1=0, select bank1
  3623  0817  00A0               	movwf	EWH_SetMode@new_mode^(0+128)
  3624  0818                     l3022:
  3625                           
  3626                           ;EWH.c: 301: void EWH_SetMode(sEWH_Mode new_mode);EWH.c: 302: {;EWH.c: 303:     EWH_Mode
      +                          =new_mode;
  3627  0818  0820               	movf	EWH_SetMode@new_mode^(0+128),w
  3628  0819  00FF               	movwf	btemp+1
  3629  081A  087F               	movf	btemp+1,w
  3630  081B  00CA               	movwf	_EWH_Mode^(0+128)
  3631  081C                     l543:
  3632  081C  0008               	return
  3633  081D                     __end_of_EWH_SetMode:
  3634                           
  3635                           	psect	text17
  3636  0852                     __ptext17:	
  3637 ;; *************** function _EWH_SetEvent *****************
  3638 ;; Defined at:
  3639 ;;		line 305 in file "EWH.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;  Event_index     1    wreg     unsigned char 
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;  Event_index     1    0[BANK1 ] unsigned char 
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  1    wreg      void 
  3646 ;; Registers used:
  3647 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3653 ;;      Params:         0       0       0       0       0
  3654 ;;      Locals:         0       0       1       0       0
  3655 ;;      Temps:          0       0       0       0       0
  3656 ;;      Totals:         0       0       1       0       0
  3657 ;;Total ram usage:        1 bytes
  3658 ;; Hardware stack levels used:    1
  3659 ;; Hardware stack levels required when called:    3
  3660 ;; This function calls:
  3661 ;;		Nothing
  3662 ;; This function is called by:
  3663 ;;		_EWH_Operating_Mode
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666                           
  3667                           
  3668                           ;psect for function _EWH_SetEvent
  3669  0852                     _EWH_SetEvent:
  3670                           
  3671                           ;incstack = 0
  3672                           ; Regs used in _EWH_SetEvent: [wreg-fsr0h+status,2+status,0]
  3673                           ;EWH_SetEvent@Event_index stored from wreg
  3674  0852  1683               	bsf	3,5	;RP0=1, select bank1
  3675  0853  1303               	bcf	3,6	;RP1=0, select bank1
  3676  0854  00A0               	movwf	EWH_SetEvent@Event_index^(0+128)
  3677  0855                     l3040:
  3678                           
  3679                           ;EWH.c: 305: void EWH_SetEvent(uint8_t Event_index);EWH.c: 306: {;EWH.c: 307:     EWH_Ev
      +                          ents[Event_index]=1;
  3680  0855  0820               	movf	EWH_SetEvent@Event_index^(0+128),w
  3681  0856  3EBD               	addlw	(low (_EWH_Events| 0))& (0+255)
  3682  0857  0084               	movwf	4
  3683  0858  1383               	bcf	3,7	;select IRP bank1
  3684  0859  0180               	clrf	0
  3685  085A  0A80               	incf	0,f
  3686  085B                     l546:
  3687  085B  0008               	return
  3688  085C                     __end_of_EWH_SetEvent:
  3689                           
  3690                           	psect	text18
  3691  0D54                     __ptext18:	
  3692 ;; *************** function _EWH_SSD_Update *****************
  3693 ;; Defined at:
  3694 ;;		line 337 in file "EWH.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;  temp            2   10[BANK1 ] unsigned short 
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;		None
  3699 ;; Return value:  Size  Location     Type
  3700 ;;                  1    wreg      void 
  3701 ;; Registers used:
  3702 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3708 ;;      Params:         0       0       2       0       0
  3709 ;;      Locals:         0       0       0       0       0
  3710 ;;      Temps:          0       0       2       0       0
  3711 ;;      Totals:         0       0       4       0       0
  3712 ;;Total ram usage:        4 bytes
  3713 ;; Hardware stack levels used:    1
  3714 ;; Hardware stack levels required when called:    5
  3715 ;; This function calls:
  3716 ;;		_SSD_OFF
  3717 ;;		_SSD_Write
  3718 ;;		___awdiv
  3719 ;;		___lwmod
  3720 ;; This function is called by:
  3721 ;;		_EWH_WakeUP_Mode
  3722 ;;		_EWH_SetTemp_Mode
  3723 ;;		_EWH_Operating_Mode
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           
  3728                           ;psect for function _EWH_SSD_Update
  3729  0D54                     _EWH_SSD_Update:
  3730  0D54                     l3012:	
  3731                           ;incstack = 0
  3732                           ; Regs used in _EWH_SSD_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3733                           
  3734                           
  3735                           ;EWH.c: 337: void EWH_SSD_Update(uint16_t temp);EWH.c: 338: {;EWH.c: 339:     SSD_OFF(3)
      +                          ;
  3736  0D54  3003               	movlw	3
  3737  0D55  120A  158A  207A  120A  158A  	fcall	_SSD_OFF
  3738                           
  3739                           ;EWH.c: 340:     SSD_Write(4,temp%10);
  3740  0D5A  300A               	movlw	10
  3741  0D5B  1683               	bsf	3,5	;RP0=1, select bank1
  3742  0D5C  1303               	bcf	3,6	;RP1=0, select bank1
  3743  0D5D  00A0               	movwf	___lwmod@divisor^(0+128)
  3744  0D5E  3000               	movlw	0
  3745  0D5F  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  3746  0D60  082B               	movf	(EWH_SSD_Update@temp+1)^(0+128),w
  3747  0D61  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  3748  0D62  082A               	movf	EWH_SSD_Update@temp^(0+128),w
  3749  0D63  00A2               	movwf	___lwmod@dividend^(0+128)
  3750  0D64  120A  158A  225B  120A  158A  	fcall	___lwmod
  3751  0D69  1683               	bsf	3,5	;RP0=1, select bank1
  3752  0D6A  1303               	bcf	3,6	;RP1=0, select bank1
  3753  0D6B  0820               	movf	?___lwmod^(0+128),w
  3754  0D6C  00FF               	movwf	btemp+1
  3755  0D6D  087F               	movf	btemp+1,w
  3756  0D6E  00A8               	movwf	SSD_Write@Number^(0+128)
  3757  0D6F  3004               	movlw	4
  3758  0D70  120A  158A  210C  120A  158A  	fcall	_SSD_Write
  3759  0D75                     l3014:
  3760                           
  3761                           ;EWH.c: 341:     _delay((unsigned long)((30)*(4000000/4000.0)));
  3762  0D75  3027               	movlw	39
  3763  0D76  1683               	bsf	3,5	;RP0=1, select bank1
  3764  0D77  1303               	bcf	3,6	;RP1=0, select bank1
  3765  0D78  00AD               	movwf	(??_EWH_SSD_Update^(0+128)+1)
  3766  0D79  30F4               	movlw	244
  3767  0D7A  00AC               	movwf	??_EWH_SSD_Update^(0+128)
  3768  0D7B                     u3827:
  3769  0D7B  0BAC               	decfsz	??_EWH_SSD_Update^(0+128),f
  3770  0D7C  2D7B               	goto	u3827
  3771  0D7D  0BAD               	decfsz	(??_EWH_SSD_Update^(0+128)+1),f
  3772  0D7E  2D7B               	goto	u3827
  3773  0D7F  0000               	nop
  3774  0D80                     l3016:
  3775                           
  3776                           ;EWH.c: 342:     SSD_OFF(4);
  3777  0D80  3004               	movlw	4
  3778  0D81  120A  158A  207A  120A  158A  	fcall	_SSD_OFF
  3779  0D86                     l3018:
  3780                           
  3781                           ;EWH.c: 343:     SSD_Write(3,(uint8_t)temp/10);
  3782  0D86  300A               	movlw	10
  3783  0D87  1683               	bsf	3,5	;RP0=1, select bank1
  3784  0D88  1303               	bcf	3,6	;RP1=0, select bank1
  3785  0D89  00A0               	movwf	___awdiv@divisor^(0+128)
  3786  0D8A  3000               	movlw	0
  3787  0D8B  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
  3788  0D8C  082A               	movf	EWH_SSD_Update@temp^(0+128),w
  3789  0D8D  00AC               	movwf	??_EWH_SSD_Update^(0+128)
  3790  0D8E  01AD               	clrf	(??_EWH_SSD_Update^(0+128)+1)
  3791  0D8F  082C               	movf	??_EWH_SSD_Update^(0+128),w
  3792  0D90  00A2               	movwf	___awdiv@dividend^(0+128)
  3793  0D91  082D               	movf	(??_EWH_SSD_Update+1)^(0+128),w
  3794  0D92  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
  3795  0D93  120A  158A  2618  120A  158A  	fcall	___awdiv
  3796  0D98  1683               	bsf	3,5	;RP0=1, select bank1
  3797  0D99  1303               	bcf	3,6	;RP1=0, select bank1
  3798  0D9A  0820               	movf	?___awdiv^(0+128),w
  3799  0D9B  00FF               	movwf	btemp+1
  3800  0D9C  087F               	movf	btemp+1,w
  3801  0D9D  00A8               	movwf	SSD_Write@Number^(0+128)
  3802  0D9E  3003               	movlw	3
  3803  0D9F  120A  158A  210C  120A  158A  	fcall	_SSD_Write
  3804  0DA4                     l3020:
  3805                           
  3806                           ;EWH.c: 344:     _delay((unsigned long)((30)*(4000000/4000.0)));
  3807  0DA4  3027               	movlw	39
  3808  0DA5  1683               	bsf	3,5	;RP0=1, select bank1
  3809  0DA6  1303               	bcf	3,6	;RP1=0, select bank1
  3810  0DA7  00AD               	movwf	(??_EWH_SSD_Update^(0+128)+1)
  3811  0DA8  30F4               	movlw	244
  3812  0DA9  00AC               	movwf	??_EWH_SSD_Update^(0+128)
  3813  0DAA                     u3837:
  3814  0DAA  0BAC               	decfsz	??_EWH_SSD_Update^(0+128),f
  3815  0DAB  2DAA               	goto	u3837
  3816  0DAC  0BAD               	decfsz	(??_EWH_SSD_Update^(0+128)+1),f
  3817  0DAD  2DAA               	goto	u3837
  3818  0DAE  0000               	nop
  3819  0DAF                     l567:
  3820  0DAF  0008               	return
  3821  0DB0                     __end_of_EWH_SSD_Update:
  3822                           
  3823                           	psect	text19
  3824  0A5B                     __ptext19:	
  3825 ;; *************** function ___lwmod *****************
  3826 ;; Defined at:
  3827 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;  divisor         2    0[BANK1 ] unsigned int 
  3830 ;;  dividend        2    2[BANK1 ] unsigned int 
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;  counter         1    4[BANK1 ] unsigned char 
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  2    0[BANK1 ] unsigned int 
  3835 ;; Registers used:
  3836 ;;		wreg, status,2, status,0, btemp+1
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3842 ;;      Params:         0       0       4       0       0
  3843 ;;      Locals:         0       0       1       0       0
  3844 ;;      Temps:          0       0       0       0       0
  3845 ;;      Totals:         0       0       5       0       0
  3846 ;;Total ram usage:        5 bytes
  3847 ;; Hardware stack levels used:    1
  3848 ;; Hardware stack levels required when called:    3
  3849 ;; This function calls:
  3850 ;;		Nothing
  3851 ;; This function is called by:
  3852 ;;		_EWH_SSD_Update
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856                           
  3857                           ;psect for function ___lwmod
  3858  0A5B                     ___lwmod:
  3859  0A5B                     l2828:	
  3860                           ;incstack = 0
  3861                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  3862                           
  3863  0A5B  1683               	bsf	3,5	;RP0=1, select bank1
  3864  0A5C  1303               	bcf	3,6	;RP1=0, select bank1
  3865  0A5D  0820               	movf	___lwmod@divisor^(0+128),w
  3866  0A5E  0421               	iorwf	(___lwmod@divisor+1)^(0+128),w
  3867  0A5F  1903               	btfsc	3,2
  3868  0A60  2A62               	goto	u2271
  3869  0A61  2A63               	goto	u2270
  3870  0A62                     u2271:
  3871  0A62  2A92               	goto	l2846
  3872  0A63                     u2270:
  3873  0A63                     l2830:
  3874  0A63  01A4               	clrf	___lwmod@counter^(0+128)
  3875  0A64  0AA4               	incf	___lwmod@counter^(0+128),f
  3876  0A65  2A71               	goto	l2836
  3877  0A66                     l2832:
  3878  0A66  3001               	movlw	1
  3879  0A67                     u2285:
  3880  0A67  1003               	clrc
  3881  0A68  0DA0               	rlf	___lwmod@divisor^(0+128),f
  3882  0A69  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
  3883  0A6A  3EFF               	addlw	-1
  3884  0A6B  1D03               	skipz
  3885  0A6C  2A67               	goto	u2285
  3886  0A6D                     l2834:
  3887  0A6D  3001               	movlw	1
  3888  0A6E  00FF               	movwf	btemp+1
  3889  0A6F  087F               	movf	btemp+1,w
  3890  0A70  07A4               	addwf	___lwmod@counter^(0+128),f
  3891  0A71                     l2836:
  3892  0A71  1FA1               	btfss	(___lwmod@divisor+1)^(0+128),7
  3893  0A72  2A74               	goto	u2291
  3894  0A73  2A75               	goto	u2290
  3895  0A74                     u2291:
  3896  0A74  2A66               	goto	l2832
  3897  0A75                     u2290:
  3898  0A75                     l2838:
  3899  0A75  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  3900  0A76  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
  3901  0A77  1D03               	skipz
  3902  0A78  2A7B               	goto	u2305
  3903  0A79  0820               	movf	___lwmod@divisor^(0+128),w
  3904  0A7A  0222               	subwf	___lwmod@dividend^(0+128),w
  3905  0A7B                     u2305:
  3906  0A7B  1C03               	skipc
  3907  0A7C  2A7E               	goto	u2301
  3908  0A7D  2A7F               	goto	u2300
  3909  0A7E                     u2301:
  3910  0A7E  2A85               	goto	l2842
  3911  0A7F                     u2300:
  3912  0A7F                     l2840:
  3913  0A7F  0820               	movf	___lwmod@divisor^(0+128),w
  3914  0A80  02A2               	subwf	___lwmod@dividend^(0+128),f
  3915  0A81  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  3916  0A82  1C03               	skipc
  3917  0A83  03A3               	decf	(___lwmod@dividend+1)^(0+128),f
  3918  0A84  02A3               	subwf	(___lwmod@dividend+1)^(0+128),f
  3919  0A85                     l2842:
  3920  0A85  3001               	movlw	1
  3921  0A86                     u2315:
  3922  0A86  1003               	clrc
  3923  0A87  0CA1               	rrf	(___lwmod@divisor+1)^(0+128),f
  3924  0A88  0CA0               	rrf	___lwmod@divisor^(0+128),f
  3925  0A89  3EFF               	addlw	-1
  3926  0A8A  1D03               	skipz
  3927  0A8B  2A86               	goto	u2315
  3928  0A8C                     l2844:
  3929  0A8C  3001               	movlw	1
  3930  0A8D  02A4               	subwf	___lwmod@counter^(0+128),f
  3931  0A8E  1D03               	btfss	3,2
  3932  0A8F  2A91               	goto	u2321
  3933  0A90  2A92               	goto	u2320
  3934  0A91                     u2321:
  3935  0A91  2A75               	goto	l2838
  3936  0A92                     u2320:
  3937  0A92                     l2846:
  3938  0A92  0823               	movf	(___lwmod@dividend+1)^(0+128),w
  3939  0A93  00A1               	movwf	(?___lwmod+1)^(0+128)
  3940  0A94  0822               	movf	___lwmod@dividend^(0+128),w
  3941  0A95  00A0               	movwf	?___lwmod^(0+128)
  3942  0A96                     l1026:
  3943  0A96  0008               	return
  3944  0A97                     __end_of___lwmod:
  3945                           
  3946                           	psect	text20
  3947  0E18                     __ptext20:	
  3948 ;; *************** function ___awdiv *****************
  3949 ;; Defined at:
  3950 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;  divisor         2    0[BANK1 ] int 
  3953 ;;  dividend        2    2[BANK1 ] int 
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;  quotient        2    6[BANK1 ] int 
  3956 ;;  sign            1    5[BANK1 ] unsigned char 
  3957 ;;  counter         1    4[BANK1 ] unsigned char 
  3958 ;; Return value:  Size  Location     Type
  3959 ;;                  2    0[BANK1 ] int 
  3960 ;; Registers used:
  3961 ;;		wreg, status,2, status,0, btemp+1
  3962 ;; Tracked objects:
  3963 ;;		On entry : 0/0
  3964 ;;		On exit  : 0/0
  3965 ;;		Unchanged: 0/0
  3966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3967 ;;      Params:         0       0       4       0       0
  3968 ;;      Locals:         0       0       4       0       0
  3969 ;;      Temps:          0       0       0       0       0
  3970 ;;      Totals:         0       0       8       0       0
  3971 ;;Total ram usage:        8 bytes
  3972 ;; Hardware stack levels used:    1
  3973 ;; Hardware stack levels required when called:    3
  3974 ;; This function calls:
  3975 ;;		Nothing
  3976 ;; This function is called by:
  3977 ;;		_EWH_SSD_Update
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981                           
  3982                           ;psect for function ___awdiv
  3983  0E18                     ___awdiv:
  3984  0E18                     l2758:	
  3985                           ;incstack = 0
  3986                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  3987                           
  3988  0E18  1683               	bsf	3,5	;RP0=1, select bank1
  3989  0E19  1303               	bcf	3,6	;RP1=0, select bank1
  3990  0E1A  01A5               	clrf	___awdiv@sign^(0+128)
  3991  0E1B                     l2760:
  3992  0E1B  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  3993  0E1C  2E1E               	goto	u2101
  3994  0E1D  2E1F               	goto	u2100
  3995  0E1E                     u2101:
  3996  0E1E  2E26               	goto	l2766
  3997  0E1F                     u2100:
  3998  0E1F                     l2762:
  3999  0E1F  09A0               	comf	___awdiv@divisor^(0+128),f
  4000  0E20  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
  4001  0E21  0AA0               	incf	___awdiv@divisor^(0+128),f
  4002  0E22  1903               	skipnz
  4003  0E23  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
  4004  0E24                     l2764:
  4005  0E24  01A5               	clrf	___awdiv@sign^(0+128)
  4006  0E25  0AA5               	incf	___awdiv@sign^(0+128),f
  4007  0E26                     l2766:
  4008  0E26  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
  4009  0E27  2E29               	goto	u2111
  4010  0E28  2E2A               	goto	u2110
  4011  0E29                     u2111:
  4012  0E29  2E33               	goto	l2772
  4013  0E2A                     u2110:
  4014  0E2A                     l2768:
  4015  0E2A  09A2               	comf	___awdiv@dividend^(0+128),f
  4016  0E2B  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
  4017  0E2C  0AA2               	incf	___awdiv@dividend^(0+128),f
  4018  0E2D  1903               	skipnz
  4019  0E2E  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
  4020  0E2F                     l2770:
  4021  0E2F  3001               	movlw	1
  4022  0E30  00FF               	movwf	btemp+1
  4023  0E31  087F               	movf	btemp+1,w
  4024  0E32  06A5               	xorwf	___awdiv@sign^(0+128),f
  4025  0E33                     l2772:
  4026  0E33  01A6               	clrf	___awdiv@quotient^(0+128)
  4027  0E34  01A7               	clrf	(___awdiv@quotient+1)^(0+128)
  4028  0E35                     l2774:
  4029  0E35  0820               	movf	___awdiv@divisor^(0+128),w
  4030  0E36  0421               	iorwf	(___awdiv@divisor+1)^(0+128),w
  4031  0E37  1903               	btfsc	3,2
  4032  0E38  2E3A               	goto	u2121
  4033  0E39  2E3B               	goto	u2120
  4034  0E3A                     u2121:
  4035  0E3A  2E72               	goto	l2794
  4036  0E3B                     u2120:
  4037  0E3B                     l2776:
  4038  0E3B  01A4               	clrf	___awdiv@counter^(0+128)
  4039  0E3C  0AA4               	incf	___awdiv@counter^(0+128),f
  4040  0E3D  2E49               	goto	l2782
  4041  0E3E                     l2778:
  4042  0E3E  3001               	movlw	1
  4043  0E3F                     u2135:
  4044  0E3F  1003               	clrc
  4045  0E40  0DA0               	rlf	___awdiv@divisor^(0+128),f
  4046  0E41  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
  4047  0E42  3EFF               	addlw	-1
  4048  0E43  1D03               	skipz
  4049  0E44  2E3F               	goto	u2135
  4050  0E45                     l2780:
  4051  0E45  3001               	movlw	1
  4052  0E46  00FF               	movwf	btemp+1
  4053  0E47  087F               	movf	btemp+1,w
  4054  0E48  07A4               	addwf	___awdiv@counter^(0+128),f
  4055  0E49                     l2782:
  4056  0E49  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  4057  0E4A  2E4C               	goto	u2141
  4058  0E4B  2E4D               	goto	u2140
  4059  0E4C                     u2141:
  4060  0E4C  2E3E               	goto	l2778
  4061  0E4D                     u2140:
  4062  0E4D                     l2784:
  4063  0E4D  3001               	movlw	1
  4064  0E4E                     u2155:
  4065  0E4E  1003               	clrc
  4066  0E4F  0DA6               	rlf	___awdiv@quotient^(0+128),f
  4067  0E50  0DA7               	rlf	(___awdiv@quotient+1)^(0+128),f
  4068  0E51  3EFF               	addlw	-1
  4069  0E52  1D03               	skipz
  4070  0E53  2E4E               	goto	u2155
  4071  0E54  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  4072  0E55  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
  4073  0E56  1D03               	skipz
  4074  0E57  2E5A               	goto	u2165
  4075  0E58  0820               	movf	___awdiv@divisor^(0+128),w
  4076  0E59  0222               	subwf	___awdiv@dividend^(0+128),w
  4077  0E5A                     u2165:
  4078  0E5A  1C03               	skipc
  4079  0E5B  2E5D               	goto	u2161
  4080  0E5C  2E5E               	goto	u2160
  4081  0E5D                     u2161:
  4082  0E5D  2E65               	goto	l2790
  4083  0E5E                     u2160:
  4084  0E5E                     l2786:
  4085  0E5E  0820               	movf	___awdiv@divisor^(0+128),w
  4086  0E5F  02A2               	subwf	___awdiv@dividend^(0+128),f
  4087  0E60  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  4088  0E61  1C03               	skipc
  4089  0E62  03A3               	decf	(___awdiv@dividend+1)^(0+128),f
  4090  0E63  02A3               	subwf	(___awdiv@dividend+1)^(0+128),f
  4091  0E64                     l2788:
  4092  0E64  1426               	bsf	___awdiv@quotient^(0+128),0
  4093  0E65                     l2790:
  4094  0E65  3001               	movlw	1
  4095  0E66                     u2175:
  4096  0E66  1003               	clrc
  4097  0E67  0CA1               	rrf	(___awdiv@divisor+1)^(0+128),f
  4098  0E68  0CA0               	rrf	___awdiv@divisor^(0+128),f
  4099  0E69  3EFF               	addlw	-1
  4100  0E6A  1D03               	skipz
  4101  0E6B  2E66               	goto	u2175
  4102  0E6C                     l2792:
  4103  0E6C  3001               	movlw	1
  4104  0E6D  02A4               	subwf	___awdiv@counter^(0+128),f
  4105  0E6E  1D03               	btfss	3,2
  4106  0E6F  2E71               	goto	u2181
  4107  0E70  2E72               	goto	u2180
  4108  0E71                     u2181:
  4109  0E71  2E4D               	goto	l2784
  4110  0E72                     u2180:
  4111  0E72                     l2794:
  4112  0E72  0825               	movf	___awdiv@sign^(0+128),w
  4113  0E73  1903               	btfsc	3,2
  4114  0E74  2E76               	goto	u2191
  4115  0E75  2E77               	goto	u2190
  4116  0E76                     u2191:
  4117  0E76  2E7C               	goto	l2798
  4118  0E77                     u2190:
  4119  0E77                     l2796:
  4120  0E77  09A6               	comf	___awdiv@quotient^(0+128),f
  4121  0E78  09A7               	comf	(___awdiv@quotient+1)^(0+128),f
  4122  0E79  0AA6               	incf	___awdiv@quotient^(0+128),f
  4123  0E7A  1903               	skipnz
  4124  0E7B  0AA7               	incf	(___awdiv@quotient+1)^(0+128),f
  4125  0E7C                     l2798:
  4126  0E7C  0827               	movf	(___awdiv@quotient+1)^(0+128),w
  4127  0E7D  00A1               	movwf	(?___awdiv+1)^(0+128)
  4128  0E7E  0826               	movf	___awdiv@quotient^(0+128),w
  4129  0E7F  00A0               	movwf	?___awdiv^(0+128)
  4130  0E80                     l897:
  4131  0E80  0008               	return
  4132  0E81                     __end_of___awdiv:
  4133                           
  4134                           	psect	text21
  4135  090C                     __ptext21:	
  4136 ;; *************** function _SSD_Write *****************
  4137 ;; Defined at:
  4138 ;;		line 41 in file "SSD.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;  ID              1    wreg     unsigned char 
  4141 ;;  Number          1    8[BANK1 ] unsigned char 
  4142 ;; Auto vars:     Size  Location     Type
  4143 ;;  ID              1    9[BANK1 ] unsigned char 
  4144 ;; Return value:  Size  Location     Type
  4145 ;;                  1    wreg      unsigned char 
  4146 ;; Registers used:
  4147 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4148 ;; Tracked objects:
  4149 ;;		On entry : 0/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4153 ;;      Params:         0       0       1       0       0
  4154 ;;      Locals:         0       0       1       0       0
  4155 ;;      Temps:          0       0       0       0       0
  4156 ;;      Totals:         0       0       2       0       0
  4157 ;;Total ram usage:        2 bytes
  4158 ;; Hardware stack levels used:    1
  4159 ;; Hardware stack levels required when called:    4
  4160 ;; This function calls:
  4161 ;;		_SSD_config
  4162 ;; This function is called by:
  4163 ;;		_EWH_SSD_Update
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166                           
  4167                           
  4168                           ;psect for function _SSD_Write
  4169  090C                     _SSD_Write:
  4170                           
  4171                           ;incstack = 0
  4172                           ; Regs used in _SSD_Write: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4173                           ;SSD_Write@ID stored from wreg
  4174  090C  1683               	bsf	3,5	;RP0=1, select bank1
  4175  090D  1303               	bcf	3,6	;RP1=0, select bank1
  4176  090E  00A9               	movwf	SSD_Write@ID^(0+128)
  4177  090F                     l2720:
  4178                           
  4179                           ;SSD.c: 41: Std_ReturnType SSD_Write(SSD_ID ID ,SSD_Number Number);SSD.c: 42: {;SSD.c: 4
      +                          4:     SSD_config(ID,ON);
  4180  090F  01A0               	clrf	SSD_config@SSD_state^(0+128)
  4181  0910  0AA0               	incf	SSD_config@SSD_state^(0+128),f
  4182  0911  0829               	movf	SSD_Write@ID^(0+128),w
  4183  0912  120A  158A  2681  120A  158A  	fcall	_SSD_config
  4184  0917                     l2722:
  4185                           
  4186                           ;SSD.c: 46:     ((TRISD)=(0u));
  4187  0917  1683               	bsf	3,5	;RP0=1, select bank1
  4188  0918  1303               	bcf	3,6	;RP1=0, select bank1
  4189  0919  0188               	clrf	8	;volatile
  4190  091A                     l2724:
  4191                           
  4192                           ;SSD.c: 48:     if((Number>=0) && (Number<=9))
  4193  091A  300A               	movlw	10
  4194  091B  0228               	subwf	SSD_Write@Number^(0+128),w
  4195  091C  1803               	skipnc
  4196  091D  291F               	goto	u2021
  4197  091E  2920               	goto	u2020
  4198  091F                     u2021:
  4199  091F  2928               	goto	l651
  4200  0920                     u2020:
  4201  0920                     l2726:
  4202                           
  4203                           ;SSD.c: 49:     {;SSD.c: 51:         ((PORTD)=(SSD_code[Number]));
  4204  0920  0828               	movf	SSD_Write@Number^(0+128),w
  4205  0921  3ED5               	addlw	(low (_SSD_code| 0))& (0+255)
  4206  0922  0084               	movwf	4
  4207  0923  1383               	bcf	3,7	;select IRP bank1
  4208  0924  0800               	movf	0,w
  4209  0925  1283               	bcf	3,5	;RP0=0, select bank0
  4210  0926  1303               	bcf	3,6	;RP1=0, select bank0
  4211  0927  0088               	movwf	8	;volatile
  4212  0928                     l651:
  4213  0928  0008               	return
  4214  0929                     __end_of_SSD_Write:
  4215                           
  4216                           	psect	text22
  4217  087A                     __ptext22:	
  4218 ;; *************** function _SSD_OFF *****************
  4219 ;; Defined at:
  4220 ;;		line 61 in file "SSD.c"
  4221 ;; Parameters:    Size  Location     Type
  4222 ;;  ID              1    wreg     unsigned char 
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;  ID              1    4[BANK1 ] unsigned char 
  4225 ;; Return value:  Size  Location     Type
  4226 ;;                  1    wreg      void 
  4227 ;; Registers used:
  4228 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4229 ;; Tracked objects:
  4230 ;;		On entry : 0/0
  4231 ;;		On exit  : 0/0
  4232 ;;		Unchanged: 0/0
  4233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4234 ;;      Params:         0       0       0       0       0
  4235 ;;      Locals:         0       0       1       0       0
  4236 ;;      Temps:          0       0       0       0       0
  4237 ;;      Totals:         0       0       1       0       0
  4238 ;;Total ram usage:        1 bytes
  4239 ;; Hardware stack levels used:    1
  4240 ;; Hardware stack levels required when called:    4
  4241 ;; This function calls:
  4242 ;;		_SSD_config
  4243 ;; This function is called by:
  4244 ;;		_EWH_SSD_OFF
  4245 ;;		_EWH_SSD_Update
  4246 ;; This function uses a non-reentrant model
  4247 ;;
  4248                           
  4249                           
  4250                           ;psect for function _SSD_OFF
  4251  087A                     _SSD_OFF:
  4252                           
  4253                           ;incstack = 0
  4254                           ; Regs used in _SSD_OFF: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4255                           ;SSD_OFF@ID stored from wreg
  4256  087A  1683               	bsf	3,5	;RP0=1, select bank1
  4257  087B  1303               	bcf	3,6	;RP1=0, select bank1
  4258  087C  00A4               	movwf	SSD_OFF@ID^(0+128)
  4259  087D                     l2718:
  4260                           
  4261                           ;SSD.c: 61: void SSD_OFF (SSD_ID ID);SSD.c: 62: {;SSD.c: 63:     SSD_config(ID,OFF);
  4262  087D  01A0               	clrf	SSD_config@SSD_state^(0+128)
  4263  087E  0824               	movf	SSD_OFF@ID^(0+128),w
  4264  087F  120A  158A  2681  120A  158A  	fcall	_SSD_config
  4265  0884                     l655:
  4266  0884  0008               	return
  4267  0885                     __end_of_SSD_OFF:
  4268                           
  4269                           	psect	text23
  4270  0E81                     __ptext23:	
  4271 ;; *************** function _SSD_config *****************
  4272 ;; Defined at:
  4273 ;;		line 17 in file "SSD.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;  ID              1    wreg     unsigned char 
  4276 ;;  SSD_state       1    0[BANK1 ] enum E13
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;  ID              1    3[BANK1 ] unsigned char 
  4279 ;; Return value:  Size  Location     Type
  4280 ;;                  1    wreg      void 
  4281 ;; Registers used:
  4282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4283 ;; Tracked objects:
  4284 ;;		On entry : 0/0
  4285 ;;		On exit  : 0/0
  4286 ;;		Unchanged: 0/0
  4287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4288 ;;      Params:         0       0       1       0       0
  4289 ;;      Locals:         0       0       1       0       0
  4290 ;;      Temps:          0       0       2       0       0
  4291 ;;      Totals:         0       0       4       0       0
  4292 ;;Total ram usage:        4 bytes
  4293 ;; Hardware stack levels used:    1
  4294 ;; Hardware stack levels required when called:    3
  4295 ;; This function calls:
  4296 ;;		Nothing
  4297 ;; This function is called by:
  4298 ;;		_SSD_Write
  4299 ;;		_SSD_OFF
  4300 ;;		_SSD_ON
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303                           
  4304                           
  4305                           ;psect for function _SSD_config
  4306  0E81                     _SSD_config:
  4307                           
  4308                           ;incstack = 0
  4309                           ; Regs used in _SSD_config: [wreg-fsr0h+status,2+status,0+btemp+1]
  4310                           ;SSD_config@ID stored from wreg
  4311  0E81  1683               	bsf	3,5	;RP0=1, select bank1
  4312  0E82  1303               	bcf	3,6	;RP1=0, select bank1
  4313  0E83  00A3               	movwf	SSD_config@ID^(0+128)
  4314  0E84                     l2646:
  4315                           
  4316                           ;SSD.c: 17: static void SSD_config (SSD_ID ID ,tState SSD_state);SSD.c: 18: {;SSD.c: 21:
      +                               switch(ID)
  4317  0E84  2ED5               	goto	l2690
  4318  0E85                     l2650:
  4319  0E85  30FB               	movlw	251
  4320  0E86  00FF               	movwf	btemp+1
  4321  0E87  087F               	movf	btemp+1,w
  4322  0E88  0585               	andwf	5,f	;volatile
  4323  0E89                     l2652:
  4324                           
  4325                           ;SSD.c: 25:             (SSD_state)?(PORTA |= (1<<2)) : (PORTA &= ~(1<<2));
  4326  0E89  0820               	movf	SSD_config@SSD_state^(0+128),w
  4327  0E8A  1903               	btfsc	3,2
  4328  0E8B  2E8D               	goto	u1931
  4329  0E8C  2E8E               	goto	u1930
  4330  0E8D                     u1931:
  4331  0E8D  2E92               	goto	l2656
  4332  0E8E                     u1930:
  4333  0E8E                     l2654:
  4334  0E8E  1283               	bcf	3,5	;RP0=0, select bank0
  4335  0E8F  1303               	bcf	3,6	;RP1=0, select bank0
  4336  0E90  1505               	bsf	5,2	;volatile
  4337  0E91  2EEB               	goto	l647
  4338  0E92                     l2656:
  4339  0E92  30FB               	movlw	251
  4340  0E93  00FF               	movwf	btemp+1
  4341  0E94  087F               	movf	btemp+1,w
  4342  0E95  1283               	bcf	3,5	;RP0=0, select bank0
  4343  0E96  1303               	bcf	3,6	;RP1=0, select bank0
  4344  0E97  0585               	andwf	5,f	;volatile
  4345  0E98  2EEB               	goto	l647
  4346  0E99                     l2660:
  4347  0E99  30F7               	movlw	247
  4348  0E9A  00FF               	movwf	btemp+1
  4349  0E9B  087F               	movf	btemp+1,w
  4350  0E9C  0585               	andwf	5,f	;volatile
  4351  0E9D                     l2662:
  4352                           
  4353                           ;SSD.c: 29:             (SSD_state)?(PORTA |= (1<<3)) : (PORTA &= ~(1<<3));
  4354  0E9D  0820               	movf	SSD_config@SSD_state^(0+128),w
  4355  0E9E  1903               	btfsc	3,2
  4356  0E9F  2EA1               	goto	u1941
  4357  0EA0  2EA2               	goto	u1940
  4358  0EA1                     u1941:
  4359  0EA1  2EA6               	goto	l2666
  4360  0EA2                     u1940:
  4361  0EA2                     l2664:
  4362  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  4363  0EA3  1303               	bcf	3,6	;RP1=0, select bank0
  4364  0EA4  1585               	bsf	5,3	;volatile
  4365  0EA5  2EEB               	goto	l647
  4366  0EA6                     l2666:
  4367  0EA6  30F7               	movlw	247
  4368  0EA7  00FF               	movwf	btemp+1
  4369  0EA8  087F               	movf	btemp+1,w
  4370  0EA9  1283               	bcf	3,5	;RP0=0, select bank0
  4371  0EAA  1303               	bcf	3,6	;RP1=0, select bank0
  4372  0EAB  0585               	andwf	5,f	;volatile
  4373  0EAC  2EEB               	goto	l647
  4374  0EAD                     l2670:
  4375  0EAD  30EF               	movlw	239
  4376  0EAE  00FF               	movwf	btemp+1
  4377  0EAF  087F               	movf	btemp+1,w
  4378  0EB0  0585               	andwf	5,f	;volatile
  4379  0EB1                     l2672:
  4380                           
  4381                           ;SSD.c: 33:             (SSD_state)?(PORTA |= (1<<4)) : (PORTA &= ~(1<<4));
  4382  0EB1  0820               	movf	SSD_config@SSD_state^(0+128),w
  4383  0EB2  1903               	btfsc	3,2
  4384  0EB3  2EB5               	goto	u1951
  4385  0EB4  2EB6               	goto	u1950
  4386  0EB5                     u1951:
  4387  0EB5  2EBA               	goto	l2676
  4388  0EB6                     u1950:
  4389  0EB6                     l2674:
  4390  0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  4391  0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  4392  0EB8  1605               	bsf	5,4	;volatile
  4393  0EB9  2EEB               	goto	l647
  4394  0EBA                     l2676:
  4395  0EBA  30EF               	movlw	239
  4396  0EBB  00FF               	movwf	btemp+1
  4397  0EBC  087F               	movf	btemp+1,w
  4398  0EBD  1283               	bcf	3,5	;RP0=0, select bank0
  4399  0EBE  1303               	bcf	3,6	;RP1=0, select bank0
  4400  0EBF  0585               	andwf	5,f	;volatile
  4401  0EC0  2EEB               	goto	l647
  4402  0EC1                     l2680:
  4403  0EC1  30DF               	movlw	223
  4404  0EC2  00FF               	movwf	btemp+1
  4405  0EC3  087F               	movf	btemp+1,w
  4406  0EC4  0585               	andwf	5,f	;volatile
  4407  0EC5                     l2682:
  4408                           
  4409                           ;SSD.c: 37:             (SSD_state)?(PORTA |= (1<<5)) : (PORTA &= ~(1<<5));
  4410  0EC5  0820               	movf	SSD_config@SSD_state^(0+128),w
  4411  0EC6  1903               	btfsc	3,2
  4412  0EC7  2EC9               	goto	u1961
  4413  0EC8  2ECA               	goto	u1960
  4414  0EC9                     u1961:
  4415  0EC9  2ECE               	goto	l2686
  4416  0ECA                     u1960:
  4417  0ECA                     l2684:
  4418  0ECA  1283               	bcf	3,5	;RP0=0, select bank0
  4419  0ECB  1303               	bcf	3,6	;RP1=0, select bank0
  4420  0ECC  1685               	bsf	5,5	;volatile
  4421  0ECD  2EEB               	goto	l647
  4422  0ECE                     l2686:
  4423  0ECE  30DF               	movlw	223
  4424  0ECF  00FF               	movwf	btemp+1
  4425  0ED0  087F               	movf	btemp+1,w
  4426  0ED1  1283               	bcf	3,5	;RP0=0, select bank0
  4427  0ED2  1303               	bcf	3,6	;RP1=0, select bank0
  4428  0ED3  0585               	andwf	5,f	;volatile
  4429  0ED4  2EEB               	goto	l647
  4430  0ED5                     l2690:
  4431  0ED5  0823               	movf	SSD_config@ID^(0+128),w
  4432  0ED6  00A1               	movwf	??_SSD_config^(0+128)
  4433  0ED7  01A2               	clrf	(??_SSD_config^(0+128)+1)
  4434                           
  4435                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4436                           ; Switch size 1, requested type "simple"
  4437                           ; Number of cases is 1, Range of values is 0 to 0
  4438                           ; switch strategies available:
  4439                           ; Name         Instructions Cycles
  4440                           ; simple_byte            4     3 (average)
  4441                           ; direct_byte           11     8 (fixed)
  4442                           ; jumptable            260     6 (fixed)
  4443                           ;	Chosen strategy is simple_byte
  4444  0ED8  0822               	movf	(??_SSD_config+1)^(0+128),w
  4445  0ED9  3A00               	xorlw	0	; case 0
  4446  0EDA  1903               	skipnz
  4447  0EDB  2EDD               	goto	l3924
  4448  0EDC  2EEB               	goto	l647
  4449  0EDD                     l3924:
  4450                           
  4451                           ; Switch size 1, requested type "simple"
  4452                           ; Number of cases is 4, Range of values is 2 to 5
  4453                           ; switch strategies available:
  4454                           ; Name         Instructions Cycles
  4455                           ; simple_byte           13     7 (average)
  4456                           ; direct_byte           23    11 (fixed)
  4457                           ; jumptable            263     9 (fixed)
  4458                           ;	Chosen strategy is simple_byte
  4459  0EDD  0821               	movf	??_SSD_config^(0+128),w
  4460  0EDE  3A02               	xorlw	2	; case 2
  4461  0EDF  1903               	skipnz
  4462  0EE0  2E85               	goto	l2650
  4463  0EE1  3A01               	xorlw	1	; case 3
  4464  0EE2  1903               	skipnz
  4465  0EE3  2E99               	goto	l2660
  4466  0EE4  3A07               	xorlw	7	; case 4
  4467  0EE5  1903               	skipnz
  4468  0EE6  2EAD               	goto	l2670
  4469  0EE7  3A01               	xorlw	1	; case 5
  4470  0EE8  1903               	skipnz
  4471  0EE9  2EC1               	goto	l2680
  4472  0EEA  2EEB               	goto	l647
  4473  0EEB                     l647:
  4474  0EEB  0008               	return
  4475  0EEC                     __end_of_SSD_config:
  4476                           
  4477                           	psect	text24
  4478  0849                     __ptext24:	
  4479 ;; *************** function _EWH_ClearEvent *****************
  4480 ;; Defined at:
  4481 ;;		line 309 in file "EWH.c"
  4482 ;; Parameters:    Size  Location     Type
  4483 ;;  Event_index     1    wreg     unsigned char 
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;  Event_index     1    0[BANK1 ] unsigned char 
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  1    wreg      void 
  4488 ;; Registers used:
  4489 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/0
  4492 ;;		On exit  : 0/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4495 ;;      Params:         0       0       0       0       0
  4496 ;;      Locals:         0       0       1       0       0
  4497 ;;      Temps:          0       0       0       0       0
  4498 ;;      Totals:         0       0       1       0       0
  4499 ;;Total ram usage:        1 bytes
  4500 ;; Hardware stack levels used:    1
  4501 ;; Hardware stack levels required when called:    3
  4502 ;; This function calls:
  4503 ;;		Nothing
  4504 ;; This function is called by:
  4505 ;;		_EWH_WakeUP_Mode
  4506 ;;		_EWH_SetTemp_Mode
  4507 ;;		_EWH_Operating_Mode
  4508 ;; This function uses a non-reentrant model
  4509 ;;
  4510                           
  4511                           
  4512                           ;psect for function _EWH_ClearEvent
  4513  0849                     _EWH_ClearEvent:
  4514                           
  4515                           ;incstack = 0
  4516                           ; Regs used in _EWH_ClearEvent: [wreg-fsr0h+status,2+status,0]
  4517                           ;EWH_ClearEvent@Event_index stored from wreg
  4518  0849  1683               	bsf	3,5	;RP0=1, select bank1
  4519  084A  1303               	bcf	3,6	;RP1=0, select bank1
  4520  084B  00A0               	movwf	EWH_ClearEvent@Event_index^(0+128)
  4521  084C                     l3006:
  4522                           
  4523                           ;EWH.c: 309: void EWH_ClearEvent(uint8_t Event_index);EWH.c: 310: {;EWH.c: 311:     EWH_
      +                          Events[Event_index]=0;
  4524  084C  0820               	movf	EWH_ClearEvent@Event_index^(0+128),w
  4525  084D  3EBD               	addlw	(low (_EWH_Events| 0))& (0+255)
  4526  084E  0084               	movwf	4
  4527  084F  1383               	bcf	3,7	;select IRP bank1
  4528  0850  0180               	clrf	0
  4529  0851                     l549:
  4530  0851  0008               	return
  4531  0852                     __end_of_EWH_ClearEvent:
  4532                           
  4533                           	psect	text25
  4534  0C9F                     __ptext25:	
  4535 ;; *************** function _DD_SetState *****************
  4536 ;; Defined at:
  4537 ;;		line 28 in file "DD.c"
  4538 ;; Parameters:    Size  Location     Type
  4539 ;;  device          1    wreg     enum E882
  4540 ;;  state           1    0[BANK1 ] enum E13
  4541 ;; Auto vars:     Size  Location     Type
  4542 ;;  device          1    3[BANK1 ] enum E882
  4543 ;; Return value:  Size  Location     Type
  4544 ;;                  1    wreg      void 
  4545 ;; Registers used:
  4546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4547 ;; Tracked objects:
  4548 ;;		On entry : 0/0
  4549 ;;		On exit  : 0/0
  4550 ;;		Unchanged: 0/0
  4551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4552 ;;      Params:         0       0       1       0       0
  4553 ;;      Locals:         0       0       1       0       0
  4554 ;;      Temps:          0       0       2       0       0
  4555 ;;      Totals:         0       0       4       0       0
  4556 ;;Total ram usage:        4 bytes
  4557 ;; Hardware stack levels used:    1
  4558 ;; Hardware stack levels required when called:    3
  4559 ;; This function calls:
  4560 ;;		Nothing
  4561 ;; This function is called by:
  4562 ;;		_EWH_Sleep_Mode
  4563 ;;		_EWH_SetTemp_Mode
  4564 ;;		_EWH_Operating_Mode
  4565 ;; This function uses a non-reentrant model
  4566 ;;
  4567                           
  4568                           
  4569                           ;psect for function _DD_SetState
  4570  0C9F                     _DD_SetState:
  4571                           
  4572                           ;incstack = 0
  4573                           ; Regs used in _DD_SetState: [wreg-fsr0h+status,2+status,0+btemp+1]
  4574                           ;DD_SetState@device stored from wreg
  4575  0C9F  1683               	bsf	3,5	;RP0=1, select bank1
  4576  0CA0  1303               	bcf	3,6	;RP1=0, select bank1
  4577  0CA1  00A3               	movwf	DD_SetState@device^(0+128)
  4578  0CA2                     l2898:
  4579                           
  4580                           ;DD.c: 28: void DD_SetState(tDD device ,tState state);DD.c: 29: {;DD.c: 30:     switch(d
      +                          evice)
  4581  0CA2  2CE5               	goto	l2926
  4582  0CA3                     l2900:
  4583                           
  4584                           ;DD.c: 33:             (state)?(PORTC |= (1<<5)) : (PORTC &= ~(1<<5));
  4585  0CA3  0820               	movf	DD_SetState@state^(0+128),w
  4586  0CA4  1903               	btfsc	3,2
  4587  0CA5  2CA7               	goto	u2341
  4588  0CA6  2CA8               	goto	u2340
  4589  0CA7                     u2341:
  4590  0CA7  2CAC               	goto	l2904
  4591  0CA8                     u2340:
  4592  0CA8                     l2902:
  4593  0CA8  1283               	bcf	3,5	;RP0=0, select bank0
  4594  0CA9  1303               	bcf	3,6	;RP1=0, select bank0
  4595  0CAA  1687               	bsf	7,5	;volatile
  4596  0CAB  2CB2               	goto	l2906
  4597  0CAC                     l2904:
  4598  0CAC  30DF               	movlw	223
  4599  0CAD  00FF               	movwf	btemp+1
  4600  0CAE  087F               	movf	btemp+1,w
  4601  0CAF  1283               	bcf	3,5	;RP0=0, select bank0
  4602  0CB0  1303               	bcf	3,6	;RP1=0, select bank0
  4603  0CB1  0587               	andwf	7,f	;volatile
  4604  0CB2                     l2906:
  4605                           
  4606                           ;DD.c: 34:             Devices_State.HEATER_State=state;
  4607  0CB2  1683               	bsf	3,5	;RP0=1, select bank1
  4608  0CB3  1303               	bcf	3,6	;RP1=0, select bank1
  4609  0CB4  0820               	movf	DD_SetState@state^(0+128),w
  4610  0CB5  00FF               	movwf	btemp+1
  4611  0CB6  087F               	movf	btemp+1,w
  4612  0CB7  00C1               	movwf	_Devices_State^(0+128)
  4613                           
  4614                           ;DD.c: 35:             break;
  4615  0CB8  2CF8               	goto	l262
  4616  0CB9                     l2908:
  4617                           
  4618                           ;DD.c: 37:             (state)?(PORTC |= (1<<2)) : (PORTC &= ~(1<<2));
  4619  0CB9  0820               	movf	DD_SetState@state^(0+128),w
  4620  0CBA  1903               	btfsc	3,2
  4621  0CBB  2CBD               	goto	u2351
  4622  0CBC  2CBE               	goto	u2350
  4623  0CBD                     u2351:
  4624  0CBD  2CC2               	goto	l2912
  4625  0CBE                     u2350:
  4626  0CBE                     l2910:
  4627  0CBE  1283               	bcf	3,5	;RP0=0, select bank0
  4628  0CBF  1303               	bcf	3,6	;RP1=0, select bank0
  4629  0CC0  1507               	bsf	7,2	;volatile
  4630  0CC1  2CC8               	goto	l2914
  4631  0CC2                     l2912:
  4632  0CC2  30FB               	movlw	251
  4633  0CC3  00FF               	movwf	btemp+1
  4634  0CC4  087F               	movf	btemp+1,w
  4635  0CC5  1283               	bcf	3,5	;RP0=0, select bank0
  4636  0CC6  1303               	bcf	3,6	;RP1=0, select bank0
  4637  0CC7  0587               	andwf	7,f	;volatile
  4638  0CC8                     l2914:
  4639                           
  4640                           ;DD.c: 38:             Devices_State.COOLER_State=state;
  4641  0CC8  1683               	bsf	3,5	;RP0=1, select bank1
  4642  0CC9  1303               	bcf	3,6	;RP1=0, select bank1
  4643  0CCA  0820               	movf	DD_SetState@state^(0+128),w
  4644  0CCB  00FF               	movwf	btemp+1
  4645  0CCC  087F               	movf	btemp+1,w
  4646  0CCD  00C3               	movwf	(_Devices_State^(0+128)+2)
  4647                           
  4648                           ;DD.c: 39:             break;
  4649  0CCE  2CF8               	goto	l262
  4650  0CCF                     l2916:
  4651                           
  4652                           ;DD.c: 41:             (state)?(PORTB |= (1<<7)) : (PORTB &= ~(1<<7));
  4653  0CCF  0820               	movf	DD_SetState@state^(0+128),w
  4654  0CD0  1903               	btfsc	3,2
  4655  0CD1  2CD3               	goto	u2361
  4656  0CD2  2CD4               	goto	u2360
  4657  0CD3                     u2361:
  4658  0CD3  2CD8               	goto	l2920
  4659  0CD4                     u2360:
  4660  0CD4                     l2918:
  4661  0CD4  1283               	bcf	3,5	;RP0=0, select bank0
  4662  0CD5  1303               	bcf	3,6	;RP1=0, select bank0
  4663  0CD6  1786               	bsf	6,7	;volatile
  4664  0CD7  2CDE               	goto	l2922
  4665  0CD8                     l2920:
  4666  0CD8  307F               	movlw	127
  4667  0CD9  00FF               	movwf	btemp+1
  4668  0CDA  087F               	movf	btemp+1,w
  4669  0CDB  1283               	bcf	3,5	;RP0=0, select bank0
  4670  0CDC  1303               	bcf	3,6	;RP1=0, select bank0
  4671  0CDD  0586               	andwf	6,f	;volatile
  4672  0CDE                     l2922:
  4673                           
  4674                           ;DD.c: 42:             Devices_State.HEATER_LED_State=state;
  4675  0CDE  1683               	bsf	3,5	;RP0=1, select bank1
  4676  0CDF  1303               	bcf	3,6	;RP1=0, select bank1
  4677  0CE0  0820               	movf	DD_SetState@state^(0+128),w
  4678  0CE1  00FF               	movwf	btemp+1
  4679  0CE2  087F               	movf	btemp+1,w
  4680  0CE3  00C2               	movwf	(_Devices_State^(0+128)+1)
  4681                           
  4682                           ;DD.c: 43:             break;
  4683  0CE4  2CF8               	goto	l262
  4684  0CE5                     l2926:
  4685  0CE5  0823               	movf	DD_SetState@device^(0+128),w
  4686  0CE6  00A1               	movwf	??_DD_SetState^(0+128)
  4687  0CE7  01A2               	clrf	(??_DD_SetState^(0+128)+1)
  4688                           
  4689                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4690                           ; Switch size 1, requested type "simple"
  4691                           ; Number of cases is 1, Range of values is 0 to 0
  4692                           ; switch strategies available:
  4693                           ; Name         Instructions Cycles
  4694                           ; simple_byte            4     3 (average)
  4695                           ; direct_byte           11     8 (fixed)
  4696                           ; jumptable            260     6 (fixed)
  4697                           ;	Chosen strategy is simple_byte
  4698  0CE8  0822               	movf	(??_DD_SetState+1)^(0+128),w
  4699  0CE9  3A00               	xorlw	0	; case 0
  4700  0CEA  1903               	skipnz
  4701  0CEB  2CED               	goto	l3926
  4702  0CEC  2CF8               	goto	l262
  4703  0CED                     l3926:
  4704                           
  4705                           ; Switch size 1, requested type "simple"
  4706                           ; Number of cases is 3, Range of values is 0 to 2
  4707                           ; switch strategies available:
  4708                           ; Name         Instructions Cycles
  4709                           ; simple_byte           10     6 (average)
  4710                           ; direct_byte           17     8 (fixed)
  4711                           ; jumptable            260     6 (fixed)
  4712                           ;	Chosen strategy is simple_byte
  4713  0CED  0821               	movf	??_DD_SetState^(0+128),w
  4714  0CEE  3A00               	xorlw	0	; case 0
  4715  0CEF  1903               	skipnz
  4716  0CF0  2CA3               	goto	l2900
  4717  0CF1  3A01               	xorlw	1	; case 1
  4718  0CF2  1903               	skipnz
  4719  0CF3  2CB9               	goto	l2908
  4720  0CF4  3A03               	xorlw	3	; case 2
  4721  0CF5  1903               	skipnz
  4722  0CF6  2CCF               	goto	l2916
  4723  0CF7  2CF8               	goto	l262
  4724  0CF8                     l262:
  4725  0CF8  0008               	return
  4726  0CF9                     __end_of_DD_SetState:
  4727                           
  4728                           	psect	text26
  4729  0AD4                     __ptext26:	
  4730 ;; *************** function _EWH_Init *****************
  4731 ;; Defined at:
  4732 ;;		line 262 in file "EWH.c"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;		None
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;  i2c_config      6   17[BANK1 ] struct .
  4737 ;;  adc_config      4   23[BANK1 ] struct .
  4738 ;;  TMR1_cfg        2   15[BANK1 ] struct .
  4739 ;; Return value:  Size  Location     Type
  4740 ;;                  1    wreg      void 
  4741 ;; Registers used:
  4742 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4743 ;; Tracked objects:
  4744 ;;		On entry : 0/0
  4745 ;;		On exit  : 0/0
  4746 ;;		Unchanged: 0/0
  4747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4748 ;;      Params:         0       0       0       0       0
  4749 ;;      Locals:         0       0      12       0       0
  4750 ;;      Temps:          0       0       0       0       0
  4751 ;;      Totals:         0       0      12       0       0
  4752 ;;Total ram usage:       12 bytes
  4753 ;; Hardware stack levels used:    1
  4754 ;; Hardware stack levels required when called:    7
  4755 ;; This function calls:
  4756 ;;		_ADC_Init
  4757 ;;		_DD_Init
  4758 ;;		_EWH_EEPROM_Init
  4759 ;;		_I2C_Init
  4760 ;;		_SW_Init
  4761 ;;		_TMR1_Init
  4762 ;; This function is called by:
  4763 ;;		_main
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           
  4768                           ;psect for function _EWH_Init
  4769  0AD4                     _EWH_Init:
  4770  0AD4                     l3058:	
  4771                           ;incstack = 0
  4772                           ; Regs used in _EWH_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4773                           
  4774                           
  4775                           ;EWH.c: 265:     tTMR1_Config TMR1_cfg;;EWH.c: 266:     TMR1_cfg.Prescaler=TMR1_PRESCALE
      +                          R_4;
  4776  0AD4  3002               	movlw	2
  4777  0AD5  00FF               	movwf	btemp+1
  4778  0AD6  087F               	movf	btemp+1,w
  4779  0AD7  1683               	bsf	3,5	;RP0=1, select bank1
  4780  0AD8  1303               	bcf	3,6	;RP1=0, select bank1
  4781  0AD9  00AF               	movwf	EWH_Init@TMR1_cfg^(0+128)
  4782  0ADA                     l3060:
  4783                           
  4784                           ;EWH.c: 267:     TMR1_cfg.clkSource=EXTERNAL_CLK_SOURCE;
  4785  0ADA  01B0               	clrf	(EWH_Init@TMR1_cfg^(0+128)+1)
  4786  0ADB  0AB0               	incf	(EWH_Init@TMR1_cfg^(0+128)+1),f
  4787  0ADC                     l3062:
  4788                           
  4789                           ;EWH.c: 270:     TMR1_Init(&TMR1_cfg);
  4790  0ADC  30AF               	movlw	(low (EWH_Init@TMR1_cfg| 0))& (0+255)
  4791  0ADD  120A  158A  23A8  120A  158A  	fcall	_TMR1_Init
  4792  0AE2                     l3064:
  4793                           
  4794                           ;EWH.c: 273:     tADC_Config adc_config;;EWH.c: 274:     adc_config.alignment=RIGHT;
  4795  0AE2  1683               	bsf	3,5	;RP0=1, select bank1
  4796  0AE3  1303               	bcf	3,6	;RP1=0, select bank1
  4797  0AE4  01B9               	clrf	(EWH_Init@adc_config^(0+128)+2)
  4798  0AE5  0AB9               	incf	(EWH_Init@adc_config^(0+128)+2),f
  4799  0AE6                     l3066:
  4800                           
  4801                           ;EWH.c: 275:     adc_config.channel=ADC2;
  4802  0AE6  3002               	movlw	2
  4803  0AE7  00FF               	movwf	btemp+1
  4804  0AE8  087F               	movf	btemp+1,w
  4805  0AE9  00B7               	movwf	EWH_Init@adc_config^(0+128)
  4806  0AEA                     l3068:
  4807                           
  4808                           ;EWH.c: 276:     adc_config.clk=FOSC_8;
  4809  0AEA  01BA               	clrf	(EWH_Init@adc_config^(0+128)+3)
  4810  0AEB  0ABA               	incf	(EWH_Init@adc_config^(0+128)+3),f
  4811  0AEC                     l3070:
  4812                           
  4813                           ;EWH.c: 277:     adc_config.mode= POLLING_MODE;
  4814  0AEC  01B8               	clrf	(EWH_Init@adc_config^(0+128)+1)
  4815  0AED                     l3072:
  4816                           
  4817                           ;EWH.c: 280:     ADC_Init(&adc_config);
  4818  0AED  30B7               	movlw	(low (EWH_Init@adc_config| 0))& (0+255)
  4819  0AEE  120A  118A  2782  120A  158A  	fcall	_ADC_Init
  4820  0AF3                     l3074:
  4821                           
  4822                           ;EWH.c: 283:     tI2C_Config i2c_config;;EWH.c: 284:     i2c_config.BaudRate=100000;
  4823  0AF3  3000               	movlw	0
  4824  0AF4  1683               	bsf	3,5	;RP0=1, select bank1
  4825  0AF5  1303               	bcf	3,6	;RP1=0, select bank1
  4826  0AF6  00B5               	movwf	((EWH_Init@i2c_config+3)^(0+128)+1)
  4827  0AF7  3001               	movlw	1
  4828  0AF8  00B4               	movwf	((EWH_Init@i2c_config+2)^(0+128)+1)
  4829  0AF9  3086               	movlw	134
  4830  0AFA  00B3               	movwf	((EWH_Init@i2c_config+1)^(0+128)+1)
  4831  0AFB  30A0               	movlw	160
  4832  0AFC  00B2               	movwf	(EWH_Init@i2c_config^(0+128)+1)
  4833  0AFD                     l3076:
  4834                           
  4835                           ;EWH.c: 285:     i2c_config.Mode=Master_Mode;
  4836  0AFD  3008               	movlw	8
  4837  0AFE  00FF               	movwf	btemp+1
  4838  0AFF  087F               	movf	btemp+1,w
  4839  0B00  00B1               	movwf	EWH_Init@i2c_config^(0+128)
  4840                           
  4841                           ;EWH.c: 286:     i2c_config.operationMode=POLLING;
  4842  0B01  01B6               	clrf	(EWH_Init@i2c_config^(0+128)+5)
  4843  0B02                     l3078:
  4844                           
  4845                           ;EWH.c: 289:     I2C_Init(&i2c_config);
  4846  0B02  30B1               	movlw	(low (EWH_Init@i2c_config| 0))& (0+255)
  4847  0B03  120A  158A  235E  120A  158A  	fcall	_I2C_Init
  4848  0B08                     l3080:
  4849                           
  4850                           ;EWH.c: 292:     DD_Init();
  4851  0B08  120A  158A  20EF  120A  158A  	fcall	_DD_Init
  4852  0B0D                     l3082:
  4853                           
  4854                           ;EWH.c: 295:     SW_Init();
  4855  0B0D  120A  158A  2040  120A  158A  	fcall	_SW_Init
  4856  0B12                     l3084:
  4857                           
  4858                           ;EWH.c: 298:     EWH_EEPROM_Init();
  4859  0B12  120A  158A  20AB  120A  158A  	fcall	_EWH_EEPROM_Init
  4860  0B17                     l540:
  4861  0B17  0008               	return
  4862  0B18                     __end_of_EWH_Init:
  4863                           
  4864                           	psect	text27
  4865  0BA8                     __ptext27:	
  4866 ;; *************** function _TMR1_Init *****************
  4867 ;; Defined at:
  4868 ;;		line 15 in file "TMR1.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;  config          1    wreg     PTR struct .
  4871 ;;		 -> EWH_Init@TMR1_cfg(2), 
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;  config          1    2[BANK1 ] PTR struct .
  4874 ;;		 -> EWH_Init@TMR1_cfg(2), 
  4875 ;; Return value:  Size  Location     Type
  4876 ;;                  1    wreg      void 
  4877 ;; Registers used:
  4878 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4879 ;; Tracked objects:
  4880 ;;		On entry : 0/0
  4881 ;;		On exit  : 0/0
  4882 ;;		Unchanged: 0/0
  4883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4884 ;;      Params:         0       0       0       0       0
  4885 ;;      Locals:         0       0       1       0       0
  4886 ;;      Temps:          0       0       2       0       0
  4887 ;;      Totals:         0       0       3       0       0
  4888 ;;Total ram usage:        3 bytes
  4889 ;; Hardware stack levels used:    1
  4890 ;; Hardware stack levels required when called:    3
  4891 ;; This function calls:
  4892 ;;		Nothing
  4893 ;; This function is called by:
  4894 ;;		_EWH_Init
  4895 ;; This function uses a non-reentrant model
  4896 ;;
  4897                           
  4898                           
  4899                           ;psect for function _TMR1_Init
  4900  0BA8                     _TMR1_Init:
  4901                           
  4902                           ;incstack = 0
  4903                           ; Regs used in _TMR1_Init: [wreg-fsr0h+status,2+status,0]
  4904                           ;TMR1_Init@config stored from wreg
  4905  0BA8  1683               	bsf	3,5	;RP0=1, select bank1
  4906  0BA9  1303               	bcf	3,6	;RP1=0, select bank1
  4907  0BAA  00A2               	movwf	TMR1_Init@config^(0+128)
  4908  0BAB                     l2960:
  4909                           
  4910                           ;TMR1.c: 15: void TMR1_Init(tTMR1_Config *config);TMR1.c: 16: {;TMR1.c: 17:     switch(c
      +                          onfig->Prescaler)
  4911  0BAB  2BC0               	goto	l2964
  4912  0BAC                     l339:	
  4913                           ;TMR1.c: 18:     {;TMR1.c: 19:         case TMR1_PRESCALER_1:
  4914                           
  4915                           
  4916                           ;TMR1.c: 20:             T1CKPS0 = 0; T1CKPS1 = 0;
  4917  0BAC  1283               	bcf	3,5	;RP0=0, select bank0
  4918  0BAD  1303               	bcf	3,6	;RP1=0, select bank0
  4919  0BAE  1210               	bcf	16,4	;volatile
  4920  0BAF  1290               	bcf	16,5	;volatile
  4921                           
  4922                           ;TMR1.c: 21:             break;
  4923  0BB0  2BDD               	goto	l2968
  4924  0BB1                     l341:	
  4925                           ;TMR1.c: 22:         case TMR1_PRESCALER_2:
  4926                           
  4927                           
  4928                           ;TMR1.c: 23:             T1CKPS0 = 1; T1CKPS1 = 0;
  4929  0BB1  1283               	bcf	3,5	;RP0=0, select bank0
  4930  0BB2  1303               	bcf	3,6	;RP1=0, select bank0
  4931  0BB3  1610               	bsf	16,4	;volatile
  4932  0BB4  1290               	bcf	16,5	;volatile
  4933                           
  4934                           ;TMR1.c: 24:             break;
  4935  0BB5  2BDD               	goto	l2968
  4936  0BB6                     l342:	
  4937                           ;TMR1.c: 25:         case TMR1_PRESCALER_4:
  4938                           
  4939                           
  4940                           ;TMR1.c: 26:             T1CKPS0 = 0; T1CKPS1 = 1;
  4941  0BB6  1283               	bcf	3,5	;RP0=0, select bank0
  4942  0BB7  1303               	bcf	3,6	;RP1=0, select bank0
  4943  0BB8  1210               	bcf	16,4	;volatile
  4944  0BB9  1690               	bsf	16,5	;volatile
  4945                           
  4946                           ;TMR1.c: 27:             break;
  4947  0BBA  2BDD               	goto	l2968
  4948  0BBB                     l343:	
  4949                           ;TMR1.c: 28:         case TMR1_PRESCALER_8:
  4950                           
  4951                           
  4952                           ;TMR1.c: 29:             T1CKPS0 = 1; T1CKPS1 = 1;
  4953  0BBB  1283               	bcf	3,5	;RP0=0, select bank0
  4954  0BBC  1303               	bcf	3,6	;RP1=0, select bank0
  4955  0BBD  1610               	bsf	16,4	;volatile
  4956  0BBE  1690               	bsf	16,5	;volatile
  4957                           
  4958                           ;TMR1.c: 30:             break;
  4959  0BBF  2BDD               	goto	l2968
  4960  0BC0                     l2964:
  4961  0BC0  0822               	movf	TMR1_Init@config^(0+128),w
  4962  0BC1  0084               	movwf	4
  4963  0BC2  1383               	bcf	3,7	;select IRP bank0
  4964  0BC3  0800               	movf	0,w
  4965  0BC4  00A0               	movwf	??_TMR1_Init^(0+128)
  4966  0BC5  01A1               	clrf	(??_TMR1_Init^(0+128)+1)
  4967                           
  4968                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4969                           ; Switch size 1, requested type "simple"
  4970                           ; Number of cases is 1, Range of values is 0 to 0
  4971                           ; switch strategies available:
  4972                           ; Name         Instructions Cycles
  4973                           ; simple_byte            4     3 (average)
  4974                           ; direct_byte           11     8 (fixed)
  4975                           ; jumptable            260     6 (fixed)
  4976                           ;	Chosen strategy is simple_byte
  4977  0BC6  0821               	movf	(??_TMR1_Init+1)^(0+128),w
  4978  0BC7  3A00               	xorlw	0	; case 0
  4979  0BC8  1903               	skipnz
  4980  0BC9  2BCB               	goto	l3928
  4981  0BCA  2BDD               	goto	l2968
  4982  0BCB                     l3928:
  4983                           
  4984                           ; Switch size 1, requested type "simple"
  4985                           ; Number of cases is 4, Range of values is 0 to 3
  4986                           ; switch strategies available:
  4987                           ; Name         Instructions Cycles
  4988                           ; simple_byte           13     7 (average)
  4989                           ; direct_byte           20     8 (fixed)
  4990                           ; jumptable            260     6 (fixed)
  4991                           ;	Chosen strategy is simple_byte
  4992  0BCB  0820               	movf	??_TMR1_Init^(0+128),w
  4993  0BCC  3A00               	xorlw	0	; case 0
  4994  0BCD  1903               	skipnz
  4995  0BCE  2BAC               	goto	l339
  4996  0BCF  3A01               	xorlw	1	; case 1
  4997  0BD0  1903               	skipnz
  4998  0BD1  2BB1               	goto	l341
  4999  0BD2  3A03               	xorlw	3	; case 2
  5000  0BD3  1903               	skipnz
  5001  0BD4  2BB6               	goto	l342
  5002  0BD5  3A01               	xorlw	1	; case 3
  5003  0BD6  1903               	skipnz
  5004  0BD7  2BBB               	goto	l343
  5005  0BD8  2BDD               	goto	l2968
  5006  0BD9                     l345:	
  5007                           ;TMR1.c: 34:     {;TMR1.c: 35:         case INTERNAL_CLK_SOURCE:
  5008                           
  5009                           
  5010                           ;TMR1.c: 36:             (T0CS = 0);
  5011  0BD9  1281               	bcf	1,5	;volatile
  5012                           
  5013                           ;TMR1.c: 37:             break ;
  5014  0BDA  2BF1               	goto	l348
  5015  0BDB                     l347:	
  5016                           ;TMR1.c: 38:         case EXTERNAL_CLK_SOURCE:
  5017                           
  5018                           
  5019                           ;TMR1.c: 39:             (T0CS = 1);
  5020  0BDB  1681               	bsf	1,5	;volatile
  5021                           
  5022                           ;TMR1.c: 40:             break ;
  5023  0BDC  2BF1               	goto	l348
  5024  0BDD                     l2968:
  5025  0BDD  1683               	bsf	3,5	;RP0=1, select bank1
  5026  0BDE  1303               	bcf	3,6	;RP1=0, select bank1
  5027  0BDF  0A22               	incf	TMR1_Init@config^(0+128),w
  5028  0BE0  0084               	movwf	4
  5029  0BE1  0800               	movf	0,w
  5030  0BE2  00A0               	movwf	??_TMR1_Init^(0+128)
  5031  0BE3  01A1               	clrf	(??_TMR1_Init^(0+128)+1)
  5032                           
  5033                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5034                           ; Switch size 1, requested type "simple"
  5035                           ; Number of cases is 1, Range of values is 0 to 0
  5036                           ; switch strategies available:
  5037                           ; Name         Instructions Cycles
  5038                           ; simple_byte            4     3 (average)
  5039                           ; direct_byte           11     8 (fixed)
  5040                           ; jumptable            260     6 (fixed)
  5041                           ;	Chosen strategy is simple_byte
  5042  0BE4  0821               	movf	(??_TMR1_Init+1)^(0+128),w
  5043  0BE5  3A00               	xorlw	0	; case 0
  5044  0BE6  1903               	skipnz
  5045  0BE7  2BE9               	goto	l3930
  5046  0BE8  2BF1               	goto	l348
  5047  0BE9                     l3930:
  5048                           
  5049                           ; Switch size 1, requested type "simple"
  5050                           ; Number of cases is 2, Range of values is 0 to 1
  5051                           ; switch strategies available:
  5052                           ; Name         Instructions Cycles
  5053                           ; simple_byte            7     4 (average)
  5054                           ; direct_byte           14     8 (fixed)
  5055                           ; jumptable            260     6 (fixed)
  5056                           ;	Chosen strategy is simple_byte
  5057  0BE9  0820               	movf	??_TMR1_Init^(0+128),w
  5058  0BEA  3A00               	xorlw	0	; case 0
  5059  0BEB  1903               	skipnz
  5060  0BEC  2BD9               	goto	l345
  5061  0BED  3A01               	xorlw	1	; case 1
  5062  0BEE  1903               	skipnz
  5063  0BEF  2BDB               	goto	l347
  5064  0BF0  2BF1               	goto	l348
  5065  0BF1                     l348:
  5066  0BF1  0008               	return
  5067  0BF2                     __end_of_TMR1_Init:
  5068                           
  5069                           	psect	text28
  5070  0840                     __ptext28:	
  5071 ;; *************** function _SW_Init *****************
  5072 ;; Defined at:
  5073 ;;		line 16 in file "SW.c"
  5074 ;; Parameters:    Size  Location     Type
  5075 ;;		None
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;		None
  5078 ;; Return value:  Size  Location     Type
  5079 ;;                  1    wreg      void 
  5080 ;; Registers used:
  5081 ;;		wreg, status,2, status,0, btemp+1
  5082 ;; Tracked objects:
  5083 ;;		On entry : 0/0
  5084 ;;		On exit  : 0/0
  5085 ;;		Unchanged: 0/0
  5086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5087 ;;      Params:         0       0       0       0       0
  5088 ;;      Locals:         0       0       0       0       0
  5089 ;;      Temps:          0       0       0       0       0
  5090 ;;      Totals:         0       0       0       0       0
  5091 ;;Total ram usage:        0 bytes
  5092 ;; Hardware stack levels used:    1
  5093 ;; Hardware stack levels required when called:    3
  5094 ;; This function calls:
  5095 ;;		Nothing
  5096 ;; This function is called by:
  5097 ;;		_EWH_Init
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           
  5102                           ;psect for function _SW_Init
  5103  0840                     _SW_Init:
  5104  0840                     l2986:	
  5105                           ;incstack = 0
  5106                           ; Regs used in _SW_Init: [wreg+status,2+status,0+btemp+1]
  5107                           
  5108  0840  1683               	bsf	3,5	;RP0=1, select bank1
  5109  0841  1303               	bcf	3,6	;RP1=0, select bank1
  5110  0842  1506               	bsf	6,2	;volatile
  5111  0843                     l2990:
  5112  0843  1486               	bsf	6,1	;volatile
  5113  0844                     l2994:
  5114  0844  1406               	bsf	6,0	;volatile
  5115  0845                     l2998:
  5116                           
  5117                           ;SW.c: 24:     INTEDG=0;
  5118  0845  1301               	bcf	1,6	;volatile
  5119  0846                     l3000:
  5120                           
  5121                           ;SW.c: 25:     INTE=1;
  5122  0846  160B               	bsf	11,4	;volatile
  5123  0847                     l3002:
  5124                           
  5125                           ;SW.c: 26:     GIE=1;
  5126  0847  178B               	bsf	11,7	;volatile
  5127  0848                     l385:
  5128  0848  0008               	return
  5129  0849                     __end_of_SW_Init:
  5130                           
  5131                           	psect	text29
  5132  0B5E                     __ptext29:	
  5133 ;; *************** function _I2C_Init *****************
  5134 ;; Defined at:
  5135 ;;		line 17 in file "i2c.c"
  5136 ;; Parameters:    Size  Location     Type
  5137 ;;  i2c_config      1    wreg     PTR struct .
  5138 ;;		 -> EWH_Init@i2c_config(6), 
  5139 ;; Auto vars:     Size  Location     Type
  5140 ;;  i2c_config      1   14[BANK1 ] PTR struct .
  5141 ;;		 -> EWH_Init@i2c_config(6), 
  5142 ;; Return value:  Size  Location     Type
  5143 ;;                  1    wreg      void 
  5144 ;; Registers used:
  5145 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5146 ;; Tracked objects:
  5147 ;;		On entry : 0/0
  5148 ;;		On exit  : 0/0
  5149 ;;		Unchanged: 0/0
  5150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5151 ;;      Params:         0       0       0       0       0
  5152 ;;      Locals:         0       0       1       0       0
  5153 ;;      Temps:          0       0       0       0       0
  5154 ;;      Totals:         0       0       1       0       0
  5155 ;;Total ram usage:        1 bytes
  5156 ;; Hardware stack levels used:    1
  5157 ;; Hardware stack levels required when called:    4
  5158 ;; This function calls:
  5159 ;;		___lldiv
  5160 ;; This function is called by:
  5161 ;;		_EWH_Init
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           
  5165                           
  5166                           ;psect for function _I2C_Init
  5167  0B5E                     _I2C_Init:
  5168                           
  5169                           ;incstack = 0
  5170                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5171                           ;I2C_Init@i2c_config stored from wreg
  5172  0B5E  1683               	bsf	3,5	;RP0=1, select bank1
  5173  0B5F  1303               	bcf	3,6	;RP1=0, select bank1
  5174  0B60  00AE               	movwf	I2C_Init@i2c_config^(0+128)
  5175  0B61                     l2850:
  5176                           
  5177                           ;i2c.c: 17: void I2C_Init(tI2C_Config *i2c_config);i2c.c: 18: {;i2c.c: 20:     SSPCON2=0
      +                          x00;
  5178  0B61  0191               	clrf	17	;volatile
  5179                           
  5180                           ;i2c.c: 21:     SSPSTAT=0x00;
  5181  0B62  0194               	clrf	20	;volatile
  5182  0B63                     l2852:
  5183                           
  5184                           ;i2c.c: 23:     SSPCON |= i2c_config->Mode;
  5185  0B63  082E               	movf	I2C_Init@i2c_config^(0+128),w
  5186  0B64  0084               	movwf	4
  5187  0B65  1383               	bcf	3,7	;select IRP bank0
  5188  0B66  0800               	movf	0,w
  5189  0B67  00FF               	movwf	btemp+1
  5190  0B68  087F               	movf	btemp+1,w
  5191  0B69  1283               	bcf	3,5	;RP0=0, select bank0
  5192  0B6A  1303               	bcf	3,6	;RP1=0, select bank0
  5193  0B6B  0494               	iorwf	20,f	;volatile
  5194  0B6C                     l2854:
  5195                           
  5196                           ;i2c.c: 27:     SSPADD = (((4000000/4)/i2c_config->BaudRate) - 1);
  5197  0B6C  1683               	bsf	3,5	;RP0=1, select bank1
  5198  0B6D  1303               	bcf	3,6	;RP1=0, select bank1
  5199  0B6E  0A2E               	incf	I2C_Init@i2c_config^(0+128),w
  5200  0B6F  0084               	movwf	4
  5201  0B70  0800               	movf	0,w
  5202  0B71  00A0               	movwf	___lldiv@divisor^(0+128)
  5203  0B72  0A84               	incf	4,f
  5204  0B73  0800               	movf	0,w
  5205  0B74  00A1               	movwf	(___lldiv@divisor+1)^(0+128)
  5206  0B75  0A84               	incf	4,f
  5207  0B76  0800               	movf	0,w
  5208  0B77  00A2               	movwf	(___lldiv@divisor+2)^(0+128)
  5209  0B78  0A84               	incf	4,f
  5210  0B79  0800               	movf	0,w
  5211  0B7A  00A3               	movwf	(___lldiv@divisor+3)^(0+128)
  5212  0B7B  3000               	movlw	0
  5213  0B7C  00A7               	movwf	(___lldiv@dividend+3)^(0+128)
  5214  0B7D  300F               	movlw	15
  5215  0B7E  00A6               	movwf	(___lldiv@dividend+2)^(0+128)
  5216  0B7F  3042               	movlw	66
  5217  0B80  00A5               	movwf	(___lldiv@dividend+1)^(0+128)
  5218  0B81  3040               	movlw	64
  5219  0B82  00A4               	movwf	___lldiv@dividend^(0+128)
  5220  0B83  120A  158A  25B0  120A  158A  	fcall	___lldiv
  5221  0B88  1683               	bsf	3,5	;RP0=1, select bank1
  5222  0B89  1303               	bcf	3,6	;RP1=0, select bank1
  5223  0B8A  0820               	movf	?___lldiv^(0+128),w
  5224  0B8B  3EFF               	addlw	255
  5225  0B8C  0093               	movwf	19	;volatile
  5226  0B8D                     l2856:
  5227                           
  5228                           ;i2c.c: 37:     SSPEN=1;
  5229  0B8D  1283               	bcf	3,5	;RP0=0, select bank0
  5230  0B8E  1303               	bcf	3,6	;RP1=0, select bank0
  5231  0B8F  1694               	bsf	20,5	;volatile
  5232  0B90                     l2858:
  5233                           
  5234                           ;i2c.c: 43:     (1u)? (TRISC |= (1<<4)) : (TRISC &= ~(1<<4));
  5235  0B90  3080               	movlw	128
  5236  0B91  1683               	bsf	3,5	;RP0=1, select bank1
  5237  0B92  1303               	bcf	3,6	;RP1=0, select bank1
  5238  0B93  0094               	movwf	20	;volatile
  5239  0B94                     l2860:
  5240  0B94  1607               	bsf	7,4	;volatile
  5241  0B95                     l2864:
  5242  0B95  1587               	bsf	7,3	;volatile
  5243  0B96                     l2868:
  5244                           
  5245                           ;i2c.c: 49:     if(i2c_config->operationMode==INTERRUPT)
  5246  0B96  082E               	movf	I2C_Init@i2c_config^(0+128),w
  5247  0B97  3E05               	addlw	5
  5248  0B98  0084               	movwf	4
  5249  0B99  1383               	bcf	3,7	;select IRP bank0
  5250  0B9A  0300               	decf	0,w
  5251  0B9B  1D03               	btfss	3,2
  5252  0B9C  2B9E               	goto	u2331
  5253  0B9D  2B9F               	goto	u2330
  5254  0B9E                     u2331:
  5255  0B9E  2BA7               	goto	l88
  5256  0B9F                     u2330:
  5257  0B9F                     l2870:
  5258                           
  5259                           ;i2c.c: 50:     {;i2c.c: 51:           GIE = 1;
  5260  0B9F  178B               	bsf	11,7	;volatile
  5261                           
  5262                           ;i2c.c: 52:           PEIE = 1;
  5263  0BA0  170B               	bsf	11,6	;volatile
  5264                           
  5265                           ;i2c.c: 53:           SSPIF = 0;
  5266  0BA1  1283               	bcf	3,5	;RP0=0, select bank0
  5267  0BA2  1303               	bcf	3,6	;RP1=0, select bank0
  5268  0BA3  118C               	bcf	12,3	;volatile
  5269                           
  5270                           ;i2c.c: 54:           SSPIE = 1;
  5271  0BA4  1683               	bsf	3,5	;RP0=1, select bank1
  5272  0BA5  1303               	bcf	3,6	;RP1=0, select bank1
  5273  0BA6  158C               	bsf	12,3	;volatile
  5274  0BA7                     l88:
  5275  0BA7  0008               	return
  5276  0BA8                     __end_of_I2C_Init:
  5277                           
  5278                           	psect	text30
  5279  0DB0                     __ptext30:	
  5280 ;; *************** function ___lldiv *****************
  5281 ;; Defined at:
  5282 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;  divisor         4    0[BANK1 ] unsigned long 
  5285 ;;  dividend        4    4[BANK1 ] unsigned long 
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;  quotient        4    9[BANK1 ] unsigned long 
  5288 ;;  counter         1   13[BANK1 ] unsigned char 
  5289 ;; Return value:  Size  Location     Type
  5290 ;;                  4    0[BANK1 ] unsigned long 
  5291 ;; Registers used:
  5292 ;;		wreg, status,2, status,0, btemp+1
  5293 ;; Tracked objects:
  5294 ;;		On entry : 0/0
  5295 ;;		On exit  : 0/0
  5296 ;;		Unchanged: 0/0
  5297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5298 ;;      Params:         0       0       8       0       0
  5299 ;;      Locals:         0       0       5       0       0
  5300 ;;      Temps:          0       0       1       0       0
  5301 ;;      Totals:         0       0      14       0       0
  5302 ;;Total ram usage:       14 bytes
  5303 ;; Hardware stack levels used:    1
  5304 ;; Hardware stack levels required when called:    3
  5305 ;; This function calls:
  5306 ;;		Nothing
  5307 ;; This function is called by:
  5308 ;;		_I2C_Init
  5309 ;; This function uses a non-reentrant model
  5310 ;;
  5311                           
  5312                           
  5313                           ;psect for function ___lldiv
  5314  0DB0                     ___lldiv:
  5315  0DB0                     l2732:	
  5316                           ;incstack = 0
  5317                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  5318                           
  5319  0DB0  3000               	movlw	0
  5320  0DB1  1683               	bsf	3,5	;RP0=1, select bank1
  5321  0DB2  1303               	bcf	3,6	;RP1=0, select bank1
  5322  0DB3  00AC               	movwf	(___lldiv@quotient+3)^(0+128)
  5323  0DB4  3000               	movlw	0
  5324  0DB5  00AB               	movwf	(___lldiv@quotient+2)^(0+128)
  5325  0DB6  3000               	movlw	0
  5326  0DB7  00AA               	movwf	(___lldiv@quotient+1)^(0+128)
  5327  0DB8  3000               	movlw	0
  5328  0DB9  00A9               	movwf	___lldiv@quotient^(0+128)
  5329  0DBA  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  5330  0DBB  0422               	iorwf	(___lldiv@divisor+2)^(0+128),w
  5331  0DBC  0421               	iorwf	(___lldiv@divisor+1)^(0+128),w
  5332  0DBD  0420               	iorwf	___lldiv@divisor^(0+128),w
  5333  0DBE  1903               	skipnz
  5334  0DBF  2DC1               	goto	u2031
  5335  0DC0  2DC2               	goto	u2030
  5336  0DC1                     u2031:
  5337  0DC1  2E0F               	goto	l2754
  5338  0DC2                     u2030:
  5339  0DC2                     l2734:
  5340  0DC2  01AD               	clrf	___lldiv@counter^(0+128)
  5341  0DC3  0AAD               	incf	___lldiv@counter^(0+128),f
  5342  0DC4  2DD2               	goto	l2740
  5343  0DC5                     l2736:
  5344  0DC5  3001               	movlw	1
  5345  0DC6  00A8               	movwf	??___lldiv^(0+128)
  5346  0DC7                     u2045:
  5347  0DC7  1003               	clrc
  5348  0DC8  0DA0               	rlf	___lldiv@divisor^(0+128),f
  5349  0DC9  0DA1               	rlf	(___lldiv@divisor+1)^(0+128),f
  5350  0DCA  0DA2               	rlf	(___lldiv@divisor+2)^(0+128),f
  5351  0DCB  0DA3               	rlf	(___lldiv@divisor+3)^(0+128),f
  5352  0DCC  0BA8               	decfsz	??___lldiv^(0+128),f
  5353  0DCD  2DC7               	goto	u2045
  5354  0DCE                     l2738:
  5355  0DCE  3001               	movlw	1
  5356  0DCF  00FF               	movwf	btemp+1
  5357  0DD0  087F               	movf	btemp+1,w
  5358  0DD1  07AD               	addwf	___lldiv@counter^(0+128),f
  5359  0DD2                     l2740:
  5360  0DD2  1FA3               	btfss	(___lldiv@divisor+3)^(0+128),7
  5361  0DD3  2DD5               	goto	u2051
  5362  0DD4  2DD6               	goto	u2050
  5363  0DD5                     u2051:
  5364  0DD5  2DC5               	goto	l2736
  5365  0DD6                     u2050:
  5366  0DD6                     l2742:
  5367  0DD6  3001               	movlw	1
  5368  0DD7  00A8               	movwf	??___lldiv^(0+128)
  5369  0DD8                     u2065:
  5370  0DD8  1003               	clrc
  5371  0DD9  0DA9               	rlf	___lldiv@quotient^(0+128),f
  5372  0DDA  0DAA               	rlf	(___lldiv@quotient+1)^(0+128),f
  5373  0DDB  0DAB               	rlf	(___lldiv@quotient+2)^(0+128),f
  5374  0DDC  0DAC               	rlf	(___lldiv@quotient+3)^(0+128),f
  5375  0DDD  0BA8               	decfsz	??___lldiv^(0+128),f
  5376  0DDE  2DD8               	goto	u2065
  5377  0DDF                     l2744:
  5378  0DDF  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  5379  0DE0  0227               	subwf	(___lldiv@dividend+3)^(0+128),w
  5380  0DE1  1D03               	skipz
  5381  0DE2  2DED               	goto	u2075
  5382  0DE3  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  5383  0DE4  0226               	subwf	(___lldiv@dividend+2)^(0+128),w
  5384  0DE5  1D03               	skipz
  5385  0DE6  2DED               	goto	u2075
  5386  0DE7  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  5387  0DE8  0225               	subwf	(___lldiv@dividend+1)^(0+128),w
  5388  0DE9  1D03               	skipz
  5389  0DEA  2DED               	goto	u2075
  5390  0DEB  0820               	movf	___lldiv@divisor^(0+128),w
  5391  0DEC  0224               	subwf	___lldiv@dividend^(0+128),w
  5392  0DED                     u2075:
  5393  0DED  1C03               	skipc
  5394  0DEE  2DF0               	goto	u2071
  5395  0DEF  2DF1               	goto	u2070
  5396  0DF0                     u2071:
  5397  0DF0  2E00               	goto	l2750
  5398  0DF1                     u2070:
  5399  0DF1                     l2746:
  5400  0DF1  0820               	movf	___lldiv@divisor^(0+128),w
  5401  0DF2  02A4               	subwf	___lldiv@dividend^(0+128),f
  5402  0DF3  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  5403  0DF4  1C03               	skipc
  5404  0DF5  0F21               	incfsz	(___lldiv@divisor+1)^(0+128),w
  5405  0DF6  02A5               	subwf	(___lldiv@dividend+1)^(0+128),f
  5406  0DF7  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  5407  0DF8  1C03               	skipc
  5408  0DF9  0F22               	incfsz	(___lldiv@divisor+2)^(0+128),w
  5409  0DFA  02A6               	subwf	(___lldiv@dividend+2)^(0+128),f
  5410  0DFB  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  5411  0DFC  1C03               	skipc
  5412  0DFD  0F23               	incfsz	(___lldiv@divisor+3)^(0+128),w
  5413  0DFE  02A7               	subwf	(___lldiv@dividend+3)^(0+128),f
  5414  0DFF                     l2748:
  5415  0DFF  1429               	bsf	___lldiv@quotient^(0+128),0
  5416  0E00                     l2750:
  5417  0E00  3001               	movlw	1
  5418  0E01                     u2085:
  5419  0E01  1003               	clrc
  5420  0E02  0CA3               	rrf	(___lldiv@divisor+3)^(0+128),f
  5421  0E03  0CA2               	rrf	(___lldiv@divisor+2)^(0+128),f
  5422  0E04  0CA1               	rrf	(___lldiv@divisor+1)^(0+128),f
  5423  0E05  0CA0               	rrf	___lldiv@divisor^(0+128),f
  5424  0E06  3EFF               	addlw	-1
  5425  0E07  1D03               	skipz
  5426  0E08  2E01               	goto	u2085
  5427  0E09                     l2752:
  5428  0E09  3001               	movlw	1
  5429  0E0A  02AD               	subwf	___lldiv@counter^(0+128),f
  5430  0E0B  1D03               	btfss	3,2
  5431  0E0C  2E0E               	goto	u2091
  5432  0E0D  2E0F               	goto	u2090
  5433  0E0E                     u2091:
  5434  0E0E  2DD6               	goto	l2742
  5435  0E0F                     u2090:
  5436  0E0F                     l2754:
  5437  0E0F  082C               	movf	(___lldiv@quotient+3)^(0+128),w
  5438  0E10  00A3               	movwf	(?___lldiv+3)^(0+128)
  5439  0E11  082B               	movf	(___lldiv@quotient+2)^(0+128),w
  5440  0E12  00A2               	movwf	(?___lldiv+2)^(0+128)
  5441  0E13  082A               	movf	(___lldiv@quotient+1)^(0+128),w
  5442  0E14  00A1               	movwf	(?___lldiv+1)^(0+128)
  5443  0E15  0829               	movf	___lldiv@quotient^(0+128),w
  5444  0E16  00A0               	movwf	?___lldiv^(0+128)
  5445  0E17                     l780:
  5446  0E17  0008               	return
  5447  0E18                     __end_of___lldiv:
  5448                           
  5449                           	psect	text31
  5450  08AB                     __ptext31:	
  5451 ;; *************** function _EWH_EEPROM_Init *****************
  5452 ;; Defined at:
  5453 ;;		line 314 in file "EWH.c"
  5454 ;; Parameters:    Size  Location     Type
  5455 ;;		None
  5456 ;; Auto vars:     Size  Location     Type
  5457 ;;		None
  5458 ;; Return value:  Size  Location     Type
  5459 ;;                  1    wreg      void 
  5460 ;; Registers used:
  5461 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5462 ;; Tracked objects:
  5463 ;;		On entry : 0/0
  5464 ;;		On exit  : 0/0
  5465 ;;		Unchanged: 0/0
  5466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5467 ;;      Params:         0       0       0       0       0
  5468 ;;      Locals:         0       0       0       0       0
  5469 ;;      Temps:          0       0       0       0       0
  5470 ;;      Totals:         0       0       0       0       0
  5471 ;;Total ram usage:        0 bytes
  5472 ;; Hardware stack levels used:    1
  5473 ;; Hardware stack levels required when called:    6
  5474 ;; This function calls:
  5475 ;;		_EEPROM_WriteByte
  5476 ;; This function is called by:
  5477 ;;		_EWH_Init
  5478 ;; This function uses a non-reentrant model
  5479 ;;
  5480                           
  5481                           
  5482                           ;psect for function _EWH_EEPROM_Init
  5483  08AB                     _EWH_EEPROM_Init:
  5484  08AB                     l3042:	
  5485                           ;incstack = 0
  5486                           ; Regs used in _EWH_EEPROM_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5487                           
  5488                           
  5489                           ;EWH.c: 316:     EEPROM_WriteByte(0x0020,60);
  5490  08AB  3020               	movlw	32
  5491  08AC  1683               	bsf	3,5	;RP0=1, select bank1
  5492  08AD  1303               	bcf	3,6	;RP1=0, select bank1
  5493  08AE  00A1               	movwf	EEPROM_WriteByte@address^(0+128)
  5494  08AF  3000               	movlw	0
  5495  08B0  00A2               	movwf	(EEPROM_WriteByte@address^(0+128)+1)
  5496  08B1  303C               	movlw	60
  5497  08B2  00FF               	movwf	btemp+1
  5498  08B3  087F               	movf	btemp+1,w
  5499  08B4  00A3               	movwf	EEPROM_WriteByte@data^(0+128)
  5500  08B5  120A  158A  2220  120A  158A  	fcall	_EEPROM_WriteByte
  5501  08BA                     l552:
  5502  08BA  0008               	return
  5503  08BB                     __end_of_EWH_EEPROM_Init:
  5504                           
  5505                           	psect	text32
  5506  0A20                     __ptext32:	
  5507 ;; *************** function _EEPROM_WriteByte *****************
  5508 ;; Defined at:
  5509 ;;		line 16 in file "EEPROM.c"
  5510 ;; Parameters:    Size  Location     Type
  5511 ;;  address         2    1[BANK1 ] unsigned short 
  5512 ;;  data            1    3[BANK1 ] unsigned char 
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;		None
  5515 ;; Return value:  Size  Location     Type
  5516 ;;                  1    wreg      void 
  5517 ;; Registers used:
  5518 ;;		wreg, status,2, status,0, pclath, cstack
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5524 ;;      Params:         0       0       3       0       0
  5525 ;;      Locals:         0       0       0       0       0
  5526 ;;      Temps:          0       0       2       0       0
  5527 ;;      Totals:         0       0       5       0       0
  5528 ;;Total ram usage:        5 bytes
  5529 ;; Hardware stack levels used:    1
  5530 ;; Hardware stack levels required when called:    5
  5531 ;; This function calls:
  5532 ;;		_I2C_Master_Send_RepeatedStart
  5533 ;;		_I2C_Master_Send_Start
  5534 ;;		_I2C_Master_Send_Stop
  5535 ;;		_I2C_Master_WriteByte
  5536 ;; This function is called by:
  5537 ;;		_EWH_EEPROM_Init
  5538 ;;		_EWH_EEPROM_Update
  5539 ;; This function uses a non-reentrant model
  5540 ;;
  5541                           
  5542                           
  5543                           ;psect for function _EEPROM_WriteByte
  5544  0A20                     _EEPROM_WriteByte:
  5545  0A20                     l2698:	
  5546                           ;incstack = 0
  5547                           ; Regs used in _EEPROM_WriteByte: [wreg+status,2+status,0+pclath+cstack]
  5548                           
  5549                           
  5550                           ;EEPROM.c: 16: void EEPROM_WriteByte(uint16_t address , uint8_t data);EEPROM.c: 17: {;EE
      +                          PROM.c: 18:   I2C_Master_Send_Start();
  5551  0A20  120A  158A  202E  120A  158A  	fcall	_I2C_Master_Send_Start
  5552                           
  5553                           ;EEPROM.c: 21:   while(I2C_Master_WriteByte(0xA0 | ((address & 0x0700)>>7)) )
  5554  0A25  2A2B               	goto	l13
  5555  0A26                     l2700:
  5556                           
  5557                           ;EEPROM.c: 22:         I2C_Master_Send_RepeatedStart();
  5558  0A26  120A  158A  2025  120A  158A  	fcall	_I2C_Master_Send_RepeatedStart
  5559  0A2B                     l13:
  5560                           
  5561                           ;EEPROM.c: 21:   while(I2C_Master_WriteByte(0xA0 | ((address & 0x0700)>>7)) )
  5562  0A2B  1683               	bsf	3,5	;RP0=1, select bank1
  5563  0A2C  1303               	bcf	3,6	;RP1=0, select bank1
  5564  0A2D  0822               	movf	(EEPROM_WriteByte@address+1)^(0+128),w
  5565  0A2E  00A5               	movwf	(??_EEPROM_WriteByte^(0+128)+1)
  5566  0A2F  0821               	movf	EEPROM_WriteByte@address^(0+128),w
  5567  0A30  00A4               	movwf	??_EEPROM_WriteByte^(0+128)
  5568  0A31  3007               	movlw	7
  5569  0A32                     u1975:
  5570  0A32  1003               	clrc
  5571  0A33  0CA5               	rrf	(??_EEPROM_WriteByte^(0+128)+1),f
  5572  0A34  0CA4               	rrf	??_EEPROM_WriteByte^(0+128),f
  5573  0A35  3EFF               	addlw	-1
  5574  0A36  1D03               	skipz
  5575  0A37  2A32               	goto	u1975
  5576  0A38  0824               	movf	??_EEPROM_WriteByte^(0+128),w
  5577  0A39  390E               	andlw	14
  5578  0A3A  38A0               	iorlw	160
  5579  0A3B  120A  158A  2129  120A  158A  	fcall	_I2C_Master_WriteByte
  5580  0A40  3A00               	xorlw	0
  5581  0A41  1D03               	skipz
  5582  0A42  2A44               	goto	u1981
  5583  0A43  2A45               	goto	u1980
  5584  0A44                     u1981:
  5585  0A44  2A26               	goto	l2700
  5586  0A45                     u1980:
  5587  0A45                     l2702:
  5588                           
  5589                           ;EEPROM.c: 25:   I2C_Master_WriteByte((uint8_t)address);
  5590  0A45  1683               	bsf	3,5	;RP0=1, select bank1
  5591  0A46  1303               	bcf	3,6	;RP1=0, select bank1
  5592  0A47  0821               	movf	EEPROM_WriteByte@address^(0+128),w
  5593  0A48  120A  158A  2129  120A  158A  	fcall	_I2C_Master_WriteByte
  5594                           
  5595                           ;EEPROM.c: 26:   I2C_Master_WriteByte(data);
  5596  0A4D  1683               	bsf	3,5	;RP0=1, select bank1
  5597  0A4E  1303               	bcf	3,6	;RP1=0, select bank1
  5598  0A4F  0823               	movf	EEPROM_WriteByte@data^(0+128),w
  5599  0A50  120A  158A  2129  120A  158A  	fcall	_I2C_Master_WriteByte
  5600                           
  5601                           ;EEPROM.c: 27:   I2C_Master_Send_Stop();
  5602  0A55  120A  158A  2037  120A  158A  	fcall	_I2C_Master_Send_Stop
  5603  0A5A                     l16:
  5604  0A5A  0008               	return
  5605  0A5B                     __end_of_EEPROM_WriteByte:
  5606                           
  5607                           	psect	text33
  5608  0929                     __ptext33:	
  5609 ;; *************** function _I2C_Master_WriteByte *****************
  5610 ;; Defined at:
  5611 ;;		line 100 in file "i2c.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;  Data            1    wreg     unsigned char 
  5614 ;; Auto vars:     Size  Location     Type
  5615 ;;  Data            1    0[BANK1 ] unsigned char 
  5616 ;; Return value:  Size  Location     Type
  5617 ;;                  1    wreg      unsigned char 
  5618 ;; Registers used:
  5619 ;;		wreg, status,2, status,0, pclath, cstack
  5620 ;; Tracked objects:
  5621 ;;		On entry : 0/0
  5622 ;;		On exit  : 0/0
  5623 ;;		Unchanged: 0/0
  5624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5625 ;;      Params:         0       0       0       0       0
  5626 ;;      Locals:         0       0       1       0       0
  5627 ;;      Temps:          0       0       0       0       0
  5628 ;;      Totals:         0       0       1       0       0
  5629 ;;Total ram usage:        1 bytes
  5630 ;; Hardware stack levels used:    1
  5631 ;; Hardware stack levels required when called:    4
  5632 ;; This function calls:
  5633 ;;		_I2C_Wait_IDLE
  5634 ;; This function is called by:
  5635 ;;		_EEPROM_WriteByte
  5636 ;;		_EEPROM_ReadByte
  5637 ;;		_EEPROM_WritePage
  5638 ;;		_EEPROM_ReadPage
  5639 ;; This function uses a non-reentrant model
  5640 ;;
  5641                           
  5642                           
  5643                           ;psect for function _I2C_Master_WriteByte
  5644  0929                     _I2C_Master_WriteByte:
  5645                           
  5646                           ;incstack = 0
  5647                           ; Regs used in _I2C_Master_WriteByte: [wreg+status,2+status,0+pclath+cstack]
  5648                           ;I2C_Master_WriteByte@Data stored from wreg
  5649  0929  1683               	bsf	3,5	;RP0=1, select bank1
  5650  092A  1303               	bcf	3,6	;RP1=0, select bank1
  5651  092B  00A0               	movwf	I2C_Master_WriteByte@Data^(0+128)
  5652  092C                     l2616:
  5653                           
  5654                           ;i2c.c: 100: uint8_t I2C_Master_WriteByte(uint8_t Data);i2c.c: 101: {;i2c.c: 103:     I2
      +                          C_Wait_IDLE();
  5655  092C  120A  158A  2091  120A  158A  	fcall	_I2C_Wait_IDLE
  5656  0931                     l2618:
  5657                           
  5658                           ;i2c.c: 104:     SSPBUF=Data;
  5659  0931  1683               	bsf	3,5	;RP0=1, select bank1
  5660  0932  1303               	bcf	3,6	;RP1=0, select bank1
  5661  0933  0820               	movf	I2C_Master_WriteByte@Data^(0+128),w
  5662  0934  1283               	bcf	3,5	;RP0=0, select bank0
  5663  0935  1303               	bcf	3,6	;RP1=0, select bank0
  5664  0936  0093               	movwf	19	;volatile
  5665  0937                     l112:	
  5666                           ;i2c.c: 105:     while(!SSPIF);
  5667                           
  5668  0937  1D8C               	btfss	12,3	;volatile
  5669  0938  293A               	goto	u1911
  5670  0939  293B               	goto	u1910
  5671  093A                     u1911:
  5672  093A  2937               	goto	l112
  5673  093B                     u1910:
  5674  093B                     l114:
  5675                           
  5676                           ;i2c.c: 106:     SSPIF=0;
  5677  093B  118C               	bcf	12,3	;volatile
  5678  093C                     l2620:
  5679                           
  5680                           ;i2c.c: 107:     I2C_Wait_IDLE();
  5681  093C  120A  158A  2091  120A  158A  	fcall	_I2C_Wait_IDLE
  5682  0941                     l2622:
  5683                           
  5684                           ;i2c.c: 108:     return ACKSTAT;
  5685  0941  3000               	movlw	0
  5686  0942  1683               	bsf	3,5	;RP0=1, select bank1
  5687  0943  1303               	bcf	3,6	;RP1=0, select bank1
  5688  0944  1B11               	btfsc	17,6	;volatile
  5689  0945  3001               	movlw	1
  5690  0946                     l115:
  5691  0946  0008               	return
  5692  0947                     __end_of_I2C_Master_WriteByte:
  5693                           
  5694                           	psect	text34
  5695  0837                     __ptext34:	
  5696 ;; *************** function _I2C_Master_Send_Stop *****************
  5697 ;; Defined at:
  5698 ;;		line 72 in file "i2c.c"
  5699 ;; Parameters:    Size  Location     Type
  5700 ;;		None
  5701 ;; Auto vars:     Size  Location     Type
  5702 ;;		None
  5703 ;; Return value:  Size  Location     Type
  5704 ;;                  1    wreg      void 
  5705 ;; Registers used:
  5706 ;;		wreg, status,2, status,0, pclath, cstack
  5707 ;; Tracked objects:
  5708 ;;		On entry : 0/0
  5709 ;;		On exit  : 0/0
  5710 ;;		Unchanged: 0/0
  5711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5712 ;;      Params:         0       0       0       0       0
  5713 ;;      Locals:         0       0       0       0       0
  5714 ;;      Temps:          0       0       0       0       0
  5715 ;;      Totals:         0       0       0       0       0
  5716 ;;Total ram usage:        0 bytes
  5717 ;; Hardware stack levels used:    1
  5718 ;; Hardware stack levels required when called:    4
  5719 ;; This function calls:
  5720 ;;		_I2C_Wait_IDLE
  5721 ;; This function is called by:
  5722 ;;		_EEPROM_WriteByte
  5723 ;;		_EEPROM_ReadByte
  5724 ;;		_EEPROM_WritePage
  5725 ;;		_EEPROM_ReadPage
  5726 ;; This function uses a non-reentrant model
  5727 ;;
  5728                           
  5729                           
  5730                           ;psect for function _I2C_Master_Send_Stop
  5731  0837                     _I2C_Master_Send_Stop:
  5732  0837                     l2626:	
  5733                           ;incstack = 0
  5734                           ; Regs used in _I2C_Master_Send_Stop: [wreg+status,2+status,0+pclath+cstack]
  5735                           
  5736                           
  5737                           ;i2c.c: 75:     I2C_Wait_IDLE();
  5738  0837  120A  158A  2091  120A  158A  	fcall	_I2C_Wait_IDLE
  5739  083C                     l2628:
  5740                           
  5741                           ;i2c.c: 76:     PEN=1 ;
  5742  083C  1683               	bsf	3,5	;RP0=1, select bank1
  5743  083D  1303               	bcf	3,6	;RP1=0, select bank1
  5744  083E  1511               	bsf	17,2	;volatile
  5745  083F                     l100:
  5746  083F  0008               	return
  5747  0840                     __end_of_I2C_Master_Send_Stop:
  5748                           
  5749                           	psect	text35
  5750  082E                     __ptext35:	
  5751 ;; *************** function _I2C_Master_Send_Start *****************
  5752 ;; Defined at:
  5753 ;;		line 66 in file "i2c.c"
  5754 ;; Parameters:    Size  Location     Type
  5755 ;;		None
  5756 ;; Auto vars:     Size  Location     Type
  5757 ;;		None
  5758 ;; Return value:  Size  Location     Type
  5759 ;;                  1    wreg      void 
  5760 ;; Registers used:
  5761 ;;		wreg, status,2, status,0, pclath, cstack
  5762 ;; Tracked objects:
  5763 ;;		On entry : 0/0
  5764 ;;		On exit  : 0/0
  5765 ;;		Unchanged: 0/0
  5766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5767 ;;      Params:         0       0       0       0       0
  5768 ;;      Locals:         0       0       0       0       0
  5769 ;;      Temps:          0       0       0       0       0
  5770 ;;      Totals:         0       0       0       0       0
  5771 ;;Total ram usage:        0 bytes
  5772 ;; Hardware stack levels used:    1
  5773 ;; Hardware stack levels required when called:    4
  5774 ;; This function calls:
  5775 ;;		_I2C_Wait_IDLE
  5776 ;; This function is called by:
  5777 ;;		_EEPROM_WriteByte
  5778 ;;		_EEPROM_ReadByte
  5779 ;;		_EEPROM_WritePage
  5780 ;;		_EEPROM_ReadPage
  5781 ;; This function uses a non-reentrant model
  5782 ;;
  5783                           
  5784                           
  5785                           ;psect for function _I2C_Master_Send_Start
  5786  082E                     _I2C_Master_Send_Start:
  5787  082E                     l2608:	
  5788                           ;incstack = 0
  5789                           ; Regs used in _I2C_Master_Send_Start: [wreg+status,2+status,0+pclath+cstack]
  5790                           
  5791                           
  5792                           ;i2c.c: 69:     I2C_Wait_IDLE();
  5793  082E  120A  158A  2091  120A  158A  	fcall	_I2C_Wait_IDLE
  5794  0833                     l2610:
  5795                           
  5796                           ;i2c.c: 70:     SEN=1 ;
  5797  0833  1683               	bsf	3,5	;RP0=1, select bank1
  5798  0834  1303               	bcf	3,6	;RP1=0, select bank1
  5799  0835  1411               	bsf	17,0	;volatile
  5800  0836                     l97:
  5801  0836  0008               	return
  5802  0837                     __end_of_I2C_Master_Send_Start:
  5803                           
  5804                           	psect	text36
  5805  0825                     __ptext36:	
  5806 ;; *************** function _I2C_Master_Send_RepeatedStart *****************
  5807 ;; Defined at:
  5808 ;;		line 78 in file "i2c.c"
  5809 ;; Parameters:    Size  Location     Type
  5810 ;;		None
  5811 ;; Auto vars:     Size  Location     Type
  5812 ;;		None
  5813 ;; Return value:  Size  Location     Type
  5814 ;;                  1    wreg      void 
  5815 ;; Registers used:
  5816 ;;		wreg, status,2, status,0, pclath, cstack
  5817 ;; Tracked objects:
  5818 ;;		On entry : 0/0
  5819 ;;		On exit  : 0/0
  5820 ;;		Unchanged: 0/0
  5821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5822 ;;      Params:         0       0       0       0       0
  5823 ;;      Locals:         0       0       0       0       0
  5824 ;;      Temps:          0       0       0       0       0
  5825 ;;      Totals:         0       0       0       0       0
  5826 ;;Total ram usage:        0 bytes
  5827 ;; Hardware stack levels used:    1
  5828 ;; Hardware stack levels required when called:    4
  5829 ;; This function calls:
  5830 ;;		_I2C_Wait_IDLE
  5831 ;; This function is called by:
  5832 ;;		_EEPROM_WriteByte
  5833 ;;		_EEPROM_ReadByte
  5834 ;;		_EEPROM_WritePage
  5835 ;;		_EEPROM_ReadPage
  5836 ;; This function uses a non-reentrant model
  5837 ;;
  5838                           
  5839                           
  5840                           ;psect for function _I2C_Master_Send_RepeatedStart
  5841  0825                     _I2C_Master_Send_RepeatedStart:
  5842  0825                     l2612:	
  5843                           ;incstack = 0
  5844                           ; Regs used in _I2C_Master_Send_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  5845                           
  5846                           
  5847                           ;i2c.c: 81:     I2C_Wait_IDLE();
  5848  0825  120A  158A  2091  120A  158A  	fcall	_I2C_Wait_IDLE
  5849  082A                     l2614:
  5850                           
  5851                           ;i2c.c: 82:     RSEN=1 ;
  5852  082A  1683               	bsf	3,5	;RP0=1, select bank1
  5853  082B  1303               	bcf	3,6	;RP1=0, select bank1
  5854  082C  1491               	bsf	17,1	;volatile
  5855  082D                     l103:
  5856  082D  0008               	return
  5857  082E                     __end_of_I2C_Master_Send_RepeatedStart:
  5858                           
  5859                           	psect	text37
  5860  0891                     __ptext37:	
  5861 ;; *************** function _I2C_Wait_IDLE *****************
  5862 ;; Defined at:
  5863 ;;		line 58 in file "i2c.c"
  5864 ;; Parameters:    Size  Location     Type
  5865 ;;		None
  5866 ;; Auto vars:     Size  Location     Type
  5867 ;;		None
  5868 ;; Return value:  Size  Location     Type
  5869 ;;                  1    wreg      void 
  5870 ;; Registers used:
  5871 ;;		wreg, status,2
  5872 ;; Tracked objects:
  5873 ;;		On entry : 0/0
  5874 ;;		On exit  : 0/0
  5875 ;;		Unchanged: 0/0
  5876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5877 ;;      Params:         0       0       0       0       0
  5878 ;;      Locals:         0       0       0       0       0
  5879 ;;      Temps:          0       0       0       0       0
  5880 ;;      Totals:         0       0       0       0       0
  5881 ;;Total ram usage:        0 bytes
  5882 ;; Hardware stack levels used:    1
  5883 ;; Hardware stack levels required when called:    3
  5884 ;; This function calls:
  5885 ;;		Nothing
  5886 ;; This function is called by:
  5887 ;;		_I2C_Master_Send_Start
  5888 ;;		_I2C_Master_Send_Stop
  5889 ;;		_I2C_Master_Send_RepeatedStart
  5890 ;;		_I2C_Master_Send_ACK
  5891 ;;		_I2C_Master_Send_NACK
  5892 ;;		_I2C_Master_WriteByte
  5893 ;;		_I2C_Master_ReadByte
  5894 ;; This function uses a non-reentrant model
  5895 ;;
  5896                           
  5897                           
  5898                           ;psect for function _I2C_Wait_IDLE
  5899  0891                     _I2C_Wait_IDLE:
  5900  0891                     l2592:	
  5901                           ;incstack = 0
  5902                           ; Regs used in _I2C_Wait_IDLE: [wreg+status,2]
  5903                           
  5904  0891                     l91:	
  5905                           ;i2c.c: 63:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  5906                           
  5907  0891  1683               	bsf	3,5	;RP0=1, select bank1
  5908  0892  1303               	bcf	3,6	;RP1=0, select bank1
  5909  0893  1914               	btfsc	20,2	;volatile
  5910  0894  2896               	goto	u1891
  5911  0895  2897               	goto	u1890
  5912  0896                     u1891:
  5913  0896  2891               	goto	l91
  5914  0897                     u1890:
  5915  0897                     l2594:
  5916  0897  0811               	movf	17,w	;volatile
  5917  0898  391F               	andlw	31
  5918  0899  1D03               	btfss	3,2
  5919  089A  289C               	goto	u1901
  5920  089B  289D               	goto	u1900
  5921  089C                     u1901:
  5922  089C  2891               	goto	l91
  5923  089D                     u1900:
  5924  089D                     l94:
  5925  089D  0008               	return
  5926  089E                     __end_of_I2C_Wait_IDLE:
  5927                           
  5928                           	psect	text38
  5929  08EF                     __ptext38:	
  5930 ;; *************** function _DD_Init *****************
  5931 ;; Defined at:
  5932 ;;		line 14 in file "DD.c"
  5933 ;; Parameters:    Size  Location     Type
  5934 ;;		None
  5935 ;; Auto vars:     Size  Location     Type
  5936 ;;		None
  5937 ;; Return value:  Size  Location     Type
  5938 ;;                  1    wreg      void 
  5939 ;; Registers used:
  5940 ;;		wreg, status,2, status,0, btemp+1
  5941 ;; Tracked objects:
  5942 ;;		On entry : 0/0
  5943 ;;		On exit  : 0/0
  5944 ;;		Unchanged: 0/0
  5945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5946 ;;      Params:         0       0       0       0       0
  5947 ;;      Locals:         0       0       0       0       0
  5948 ;;      Temps:          0       0       0       0       0
  5949 ;;      Totals:         0       0       0       0       0
  5950 ;;Total ram usage:        0 bytes
  5951 ;; Hardware stack levels used:    1
  5952 ;; Hardware stack levels required when called:    3
  5953 ;; This function calls:
  5954 ;;		Nothing
  5955 ;; This function is called by:
  5956 ;;		_EWH_Init
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960                           
  5961                           ;psect for function _DD_Init
  5962  08EF                     _DD_Init:
  5963  08EF                     l2872:	
  5964                           ;incstack = 0
  5965                           ; Regs used in _DD_Init: [wreg+status,2+status,0+btemp+1]
  5966                           
  5967  08EF                     l2876:	
  5968                           ;DD.c: 17:     (0u)? (TRISC |= (1<<5)) : (TRISC &= ~(1<<5));
  5969                           
  5970  08EF  30DF               	movlw	223
  5971  08F0  00FF               	movwf	btemp+1
  5972  08F1  087F               	movf	btemp+1,w
  5973  08F2  1683               	bsf	3,5	;RP0=1, select bank1
  5974  08F3  1303               	bcf	3,6	;RP1=0, select bank1
  5975  08F4  0587               	andwf	7,f	;volatile
  5976  08F5                     l2880:
  5977  08F5  30FB               	movlw	251
  5978  08F6  00FF               	movwf	btemp+1
  5979  08F7  087F               	movf	btemp+1,w
  5980  08F8  0587               	andwf	7,f	;volatile
  5981  08F9                     l2884:
  5982  08F9  307F               	movlw	127
  5983  08FA  00FF               	movwf	btemp+1
  5984  08FB  087F               	movf	btemp+1,w
  5985  08FC  0586               	andwf	6,f	;volatile
  5986  08FD                     l2888:
  5987  08FD  30DF               	movlw	223
  5988  08FE  00FF               	movwf	btemp+1
  5989  08FF  087F               	movf	btemp+1,w
  5990  0900  1283               	bcf	3,5	;RP0=0, select bank0
  5991  0901  1303               	bcf	3,6	;RP1=0, select bank0
  5992  0902  0587               	andwf	7,f	;volatile
  5993  0903                     l2892:
  5994  0903  30FB               	movlw	251
  5995  0904  00FF               	movwf	btemp+1
  5996  0905  087F               	movf	btemp+1,w
  5997  0906  0587               	andwf	7,f	;volatile
  5998  0907                     l2896:
  5999  0907  307F               	movlw	127
  6000  0908  00FF               	movwf	btemp+1
  6001  0909  087F               	movf	btemp+1,w
  6002  090A  0586               	andwf	6,f	;volatile
  6003  090B                     l241:
  6004  090B  0008               	return
  6005  090C                     __end_of_DD_Init:
  6006                           
  6007                           	psect	text39
  6008  0782                     __ptext39:	
  6009 ;; *************** function _ADC_Init *****************
  6010 ;; Defined at:
  6011 ;;		line 16 in file "adc.c"
  6012 ;; Parameters:    Size  Location     Type
  6013 ;;  config          1    wreg     PTR struct .
  6014 ;;		 -> EWH_Init@adc_config(4), 
  6015 ;; Auto vars:     Size  Location     Type
  6016 ;;  config          1    2[BANK1 ] PTR struct .
  6017 ;;		 -> EWH_Init@adc_config(4), 
  6018 ;; Return value:  Size  Location     Type
  6019 ;;                  1    wreg      void 
  6020 ;; Registers used:
  6021 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  6022 ;; Tracked objects:
  6023 ;;		On entry : 0/0
  6024 ;;		On exit  : 0/0
  6025 ;;		Unchanged: 0/0
  6026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6027 ;;      Params:         0       0       0       0       0
  6028 ;;      Locals:         0       0       1       0       0
  6029 ;;      Temps:          0       0       2       0       0
  6030 ;;      Totals:         0       0       3       0       0
  6031 ;;Total ram usage:        3 bytes
  6032 ;; Hardware stack levels used:    1
  6033 ;; Hardware stack levels required when called:    3
  6034 ;; This function calls:
  6035 ;;		Nothing
  6036 ;; This function is called by:
  6037 ;;		_EWH_Init
  6038 ;; This function uses a non-reentrant model
  6039 ;;
  6040                           
  6041                           
  6042                           ;psect for function _ADC_Init
  6043  0782                     _ADC_Init:
  6044                           
  6045                           ;incstack = 0
  6046                           ; Regs used in _ADC_Init: [wreg-fsr0h+status,2+status,0+btemp+1]
  6047                           ;ADC_Init@config stored from wreg
  6048  0782  1683               	bsf	3,5	;RP0=1, select bank1
  6049  0783  1303               	bcf	3,6	;RP1=0, select bank1
  6050  0784  00A2               	movwf	ADC_Init@config^(0+128)
  6051  0785                     l2934:
  6052                           
  6053                           ;adc.c: 16: void ADC_Init(tADC_Config* config);adc.c: 17: {;adc.c: 19:     ADON=1;
  6054  0785  1283               	bcf	3,5	;RP0=0, select bank0
  6055  0786  1303               	bcf	3,6	;RP1=0, select bank0
  6056  0787  141F               	bsf	31,0	;volatile
  6057                           
  6058                           ;adc.c: 21:     switch(config->clk)
  6059  0788  2FB7               	goto	l2944
  6060  0789                     l2936:
  6061                           
  6062                           ;adc.c: 24:             ADCON0 &= ~(0xC0);
  6063  0789  303F               	movlw	63
  6064  078A  00FF               	movwf	btemp+1
  6065  078B  087F               	movf	btemp+1,w
  6066  078C  1283               	bcf	3,5	;RP0=0, select bank0
  6067  078D  1303               	bcf	3,6	;RP1=0, select bank0
  6068  078E  059F               	andwf	31,f	;volatile
  6069                           
  6070                           ;adc.c: 25:             break;
  6071  078F  2FDC               	goto	l2946
  6072  0790                     l297:	
  6073                           ;adc.c: 26:         case FOSC_8:
  6074                           
  6075                           
  6076                           ;adc.c: 27:             ADCON0 |= (1<<6);
  6077  0790  1283               	bcf	3,5	;RP0=0, select bank0
  6078  0791  1303               	bcf	3,6	;RP1=0, select bank0
  6079  0792  171F               	bsf	31,6	;volatile
  6080                           
  6081                           ;adc.c: 28:             break;
  6082  0793  2FDC               	goto	l2946
  6083  0794                     l298:	
  6084                           ;adc.c: 29:         case FOSC_32:
  6085                           
  6086                           
  6087                           ;adc.c: 30:             ADCON0 |= (2<<6);
  6088  0794  1283               	bcf	3,5	;RP0=0, select bank0
  6089  0795  1303               	bcf	3,6	;RP1=0, select bank0
  6090  0796  179F               	bsf	31,7	;volatile
  6091                           
  6092                           ;adc.c: 31:             break;
  6093  0797  2FDC               	goto	l2946
  6094  0798                     l2938:
  6095                           
  6096                           ;adc.c: 33:             ADCON0 |= (3<<6);
  6097  0798  30C0               	movlw	192
  6098  0799  00FF               	movwf	btemp+1
  6099  079A  087F               	movf	btemp+1,w
  6100  079B  1283               	bcf	3,5	;RP0=0, select bank0
  6101  079C  1303               	bcf	3,6	;RP1=0, select bank0
  6102  079D  049F               	iorwf	31,f	;volatile
  6103                           
  6104                           ;adc.c: 34:             break;
  6105  079E  2FDC               	goto	l2946
  6106  079F                     l2940:
  6107                           
  6108                           ;adc.c: 36:             ADCON0 &= ~(0xC0);
  6109  079F  303F               	movlw	63
  6110  07A0  00FF               	movwf	btemp+1
  6111  07A1  087F               	movf	btemp+1,w
  6112  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  6113  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  6114  07A4  059F               	andwf	31,f	;volatile
  6115  07A5                     l2942:
  6116                           
  6117                           ;adc.c: 37:             ADCON1 |= (1<<6);
  6118  07A5  1683               	bsf	3,5	;RP0=1, select bank1
  6119  07A6  1303               	bcf	3,6	;RP1=0, select bank1
  6120  07A7  171F               	bsf	31,6	;volatile
  6121                           
  6122                           ;adc.c: 38:             break;
  6123  07A8  2FDC               	goto	l2946
  6124  07A9                     l301:	
  6125                           ;adc.c: 39:         case FOSC_16:
  6126                           
  6127                           
  6128                           ;adc.c: 40:             ADCON0 |= (1<<6);
  6129  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  6130  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  6131  07AB  171F               	bsf	31,6	;volatile
  6132                           
  6133                           ;adc.c: 41:             ADCON1 |= (1<<6);
  6134  07AC  1683               	bsf	3,5	;RP0=1, select bank1
  6135  07AD  1303               	bcf	3,6	;RP1=0, select bank1
  6136  07AE  171F               	bsf	31,6	;volatile
  6137                           
  6138                           ;adc.c: 42:             break;
  6139  07AF  2FDC               	goto	l2946
  6140  07B0                     l302:	
  6141                           ;adc.c: 43:         case FOSC_64:
  6142                           
  6143                           
  6144                           ;adc.c: 44:             ADCON0 |= (2<<6);
  6145  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  6146  07B1  1303               	bcf	3,6	;RP1=0, select bank0
  6147  07B2  179F               	bsf	31,7	;volatile
  6148                           
  6149                           ;adc.c: 45:             ADCON1 |= (1<<6);
  6150  07B3  1683               	bsf	3,5	;RP0=1, select bank1
  6151  07B4  1303               	bcf	3,6	;RP1=0, select bank1
  6152  07B5  171F               	bsf	31,6	;volatile
  6153                           
  6154                           ;adc.c: 46:             break;
  6155  07B6  2FDC               	goto	l2946
  6156  07B7                     l2944:
  6157  07B7  1683               	bsf	3,5	;RP0=1, select bank1
  6158  07B8  1303               	bcf	3,6	;RP1=0, select bank1
  6159  07B9  0822               	movf	ADC_Init@config^(0+128),w
  6160  07BA  3E03               	addlw	3
  6161  07BB  0084               	movwf	4
  6162  07BC  1383               	bcf	3,7	;select IRP bank0
  6163  07BD  0800               	movf	0,w
  6164  07BE  00A0               	movwf	??_ADC_Init^(0+128)
  6165  07BF  01A1               	clrf	(??_ADC_Init^(0+128)+1)
  6166                           
  6167                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6168                           ; Switch size 1, requested type "simple"
  6169                           ; Number of cases is 1, Range of values is 0 to 0
  6170                           ; switch strategies available:
  6171                           ; Name         Instructions Cycles
  6172                           ; simple_byte            4     3 (average)
  6173                           ; direct_byte           11     8 (fixed)
  6174                           ; jumptable            260     6 (fixed)
  6175                           ;	Chosen strategy is simple_byte
  6176  07C0  0821               	movf	(??_ADC_Init+1)^(0+128),w
  6177  07C1  3A00               	xorlw	0	; case 0
  6178  07C2  1903               	skipnz
  6179  07C3  2FC5               	goto	l3932
  6180  07C4  2F90               	goto	l297
  6181  07C5                     l3932:
  6182                           
  6183                           ; Switch size 1, requested type "simple"
  6184                           ; Number of cases is 7, Range of values is 0 to 6
  6185                           ; switch strategies available:
  6186                           ; Name         Instructions Cycles
  6187                           ; simple_byte           22    12 (average)
  6188                           ; direct_byte           29     8 (fixed)
  6189                           ; jumptable            260     6 (fixed)
  6190                           ;	Chosen strategy is simple_byte
  6191  07C5  0820               	movf	??_ADC_Init^(0+128),w
  6192  07C6  3A00               	xorlw	0	; case 0
  6193  07C7  1903               	skipnz
  6194  07C8  2F89               	goto	l2936
  6195  07C9  3A01               	xorlw	1	; case 1
  6196  07CA  1903               	skipnz
  6197  07CB  2F90               	goto	l297
  6198  07CC  3A03               	xorlw	3	; case 2
  6199  07CD  1903               	skipnz
  6200  07CE  2F94               	goto	l298
  6201  07CF  3A01               	xorlw	1	; case 3
  6202  07D0  1903               	skipnz
  6203  07D1  2F98               	goto	l2938
  6204  07D2  3A07               	xorlw	7	; case 4
  6205  07D3  1903               	skipnz
  6206  07D4  2F9F               	goto	l2940
  6207  07D5  3A01               	xorlw	1	; case 5
  6208  07D6  1903               	skipnz
  6209  07D7  2FA9               	goto	l301
  6210  07D8  3A03               	xorlw	3	; case 6
  6211  07D9  1903               	skipnz
  6212  07DA  2FB0               	goto	l302
  6213  07DB  2F90               	goto	l297
  6214  07DC                     l2946:
  6215                           
  6216                           ;adc.c: 53:     ADCON1 |= ((config->alignment)<<7);
  6217  07DC  1683               	bsf	3,5	;RP0=1, select bank1
  6218  07DD  1303               	bcf	3,6	;RP1=0, select bank1
  6219  07DE  0822               	movf	ADC_Init@config^(0+128),w
  6220  07DF  3E02               	addlw	2
  6221  07E0  0084               	movwf	4
  6222  07E1  0800               	movf	0,w
  6223  07E2  00A0               	movwf	??_ADC_Init^(0+128)
  6224  07E3  3006               	movlw	6
  6225  07E4                     u2375:
  6226  07E4  1003               	clrc
  6227  07E5  0DA0               	rlf	??_ADC_Init^(0+128),f
  6228  07E6  3EFF               	addlw	-1
  6229  07E7  1D03               	skipz
  6230  07E8  2FE4               	goto	u2375
  6231  07E9  1003               	clrc
  6232  07EA  0D20               	rlf	??_ADC_Init^(0+128),w
  6233  07EB  00FF               	movwf	btemp+1
  6234  07EC  087F               	movf	btemp+1,w
  6235  07ED  049F               	iorwf	31,f	;volatile
  6236  07EE                     l2948:
  6237                           
  6238                           ;adc.c: 56:     ADCON1 = (0x80);
  6239  07EE  3080               	movlw	128
  6240  07EF  009F               	movwf	31	;volatile
  6241  07F0                     l2950:
  6242                           
  6243                           ;adc.c: 60:     if(config->mode==INTERRUPT_MODE)
  6244  07F0  0A22               	incf	ADC_Init@config^(0+128),w
  6245  07F1  0084               	movwf	4
  6246  07F2  0300               	decf	0,w
  6247  07F3  1D03               	btfss	3,2
  6248  07F4  2FF6               	goto	u2381
  6249  07F5  2FF7               	goto	u2380
  6250  07F6                     u2381:
  6251  07F6  2FFF               	goto	l305
  6252  07F7                     u2380:
  6253  07F7                     l2952:
  6254                           
  6255                           ;adc.c: 61:     {;adc.c: 62:         ADIF = 0;
  6256  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  6257  07F8  1303               	bcf	3,6	;RP1=0, select bank0
  6258  07F9  130C               	bcf	12,6	;volatile
  6259                           
  6260                           ;adc.c: 63:         ADIE = 1;
  6261  07FA  1683               	bsf	3,5	;RP0=1, select bank1
  6262  07FB  1303               	bcf	3,6	;RP1=0, select bank1
  6263  07FC  170C               	bsf	12,6	;volatile
  6264                           
  6265                           ;adc.c: 64:         PEIE = 1;
  6266  07FD  170B               	bsf	11,6	;volatile
  6267                           
  6268                           ;adc.c: 65:         GIE = 1;
  6269  07FE  178B               	bsf	11,7	;volatile
  6270  07FF                     l305:
  6271  07FF  0008               	return
  6272  0800                     __end_of_ADC_Init:
  6273                           
  6274                           	psect	text40
  6275  04CE                     __ptext40:	
  6276 ;; *************** function _ISR *****************
  6277 ;; Defined at:
  6278 ;;		line 359 in file "EWH.c"
  6279 ;; Parameters:    Size  Location     Type
  6280 ;;		None
  6281 ;; Auto vars:     Size  Location     Type
  6282 ;;  Reading         2   42[BANK0 ] unsigned short 
  6283 ;; Return value:  Size  Location     Type
  6284 ;;                  1    wreg      void 
  6285 ;; Registers used:
  6286 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6287 ;; Tracked objects:
  6288 ;;		On entry : 0/0
  6289 ;;		On exit  : 0/0
  6290 ;;		Unchanged: 0/0
  6291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6292 ;;      Params:         0       0       0       0       0
  6293 ;;      Locals:         0       2       0       0       0
  6294 ;;      Temps:          0       6       0       0       0
  6295 ;;      Totals:         0       8       0       0       0
  6296 ;;Total ram usage:        8 bytes
  6297 ;; Hardware stack levels used:    1
  6298 ;; Hardware stack levels required when called:    2
  6299 ;; This function calls:
  6300 ;;		_ADC_ReadChannel
  6301 ;;		_DD_GetState
  6302 ;;		___awmod
  6303 ;;		___flmul
  6304 ;;		___fltol
  6305 ;;		___xxtofl
  6306 ;;		i1_EWH_SetEvent
  6307 ;;		i1_EWH_SetMode
  6308 ;; This function is called by:
  6309 ;;		Interrupt level 1
  6310 ;; This function uses a non-reentrant model
  6311 ;;
  6312                           
  6313                           
  6314                           ;psect for function _ISR
  6315  04CE                     _ISR:
  6316  04CE                     i1l3658:
  6317                           
  6318                           ;EWH.c: 361:     static uint8_t count =0;;EWH.c: 363:     if(INTF==1)
  6319  04CE  1C8B               	btfss	11,1	;volatile
  6320  04CF  2CD1               	goto	u364_21
  6321  04D0  2CD2               	goto	u364_20
  6322  04D1                     u364_21:
  6323  04D1  2CF5               	goto	i1l3676
  6324  04D2                     u364_20:
  6325  04D2                     i1l3660:
  6326                           
  6327                           ;EWH.c: 364:     {;EWH.c: 366:         EWH_SetEvent(0);
  6328  04D2  3000               	movlw	0
  6329  04D3  120A  158A  2005  120A  118A  	fcall	i1_EWH_SetEvent
  6330  04D8                     i1l3662:
  6331                           
  6332                           ;EWH.c: 369:         if(EWH_State==ON)
  6333  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  6334  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  6335  04DA  0354               	decf	_EWH_State,w
  6336  04DB  1D03               	btfss	3,2
  6337  04DC  2CDE               	goto	u365_21
  6338  04DD  2CDF               	goto	u365_20
  6339  04DE                     u365_21:
  6340  04DE  2CE7               	goto	i1l3668
  6341  04DF                     u365_20:
  6342  04DF                     i1l3664:
  6343                           
  6344                           ;EWH.c: 370:         {;EWH.c: 371:             EWH_State=OFF;
  6345  04DF  01D4               	clrf	_EWH_State
  6346  04E0                     i1l3666:
  6347                           
  6348                           ;EWH.c: 372:             EWH_SetMode(EWH_SLEEP_MODE);
  6349  04E0  3000               	movlw	0
  6350  04E1  120A  158A  200D  120A  118A  	fcall	i1_EWH_SetMode
  6351                           
  6352                           ;EWH.c: 373:         }
  6353  04E6  2CF4               	goto	i1l3674
  6354  04E7                     i1l3668:
  6355  04E7  0854               	movf	_EWH_State,w
  6356  04E8  1D03               	btfss	3,2
  6357  04E9  2CEB               	goto	u366_21
  6358  04EA  2CEC               	goto	u366_20
  6359  04EB                     u366_21:
  6360  04EB  2CF4               	goto	i1l3674
  6361  04EC                     u366_20:
  6362  04EC                     i1l3670:
  6363                           
  6364                           ;EWH.c: 375:         {;EWH.c: 376:             EWH_State=ON;
  6365  04EC  01D4               	clrf	_EWH_State
  6366  04ED  0AD4               	incf	_EWH_State,f
  6367  04EE                     i1l3672:
  6368                           
  6369                           ;EWH.c: 377:             EWH_SetMode(EWH_WAKE_UP_MODE);
  6370  04EE  3001               	movlw	1
  6371  04EF  120A  158A  200D  120A  118A  	fcall	i1_EWH_SetMode
  6372  04F4                     i1l3674:
  6373                           
  6374                           ;EWH.c: 379:         INTF=0;
  6375  04F4  108B               	bcf	11,1	;volatile
  6376  04F5                     i1l3676:
  6377                           
  6378                           ;EWH.c: 382:     if (TMR1IF)
  6379  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  6380  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  6381  04F7  1C0C               	btfss	12,0	;volatile
  6382  04F8  2CFA               	goto	u367_21
  6383  04F9  2CFB               	goto	u367_20
  6384  04FA                     u367_21:
  6385  04FA  2DCC               	goto	i1l596
  6386  04FB                     u367_20:
  6387  04FB                     i1l3678:
  6388                           
  6389                           ;EWH.c: 383:     {;EWH.c: 384:         count++;
  6390  04FB  3001               	movlw	1
  6391  04FC  00FF               	movwf	btemp+1
  6392  04FD  087F               	movf	btemp+1,w
  6393  04FE  07D2               	addwf	ISR@count,f
  6394  04FF                     i1l3680:
  6395                           
  6396                           ;EWH.c: 385:         if(EWH_Mode==EWH_OPERATING_MODE)
  6397  04FF  3003               	movlw	3
  6398  0500  1683               	bsf	3,5	;RP0=1, select bank1
  6399  0501  1303               	bcf	3,6	;RP1=0, select bank1
  6400  0502  064A               	xorwf	_EWH_Mode^(0+128),w
  6401  0503  1D03               	btfss	3,2
  6402  0504  2D06               	goto	u368_21
  6403  0505  2D07               	goto	u368_20
  6404  0506                     u368_21:
  6405  0506  2D71               	goto	i1l3690
  6406  0507                     u368_20:
  6407  0507                     i1l3682:
  6408                           
  6409                           ;EWH.c: 386:         {;EWH.c: 387:             uint16_t Reading = ADC_ReadChannel(ADC2);
  6410  0507  3002               	movlw	2
  6411  0508  120A  158A  21BD  120A  118A  	fcall	_ADC_ReadChannel
  6412  050D  0871               	movf	?_ADC_ReadChannel+1,w
  6413  050E  1283               	bcf	3,5	;RP0=0, select bank0
  6414  050F  1303               	bcf	3,6	;RP1=0, select bank0
  6415  0510  00CB               	movwf	ISR@Reading+1
  6416  0511  0870               	movf	?_ADC_ReadChannel,w
  6417  0512  00CA               	movwf	ISR@Reading
  6418                           
  6419                           ;EWH.c: 388:             current_Temp=Reading*0.488;
  6420  0513  084A               	movf	ISR@Reading,w
  6421  0514  00F0               	movwf	___xxtofl@val
  6422  0515  084B               	movf	ISR@Reading+1,w
  6423  0516  00F1               	movwf	___xxtofl@val+1
  6424  0517  01F2               	clrf	___xxtofl@val+2
  6425  0518  01F3               	clrf	___xxtofl@val+3
  6426  0519  3000               	movlw	0
  6427  051A  120A  118A  26C8  120A  118A  	fcall	___xxtofl
  6428  051F  0873               	movf	?___xxtofl+3,w
  6429  0520  1283               	bcf	3,5	;RP0=0, select bank0
  6430  0521  1303               	bcf	3,6	;RP1=0, select bank0
  6431  0522  00A7               	movwf	___flmul@a+3
  6432  0523  0872               	movf	?___xxtofl+2,w
  6433  0524  00A6               	movwf	___flmul@a+2
  6434  0525  0871               	movf	?___xxtofl+1,w
  6435  0526  00A5               	movwf	___flmul@a+1
  6436  0527  0870               	movf	?___xxtofl,w
  6437  0528  00A4               	movwf	___flmul@a
  6438  0529  303E               	movlw	62
  6439  052A  00A3               	movwf	___flmul@b+3
  6440  052B  30F9               	movlw	249
  6441  052C  00A2               	movwf	___flmul@b+2
  6442  052D  30DB               	movlw	219
  6443  052E  00A1               	movwf	___flmul@b+1
  6444  052F  3023               	movlw	35
  6445  0530  00A0               	movwf	___flmul@b
  6446  0531  120A  118A  2037  120A  118A  	fcall	___flmul
  6447  0536  1283               	bcf	3,5	;RP0=0, select bank0
  6448  0537  1303               	bcf	3,6	;RP1=0, select bank0
  6449  0538  0823               	movf	?___flmul+3,w
  6450  0539  00BD               	movwf	___fltol@f1+3
  6451  053A  0822               	movf	?___flmul+2,w
  6452  053B  00BC               	movwf	___fltol@f1+2
  6453  053C  0821               	movf	?___flmul+1,w
  6454  053D  00BB               	movwf	___fltol@f1+1
  6455  053E  0820               	movf	?___flmul,w
  6456  053F  00BA               	movwf	___fltol@f1
  6457  0540  120A  158A  26EC  120A  118A  	fcall	___fltol
  6458  0545  1283               	bcf	3,5	;RP0=0, select bank0
  6459  0546  1303               	bcf	3,6	;RP1=0, select bank0
  6460  0547  083A               	movf	?___fltol,w
  6461  0548  00FF               	movwf	btemp+1
  6462  0549  087F               	movf	btemp+1,w
  6463  054A  1683               	bsf	3,5	;RP0=1, select bank1
  6464  054B  1303               	bcf	3,6	;RP1=0, select bank1
  6465  054C  00C8               	movwf	_current_Temp^(0+128)
  6466  054D                     i1l3684:
  6467                           
  6468                           ;EWH.c: 389:             ReadingBuffer[TempReading_count]=current_Temp;
  6469  054D  0848               	movf	_current_Temp^(0+128),w
  6470  054E  00FF               	movwf	btemp+1
  6471  054F  0847               	movf	_TempReading_count^(0+128),w
  6472  0550  3ECB               	addlw	(low (_ReadingBuffer| 0))& (0+255)
  6473  0551  0084               	movwf	4
  6474  0552  087F               	movf	btemp+1,w
  6475  0553  1383               	bcf	3,7	;select IRP bank1
  6476  0554  0080               	movwf	0
  6477  0555                     i1l3686:
  6478                           
  6479                           ;EWH.c: 390:             TempReading_count++;
  6480  0555  3001               	movlw	1
  6481  0556  00FF               	movwf	btemp+1
  6482  0557  087F               	movf	btemp+1,w
  6483  0558  07C7               	addwf	_TempReading_count^(0+128),f
  6484  0559                     i1l3688:
  6485                           
  6486                           ;EWH.c: 391:             TempReading_count= TempReading_count%10;
  6487  0559  300A               	movlw	10
  6488  055A  00F0               	movwf	___awmod@divisor
  6489  055B  3000               	movlw	0
  6490  055C  00F1               	movwf	___awmod@divisor+1
  6491  055D  0847               	movf	_TempReading_count^(0+128),w
  6492  055E  1283               	bcf	3,5	;RP0=0, select bank0
  6493  055F  1303               	bcf	3,6	;RP1=0, select bank0
  6494  0560  00C4               	movwf	??_ISR
  6495  0561  01C5               	clrf	??_ISR+1
  6496  0562  0844               	movf	??_ISR,w
  6497  0563  00F2               	movwf	___awmod@dividend
  6498  0564  0845               	movf	??_ISR+1,w
  6499  0565  00F3               	movwf	___awmod@dividend+1
  6500  0566  120A  158A  2446  120A  118A  	fcall	___awmod
  6501  056B  0870               	movf	?___awmod,w
  6502  056C  00FF               	movwf	btemp+1
  6503  056D  087F               	movf	btemp+1,w
  6504  056E  1683               	bsf	3,5	;RP0=1, select bank1
  6505  056F  1303               	bcf	3,6	;RP1=0, select bank1
  6506  0570  00C7               	movwf	_TempReading_count^(0+128)
  6507  0571                     i1l3690:
  6508                           
  6509                           ;EWH.c: 394:         if(count==10)
  6510  0571  300A               	movlw	10
  6511  0572  1283               	bcf	3,5	;RP0=0, select bank0
  6512  0573  1303               	bcf	3,6	;RP1=0, select bank0
  6513  0574  0652               	xorwf	ISR@count,w
  6514  0575  1D03               	btfss	3,2
  6515  0576  2D78               	goto	u369_21
  6516  0577  2D79               	goto	u369_20
  6517  0578                     u369_21:
  6518  0578  2DC7               	goto	i1l3718
  6519  0579                     u369_20:
  6520  0579                     i1l3692:
  6521                           
  6522                           ;EWH.c: 395:         {;EWH.c: 397:             if(EWH_Mode==EWH_SET_TEMP_MODE)
  6523  0579  3002               	movlw	2
  6524  057A  1683               	bsf	3,5	;RP0=1, select bank1
  6525  057B  1303               	bcf	3,6	;RP1=0, select bank1
  6526  057C  064A               	xorwf	_EWH_Mode^(0+128),w
  6527  057D  1D03               	btfss	3,2
  6528  057E  2D80               	goto	u370_21
  6529  057F  2D81               	goto	u370_20
  6530  0580                     u370_21:
  6531  0580  2D94               	goto	i1l3702
  6532  0581                     u370_20:
  6533  0581                     i1l3694:
  6534                           
  6535                           ;EWH.c: 398:             {;EWH.c: 399:                 SSD_Blink_flag = ~SSD_Blink_flag;
  6536  0581  09C6               	comf	_SSD_Blink_flag^(0+128),f
  6537  0582                     i1l3696:
  6538                           
  6539                           ;EWH.c: 400:                 NoPress_Sec_count++;
  6540  0582  3001               	movlw	1
  6541  0583  00FF               	movwf	btemp+1
  6542  0584  087F               	movf	btemp+1,w
  6543  0585  1283               	bcf	3,5	;RP0=0, select bank0
  6544  0586  1303               	bcf	3,6	;RP1=0, select bank0
  6545  0587  07D3               	addwf	_NoPress_Sec_count,f
  6546  0588                     i1l3698:
  6547                           
  6548                           ;EWH.c: 401:                 if(NoPress_Sec_count==5)
  6549  0588  3005               	movlw	5
  6550  0589  0653               	xorwf	_NoPress_Sec_count,w
  6551  058A  1D03               	btfss	3,2
  6552  058B  2D8D               	goto	u371_21
  6553  058C  2D8E               	goto	u371_20
  6554  058D                     u371_21:
  6555  058D  2D94               	goto	i1l3702
  6556  058E                     u371_20:
  6557  058E                     i1l3700:
  6558                           
  6559                           ;EWH.c: 402:                 {;EWH.c: 403:                     EWH_SetEvent(3);
  6560  058E  3003               	movlw	3
  6561  058F  120A  158A  2005  120A  118A  	fcall	i1_EWH_SetEvent
  6562  0594                     i1l3702:
  6563                           
  6564                           ;EWH.c: 407:             if(EWH_Mode==EWH_OPERATING_MODE && DD_GetState(HEATER)==ON)
  6565  0594  3003               	movlw	3
  6566  0595  1683               	bsf	3,5	;RP0=1, select bank1
  6567  0596  1303               	bcf	3,6	;RP1=0, select bank1
  6568  0597  064A               	xorwf	_EWH_Mode^(0+128),w
  6569  0598  1D03               	btfss	3,2
  6570  0599  2D9B               	goto	u372_21
  6571  059A  2D9C               	goto	u372_20
  6572  059B                     u372_21:
  6573  059B  2DAE               	goto	i1l3708
  6574  059C                     u372_20:
  6575  059C                     i1l3704:
  6576  059C  3000               	movlw	0
  6577  059D  120A  158A  2297  120A  118A  	fcall	_DD_GetState
  6578  05A2  3A01               	xorlw	1
  6579  05A3  1D03               	skipz
  6580  05A4  2DA6               	goto	u373_21
  6581  05A5  2DA7               	goto	u373_20
  6582  05A6                     u373_21:
  6583  05A6  2DAE               	goto	i1l3708
  6584  05A7                     u373_20:
  6585  05A7                     i1l3706:
  6586                           
  6587                           ;EWH.c: 408:             {;EWH.c: 409:                 (PORTB^=(1<<7));
  6588  05A7  3080               	movlw	128
  6589  05A8  00FF               	movwf	btemp+1
  6590  05A9  087F               	movf	btemp+1,w
  6591  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  6592  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  6593  05AC  0686               	xorwf	6,f	;volatile
  6594                           
  6595                           ;EWH.c: 410:             }
  6596  05AD  2DC4               	goto	i1l3716
  6597  05AE                     i1l3708:
  6598  05AE  3003               	movlw	3
  6599  05AF  1683               	bsf	3,5	;RP0=1, select bank1
  6600  05B0  1303               	bcf	3,6	;RP1=0, select bank1
  6601  05B1  064A               	xorwf	_EWH_Mode^(0+128),w
  6602  05B2  1D03               	btfss	3,2
  6603  05B3  2DB5               	goto	u374_21
  6604  05B4  2DB6               	goto	u374_20
  6605  05B5                     u374_21:
  6606  05B5  2DC4               	goto	i1l3716
  6607  05B6                     u374_20:
  6608  05B6                     i1l3710:
  6609                           
  6610                           ;EWH.c: 412:             {;EWH.c: 413:                 (ON)?(PORTB |= (1<<7)) : (PORTB &
      +                          = ~(1<<7));
  6611  05B6  3001               	movlw	1
  6612  05B7  120A  158A  2297  120A  118A  	fcall	_DD_GetState
  6613  05BC  3A01               	xorlw	1
  6614  05BD  1D03               	skipz
  6615  05BE  2DC0               	goto	u375_21
  6616  05BF  2DC1               	goto	u375_20
  6617  05C0                     u375_21:
  6618  05C0  2DC4               	goto	i1l3716
  6619  05C1                     u375_20:
  6620  05C1                     i1l3712:
  6621  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  6622  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  6623  05C3  1786               	bsf	6,7	;volatile
  6624  05C4                     i1l3716:
  6625                           
  6626                           ;EWH.c: 416:             count = 0;
  6627  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  6628  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  6629  05C6  01D2               	clrf	ISR@count
  6630  05C7                     i1l3718:
  6631                           
  6632                           ;EWH.c: 418:     TMR1IF = 0;
  6633  05C7  100C               	bcf	12,0	;volatile
  6634  05C8                     i1l3720:
  6635                           
  6636                           ;EWH.c: 419:     TMR1=40536;
  6637  05C8  309E               	movlw	158
  6638  05C9  008F               	movwf	15	;volatile
  6639  05CA  3058               	movlw	88
  6640  05CB  008E               	movwf	14	;volatile
  6641  05CC                     i1l596:
  6642  05CC  0849               	movf	??_ISR+5,w
  6643  05CD  00FF               	movwf	btemp+1
  6644  05CE  0848               	movf	??_ISR+4,w
  6645  05CF  008A               	movwf	10
  6646  05D0  0847               	movf	??_ISR+3,w
  6647  05D1  0084               	movwf	4
  6648  05D2  0E46               	swapf	(??_ISR+2)^0,w
  6649  05D3  0083               	movwf	3
  6650  05D4  0EFE               	swapf	btemp,f
  6651  05D5  0E7E               	swapf	btemp,w
  6652  05D6  0009               	retfie
  6653  05D7                     __end_of_ISR:
  6654                           
  6655                           	psect	intentry
  6656  0004                     __pintentry:	
  6657                           ;incstack = 0
  6658 ;; hardware stack exceeded
  6659                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6660                           
  6661  0004                     interrupt_function:
  6662  007E                     saved_w	set	btemp
  6663  0004  00FE               	movwf	btemp
  6664  0005  0E03               	swapf	3,w
  6665  0006  1283               	bcf	3,5	;RP0=0, select bank0
  6666  0007  1303               	bcf	3,6	;RP1=0, select bank0
  6667  0008  00C6               	movwf	??_ISR+2
  6668  0009  0804               	movf	4,w
  6669  000A  00C7               	movwf	??_ISR+3
  6670  000B  080A               	movf	10,w
  6671  000C  00C8               	movwf	??_ISR+4
  6672  000D  087F               	movf	btemp+1,w
  6673  000E  00C9               	movwf	??_ISR+5
  6674  000F  120A  118A  2CCE   	ljmp	_ISR
  6675                           
  6676                           	psect	text41
  6677  080D                     __ptext41:	
  6678 ;; *************** function i1_EWH_SetMode *****************
  6679 ;; Defined at:
  6680 ;;		line 301 in file "EWH.c"
  6681 ;; Parameters:    Size  Location     Type
  6682 ;;  new_mode        1    wreg     enum E1009
  6683 ;; Auto vars:     Size  Location     Type
  6684 ;;  new_mode        1    0[COMMON] enum E1009
  6685 ;; Return value:  Size  Location     Type
  6686 ;;                  1    wreg      void 
  6687 ;; Registers used:
  6688 ;;		wreg, btemp+1
  6689 ;; Tracked objects:
  6690 ;;		On entry : 0/0
  6691 ;;		On exit  : 0/0
  6692 ;;		Unchanged: 0/0
  6693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6694 ;;      Params:         0       0       0       0       0
  6695 ;;      Locals:         1       0       0       0       0
  6696 ;;      Temps:          0       0       0       0       0
  6697 ;;      Totals:         1       0       0       0       0
  6698 ;;Total ram usage:        1 bytes
  6699 ;; Hardware stack levels used:    1
  6700 ;; This function calls:
  6701 ;;		Nothing
  6702 ;; This function is called by:
  6703 ;;		_ISR
  6704 ;; This function uses a non-reentrant model
  6705 ;;
  6706                           
  6707                           
  6708                           ;psect for function i1_EWH_SetMode
  6709  080D                     i1_EWH_SetMode:
  6710                           
  6711                           ;incstack = 0
  6712                           ; Regs used in i1_EWH_SetMode: [wreg+btemp+1]
  6713                           ;i1EWH_SetMode@new_mode stored from wreg
  6714  080D  00F0               	movwf	i1EWH_SetMode@new_mode
  6715  080E                     i1l3552:
  6716                           
  6717                           ;EWH.c: 301: void EWH_SetMode(sEWH_Mode new_mode);EWH.c: 302: {;EWH.c: 303:     EWH_Mode
      +                          =new_mode;
  6718  080E  0870               	movf	i1EWH_SetMode@new_mode,w
  6719  080F  00FF               	movwf	btemp+1
  6720  0810  087F               	movf	btemp+1,w
  6721  0811  1683               	bsf	3,5	;RP0=1, select bank1
  6722  0812  1303               	bcf	3,6	;RP1=0, select bank1
  6723  0813  00CA               	movwf	_EWH_Mode^(0+128)
  6724  0814                     i1l543:
  6725  0814  0008               	return
  6726  0815                     __end_ofi1_EWH_SetMode:
  6727                           
  6728                           	psect	text42
  6729  0805                     __ptext42:	
  6730 ;; *************** function i1_EWH_SetEvent *****************
  6731 ;; Defined at:
  6732 ;;		line 305 in file "EWH.c"
  6733 ;; Parameters:    Size  Location     Type
  6734 ;;  Event_index     1    wreg     unsigned char 
  6735 ;; Auto vars:     Size  Location     Type
  6736 ;;  Event_index     1    0[COMMON] unsigned char 
  6737 ;; Return value:  Size  Location     Type
  6738 ;;                  1    wreg      void 
  6739 ;; Registers used:
  6740 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6741 ;; Tracked objects:
  6742 ;;		On entry : 0/0
  6743 ;;		On exit  : 0/0
  6744 ;;		Unchanged: 0/0
  6745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6746 ;;      Params:         0       0       0       0       0
  6747 ;;      Locals:         1       0       0       0       0
  6748 ;;      Temps:          0       0       0       0       0
  6749 ;;      Totals:         1       0       0       0       0
  6750 ;;Total ram usage:        1 bytes
  6751 ;; Hardware stack levels used:    1
  6752 ;; This function calls:
  6753 ;;		Nothing
  6754 ;; This function is called by:
  6755 ;;		_ISR
  6756 ;; This function uses a non-reentrant model
  6757 ;;
  6758                           
  6759                           
  6760                           ;psect for function i1_EWH_SetEvent
  6761  0805                     i1_EWH_SetEvent:
  6762                           
  6763                           ;incstack = 0
  6764                           ; Regs used in i1_EWH_SetEvent: [wreg-fsr0h+status,2+status,0]
  6765                           ;i1EWH_SetEvent@Event_index stored from wreg
  6766  0805  00F0               	movwf	i1EWH_SetEvent@Event_index
  6767  0806                     i1l3554:
  6768                           
  6769                           ;EWH.c: 305: void EWH_SetEvent(uint8_t Event_index);EWH.c: 306: {;EWH.c: 307:     EWH_Ev
      +                          ents[Event_index]=1;
  6770  0806  0870               	movf	i1EWH_SetEvent@Event_index,w
  6771  0807  3EBD               	addlw	(low (_EWH_Events| 0))& (0+255)
  6772  0808  0084               	movwf	4
  6773  0809  1383               	bcf	3,7	;select IRP bank1
  6774  080A  0180               	clrf	0
  6775  080B  0A80               	incf	0,f
  6776  080C                     i1l546:
  6777  080C  0008               	return
  6778  080D                     __end_ofi1_EWH_SetEvent:
  6779                           
  6780                           	psect	text43
  6781  06C8                     __ptext43:	
  6782 ;; *************** function ___xxtofl *****************
  6783 ;; Defined at:
  6784 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\xxtofl.c"
  6785 ;; Parameters:    Size  Location     Type
  6786 ;;  sign            1    wreg     unsigned char 
  6787 ;;  val             4    0[COMMON] long 
  6788 ;; Auto vars:     Size  Location     Type
  6789 ;;  sign            1    8[COMMON] unsigned char 
  6790 ;;  arg             4   10[COMMON] unsigned long 
  6791 ;;  exp             1    9[COMMON] unsigned char 
  6792 ;; Return value:  Size  Location     Type
  6793 ;;                  4    0[COMMON] unsigned char 
  6794 ;; Registers used:
  6795 ;;		wreg, status,2, status,0, btemp+1
  6796 ;; Tracked objects:
  6797 ;;		On entry : 0/0
  6798 ;;		On exit  : 0/0
  6799 ;;		Unchanged: 0/0
  6800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6801 ;;      Params:         4       0       0       0       0
  6802 ;;      Locals:         6       0       0       0       0
  6803 ;;      Temps:          4       0       0       0       0
  6804 ;;      Totals:        14       0       0       0       0
  6805 ;;Total ram usage:       14 bytes
  6806 ;; Hardware stack levels used:    1
  6807 ;; This function calls:
  6808 ;;		Nothing
  6809 ;; This function is called by:
  6810 ;;		_ISR
  6811 ;; This function uses a non-reentrant model
  6812 ;;
  6813                           
  6814                           
  6815                           ;psect for function ___xxtofl
  6816  06C8                     ___xxtofl:
  6817                           
  6818                           ;incstack = 0
  6819                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  6820                           ;___xxtofl@sign stored from wreg
  6821  06C8  00F8               	movwf	___xxtofl@sign
  6822  06C9                     i1l3504:
  6823  06C9  0878               	movf	___xxtofl@sign,w
  6824  06CA  1903               	btfsc	3,2
  6825  06CB  2ECD               	goto	u342_21
  6826  06CC  2ECE               	goto	u342_20
  6827  06CD                     u342_21:
  6828  06CD  2EE2               	goto	i1l3510
  6829  06CE                     u342_20:
  6830  06CE                     i1l3506:
  6831  06CE  1FF3               	btfss	___xxtofl@val+3,7
  6832  06CF  2ED1               	goto	u343_21
  6833  06D0  2ED2               	goto	u343_20
  6834  06D1                     u343_21:
  6835  06D1  2EE2               	goto	i1l3510
  6836  06D2                     u343_20:
  6837  06D2                     i1l3508:
  6838  06D2  0970               	comf	___xxtofl@val,w
  6839  06D3  00FA               	movwf	___xxtofl@arg
  6840  06D4  0971               	comf	___xxtofl@val+1,w
  6841  06D5  00FB               	movwf	___xxtofl@arg+1
  6842  06D6  0972               	comf	___xxtofl@val+2,w
  6843  06D7  00FC               	movwf	___xxtofl@arg+2
  6844  06D8  0973               	comf	___xxtofl@val+3,w
  6845  06D9  00FD               	movwf	___xxtofl@arg+3
  6846  06DA  0AFA               	incf	___xxtofl@arg,f
  6847  06DB  1903               	skipnz
  6848  06DC  0AFB               	incf	___xxtofl@arg+1,f
  6849  06DD  1903               	skipnz
  6850  06DE  0AFC               	incf	___xxtofl@arg+2,f
  6851  06DF  1903               	skipnz
  6852  06E0  0AFD               	incf	___xxtofl@arg+3,f
  6853  06E1  2EEA               	goto	i1l1177
  6854  06E2                     i1l3510:
  6855  06E2  0873               	movf	___xxtofl@val+3,w
  6856  06E3  00FD               	movwf	___xxtofl@arg+3
  6857  06E4  0872               	movf	___xxtofl@val+2,w
  6858  06E5  00FC               	movwf	___xxtofl@arg+2
  6859  06E6  0871               	movf	___xxtofl@val+1,w
  6860  06E7  00FB               	movwf	___xxtofl@arg+1
  6861  06E8  0870               	movf	___xxtofl@val,w
  6862  06E9  00FA               	movwf	___xxtofl@arg
  6863  06EA                     i1l1177:
  6864  06EA  0873               	movf	___xxtofl@val+3,w
  6865  06EB  0472               	iorwf	___xxtofl@val+2,w
  6866  06EC  0471               	iorwf	___xxtofl@val+1,w
  6867  06ED  0470               	iorwf	___xxtofl@val,w
  6868  06EE  1D03               	skipz
  6869  06EF  2EF1               	goto	u344_21
  6870  06F0  2EF2               	goto	u344_20
  6871  06F1                     u344_21:
  6872  06F1  2EFB               	goto	i1l3516
  6873  06F2                     u344_20:
  6874  06F2                     i1l3512:
  6875  06F2  3000               	movlw	0
  6876  06F3  00F3               	movwf	?___xxtofl+3
  6877  06F4  3000               	movlw	0
  6878  06F5  00F2               	movwf	?___xxtofl+2
  6879  06F6  3000               	movlw	0
  6880  06F7  00F1               	movwf	?___xxtofl+1
  6881  06F8  3000               	movlw	0
  6882  06F9  00F0               	movwf	?___xxtofl
  6883  06FA  2F81               	goto	i1l1179
  6884  06FB                     i1l3516:
  6885  06FB  3096               	movlw	150
  6886  06FC  00FF               	movwf	btemp+1
  6887  06FD  087F               	movf	btemp+1,w
  6888  06FE  00F9               	movwf	___xxtofl@exp
  6889  06FF  2F0D               	goto	i1l3522
  6890  0700                     i1l3518:
  6891  0700  3001               	movlw	1
  6892  0701  00FF               	movwf	btemp+1
  6893  0702  087F               	movf	btemp+1,w
  6894  0703  07F9               	addwf	___xxtofl@exp,f
  6895  0704                     i1l3520:
  6896  0704  3001               	movlw	1
  6897  0705                     u345_25:
  6898  0705  1003               	clrc
  6899  0706  0CFD               	rrf	___xxtofl@arg+3,f
  6900  0707  0CFC               	rrf	___xxtofl@arg+2,f
  6901  0708  0CFB               	rrf	___xxtofl@arg+1,f
  6902  0709  0CFA               	rrf	___xxtofl@arg,f
  6903  070A  3EFF               	addlw	-1
  6904  070B  1D03               	skipz
  6905  070C  2F05               	goto	u345_25
  6906  070D                     i1l3522:
  6907  070D  30FE               	movlw	254
  6908  070E  057D               	andwf	___xxtofl@arg+3,w
  6909  070F  1D03               	btfss	3,2
  6910  0710  2F12               	goto	u346_21
  6911  0711  2F13               	goto	u346_20
  6912  0712                     u346_21:
  6913  0712  2F00               	goto	i1l3518
  6914  0713                     u346_20:
  6915  0713  2F2F               	goto	i1l3530
  6916  0714                     i1l3524:
  6917  0714  3001               	movlw	1
  6918  0715  00FF               	movwf	btemp+1
  6919  0716  087F               	movf	btemp+1,w
  6920  0717  07F9               	addwf	___xxtofl@exp,f
  6921  0718                     i1l3526:
  6922  0718  3001               	movlw	1
  6923  0719  07FA               	addwf	___xxtofl@arg,f
  6924  071A  3000               	movlw	0
  6925  071B  1803               	skipnc
  6926  071C  3001               	movlw	1
  6927  071D  07FB               	addwf	___xxtofl@arg+1,f
  6928  071E  3000               	movlw	0
  6929  071F  1803               	skipnc
  6930  0720  3001               	movlw	1
  6931  0721  07FC               	addwf	___xxtofl@arg+2,f
  6932  0722  3000               	movlw	0
  6933  0723  1803               	skipnc
  6934  0724  3001               	movlw	1
  6935  0725  07FD               	addwf	___xxtofl@arg+3,f
  6936  0726                     i1l3528:
  6937  0726  3001               	movlw	1
  6938  0727                     u347_25:
  6939  0727  1003               	clrc
  6940  0728  0CFD               	rrf	___xxtofl@arg+3,f
  6941  0729  0CFC               	rrf	___xxtofl@arg+2,f
  6942  072A  0CFB               	rrf	___xxtofl@arg+1,f
  6943  072B  0CFA               	rrf	___xxtofl@arg,f
  6944  072C  3EFF               	addlw	-1
  6945  072D  1D03               	skipz
  6946  072E  2F27               	goto	u347_25
  6947  072F                     i1l3530:
  6948  072F  30FF               	movlw	255
  6949  0730  057D               	andwf	___xxtofl@arg+3,w
  6950  0731  1D03               	btfss	3,2
  6951  0732  2F34               	goto	u348_21
  6952  0733  2F35               	goto	u348_20
  6953  0734                     u348_21:
  6954  0734  2F14               	goto	i1l3524
  6955  0735                     u348_20:
  6956  0735  2F41               	goto	i1l3534
  6957  0736                     i1l3532:
  6958  0736  3001               	movlw	1
  6959  0737  02F9               	subwf	___xxtofl@exp,f
  6960  0738  3001               	movlw	1
  6961  0739  00F4               	movwf	??___xxtofl
  6962  073A                     u349_25:
  6963  073A  1003               	clrc
  6964  073B  0DFA               	rlf	___xxtofl@arg,f
  6965  073C  0DFB               	rlf	___xxtofl@arg+1,f
  6966  073D  0DFC               	rlf	___xxtofl@arg+2,f
  6967  073E  0DFD               	rlf	___xxtofl@arg+3,f
  6968  073F  0BF4               	decfsz	??___xxtofl,f
  6969  0740  2F3A               	goto	u349_25
  6970  0741                     i1l3534:
  6971  0741  1BFC               	btfsc	___xxtofl@arg+2,7
  6972  0742  2F44               	goto	u350_21
  6973  0743  2F45               	goto	u350_20
  6974  0744                     u350_21:
  6975  0744  2F4B               	goto	i1l1190
  6976  0745                     u350_20:
  6977  0745                     i1l3536:
  6978  0745  3002               	movlw	2
  6979  0746  0279               	subwf	___xxtofl@exp,w
  6980  0747  1803               	skipnc
  6981  0748  2F4A               	goto	u351_21
  6982  0749  2F4B               	goto	u351_20
  6983  074A                     u351_21:
  6984  074A  2F36               	goto	i1l3532
  6985  074B                     u351_20:
  6986  074B                     i1l1190:
  6987  074B  1879               	btfsc	___xxtofl@exp,0
  6988  074C  2F4E               	goto	u352_21
  6989  074D  2F4F               	goto	u352_20
  6990  074E                     u352_21:
  6991  074E  2F57               	goto	i1l1191
  6992  074F                     u352_20:
  6993  074F                     i1l3538:
  6994  074F  30FF               	movlw	255
  6995  0750  05FA               	andwf	___xxtofl@arg,f
  6996  0751  30FF               	movlw	255
  6997  0752  05FB               	andwf	___xxtofl@arg+1,f
  6998  0753  307F               	movlw	127
  6999  0754  05FC               	andwf	___xxtofl@arg+2,f
  7000  0755  30FF               	movlw	255
  7001  0756  05FD               	andwf	___xxtofl@arg+3,f
  7002  0757                     i1l1191:
  7003  0757  1003               	clrc
  7004  0758  0CF9               	rrf	___xxtofl@exp,f
  7005  0759                     i1l3540:
  7006  0759  0879               	movf	___xxtofl@exp,w
  7007  075A  00F4               	movwf	??___xxtofl
  7008  075B  01F5               	clrf	??___xxtofl+1
  7009  075C  01F6               	clrf	??___xxtofl+2
  7010  075D  01F7               	clrf	??___xxtofl+3
  7011  075E  3018               	movlw	24
  7012  075F                     u353_25:
  7013  075F  1003               	clrc
  7014  0760  0DF4               	rlf	??___xxtofl,f
  7015  0761  0DF5               	rlf	??___xxtofl+1,f
  7016  0762  0DF6               	rlf	??___xxtofl+2,f
  7017  0763  0DF7               	rlf	??___xxtofl+3,f
  7018  0764                     u353_20:
  7019  0764  3EFF               	addlw	-1
  7020  0765  1D03               	skipz
  7021  0766  2F5F               	goto	u353_25
  7022  0767  0874               	movf	??___xxtofl,w
  7023  0768  04FA               	iorwf	___xxtofl@arg,f
  7024  0769  0875               	movf	??___xxtofl+1,w
  7025  076A  04FB               	iorwf	___xxtofl@arg+1,f
  7026  076B  0876               	movf	??___xxtofl+2,w
  7027  076C  04FC               	iorwf	___xxtofl@arg+2,f
  7028  076D  0877               	movf	??___xxtofl+3,w
  7029  076E  04FD               	iorwf	___xxtofl@arg+3,f
  7030  076F                     i1l3542:
  7031  076F  0878               	movf	___xxtofl@sign,w
  7032  0770  1903               	btfsc	3,2
  7033  0771  2F73               	goto	u354_21
  7034  0772  2F74               	goto	u354_20
  7035  0773                     u354_21:
  7036  0773  2F79               	goto	i1l3548
  7037  0774                     u354_20:
  7038  0774                     i1l3544:
  7039  0774  1FF3               	btfss	___xxtofl@val+3,7
  7040  0775  2F77               	goto	u355_21
  7041  0776  2F78               	goto	u355_20
  7042  0777                     u355_21:
  7043  0777  2F79               	goto	i1l3548
  7044  0778                     u355_20:
  7045  0778                     i1l3546:
  7046  0778  17FD               	bsf	___xxtofl@arg+3,7
  7047  0779                     i1l3548:
  7048  0779  087D               	movf	___xxtofl@arg+3,w
  7049  077A  00F3               	movwf	?___xxtofl+3
  7050  077B  087C               	movf	___xxtofl@arg+2,w
  7051  077C  00F2               	movwf	?___xxtofl+2
  7052  077D  087B               	movf	___xxtofl@arg+1,w
  7053  077E  00F1               	movwf	?___xxtofl+1
  7054  077F  087A               	movf	___xxtofl@arg,w
  7055  0780  00F0               	movwf	?___xxtofl
  7056  0781                     i1l1179:
  7057  0781  0008               	return
  7058  0782                     __end_of___xxtofl:
  7059                           
  7060                           	psect	text44
  7061  0EEC                     __ptext44:	
  7062 ;; *************** function ___fltol *****************
  7063 ;; Defined at:
  7064 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fltol.c"
  7065 ;; Parameters:    Size  Location     Type
  7066 ;;  f1              4   26[BANK0 ] unsigned char 
  7067 ;; Auto vars:     Size  Location     Type
  7068 ;;  exp1            1   35[BANK0 ] unsigned char 
  7069 ;;  sign1           1   34[BANK0 ] unsigned char 
  7070 ;; Return value:  Size  Location     Type
  7071 ;;                  4   26[BANK0 ] long 
  7072 ;; Registers used:
  7073 ;;		wreg, status,2, status,0, btemp+1
  7074 ;; Tracked objects:
  7075 ;;		On entry : 0/0
  7076 ;;		On exit  : 0/0
  7077 ;;		Unchanged: 0/0
  7078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7079 ;;      Params:         0       4       0       0       0
  7080 ;;      Locals:         0       2       0       0       0
  7081 ;;      Temps:          0       4       0       0       0
  7082 ;;      Totals:         0      10       0       0       0
  7083 ;;Total ram usage:       10 bytes
  7084 ;; Hardware stack levels used:    1
  7085 ;; This function calls:
  7086 ;;		Nothing
  7087 ;; This function is called by:
  7088 ;;		_ISR
  7089 ;; This function uses a non-reentrant model
  7090 ;;
  7091                           
  7092                           
  7093                           ;psect for function ___fltol
  7094  0EEC                     ___fltol:
  7095  0EEC                     i1l3324:	
  7096                           ;incstack = 0
  7097                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  7098                           
  7099  0EEC  1003               	clrc
  7100  0EED  1283               	bcf	3,5	;RP0=0, select bank0
  7101  0EEE  1303               	bcf	3,6	;RP1=0, select bank0
  7102  0EEF  0D3C               	rlf	___fltol@f1+2,w
  7103  0EF0  0D3D               	rlf	___fltol@f1+3,w
  7104  0EF1  00FF               	movwf	btemp+1
  7105  0EF2  087F               	movf	btemp+1,w
  7106  0EF3  00C3               	movwf	___fltol@exp1
  7107  0EF4  0843               	movf	___fltol@exp1,w
  7108  0EF5  1D03               	btfss	3,2
  7109  0EF6  2EF8               	goto	u295_21
  7110  0EF7  2EF9               	goto	u295_20
  7111  0EF8                     u295_21:
  7112  0EF8  2F02               	goto	i1l3330
  7113  0EF9                     u295_20:
  7114  0EF9                     i1l3326:
  7115  0EF9  3000               	movlw	0
  7116  0EFA  00BD               	movwf	?___fltol+3
  7117  0EFB  3000               	movlw	0
  7118  0EFC  00BC               	movwf	?___fltol+2
  7119  0EFD  3000               	movlw	0
  7120  0EFE  00BB               	movwf	?___fltol+1
  7121  0EFF  3000               	movlw	0
  7122  0F00  00BA               	movwf	?___fltol
  7123  0F01  2F67               	goto	i1l930
  7124  0F02                     i1l3330:
  7125  0F02  083A               	movf	___fltol@f1,w
  7126  0F03  00BE               	movwf	??___fltol
  7127  0F04  083B               	movf	___fltol@f1+1,w
  7128  0F05  00BF               	movwf	??___fltol+1
  7129  0F06  083C               	movf	___fltol@f1+2,w
  7130  0F07  00C0               	movwf	??___fltol+2
  7131  0F08  083D               	movf	___fltol@f1+3,w
  7132  0F09  00C1               	movwf	??___fltol+3
  7133  0F0A  301F               	movlw	31
  7134  0F0B                     u296_25:
  7135  0F0B  1003               	clrc
  7136  0F0C  0CC1               	rrf	??___fltol+3,f
  7137  0F0D  0CC0               	rrf	??___fltol+2,f
  7138  0F0E  0CBF               	rrf	??___fltol+1,f
  7139  0F0F  0CBE               	rrf	??___fltol,f
  7140  0F10                     u296_20:
  7141  0F10  3EFF               	addlw	-1
  7142  0F11  1D03               	skipz
  7143  0F12  2F0B               	goto	u296_25
  7144  0F13  083E               	movf	??___fltol,w
  7145  0F14  00FF               	movwf	btemp+1
  7146  0F15  087F               	movf	btemp+1,w
  7147  0F16  00C2               	movwf	___fltol@sign1
  7148  0F17                     i1l3332:
  7149  0F17  17BC               	bsf	___fltol@f1+2,7
  7150  0F18                     i1l3334:
  7151  0F18  30FF               	movlw	255
  7152  0F19  05BA               	andwf	___fltol@f1,f
  7153  0F1A  30FF               	movlw	255
  7154  0F1B  05BB               	andwf	___fltol@f1+1,f
  7155  0F1C  30FF               	movlw	255
  7156  0F1D  05BC               	andwf	___fltol@f1+2,f
  7157  0F1E  3000               	movlw	0
  7158  0F1F  05BD               	andwf	___fltol@f1+3,f
  7159  0F20                     i1l3336:
  7160  0F20  3096               	movlw	150
  7161  0F21  02C3               	subwf	___fltol@exp1,f
  7162  0F22                     i1l3338:
  7163  0F22  1FC3               	btfss	___fltol@exp1,7
  7164  0F23  2F25               	goto	u297_21
  7165  0F24  2F26               	goto	u297_20
  7166  0F25                     u297_21:
  7167  0F25  2F40               	goto	i1l3350
  7168  0F26                     u297_20:
  7169  0F26                     i1l3340:
  7170  0F26  0843               	movf	___fltol@exp1,w
  7171  0F27  3A80               	xorlw	128
  7172  0F28  3E97               	addlw	151
  7173  0F29  1803               	skipnc
  7174  0F2A  2F2C               	goto	u298_21
  7175  0F2B  2F2D               	goto	u298_20
  7176  0F2C                     u298_21:
  7177  0F2C  2F2E               	goto	i1l3346
  7178  0F2D                     u298_20:
  7179  0F2D  2EF9               	goto	i1l3326
  7180  0F2E                     i1l3346:
  7181  0F2E  3001               	movlw	1
  7182  0F2F                     u299_25:
  7183  0F2F  1003               	clrc
  7184  0F30  0CBD               	rrf	___fltol@f1+3,f
  7185  0F31  0CBC               	rrf	___fltol@f1+2,f
  7186  0F32  0CBB               	rrf	___fltol@f1+1,f
  7187  0F33  0CBA               	rrf	___fltol@f1,f
  7188  0F34  3EFF               	addlw	-1
  7189  0F35  1D03               	skipz
  7190  0F36  2F2F               	goto	u299_25
  7191  0F37                     i1l3348:
  7192  0F37  3001               	movlw	1
  7193  0F38  00FF               	movwf	btemp+1
  7194  0F39  087F               	movf	btemp+1,w
  7195  0F3A  07C3               	addwf	___fltol@exp1,f
  7196  0F3B  1D03               	btfss	3,2
  7197  0F3C  2F3E               	goto	u300_21
  7198  0F3D  2F3F               	goto	u300_20
  7199  0F3E                     u300_21:
  7200  0F3E  2F2E               	goto	i1l3346
  7201  0F3F                     u300_20:
  7202  0F3F  2F57               	goto	i1l3358
  7203  0F40                     i1l3350:
  7204  0F40  3020               	movlw	32
  7205  0F41  0243               	subwf	___fltol@exp1,w
  7206  0F42  1C03               	skipc
  7207  0F43  2F45               	goto	u301_21
  7208  0F44  2F46               	goto	u301_20
  7209  0F45                     u301_21:
  7210  0F45  2F52               	goto	i1l937
  7211  0F46                     u301_20:
  7212  0F46  2EF9               	goto	i1l3326
  7213  0F47                     i1l3356:
  7214  0F47  3001               	movlw	1
  7215  0F48  00BE               	movwf	??___fltol
  7216  0F49                     u302_25:
  7217  0F49  1003               	clrc
  7218  0F4A  0DBA               	rlf	___fltol@f1,f
  7219  0F4B  0DBB               	rlf	___fltol@f1+1,f
  7220  0F4C  0DBC               	rlf	___fltol@f1+2,f
  7221  0F4D  0DBD               	rlf	___fltol@f1+3,f
  7222  0F4E  0BBE               	decfsz	??___fltol,f
  7223  0F4F  2F49               	goto	u302_25
  7224  0F50  3001               	movlw	1
  7225  0F51  02C3               	subwf	___fltol@exp1,f
  7226  0F52                     i1l937:
  7227  0F52  0843               	movf	___fltol@exp1,w
  7228  0F53  1D03               	btfss	3,2
  7229  0F54  2F56               	goto	u303_21
  7230  0F55  2F57               	goto	u303_20
  7231  0F56                     u303_21:
  7232  0F56  2F47               	goto	i1l3356
  7233  0F57                     u303_20:
  7234  0F57                     i1l3358:
  7235  0F57  0842               	movf	___fltol@sign1,w
  7236  0F58  1903               	btfsc	3,2
  7237  0F59  2F5B               	goto	u304_21
  7238  0F5A  2F5C               	goto	u304_20
  7239  0F5B                     u304_21:
  7240  0F5B  2F67               	goto	i1l940
  7241  0F5C                     u304_20:
  7242  0F5C                     i1l3360:
  7243  0F5C  09BA               	comf	___fltol@f1,f
  7244  0F5D  09BB               	comf	___fltol@f1+1,f
  7245  0F5E  09BC               	comf	___fltol@f1+2,f
  7246  0F5F  09BD               	comf	___fltol@f1+3,f
  7247  0F60  0ABA               	incf	___fltol@f1,f
  7248  0F61  1903               	skipnz
  7249  0F62  0ABB               	incf	___fltol@f1+1,f
  7250  0F63  1903               	skipnz
  7251  0F64  0ABC               	incf	___fltol@f1+2,f
  7252  0F65  1903               	skipnz
  7253  0F66  0ABD               	incf	___fltol@f1+3,f
  7254  0F67                     i1l940:
  7255  0F67                     i1l930:
  7256  0F67  0008               	return
  7257  0F68                     __end_of___fltol:
  7258                           
  7259                           	psect	text45
  7260  0037                     __ptext45:	
  7261 ;; *************** function ___flmul *****************
  7262 ;; Defined at:
  7263 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcmul.c"
  7264 ;; Parameters:    Size  Location     Type
  7265 ;;  b               4    0[BANK0 ] long 
  7266 ;;  a               4    4[BANK0 ] long 
  7267 ;; Auto vars:     Size  Location     Type
  7268 ;;  prod            4   20[BANK0 ] struct .
  7269 ;;  grs             4   14[BANK0 ] unsigned long 
  7270 ;;  temp            2   24[BANK0 ] struct .
  7271 ;;  bexp            1   19[BANK0 ] unsigned char 
  7272 ;;  aexp            1   18[BANK0 ] unsigned char 
  7273 ;;  sign            1   13[BANK0 ] unsigned char 
  7274 ;; Return value:  Size  Location     Type
  7275 ;;                  4    0[BANK0 ] unsigned char 
  7276 ;; Registers used:
  7277 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7278 ;; Tracked objects:
  7279 ;;		On entry : 0/0
  7280 ;;		On exit  : 0/0
  7281 ;;		Unchanged: 0/0
  7282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7283 ;;      Params:         0       8       0       0       0
  7284 ;;      Locals:         0      13       0       0       0
  7285 ;;      Temps:          0       5       0       0       0
  7286 ;;      Totals:         0      26       0       0       0
  7287 ;;Total ram usage:       26 bytes
  7288 ;; Hardware stack levels used:    1
  7289 ;; Hardware stack levels required when called:    1
  7290 ;; This function calls:
  7291 ;;		__Umul8_16
  7292 ;; This function is called by:
  7293 ;;		_ISR
  7294 ;; This function uses a non-reentrant model
  7295 ;;
  7296                           
  7297                           
  7298                           ;psect for function ___flmul
  7299  0037                     ___flmul:
  7300  0037                     i1l3362:	
  7301                           ;incstack = 0
  7302 ;; hardware stack exceeded
  7303                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7304                           
  7305  0037  1283               	bcf	3,5	;RP0=0, select bank0
  7306  0038  1303               	bcf	3,6	;RP1=0, select bank0
  7307  0039  0823               	movf	___flmul@b+3,w
  7308  003A  3980               	andlw	128
  7309  003B  00FF               	movwf	btemp+1
  7310  003C  087F               	movf	btemp+1,w
  7311  003D  00AD               	movwf	___flmul@sign
  7312  003E                     i1l3364:
  7313  003E  0823               	movf	___flmul@b+3,w
  7314  003F  00A8               	movwf	??___flmul
  7315  0040  0728               	addwf	??___flmul,w
  7316  0041  00FF               	movwf	btemp+1
  7317  0042  087F               	movf	btemp+1,w
  7318  0043  00B3               	movwf	___flmul@bexp
  7319  0044                     i1l3366:
  7320  0044  1FA2               	btfss	___flmul@b+2,7
  7321  0045  2847               	goto	u305_21
  7322  0046  2848               	goto	u305_20
  7323  0047                     u305_21:
  7324  0047  2849               	goto	i1l3370
  7325  0048                     u305_20:
  7326  0048                     i1l3368:
  7327  0048  1433               	bsf	___flmul@bexp,0
  7328  0049                     i1l3370:
  7329  0049  0833               	movf	___flmul@bexp,w
  7330  004A  1903               	btfsc	3,2
  7331  004B  284D               	goto	u306_21
  7332  004C  284E               	goto	u306_20
  7333  004D                     u306_21:
  7334  004D  285D               	goto	i1l3378
  7335  004E                     u306_20:
  7336  004E                     i1l3372:
  7337  004E  0A33               	incf	___flmul@bexp,w
  7338  004F  1D03               	btfss	3,2
  7339  0050  2852               	goto	u307_21
  7340  0051  2853               	goto	u307_20
  7341  0052                     u307_21:
  7342  0052  285B               	goto	i1l3376
  7343  0053                     u307_20:
  7344  0053                     i1l3374:
  7345  0053  3000               	movlw	0
  7346  0054  00A3               	movwf	___flmul@b+3
  7347  0055  3000               	movlw	0
  7348  0056  00A2               	movwf	___flmul@b+2
  7349  0057  3000               	movlw	0
  7350  0058  00A1               	movwf	___flmul@b+1
  7351  0059  3000               	movlw	0
  7352  005A  00A0               	movwf	___flmul@b
  7353  005B                     i1l3376:
  7354  005B  17A2               	bsf	___flmul@b+2,7
  7355  005C  2865               	goto	i1l3380
  7356  005D                     i1l3378:
  7357  005D  3000               	movlw	0
  7358  005E  00A3               	movwf	___flmul@b+3
  7359  005F  3000               	movlw	0
  7360  0060  00A2               	movwf	___flmul@b+2
  7361  0061  3000               	movlw	0
  7362  0062  00A1               	movwf	___flmul@b+1
  7363  0063  3000               	movlw	0
  7364  0064  00A0               	movwf	___flmul@b
  7365  0065                     i1l3380:
  7366  0065  0827               	movf	___flmul@a+3,w
  7367  0066  3980               	andlw	128
  7368  0067  00FF               	movwf	btemp+1
  7369  0068  087F               	movf	btemp+1,w
  7370  0069  06AD               	xorwf	___flmul@sign,f
  7371  006A                     i1l3382:
  7372  006A  0827               	movf	___flmul@a+3,w
  7373  006B  00A8               	movwf	??___flmul
  7374  006C  0728               	addwf	??___flmul,w
  7375  006D  00FF               	movwf	btemp+1
  7376  006E  087F               	movf	btemp+1,w
  7377  006F  00B2               	movwf	___flmul@aexp
  7378  0070                     i1l3384:
  7379  0070  1FA6               	btfss	___flmul@a+2,7
  7380  0071  2873               	goto	u308_21
  7381  0072  2874               	goto	u308_20
  7382  0073                     u308_21:
  7383  0073  2875               	goto	i1l3388
  7384  0074                     u308_20:
  7385  0074                     i1l3386:
  7386  0074  1432               	bsf	___flmul@aexp,0
  7387  0075                     i1l3388:
  7388  0075  0832               	movf	___flmul@aexp,w
  7389  0076  1903               	btfsc	3,2
  7390  0077  2879               	goto	u309_21
  7391  0078  287A               	goto	u309_20
  7392  0079                     u309_21:
  7393  0079  2889               	goto	i1l3396
  7394  007A                     u309_20:
  7395  007A                     i1l3390:
  7396  007A  0A32               	incf	___flmul@aexp,w
  7397  007B  1D03               	btfss	3,2
  7398  007C  287E               	goto	u310_21
  7399  007D  287F               	goto	u310_20
  7400  007E                     u310_21:
  7401  007E  2887               	goto	i1l3394
  7402  007F                     u310_20:
  7403  007F                     i1l3392:
  7404  007F  3000               	movlw	0
  7405  0080  00A7               	movwf	___flmul@a+3
  7406  0081  3000               	movlw	0
  7407  0082  00A6               	movwf	___flmul@a+2
  7408  0083  3000               	movlw	0
  7409  0084  00A5               	movwf	___flmul@a+1
  7410  0085  3000               	movlw	0
  7411  0086  00A4               	movwf	___flmul@a
  7412  0087                     i1l3394:
  7413  0087  17A6               	bsf	___flmul@a+2,7
  7414  0088  2891               	goto	i1l3398
  7415  0089                     i1l3396:
  7416  0089  3000               	movlw	0
  7417  008A  00A7               	movwf	___flmul@a+3
  7418  008B  3000               	movlw	0
  7419  008C  00A6               	movwf	___flmul@a+2
  7420  008D  3000               	movlw	0
  7421  008E  00A5               	movwf	___flmul@a+1
  7422  008F  3000               	movlw	0
  7423  0090  00A4               	movwf	___flmul@a
  7424  0091                     i1l3398:
  7425  0091  0832               	movf	___flmul@aexp,w
  7426  0092  1903               	btfsc	3,2
  7427  0093  2895               	goto	u311_21
  7428  0094  2896               	goto	u311_20
  7429  0095                     u311_21:
  7430  0095  289B               	goto	i1l3402
  7431  0096                     u311_20:
  7432  0096                     i1l3400:
  7433  0096  0833               	movf	___flmul@bexp,w
  7434  0097  1D03               	btfss	3,2
  7435  0098  289A               	goto	u312_21
  7436  0099  289B               	goto	u312_20
  7437  009A                     u312_21:
  7438  009A  28A4               	goto	i1l3406
  7439  009B                     u312_20:
  7440  009B                     i1l3402:
  7441  009B  3000               	movlw	0
  7442  009C  00A3               	movwf	?___flmul+3
  7443  009D  3000               	movlw	0
  7444  009E  00A2               	movwf	?___flmul+2
  7445  009F  3000               	movlw	0
  7446  00A0  00A1               	movwf	?___flmul+1
  7447  00A1  3000               	movlw	0
  7448  00A2  00A0               	movwf	?___flmul
  7449  00A3  2B97               	goto	i1l1133
  7450  00A4                     i1l3406:
  7451  00A4  0820               	movf	___flmul@b,w
  7452  00A5  00FF               	movwf	btemp+1
  7453  00A6  087F               	movf	btemp+1,w
  7454  00A7  00F0               	movwf	__Umul8_16@multiplicand
  7455  00A8  0826               	movf	___flmul@a+2,w
  7456  00A9  120A  158A  216D  120A  118A  	fcall	__Umul8_16
  7457  00AE  0871               	movf	?__Umul8_16+1,w
  7458  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  7459  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  7460  00B1  00B9               	movwf	___flmul@temp+1
  7461  00B2  0870               	movf	?__Umul8_16,w
  7462  00B3  00B8               	movwf	___flmul@temp
  7463  00B4                     i1l3408:
  7464  00B4  0838               	movf	___flmul@temp,w
  7465  00B5  00A8               	movwf	??___flmul
  7466  00B6  01A9               	clrf	??___flmul+1
  7467  00B7  01AA               	clrf	??___flmul+2
  7468  00B8  01AB               	clrf	??___flmul+3
  7469  00B9  082B               	movf	??___flmul+3,w
  7470  00BA  00B1               	movwf	___flmul@grs+3
  7471  00BB  082A               	movf	??___flmul+2,w
  7472  00BC  00B0               	movwf	___flmul@grs+2
  7473  00BD  0829               	movf	??___flmul+1,w
  7474  00BE  00AF               	movwf	___flmul@grs+1
  7475  00BF  0828               	movf	??___flmul,w
  7476  00C0  00AE               	movwf	___flmul@grs
  7477  00C1                     i1l3410:
  7478  00C1  0839               	movf	___flmul@temp+1,w
  7479  00C2  00A8               	movwf	??___flmul
  7480  00C3  01A9               	clrf	??___flmul+1
  7481  00C4  01AA               	clrf	??___flmul+2
  7482  00C5  01AB               	clrf	??___flmul+3
  7483  00C6  082B               	movf	??___flmul+3,w
  7484  00C7  00B7               	movwf	___flmul@prod+3
  7485  00C8  082A               	movf	??___flmul+2,w
  7486  00C9  00B6               	movwf	___flmul@prod+2
  7487  00CA  0829               	movf	??___flmul+1,w
  7488  00CB  00B5               	movwf	___flmul@prod+1
  7489  00CC  0828               	movf	??___flmul,w
  7490  00CD  00B4               	movwf	___flmul@prod
  7491  00CE  0821               	movf	___flmul@b+1,w
  7492  00CF  00FF               	movwf	btemp+1
  7493  00D0  087F               	movf	btemp+1,w
  7494  00D1  00F0               	movwf	__Umul8_16@multiplicand
  7495  00D2  0825               	movf	___flmul@a+1,w
  7496  00D3  120A  158A  216D  120A  118A  	fcall	__Umul8_16
  7497  00D8  0871               	movf	?__Umul8_16+1,w
  7498  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  7499  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  7500  00DB  00B9               	movwf	___flmul@temp+1
  7501  00DC  0870               	movf	?__Umul8_16,w
  7502  00DD  00B8               	movwf	___flmul@temp
  7503  00DE                     i1l3412:
  7504  00DE  0838               	movf	___flmul@temp,w
  7505  00DF  00A8               	movwf	??___flmul
  7506  00E0  01A9               	clrf	??___flmul+1
  7507  00E1  01AA               	clrf	??___flmul+2
  7508  00E2  01AB               	clrf	??___flmul+3
  7509  00E3  0828               	movf	??___flmul,w
  7510  00E4  07AE               	addwf	___flmul@grs,f
  7511  00E5  0829               	movf	??___flmul+1,w
  7512  00E6  1103               	clrz
  7513  00E7  1803               	skipnc
  7514  00E8  3E01               	addlw	1
  7515  00E9  1903               	skipnz
  7516  00EA  28EC               	goto	u313_21
  7517  00EB  07AF               	addwf	___flmul@grs+1,f
  7518  00EC                     u313_21:
  7519  00EC  082A               	movf	??___flmul+2,w
  7520  00ED  1103               	clrz
  7521  00EE  1803               	skipnc
  7522  00EF  3E01               	addlw	1
  7523  00F0  1903               	skipnz
  7524  00F1  28F3               	goto	u313_22
  7525  00F2  07B0               	addwf	___flmul@grs+2,f
  7526  00F3                     u313_22:
  7527  00F3  082B               	movf	??___flmul+3,w
  7528  00F4  1103               	clrz
  7529  00F5  1803               	skipnc
  7530  00F6  3E01               	addlw	1
  7531  00F7  1903               	skipnz
  7532  00F8  28FA               	goto	u313_23
  7533  00F9  07B1               	addwf	___flmul@grs+3,f
  7534  00FA                     u313_23:
  7535  00FA                     i1l3414:
  7536  00FA  0839               	movf	___flmul@temp+1,w
  7537  00FB  00A8               	movwf	??___flmul
  7538  00FC  01A9               	clrf	??___flmul+1
  7539  00FD  01AA               	clrf	??___flmul+2
  7540  00FE  01AB               	clrf	??___flmul+3
  7541  00FF  0828               	movf	??___flmul,w
  7542  0100  07B4               	addwf	___flmul@prod,f
  7543  0101  0829               	movf	??___flmul+1,w
  7544  0102  1103               	clrz
  7545  0103  1803               	skipnc
  7546  0104  3E01               	addlw	1
  7547  0105  1903               	skipnz
  7548  0106  2908               	goto	u314_21
  7549  0107  07B5               	addwf	___flmul@prod+1,f
  7550  0108                     u314_21:
  7551  0108  082A               	movf	??___flmul+2,w
  7552  0109  1103               	clrz
  7553  010A  1803               	skipnc
  7554  010B  3E01               	addlw	1
  7555  010C  1903               	skipnz
  7556  010D  290F               	goto	u314_22
  7557  010E  07B6               	addwf	___flmul@prod+2,f
  7558  010F                     u314_22:
  7559  010F  082B               	movf	??___flmul+3,w
  7560  0110  1103               	clrz
  7561  0111  1803               	skipnc
  7562  0112  3E01               	addlw	1
  7563  0113  1903               	skipnz
  7564  0114  2916               	goto	u314_23
  7565  0115  07B7               	addwf	___flmul@prod+3,f
  7566  0116                     u314_23:
  7567  0116  0822               	movf	___flmul@b+2,w
  7568  0117  00FF               	movwf	btemp+1
  7569  0118  087F               	movf	btemp+1,w
  7570  0119  00F0               	movwf	__Umul8_16@multiplicand
  7571  011A  0824               	movf	___flmul@a,w
  7572  011B  120A  158A  216D  120A  118A  	fcall	__Umul8_16
  7573  0120  0871               	movf	?__Umul8_16+1,w
  7574  0121  1283               	bcf	3,5	;RP0=0, select bank0
  7575  0122  1303               	bcf	3,6	;RP1=0, select bank0
  7576  0123  00B9               	movwf	___flmul@temp+1
  7577  0124  0870               	movf	?__Umul8_16,w
  7578  0125  00B8               	movwf	___flmul@temp
  7579  0126                     i1l3416:
  7580  0126  0838               	movf	___flmul@temp,w
  7581  0127  00A8               	movwf	??___flmul
  7582  0128  01A9               	clrf	??___flmul+1
  7583  0129  01AA               	clrf	??___flmul+2
  7584  012A  01AB               	clrf	??___flmul+3
  7585  012B  0828               	movf	??___flmul,w
  7586  012C  07AE               	addwf	___flmul@grs,f
  7587  012D  0829               	movf	??___flmul+1,w
  7588  012E  1103               	clrz
  7589  012F  1803               	skipnc
  7590  0130  3E01               	addlw	1
  7591  0131  1903               	skipnz
  7592  0132  2934               	goto	u315_21
  7593  0133  07AF               	addwf	___flmul@grs+1,f
  7594  0134                     u315_21:
  7595  0134  082A               	movf	??___flmul+2,w
  7596  0135  1103               	clrz
  7597  0136  1803               	skipnc
  7598  0137  3E01               	addlw	1
  7599  0138  1903               	skipnz
  7600  0139  293B               	goto	u315_22
  7601  013A  07B0               	addwf	___flmul@grs+2,f
  7602  013B                     u315_22:
  7603  013B  082B               	movf	??___flmul+3,w
  7604  013C  1103               	clrz
  7605  013D  1803               	skipnc
  7606  013E  3E01               	addlw	1
  7607  013F  1903               	skipnz
  7608  0140  2942               	goto	u315_23
  7609  0141  07B1               	addwf	___flmul@grs+3,f
  7610  0142                     u315_23:
  7611  0142                     i1l3418:
  7612  0142  0839               	movf	___flmul@temp+1,w
  7613  0143  00A8               	movwf	??___flmul
  7614  0144  01A9               	clrf	??___flmul+1
  7615  0145  01AA               	clrf	??___flmul+2
  7616  0146  01AB               	clrf	??___flmul+3
  7617  0147  0828               	movf	??___flmul,w
  7618  0148  07B4               	addwf	___flmul@prod,f
  7619  0149  0829               	movf	??___flmul+1,w
  7620  014A  1103               	clrz
  7621  014B  1803               	skipnc
  7622  014C  3E01               	addlw	1
  7623  014D  1903               	skipnz
  7624  014E  2950               	goto	u316_21
  7625  014F  07B5               	addwf	___flmul@prod+1,f
  7626  0150                     u316_21:
  7627  0150  082A               	movf	??___flmul+2,w
  7628  0151  1103               	clrz
  7629  0152  1803               	skipnc
  7630  0153  3E01               	addlw	1
  7631  0154  1903               	skipnz
  7632  0155  2957               	goto	u316_22
  7633  0156  07B6               	addwf	___flmul@prod+2,f
  7634  0157                     u316_22:
  7635  0157  082B               	movf	??___flmul+3,w
  7636  0158  1103               	clrz
  7637  0159  1803               	skipnc
  7638  015A  3E01               	addlw	1
  7639  015B  1903               	skipnz
  7640  015C  295E               	goto	u316_23
  7641  015D  07B7               	addwf	___flmul@prod+3,f
  7642  015E                     u316_23:
  7643  015E                     i1l3420:
  7644  015E  3008               	movlw	8
  7645  015F  00A8               	movwf	??___flmul
  7646  0160                     u317_25:
  7647  0160  1003               	clrc
  7648  0161  0DAE               	rlf	___flmul@grs,f
  7649  0162  0DAF               	rlf	___flmul@grs+1,f
  7650  0163  0DB0               	rlf	___flmul@grs+2,f
  7651  0164  0DB1               	rlf	___flmul@grs+3,f
  7652  0165  0BA8               	decfsz	??___flmul,f
  7653  0166  2960               	goto	u317_25
  7654  0167                     i1l3422:
  7655  0167  0821               	movf	___flmul@b+1,w
  7656  0168  00FF               	movwf	btemp+1
  7657  0169  087F               	movf	btemp+1,w
  7658  016A  00F0               	movwf	__Umul8_16@multiplicand
  7659  016B  0824               	movf	___flmul@a,w
  7660  016C  120A  158A  216D  120A  118A  	fcall	__Umul8_16
  7661  0171  0871               	movf	?__Umul8_16+1,w
  7662  0172  1283               	bcf	3,5	;RP0=0, select bank0
  7663  0173  1303               	bcf	3,6	;RP1=0, select bank0
  7664  0174  00B9               	movwf	___flmul@temp+1
  7665  0175  0870               	movf	?__Umul8_16,w
  7666  0176  00B8               	movwf	___flmul@temp
  7667  0177                     i1l3424:
  7668  0177  0838               	movf	___flmul@temp,w
  7669  0178  00A8               	movwf	??___flmul
  7670  0179  0839               	movf	___flmul@temp+1,w
  7671  017A  00A9               	movwf	??___flmul+1
  7672  017B  01AA               	clrf	??___flmul+2
  7673  017C  01AB               	clrf	??___flmul+3
  7674  017D  0828               	movf	??___flmul,w
  7675  017E  07AE               	addwf	___flmul@grs,f
  7676  017F  0829               	movf	??___flmul+1,w
  7677  0180  1103               	clrz
  7678  0181  1803               	skipnc
  7679  0182  3E01               	addlw	1
  7680  0183  1903               	skipnz
  7681  0184  2986               	goto	u318_21
  7682  0185  07AF               	addwf	___flmul@grs+1,f
  7683  0186                     u318_21:
  7684  0186  082A               	movf	??___flmul+2,w
  7685  0187  1103               	clrz
  7686  0188  1803               	skipnc
  7687  0189  3E01               	addlw	1
  7688  018A  1903               	skipnz
  7689  018B  298D               	goto	u318_22
  7690  018C  07B0               	addwf	___flmul@grs+2,f
  7691  018D                     u318_22:
  7692  018D  082B               	movf	??___flmul+3,w
  7693  018E  1103               	clrz
  7694  018F  1803               	skipnc
  7695  0190  3E01               	addlw	1
  7696  0191  1903               	skipnz
  7697  0192  2994               	goto	u318_23
  7698  0193  07B1               	addwf	___flmul@grs+3,f
  7699  0194                     u318_23:
  7700  0194                     i1l3426:
  7701  0194  0820               	movf	___flmul@b,w
  7702  0195  00FF               	movwf	btemp+1
  7703  0196  087F               	movf	btemp+1,w
  7704  0197  00F0               	movwf	__Umul8_16@multiplicand
  7705  0198  0825               	movf	___flmul@a+1,w
  7706  0199  120A  158A  216D  120A  118A  	fcall	__Umul8_16
  7707  019E  0871               	movf	?__Umul8_16+1,w
  7708  019F  1283               	bcf	3,5	;RP0=0, select bank0
  7709  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  7710  01A1  00B9               	movwf	___flmul@temp+1
  7711  01A2  0870               	movf	?__Umul8_16,w
  7712  01A3  00B8               	movwf	___flmul@temp
  7713  01A4                     i1l3428:
  7714  01A4  0838               	movf	___flmul@temp,w
  7715  01A5  00A8               	movwf	??___flmul
  7716  01A6  0839               	movf	___flmul@temp+1,w
  7717  01A7  00A9               	movwf	??___flmul+1
  7718  01A8  01AA               	clrf	??___flmul+2
  7719  01A9  01AB               	clrf	??___flmul+3
  7720  01AA  0828               	movf	??___flmul,w
  7721  01AB  07AE               	addwf	___flmul@grs,f
  7722  01AC  0829               	movf	??___flmul+1,w
  7723  01AD  1103               	clrz
  7724  01AE  1803               	skipnc
  7725  01AF  3E01               	addlw	1
  7726  01B0  1903               	skipnz
  7727  01B1  29B3               	goto	u319_21
  7728  01B2  07AF               	addwf	___flmul@grs+1,f
  7729  01B3                     u319_21:
  7730  01B3  082A               	movf	??___flmul+2,w
  7731  01B4  1103               	clrz
  7732  01B5  1803               	skipnc
  7733  01B6  3E01               	addlw	1
  7734  01B7  1903               	skipnz
  7735  01B8  29BA               	goto	u319_22
  7736  01B9  07B0               	addwf	___flmul@grs+2,f
  7737  01BA                     u319_22:
  7738  01BA  082B               	movf	??___flmul+3,w
  7739  01BB  1103               	clrz
  7740  01BC  1803               	skipnc
  7741  01BD  3E01               	addlw	1
  7742  01BE  1903               	skipnz
  7743  01BF  29C1               	goto	u319_23
  7744  01C0  07B1               	addwf	___flmul@grs+3,f
  7745  01C1                     u319_23:
  7746  01C1                     i1l3430:
  7747  01C1  3008               	movlw	8
  7748  01C2  00A8               	movwf	??___flmul
  7749  01C3                     u320_25:
  7750  01C3  1003               	clrc
  7751  01C4  0DAE               	rlf	___flmul@grs,f
  7752  01C5  0DAF               	rlf	___flmul@grs+1,f
  7753  01C6  0DB0               	rlf	___flmul@grs+2,f
  7754  01C7  0DB1               	rlf	___flmul@grs+3,f
  7755  01C8  0BA8               	decfsz	??___flmul,f
  7756  01C9  29C3               	goto	u320_25
  7757  01CA  0820               	movf	___flmul@b,w
  7758  01CB  00FF               	movwf	btemp+1
  7759  01CC  087F               	movf	btemp+1,w
  7760  01CD  00F0               	movwf	__Umul8_16@multiplicand
  7761  01CE  0824               	movf	___flmul@a,w
  7762  01CF  120A  158A  216D  120A  118A  	fcall	__Umul8_16
  7763  01D4  0871               	movf	?__Umul8_16+1,w
  7764  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  7765  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  7766  01D7  00B9               	movwf	___flmul@temp+1
  7767  01D8  0870               	movf	?__Umul8_16,w
  7768  01D9  00B8               	movwf	___flmul@temp
  7769  01DA                     i1l3432:
  7770  01DA  0838               	movf	___flmul@temp,w
  7771  01DB  00A8               	movwf	??___flmul
  7772  01DC  0839               	movf	___flmul@temp+1,w
  7773  01DD  00A9               	movwf	??___flmul+1
  7774  01DE  01AA               	clrf	??___flmul+2
  7775  01DF  01AB               	clrf	??___flmul+3
  7776  01E0  0828               	movf	??___flmul,w
  7777  01E1  07AE               	addwf	___flmul@grs,f
  7778  01E2  0829               	movf	??___flmul+1,w
  7779  01E3  1103               	clrz
  7780  01E4  1803               	skipnc
  7781  01E5  3E01               	addlw	1
  7782  01E6  1903               	skipnz
  7783  01E7  29E9               	goto	u321_21
  7784  01E8  07AF               	addwf	___flmul@grs+1,f
  7785  01E9                     u321_21:
  7786  01E9  082A               	movf	??___flmul+2,w
  7787  01EA  1103               	clrz
  7788  01EB  1803               	skipnc
  7789  01EC  3E01               	addlw	1
  7790  01ED  1903               	skipnz
  7791  01EE  29F0               	goto	u321_22
  7792  01EF  07B0               	addwf	___flmul@grs+2,f
  7793  01F0                     u321_22:
  7794  01F0  082B               	movf	??___flmul+3,w
  7795  01F1  1103               	clrz
  7796  01F2  1803               	skipnc
  7797  01F3  3E01               	addlw	1
  7798  01F4  1903               	skipnz
  7799  01F5  29F7               	goto	u321_23
  7800  01F6  07B1               	addwf	___flmul@grs+3,f
  7801  01F7                     u321_23:
  7802  01F7                     i1l3434:
  7803  01F7  0821               	movf	___flmul@b+1,w
  7804  01F8  00FF               	movwf	btemp+1
  7805  01F9  087F               	movf	btemp+1,w
  7806  01FA  00F0               	movwf	__Umul8_16@multiplicand
  7807  01FB  0826               	movf	___flmul@a+2,w
  7808  01FC  120A  158A  216D  120A  118A  	fcall	__Umul8_16
  7809  0201  0871               	movf	?__Umul8_16+1,w
  7810  0202  1283               	bcf	3,5	;RP0=0, select bank0
  7811  0203  1303               	bcf	3,6	;RP1=0, select bank0
  7812  0204  00B9               	movwf	___flmul@temp+1
  7813  0205  0870               	movf	?__Umul8_16,w
  7814  0206  00B8               	movwf	___flmul@temp
  7815  0207  0838               	movf	___flmul@temp,w
  7816  0208  00A8               	movwf	??___flmul
  7817  0209  0839               	movf	___flmul@temp+1,w
  7818  020A  00A9               	movwf	??___flmul+1
  7819  020B  01AA               	clrf	??___flmul+2
  7820  020C  01AB               	clrf	??___flmul+3
  7821  020D  0828               	movf	??___flmul,w
  7822  020E  07B4               	addwf	___flmul@prod,f
  7823  020F  0829               	movf	??___flmul+1,w
  7824  0210  1103               	clrz
  7825  0211  1803               	skipnc
  7826  0212  3E01               	addlw	1
  7827  0213  1903               	skipnz
  7828  0214  2A16               	goto	u322_21
  7829  0215  07B5               	addwf	___flmul@prod+1,f
  7830  0216                     u322_21:
  7831  0216  082A               	movf	??___flmul+2,w
  7832  0217  1103               	clrz
  7833  0218  1803               	skipnc
  7834  0219  3E01               	addlw	1
  7835  021A  1903               	skipnz
  7836  021B  2A1D               	goto	u322_22
  7837  021C  07B6               	addwf	___flmul@prod+2,f
  7838  021D                     u322_22:
  7839  021D  082B               	movf	??___flmul+3,w
  7840  021E  1103               	clrz
  7841  021F  1803               	skipnc
  7842  0220  3E01               	addlw	1
  7843  0221  1903               	skipnz
  7844  0222  2A24               	goto	u322_23
  7845  0223  07B7               	addwf	___flmul@prod+3,f
  7846  0224                     u322_23:
  7847  0224                     i1l3436:
  7848  0224  0822               	movf	___flmul@b+2,w
  7849  0225  00FF               	movwf	btemp+1
  7850  0226  087F               	movf	btemp+1,w
  7851  0227  00F0               	movwf	__Umul8_16@multiplicand
  7852  0228  0825               	movf	___flmul@a+1,w
  7853  0229  120A  158A  216D  120A  118A  	fcall	__Umul8_16
  7854  022E  0871               	movf	?__Umul8_16+1,w
  7855  022F  1283               	bcf	3,5	;RP0=0, select bank0
  7856  0230  1303               	bcf	3,6	;RP1=0, select bank0
  7857  0231  00B9               	movwf	___flmul@temp+1
  7858  0232  0870               	movf	?__Umul8_16,w
  7859  0233  00B8               	movwf	___flmul@temp
  7860  0234                     i1l3438:
  7861  0234  0838               	movf	___flmul@temp,w
  7862  0235  00A8               	movwf	??___flmul
  7863  0236  0839               	movf	___flmul@temp+1,w
  7864  0237  00A9               	movwf	??___flmul+1
  7865  0238  01AA               	clrf	??___flmul+2
  7866  0239  01AB               	clrf	??___flmul+3
  7867  023A  0828               	movf	??___flmul,w
  7868  023B  07B4               	addwf	___flmul@prod,f
  7869  023C  0829               	movf	??___flmul+1,w
  7870  023D  1103               	clrz
  7871  023E  1803               	skipnc
  7872  023F  3E01               	addlw	1
  7873  0240  1903               	skipnz
  7874  0241  2A43               	goto	u323_21
  7875  0242  07B5               	addwf	___flmul@prod+1,f
  7876  0243                     u323_21:
  7877  0243  082A               	movf	??___flmul+2,w
  7878  0244  1103               	clrz
  7879  0245  1803               	skipnc
  7880  0246  3E01               	addlw	1
  7881  0247  1903               	skipnz
  7882  0248  2A4A               	goto	u323_22
  7883  0249  07B6               	addwf	___flmul@prod+2,f
  7884  024A                     u323_22:
  7885  024A  082B               	movf	??___flmul+3,w
  7886  024B  1103               	clrz
  7887  024C  1803               	skipnc
  7888  024D  3E01               	addlw	1
  7889  024E  1903               	skipnz
  7890  024F  2A51               	goto	u323_23
  7891  0250  07B7               	addwf	___flmul@prod+3,f
  7892  0251                     u323_23:
  7893  0251  0822               	movf	___flmul@b+2,w
  7894  0252  00FF               	movwf	btemp+1
  7895  0253  087F               	movf	btemp+1,w
  7896  0254  00F0               	movwf	__Umul8_16@multiplicand
  7897  0255  0826               	movf	___flmul@a+2,w
  7898  0256  120A  158A  216D  120A  118A  	fcall	__Umul8_16
  7899  025B  0871               	movf	?__Umul8_16+1,w
  7900  025C  1283               	bcf	3,5	;RP0=0, select bank0
  7901  025D  1303               	bcf	3,6	;RP1=0, select bank0
  7902  025E  00B9               	movwf	___flmul@temp+1
  7903  025F  0870               	movf	?__Umul8_16,w
  7904  0260  00B8               	movwf	___flmul@temp
  7905  0261                     i1l3440:
  7906  0261  0838               	movf	___flmul@temp,w
  7907  0262  00A8               	movwf	??___flmul
  7908  0263  0839               	movf	___flmul@temp+1,w
  7909  0264  00A9               	movwf	??___flmul+1
  7910  0265  01AA               	clrf	??___flmul+2
  7911  0266  01AB               	clrf	??___flmul+3
  7912  0267  3008               	movlw	8
  7913  0268                     u324_25:
  7914  0268  1003               	clrc
  7915  0269  0DA8               	rlf	??___flmul,f
  7916  026A  0DA9               	rlf	??___flmul+1,f
  7917  026B  0DAA               	rlf	??___flmul+2,f
  7918  026C  0DAB               	rlf	??___flmul+3,f
  7919  026D                     u324_20:
  7920  026D  3EFF               	addlw	-1
  7921  026E  1D03               	skipz
  7922  026F  2A68               	goto	u324_25
  7923  0270  0828               	movf	??___flmul,w
  7924  0271  07B4               	addwf	___flmul@prod,f
  7925  0272  0829               	movf	??___flmul+1,w
  7926  0273  1103               	clrz
  7927  0274  1803               	skipnc
  7928  0275  3E01               	addlw	1
  7929  0276  1903               	skipnz
  7930  0277  2A79               	goto	u325_21
  7931  0278  07B5               	addwf	___flmul@prod+1,f
  7932  0279                     u325_21:
  7933  0279  082A               	movf	??___flmul+2,w
  7934  027A  1103               	clrz
  7935  027B  1803               	skipnc
  7936  027C  3E01               	addlw	1
  7937  027D  1903               	skipnz
  7938  027E  2A80               	goto	u325_22
  7939  027F  07B6               	addwf	___flmul@prod+2,f
  7940  0280                     u325_22:
  7941  0280  082B               	movf	??___flmul+3,w
  7942  0281  1103               	clrz
  7943  0282  1803               	skipnc
  7944  0283  3E01               	addlw	1
  7945  0284  1903               	skipnz
  7946  0285  2A87               	goto	u325_23
  7947  0286  07B7               	addwf	___flmul@prod+3,f
  7948  0287                     u325_23:
  7949  0287                     i1l3442:
  7950  0287  082E               	movf	___flmul@grs,w
  7951  0288  00A8               	movwf	??___flmul
  7952  0289  082F               	movf	___flmul@grs+1,w
  7953  028A  00A9               	movwf	??___flmul+1
  7954  028B  0830               	movf	___flmul@grs+2,w
  7955  028C  00AA               	movwf	??___flmul+2
  7956  028D  0831               	movf	___flmul@grs+3,w
  7957  028E  00AB               	movwf	??___flmul+3
  7958  028F  3018               	movlw	24
  7959  0290                     u326_25:
  7960  0290  1003               	clrc
  7961  0291  0CAB               	rrf	??___flmul+3,f
  7962  0292  0CAA               	rrf	??___flmul+2,f
  7963  0293  0CA9               	rrf	??___flmul+1,f
  7964  0294  0CA8               	rrf	??___flmul,f
  7965  0295                     u326_20:
  7966  0295  3EFF               	addlw	-1
  7967  0296  1D03               	skipz
  7968  0297  2A90               	goto	u326_25
  7969  0298  0828               	movf	??___flmul,w
  7970  0299  07B4               	addwf	___flmul@prod,f
  7971  029A  0829               	movf	??___flmul+1,w
  7972  029B  1103               	clrz
  7973  029C  1803               	skipnc
  7974  029D  3E01               	addlw	1
  7975  029E  1903               	skipnz
  7976  029F  2AA1               	goto	u327_21
  7977  02A0  07B5               	addwf	___flmul@prod+1,f
  7978  02A1                     u327_21:
  7979  02A1  082A               	movf	??___flmul+2,w
  7980  02A2  1103               	clrz
  7981  02A3  1803               	skipnc
  7982  02A4  3E01               	addlw	1
  7983  02A5  1903               	skipnz
  7984  02A6  2AA8               	goto	u327_22
  7985  02A7  07B6               	addwf	___flmul@prod+2,f
  7986  02A8                     u327_22:
  7987  02A8  082B               	movf	??___flmul+3,w
  7988  02A9  1103               	clrz
  7989  02AA  1803               	skipnc
  7990  02AB  3E01               	addlw	1
  7991  02AC  1903               	skipnz
  7992  02AD  2AAF               	goto	u327_23
  7993  02AE  07B7               	addwf	___flmul@prod+3,f
  7994  02AF                     u327_23:
  7995  02AF                     i1l3444:
  7996  02AF  3008               	movlw	8
  7997  02B0  00A8               	movwf	??___flmul
  7998  02B1                     u328_25:
  7999  02B1  1003               	clrc
  8000  02B2  0DAE               	rlf	___flmul@grs,f
  8001  02B3  0DAF               	rlf	___flmul@grs+1,f
  8002  02B4  0DB0               	rlf	___flmul@grs+2,f
  8003  02B5  0DB1               	rlf	___flmul@grs+3,f
  8004  02B6  0BA8               	decfsz	??___flmul,f
  8005  02B7  2AB1               	goto	u328_25
  8006  02B8                     i1l3446:
  8007  02B8  0833               	movf	___flmul@bexp,w
  8008  02B9  0732               	addwf	___flmul@aexp,w
  8009  02BA  00A8               	movwf	??___flmul
  8010  02BB  01A9               	clrf	??___flmul+1
  8011  02BC  0DA9               	rlf	??___flmul+1,f
  8012  02BD  0828               	movf	??___flmul,w
  8013  02BE  3E82               	addlw	130
  8014  02BF  00B8               	movwf	___flmul@temp
  8015  02C0  0829               	movf	??___flmul+1,w
  8016  02C1  1803               	skipnc
  8017  02C2  3E01               	addlw	1
  8018  02C3  3EFF               	addlw	255
  8019  02C4  00B9               	movwf	___flmul@temp+1
  8020  02C5  2AE3               	goto	i1l3458
  8021  02C6                     i1l3448:
  8022  02C6  3001               	movlw	1
  8023  02C7  00A8               	movwf	??___flmul
  8024  02C8                     u329_25:
  8025  02C8  1003               	clrc
  8026  02C9  0DB4               	rlf	___flmul@prod,f
  8027  02CA  0DB5               	rlf	___flmul@prod+1,f
  8028  02CB  0DB6               	rlf	___flmul@prod+2,f
  8029  02CC  0DB7               	rlf	___flmul@prod+3,f
  8030  02CD  0BA8               	decfsz	??___flmul,f
  8031  02CE  2AC8               	goto	u329_25
  8032  02CF                     i1l3450:
  8033  02CF  1FB1               	btfss	___flmul@grs+3,7
  8034  02D0  2AD2               	goto	u330_21
  8035  02D1  2AD3               	goto	u330_20
  8036  02D2                     u330_21:
  8037  02D2  2AD4               	goto	i1l3454
  8038  02D3                     u330_20:
  8039  02D3                     i1l3452:
  8040  02D3  1434               	bsf	___flmul@prod,0
  8041  02D4                     i1l3454:
  8042  02D4  3001               	movlw	1
  8043  02D5  00A8               	movwf	??___flmul
  8044  02D6                     u331_25:
  8045  02D6  1003               	clrc
  8046  02D7  0DAE               	rlf	___flmul@grs,f
  8047  02D8  0DAF               	rlf	___flmul@grs+1,f
  8048  02D9  0DB0               	rlf	___flmul@grs+2,f
  8049  02DA  0DB1               	rlf	___flmul@grs+3,f
  8050  02DB  0BA8               	decfsz	??___flmul,f
  8051  02DC  2AD6               	goto	u331_25
  8052  02DD                     i1l3456:
  8053  02DD  30FF               	movlw	255
  8054  02DE  07B8               	addwf	___flmul@temp,f
  8055  02DF  1803               	skipnc
  8056  02E0  0AB9               	incf	___flmul@temp+1,f
  8057  02E1  30FF               	movlw	255
  8058  02E2  07B9               	addwf	___flmul@temp+1,f
  8059  02E3                     i1l3458:
  8060  02E3  1FB6               	btfss	___flmul@prod+2,7
  8061  02E4  2AE6               	goto	u332_21
  8062  02E5  2AE7               	goto	u332_20
  8063  02E6                     u332_21:
  8064  02E6  2AC6               	goto	i1l3448
  8065  02E7                     u332_20:
  8066  02E7                     i1l3460:
  8067  02E7  01B2               	clrf	___flmul@aexp
  8068  02E8                     i1l3462:
  8069  02E8  1FB1               	btfss	___flmul@grs+3,7
  8070  02E9  2AEB               	goto	u333_21
  8071  02EA  2AEC               	goto	u333_20
  8072  02EB                     u333_21:
  8073  02EB  2B08               	goto	i1l3470
  8074  02EC                     u333_20:
  8075  02EC                     i1l3464:
  8076  02EC  30FF               	movlw	255
  8077  02ED  052E               	andwf	___flmul@grs,w
  8078  02EE  00A8               	movwf	??___flmul
  8079  02EF  30FF               	movlw	255
  8080  02F0  052F               	andwf	___flmul@grs+1,w
  8081  02F1  00A9               	movwf	??___flmul+1
  8082  02F2  30FF               	movlw	255
  8083  02F3  0530               	andwf	___flmul@grs+2,w
  8084  02F4  00AA               	movwf	??___flmul+2
  8085  02F5  307F               	movlw	127
  8086  02F6  0531               	andwf	___flmul@grs+3,w
  8087  02F7  00AB               	movwf	??___flmul+3
  8088  02F8  082B               	movf	??___flmul+3,w
  8089  02F9  042A               	iorwf	??___flmul+2,w
  8090  02FA  0429               	iorwf	??___flmul+1,w
  8091  02FB  0428               	iorwf	??___flmul,w
  8092  02FC  1903               	skipnz
  8093  02FD  2AFF               	goto	u334_21
  8094  02FE  2B00               	goto	u334_20
  8095  02FF                     u334_21:
  8096  02FF  2B03               	goto	i1l1139
  8097  0300                     u334_20:
  8098  0300                     i1l3466:
  8099  0300  01B2               	clrf	___flmul@aexp
  8100  0301  0AB2               	incf	___flmul@aexp,f
  8101  0302  2B08               	goto	i1l3470
  8102  0303                     i1l1139:
  8103  0303  1C34               	btfss	___flmul@prod,0
  8104  0304  2B06               	goto	u335_21
  8105  0305  2B07               	goto	u335_20
  8106  0306                     u335_21:
  8107  0306  2B08               	goto	i1l3470
  8108  0307                     u335_20:
  8109  0307  2B00               	goto	i1l3466
  8110  0308                     i1l3470:
  8111  0308  0832               	movf	___flmul@aexp,w
  8112  0309  1903               	btfsc	3,2
  8113  030A  2B0C               	goto	u336_21
  8114  030B  2B0D               	goto	u336_20
  8115  030C                     u336_21:
  8116  030C  2B3E               	goto	i1l3480
  8117  030D                     u336_20:
  8118  030D                     i1l3472:
  8119  030D  3001               	movlw	1
  8120  030E  07B4               	addwf	___flmul@prod,f
  8121  030F  3000               	movlw	0
  8122  0310  1803               	skipnc
  8123  0311  3001               	movlw	1
  8124  0312  07B5               	addwf	___flmul@prod+1,f
  8125  0313  3000               	movlw	0
  8126  0314  1803               	skipnc
  8127  0315  3001               	movlw	1
  8128  0316  07B6               	addwf	___flmul@prod+2,f
  8129  0317  3000               	movlw	0
  8130  0318  1803               	skipnc
  8131  0319  3001               	movlw	1
  8132  031A  07B7               	addwf	___flmul@prod+3,f
  8133  031B                     i1l3474:
  8134  031B  1C37               	btfss	___flmul@prod+3,0
  8135  031C  2B1E               	goto	u337_21
  8136  031D  2B1F               	goto	u337_20
  8137  031E                     u337_21:
  8138  031E  2B3E               	goto	i1l3480
  8139  031F                     u337_20:
  8140  031F                     i1l3476:
  8141  031F  0834               	movf	___flmul@prod,w
  8142  0320  00A8               	movwf	??___flmul
  8143  0321  0835               	movf	___flmul@prod+1,w
  8144  0322  00A9               	movwf	??___flmul+1
  8145  0323  0836               	movf	___flmul@prod+2,w
  8146  0324  00AA               	movwf	??___flmul+2
  8147  0325  0837               	movf	___flmul@prod+3,w
  8148  0326  00AB               	movwf	??___flmul+3
  8149  0327  3001               	movlw	1
  8150  0328  00AC               	movwf	??___flmul+4
  8151  0329                     u338_25:
  8152  0329  0D2B               	rlf	??___flmul+3,w
  8153  032A  0CAB               	rrf	??___flmul+3,f
  8154  032B  0CAA               	rrf	??___flmul+2,f
  8155  032C  0CA9               	rrf	??___flmul+1,f
  8156  032D  0CA8               	rrf	??___flmul,f
  8157  032E                     u338_20:
  8158  032E  0BAC               	decfsz	??___flmul+4,f
  8159  032F  2B29               	goto	u338_25
  8160  0330  082B               	movf	??___flmul+3,w
  8161  0331  00B7               	movwf	___flmul@prod+3
  8162  0332  082A               	movf	??___flmul+2,w
  8163  0333  00B6               	movwf	___flmul@prod+2
  8164  0334  0829               	movf	??___flmul+1,w
  8165  0335  00B5               	movwf	___flmul@prod+1
  8166  0336  0828               	movf	??___flmul,w
  8167  0337  00B4               	movwf	___flmul@prod
  8168  0338                     i1l3478:
  8169  0338  3001               	movlw	1
  8170  0339  07B8               	addwf	___flmul@temp,f
  8171  033A  1803               	skipnc
  8172  033B  0AB9               	incf	___flmul@temp+1,f
  8173  033C  3000               	movlw	0
  8174  033D  07B9               	addwf	___flmul@temp+1,f
  8175  033E                     i1l3480:
  8176  033E  0839               	movf	___flmul@temp+1,w
  8177  033F  3A80               	xorlw	128
  8178  0340  00FF               	movwf	btemp+1
  8179  0341  3080               	movlw	128
  8180  0342  027F               	subwf	btemp+1,w
  8181  0343  1D03               	skipz
  8182  0344  2B47               	goto	u339_25
  8183  0345  30FF               	movlw	255
  8184  0346  0238               	subwf	___flmul@temp,w
  8185  0347                     u339_25:
  8186  0347  1C03               	skipc
  8187  0348  2B4A               	goto	u339_21
  8188  0349  2B4B               	goto	u339_20
  8189  034A                     u339_21:
  8190  034A  2B56               	goto	i1l3484
  8191  034B                     u339_20:
  8192  034B                     i1l3482:
  8193  034B  307F               	movlw	127
  8194  034C  1283               	bcf	3,5	;RP0=0, select bank0
  8195  034D  1303               	bcf	3,6	;RP1=0, select bank0
  8196  034E  00B7               	movwf	___flmul@prod+3
  8197  034F  3080               	movlw	128
  8198  0350  00B6               	movwf	___flmul@prod+2
  8199  0351  3000               	movlw	0
  8200  0352  00B5               	movwf	___flmul@prod+1
  8201  0353  3000               	movlw	0
  8202  0354  00B4               	movwf	___flmul@prod
  8203  0355  2B8B               	goto	i1l1145
  8204  0356                     i1l3484:
  8205  0356  1283               	bcf	3,5	;RP0=0, select bank0
  8206  0357  1303               	bcf	3,6	;RP1=0, select bank0
  8207  0358  0839               	movf	___flmul@temp+1,w
  8208  0359  3A80               	xorlw	128
  8209  035A  00FF               	movwf	btemp+1
  8210  035B  3080               	movlw	128
  8211  035C  027F               	subwf	btemp+1,w
  8212  035D  1D03               	skipz
  8213  035E  2B61               	goto	u340_25
  8214  035F  3001               	movlw	1
  8215  0360  0238               	subwf	___flmul@temp,w
  8216  0361                     u340_25:
  8217  0361  1803               	skipnc
  8218  0362  2B64               	goto	u340_21
  8219  0363  2B65               	goto	u340_20
  8220  0364                     u340_21:
  8221  0364  2B71               	goto	i1l3490
  8222  0365                     u340_20:
  8223  0365                     i1l3486:
  8224  0365  3000               	movlw	0
  8225  0366  1283               	bcf	3,5	;RP0=0, select bank0
  8226  0367  1303               	bcf	3,6	;RP1=0, select bank0
  8227  0368  00B7               	movwf	___flmul@prod+3
  8228  0369  3000               	movlw	0
  8229  036A  00B6               	movwf	___flmul@prod+2
  8230  036B  3000               	movlw	0
  8231  036C  00B5               	movwf	___flmul@prod+1
  8232  036D  3000               	movlw	0
  8233  036E  00B4               	movwf	___flmul@prod
  8234  036F                     i1l3488:
  8235  036F  01AD               	clrf	___flmul@sign
  8236  0370  2B8B               	goto	i1l1145
  8237  0371                     i1l3490:
  8238  0371  1283               	bcf	3,5	;RP0=0, select bank0
  8239  0372  1303               	bcf	3,6	;RP1=0, select bank0
  8240  0373  0838               	movf	___flmul@temp,w
  8241  0374  00FF               	movwf	btemp+1
  8242  0375  087F               	movf	btemp+1,w
  8243  0376  00B3               	movwf	___flmul@bexp
  8244  0377                     i1l3492:
  8245  0377  30FF               	movlw	255
  8246  0378  05B4               	andwf	___flmul@prod,f
  8247  0379  30FF               	movlw	255
  8248  037A  05B5               	andwf	___flmul@prod+1,f
  8249  037B  307F               	movlw	127
  8250  037C  05B6               	andwf	___flmul@prod+2,f
  8251  037D  3000               	movlw	0
  8252  037E  05B7               	andwf	___flmul@prod+3,f
  8253  037F                     i1l3494:
  8254  037F  1C33               	btfss	___flmul@bexp,0
  8255  0380  2B82               	goto	u341_21
  8256  0381  2B83               	goto	u341_20
  8257  0382                     u341_21:
  8258  0382  2B84               	goto	i1l3498
  8259  0383                     u341_20:
  8260  0383                     i1l3496:
  8261  0383  17B6               	bsf	___flmul@prod+2,7
  8262  0384                     i1l3498:
  8263  0384  0833               	movf	___flmul@bexp,w
  8264  0385  00A8               	movwf	??___flmul
  8265  0386  1003               	clrc
  8266  0387  0C28               	rrf	??___flmul,w
  8267  0388  00FF               	movwf	btemp+1
  8268  0389  087F               	movf	btemp+1,w
  8269  038A  00B7               	movwf	___flmul@prod+3
  8270  038B                     i1l1145:
  8271  038B  082D               	movf	___flmul@sign,w
  8272  038C  00FF               	movwf	btemp+1
  8273  038D  087F               	movf	btemp+1,w
  8274  038E  04B7               	iorwf	___flmul@prod+3,f
  8275  038F                     i1l3500:
  8276  038F  0837               	movf	___flmul@prod+3,w
  8277  0390  00A3               	movwf	?___flmul+3
  8278  0391  0836               	movf	___flmul@prod+2,w
  8279  0392  00A2               	movwf	?___flmul+2
  8280  0393  0835               	movf	___flmul@prod+1,w
  8281  0394  00A1               	movwf	?___flmul+1
  8282  0395  0834               	movf	___flmul@prod,w
  8283  0396  00A0               	movwf	?___flmul
  8284  0397                     i1l1133:
  8285  0397  0008               	return
  8286  0398                     __end_of___flmul:
  8287                           
  8288                           	psect	text46
  8289  096D                     __ptext46:	
  8290 ;; *************** function __Umul8_16 *****************
  8291 ;; Defined at:
  8292 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8_16.c"
  8293 ;; Parameters:    Size  Location     Type
  8294 ;;  multiplier      1    wreg     unsigned char 
  8295 ;;  multiplicand    1    0[COMMON] unsigned char 
  8296 ;; Auto vars:     Size  Location     Type
  8297 ;;  multiplier      1    8[COMMON] unsigned char 
  8298 ;;  word_mpld       2    6[COMMON] unsigned int 
  8299 ;;  product         2    4[COMMON] unsigned int 
  8300 ;; Return value:  Size  Location     Type
  8301 ;;                  2    0[COMMON] unsigned int 
  8302 ;; Registers used:
  8303 ;;		wreg, status,2, status,0
  8304 ;; Tracked objects:
  8305 ;;		On entry : 0/0
  8306 ;;		On exit  : 0/0
  8307 ;;		Unchanged: 0/0
  8308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8309 ;;      Params:         2       0       0       0       0
  8310 ;;      Locals:         5       0       0       0       0
  8311 ;;      Temps:          2       0       0       0       0
  8312 ;;      Totals:         9       0       0       0       0
  8313 ;;Total ram usage:        9 bytes
  8314 ;; Hardware stack levels used:    1
  8315 ;; This function calls:
  8316 ;;		Nothing
  8317 ;; This function is called by:
  8318 ;;		___flmul
  8319 ;; This function uses a non-reentrant model
  8320 ;;
  8321                           
  8322                           
  8323                           ;psect for function __Umul8_16
  8324  096D                     __Umul8_16:
  8325                           
  8326                           ;incstack = 0
  8327 ;; hardware stack exceeded
  8328                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8329                           ;__Umul8_16@multiplier stored from wreg
  8330  096D  00F8               	movwf	__Umul8_16@multiplier
  8331  096E                     i1l3044:
  8332  096E  01F4               	clrf	__Umul8_16@product
  8333  096F  01F5               	clrf	__Umul8_16@product+1
  8334  0970                     i1l3046:
  8335  0970  0870               	movf	__Umul8_16@multiplicand,w
  8336  0971  00F2               	movwf	??__Umul8_16
  8337  0972  01F3               	clrf	??__Umul8_16+1
  8338  0973  0872               	movf	??__Umul8_16,w
  8339  0974  00F6               	movwf	__Umul8_16@word_mpld
  8340  0975  0873               	movf	??__Umul8_16+1,w
  8341  0976  00F7               	movwf	__Umul8_16@word_mpld+1
  8342  0977                     i1l3048:
  8343  0977  1C78               	btfss	__Umul8_16@multiplier,0
  8344  0978  297A               	goto	u240_21
  8345  0979  297B               	goto	u240_20
  8346  097A                     u240_21:
  8347  097A  2981               	goto	i1l1152
  8348  097B                     u240_20:
  8349  097B                     i1l3050:
  8350  097B  0876               	movf	__Umul8_16@word_mpld,w
  8351  097C  07F4               	addwf	__Umul8_16@product,f
  8352  097D  1803               	skipnc
  8353  097E  0AF5               	incf	__Umul8_16@product+1,f
  8354  097F  0877               	movf	__Umul8_16@word_mpld+1,w
  8355  0980  07F5               	addwf	__Umul8_16@product+1,f
  8356  0981                     i1l1152:
  8357  0981  3001               	movlw	1
  8358  0982                     u241_25:
  8359  0982  1003               	clrc
  8360  0983  0DF6               	rlf	__Umul8_16@word_mpld,f
  8361  0984  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  8362  0985  3EFF               	addlw	-1
  8363  0986  1D03               	skipz
  8364  0987  2982               	goto	u241_25
  8365  0988  1003               	clrc
  8366  0989  0CF8               	rrf	__Umul8_16@multiplier,f
  8367  098A                     i1l3052:
  8368  098A  0878               	movf	__Umul8_16@multiplier,w
  8369  098B  1D03               	btfss	3,2
  8370  098C  298E               	goto	u242_21
  8371  098D  298F               	goto	u242_20
  8372  098E                     u242_21:
  8373  098E  2977               	goto	i1l3048
  8374  098F                     u242_20:
  8375  098F                     i1l3054:
  8376  098F  0875               	movf	__Umul8_16@product+1,w
  8377  0990  00F1               	movwf	?__Umul8_16+1
  8378  0991  0874               	movf	__Umul8_16@product,w
  8379  0992  00F0               	movwf	?__Umul8_16
  8380  0993                     i1l1154:
  8381  0993  0008               	return
  8382  0994                     __end_of__Umul8_16:
  8383                           
  8384                           	psect	text47
  8385  0C46                     __ptext47:	
  8386 ;; *************** function ___awmod *****************
  8387 ;; Defined at:
  8388 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  8389 ;; Parameters:    Size  Location     Type
  8390 ;;  divisor         2    0[COMMON] int 
  8391 ;;  dividend        2    2[COMMON] int 
  8392 ;; Auto vars:     Size  Location     Type
  8393 ;;  sign            1    5[COMMON] unsigned char 
  8394 ;;  counter         1    4[COMMON] unsigned char 
  8395 ;; Return value:  Size  Location     Type
  8396 ;;                  2    0[COMMON] int 
  8397 ;; Registers used:
  8398 ;;		wreg, status,2, status,0, btemp+1
  8399 ;; Tracked objects:
  8400 ;;		On entry : 0/0
  8401 ;;		On exit  : 0/0
  8402 ;;		Unchanged: 0/0
  8403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8404 ;;      Params:         4       0       0       0       0
  8405 ;;      Locals:         2       0       0       0       0
  8406 ;;      Temps:          0       0       0       0       0
  8407 ;;      Totals:         6       0       0       0       0
  8408 ;;Total ram usage:        6 bytes
  8409 ;; Hardware stack levels used:    1
  8410 ;; This function calls:
  8411 ;;		Nothing
  8412 ;; This function is called by:
  8413 ;;		_ISR
  8414 ;; This function uses a non-reentrant model
  8415 ;;
  8416                           
  8417                           
  8418                           ;psect for function ___awmod
  8419  0C46                     ___awmod:
  8420  0C46                     i1l3286:	
  8421                           ;incstack = 0
  8422                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  8423                           
  8424  0C46  01F5               	clrf	___awmod@sign
  8425  0C47                     i1l3288:
  8426  0C47  1FF3               	btfss	___awmod@dividend+1,7
  8427  0C48  2C4A               	goto	u286_21
  8428  0C49  2C4B               	goto	u286_20
  8429  0C4A                     u286_21:
  8430  0C4A  2C52               	goto	i1l3294
  8431  0C4B                     u286_20:
  8432  0C4B                     i1l3290:
  8433  0C4B  09F2               	comf	___awmod@dividend,f
  8434  0C4C  09F3               	comf	___awmod@dividend+1,f
  8435  0C4D  0AF2               	incf	___awmod@dividend,f
  8436  0C4E  1903               	skipnz
  8437  0C4F  0AF3               	incf	___awmod@dividend+1,f
  8438  0C50                     i1l3292:
  8439  0C50  01F5               	clrf	___awmod@sign
  8440  0C51  0AF5               	incf	___awmod@sign,f
  8441  0C52                     i1l3294:
  8442  0C52  1FF1               	btfss	___awmod@divisor+1,7
  8443  0C53  2C55               	goto	u287_21
  8444  0C54  2C56               	goto	u287_20
  8445  0C55                     u287_21:
  8446  0C55  2C5B               	goto	i1l3298
  8447  0C56                     u287_20:
  8448  0C56                     i1l3296:
  8449  0C56  09F0               	comf	___awmod@divisor,f
  8450  0C57  09F1               	comf	___awmod@divisor+1,f
  8451  0C58  0AF0               	incf	___awmod@divisor,f
  8452  0C59  1903               	skipnz
  8453  0C5A  0AF1               	incf	___awmod@divisor+1,f
  8454  0C5B                     i1l3298:
  8455  0C5B  0870               	movf	___awmod@divisor,w
  8456  0C5C  0471               	iorwf	___awmod@divisor+1,w
  8457  0C5D  1903               	btfsc	3,2
  8458  0C5E  2C60               	goto	u288_21
  8459  0C5F  2C61               	goto	u288_20
  8460  0C60                     u288_21:
  8461  0C60  2C90               	goto	i1l3316
  8462  0C61                     u288_20:
  8463  0C61                     i1l3300:
  8464  0C61  01F4               	clrf	___awmod@counter
  8465  0C62  0AF4               	incf	___awmod@counter,f
  8466  0C63  2C6F               	goto	i1l3306
  8467  0C64                     i1l3302:
  8468  0C64  3001               	movlw	1
  8469  0C65                     u289_25:
  8470  0C65  1003               	clrc
  8471  0C66  0DF0               	rlf	___awmod@divisor,f
  8472  0C67  0DF1               	rlf	___awmod@divisor+1,f
  8473  0C68  3EFF               	addlw	-1
  8474  0C69  1D03               	skipz
  8475  0C6A  2C65               	goto	u289_25
  8476  0C6B                     i1l3304:
  8477  0C6B  3001               	movlw	1
  8478  0C6C  00FF               	movwf	btemp+1
  8479  0C6D  087F               	movf	btemp+1,w
  8480  0C6E  07F4               	addwf	___awmod@counter,f
  8481  0C6F                     i1l3306:
  8482  0C6F  1FF1               	btfss	___awmod@divisor+1,7
  8483  0C70  2C72               	goto	u290_21
  8484  0C71  2C73               	goto	u290_20
  8485  0C72                     u290_21:
  8486  0C72  2C64               	goto	i1l3302
  8487  0C73                     u290_20:
  8488  0C73                     i1l3308:
  8489  0C73  0871               	movf	___awmod@divisor+1,w
  8490  0C74  0273               	subwf	___awmod@dividend+1,w
  8491  0C75  1D03               	skipz
  8492  0C76  2C79               	goto	u291_25
  8493  0C77  0870               	movf	___awmod@divisor,w
  8494  0C78  0272               	subwf	___awmod@dividend,w
  8495  0C79                     u291_25:
  8496  0C79  1C03               	skipc
  8497  0C7A  2C7C               	goto	u291_21
  8498  0C7B  2C7D               	goto	u291_20
  8499  0C7C                     u291_21:
  8500  0C7C  2C83               	goto	i1l3312
  8501  0C7D                     u291_20:
  8502  0C7D                     i1l3310:
  8503  0C7D  0870               	movf	___awmod@divisor,w
  8504  0C7E  02F2               	subwf	___awmod@dividend,f
  8505  0C7F  0871               	movf	___awmod@divisor+1,w
  8506  0C80  1C03               	skipc
  8507  0C81  03F3               	decf	___awmod@dividend+1,f
  8508  0C82  02F3               	subwf	___awmod@dividend+1,f
  8509  0C83                     i1l3312:
  8510  0C83  3001               	movlw	1
  8511  0C84                     u292_25:
  8512  0C84  1003               	clrc
  8513  0C85  0CF1               	rrf	___awmod@divisor+1,f
  8514  0C86  0CF0               	rrf	___awmod@divisor,f
  8515  0C87  3EFF               	addlw	-1
  8516  0C88  1D03               	skipz
  8517  0C89  2C84               	goto	u292_25
  8518  0C8A                     i1l3314:
  8519  0C8A  3001               	movlw	1
  8520  0C8B  02F4               	subwf	___awmod@counter,f
  8521  0C8C  1D03               	btfss	3,2
  8522  0C8D  2C8F               	goto	u293_21
  8523  0C8E  2C90               	goto	u293_20
  8524  0C8F                     u293_21:
  8525  0C8F  2C73               	goto	i1l3308
  8526  0C90                     u293_20:
  8527  0C90                     i1l3316:
  8528  0C90  0875               	movf	___awmod@sign,w
  8529  0C91  1903               	btfsc	3,2
  8530  0C92  2C94               	goto	u294_21
  8531  0C93  2C95               	goto	u294_20
  8532  0C94                     u294_21:
  8533  0C94  2C9A               	goto	i1l3320
  8534  0C95                     u294_20:
  8535  0C95                     i1l3318:
  8536  0C95  09F2               	comf	___awmod@dividend,f
  8537  0C96  09F3               	comf	___awmod@dividend+1,f
  8538  0C97  0AF2               	incf	___awmod@dividend,f
  8539  0C98  1903               	skipnz
  8540  0C99  0AF3               	incf	___awmod@dividend+1,f
  8541  0C9A                     i1l3320:
  8542  0C9A  0873               	movf	___awmod@dividend+1,w
  8543  0C9B  00F1               	movwf	?___awmod+1
  8544  0C9C  0872               	movf	___awmod@dividend,w
  8545  0C9D  00F0               	movwf	?___awmod
  8546  0C9E                     i1l910:
  8547  0C9E  0008               	return
  8548  0C9F                     __end_of___awmod:
  8549                           
  8550                           	psect	text48
  8551  0A97                     __ptext48:	
  8552 ;; *************** function _DD_GetState *****************
  8553 ;; Defined at:
  8554 ;;		line 50 in file "DD.c"
  8555 ;; Parameters:    Size  Location     Type
  8556 ;;  device          1    wreg     enum E882
  8557 ;; Auto vars:     Size  Location     Type
  8558 ;;  device          1    2[COMMON] enum E882
  8559 ;; Return value:  Size  Location     Type
  8560 ;;                  1    wreg      enum E13
  8561 ;; Registers used:
  8562 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8563 ;; Tracked objects:
  8564 ;;		On entry : 0/0
  8565 ;;		On exit  : 0/0
  8566 ;;		Unchanged: 0/0
  8567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8568 ;;      Params:         0       0       0       0       0
  8569 ;;      Locals:         1       0       0       0       0
  8570 ;;      Temps:          2       0       0       0       0
  8571 ;;      Totals:         3       0       0       0       0
  8572 ;;Total ram usage:        3 bytes
  8573 ;; Hardware stack levels used:    1
  8574 ;; This function calls:
  8575 ;;		Nothing
  8576 ;; This function is called by:
  8577 ;;		_ISR
  8578 ;; This function uses a non-reentrant model
  8579 ;;
  8580                           
  8581                           
  8582                           ;psect for function _DD_GetState
  8583  0A97                     _DD_GetState:
  8584                           
  8585                           ;incstack = 0
  8586                           ; Regs used in _DD_GetState: [wreg-fsr0h+status,2+status,0]
  8587                           ;DD_GetState@device stored from wreg
  8588  0A97  00F2               	movwf	DD_GetState@device
  8589  0A98                     i1l3248:
  8590                           
  8591                           ;DD.c: 50: tState DD_GetState(tDD device);DD.c: 51: {;DD.c: 52:     switch(device)
  8592  0A98  2AC0               	goto	i1l3270
  8593  0A99                     i1l3250:
  8594                           
  8595                           ;DD.c: 55:             return ((PORTC & (1<<5)) >> 5);
  8596  0A99  1283               	bcf	3,5	;RP0=0, select bank0
  8597  0A9A  1303               	bcf	3,6	;RP1=0, select bank0
  8598  0A9B  0807               	movf	7,w	;volatile
  8599  0A9C  00F0               	movwf	??_DD_GetState
  8600  0A9D  3005               	movlw	5
  8601  0A9E                     u281_25:
  8602  0A9E  1003               	clrc
  8603  0A9F  0CF0               	rrf	??_DD_GetState,f
  8604  0AA0  3EFF               	addlw	-1
  8605  0AA1  1D03               	skipz
  8606  0AA2  2A9E               	goto	u281_25
  8607  0AA3  0870               	movf	??_DD_GetState,w
  8608  0AA4  3901               	andlw	1
  8609  0AA5  2AD3               	goto	i1l267
  8610  0AA6                     i1l3256:
  8611                           
  8612                           ;DD.c: 58:             return ((PORTC & (1<<2)) >> 2);
  8613  0AA6  1283               	bcf	3,5	;RP0=0, select bank0
  8614  0AA7  1303               	bcf	3,6	;RP1=0, select bank0
  8615  0AA8  0807               	movf	7,w	;volatile
  8616  0AA9  00F0               	movwf	??_DD_GetState
  8617  0AAA  3002               	movlw	2
  8618  0AAB                     u282_25:
  8619  0AAB  1003               	clrc
  8620  0AAC  0CF0               	rrf	??_DD_GetState,f
  8621  0AAD  3EFF               	addlw	-1
  8622  0AAE  1D03               	skipz
  8623  0AAF  2AAB               	goto	u282_25
  8624  0AB0  0870               	movf	??_DD_GetState,w
  8625  0AB1  3901               	andlw	1
  8626  0AB2  2AD3               	goto	i1l267
  8627  0AB3                     i1l3262:
  8628                           
  8629                           ;DD.c: 61:             return ((PORTB & (1<<7)) >> 7);
  8630  0AB3  1283               	bcf	3,5	;RP0=0, select bank0
  8631  0AB4  1303               	bcf	3,6	;RP1=0, select bank0
  8632  0AB5  0806               	movf	6,w	;volatile
  8633  0AB6  00F0               	movwf	??_DD_GetState
  8634  0AB7  3007               	movlw	7
  8635  0AB8                     u283_25:
  8636  0AB8  1003               	clrc
  8637  0AB9  0CF0               	rrf	??_DD_GetState,f
  8638  0ABA  3EFF               	addlw	-1
  8639  0ABB  1D03               	skipz
  8640  0ABC  2AB8               	goto	u283_25
  8641  0ABD  0870               	movf	??_DD_GetState,w
  8642  0ABE  3901               	andlw	1
  8643  0ABF  2AD3               	goto	i1l267
  8644  0AC0                     i1l3270:
  8645  0AC0  0872               	movf	DD_GetState@device,w
  8646  0AC1  00F0               	movwf	??_DD_GetState
  8647  0AC2  01F1               	clrf	??_DD_GetState+1
  8648                           
  8649                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8650                           ; Switch size 1, requested type "simple"
  8651                           ; Number of cases is 1, Range of values is 0 to 0
  8652                           ; switch strategies available:
  8653                           ; Name         Instructions Cycles
  8654                           ; simple_byte            4     3 (average)
  8655                           ; direct_byte           11     8 (fixed)
  8656                           ; jumptable            260     6 (fixed)
  8657                           ;	Chosen strategy is simple_byte
  8658  0AC3  0871               	movf	??_DD_GetState+1,w
  8659  0AC4  3A00               	xorlw	0	; case 0
  8660  0AC5  1903               	skipnz
  8661  0AC6  2AC8               	goto	i1l3934
  8662  0AC7  2AD3               	goto	i1l267
  8663  0AC8                     i1l3934:
  8664                           
  8665                           ; Switch size 1, requested type "simple"
  8666                           ; Number of cases is 3, Range of values is 0 to 2
  8667                           ; switch strategies available:
  8668                           ; Name         Instructions Cycles
  8669                           ; simple_byte           10     6 (average)
  8670                           ; direct_byte           17     8 (fixed)
  8671                           ; jumptable            260     6 (fixed)
  8672                           ;	Chosen strategy is simple_byte
  8673  0AC8  0870               	movf	??_DD_GetState,w
  8674  0AC9  3A00               	xorlw	0	; case 0
  8675  0ACA  1903               	skipnz
  8676  0ACB  2A99               	goto	i1l3250
  8677  0ACC  3A01               	xorlw	1	; case 1
  8678  0ACD  1903               	skipnz
  8679  0ACE  2AA6               	goto	i1l3256
  8680  0ACF  3A03               	xorlw	3	; case 2
  8681  0AD0  1903               	skipnz
  8682  0AD1  2AB3               	goto	i1l3262
  8683  0AD2  2AD3               	goto	i1l267
  8684  0AD3                     i1l267:
  8685  0AD3  0008               	return
  8686  0AD4                     __end_of_DD_GetState:
  8687                           
  8688                           	psect	text49
  8689  09BD                     __ptext49:	
  8690 ;; *************** function _ADC_ReadChannel *****************
  8691 ;; Defined at:
  8692 ;;		line 69 in file "adc.c"
  8693 ;; Parameters:    Size  Location     Type
  8694 ;;  channel         1    wreg     enum E869
  8695 ;; Auto vars:     Size  Location     Type
  8696 ;;  channel         1    5[COMMON] enum E869
  8697 ;;  result          2    3[COMMON] unsigned short 
  8698 ;; Return value:  Size  Location     Type
  8699 ;;                  2    0[COMMON] unsigned short 
  8700 ;; Registers used:
  8701 ;;		wreg, status,2, status,0, btemp+1
  8702 ;; Tracked objects:
  8703 ;;		On entry : 0/0
  8704 ;;		On exit  : 0/0
  8705 ;;		Unchanged: 0/0
  8706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8707 ;;      Params:         2       0       0       0       0
  8708 ;;      Locals:         3       0       0       0       0
  8709 ;;      Temps:          1       0       0       0       0
  8710 ;;      Totals:         6       0       0       0       0
  8711 ;;Total ram usage:        6 bytes
  8712 ;; Hardware stack levels used:    1
  8713 ;; This function calls:
  8714 ;;		Nothing
  8715 ;; This function is called by:
  8716 ;;		_ISR
  8717 ;; This function uses a non-reentrant model
  8718 ;;
  8719                           
  8720                           
  8721                           ;psect for function _ADC_ReadChannel
  8722  09BD                     _ADC_ReadChannel:
  8723                           
  8724                           ;incstack = 0
  8725                           ; Regs used in _ADC_ReadChannel: [wreg+status,2+status,0+btemp+1]
  8726                           ;ADC_ReadChannel@channel stored from wreg
  8727  09BD  00F5               	movwf	ADC_ReadChannel@channel
  8728  09BE                     i1l3276:
  8729                           
  8730                           ;adc.c: 69: uint16_t ADC_ReadChannel(tADC_Channel_Select channel);adc.c: 70: {;adc.c: 72
      +                          :     ADCON0 &= ~(7<<3);
  8731  09BE  30C7               	movlw	199
  8732  09BF  00FF               	movwf	btemp+1
  8733  09C0  087F               	movf	btemp+1,w
  8734  09C1  1283               	bcf	3,5	;RP0=0, select bank0
  8735  09C2  1303               	bcf	3,6	;RP1=0, select bank0
  8736  09C3  059F               	andwf	31,f	;volatile
  8737                           
  8738                           ;adc.c: 75:     ADCON0 |= ((channel)<<3);
  8739  09C4  0875               	movf	ADC_ReadChannel@channel,w	;volatile
  8740  09C5  00F2               	movwf	??_ADC_ReadChannel
  8741  09C6  3002               	movlw	2
  8742  09C7                     u284_25:
  8743  09C7  1003               	clrc
  8744  09C8  0DF2               	rlf	??_ADC_ReadChannel,f
  8745  09C9  3EFF               	addlw	-1
  8746  09CA  1D03               	skipz
  8747  09CB  29C7               	goto	u284_25
  8748  09CC  1003               	clrc
  8749  09CD  0D72               	rlf	??_ADC_ReadChannel,w
  8750  09CE  00FF               	movwf	btemp+1
  8751  09CF  087F               	movf	btemp+1,w
  8752  09D0  049F               	iorwf	31,f	;volatile
  8753  09D1                     i1l3278:
  8754                           
  8755                           ;adc.c: 78:     _delay((unsigned long)((30)*(4000000/4000000.0)));
  8756  09D1  3009               	movlw	9
  8757  09D2  00F2               	movwf	??_ADC_ReadChannel
  8758  09D3                     u384_27:
  8759  09D3  0BF2               	decfsz	??_ADC_ReadChannel,f
  8760  09D4  29D3               	goto	u384_27
  8761  09D5  29D6               	nop2
  8762  09D6                     i1l3280:
  8763                           
  8764                           ;adc.c: 81:     (ADCON0|=(1<<2));
  8765  09D6  1283               	bcf	3,5	;RP0=0, select bank0
  8766  09D7  1303               	bcf	3,6	;RP1=0, select bank0
  8767  09D8  151F               	bsf	31,2	;volatile
  8768  09D9                     i1l308:	
  8769                           ;adc.c: 84:     while((ADCON0 & (1<<2)));
  8770                           
  8771  09D9  191F               	btfsc	31,2	;volatile
  8772  09DA  29DC               	goto	u285_21
  8773  09DB  29DD               	goto	u285_20
  8774  09DC                     u285_21:
  8775  09DC  29D9               	goto	i1l308
  8776  09DD                     u285_20:
  8777  09DD                     i1l3282:
  8778                           
  8779                           ;adc.c: 87:     uint16_t result =((ADRESH<<8) + ADRESL) ;
  8780  09DD  081E               	movf	30,w	;volatile
  8781  09DE  00F4               	movwf	ADC_ReadChannel@result+1
  8782  09DF  1683               	bsf	3,5	;RP0=1, select bank1
  8783  09E0  1303               	bcf	3,6	;RP1=0, select bank1
  8784  09E1  081E               	movf	30,w	;volatile
  8785  09E2  00F3               	movwf	ADC_ReadChannel@result
  8786                           
  8787                           ;adc.c: 89:     return result;
  8788  09E3  0874               	movf	ADC_ReadChannel@result+1,w
  8789  09E4  00F1               	movwf	?_ADC_ReadChannel+1
  8790  09E5  0873               	movf	ADC_ReadChannel@result,w
  8791  09E6  00F0               	movwf	?_ADC_ReadChannel
  8792  09E7                     i1l311:
  8793  09E7  0008               	return
  8794  09E8                     __end_of_ADC_ReadChannel:
  8795  007E                     btemp	set	126	;btemp
  8796  007E                     wtemp0	set	126
  8797                           
  8798                           	psect	config
  8799                           
  8800                           ;Config register CONFIG @ 0x2007
  8801                           ;	Oscillator Selection bits
  8802                           ;	FOSC = XT, XT oscillator
  8803                           ;	Watchdog Timer Enable bit
  8804                           ;	WDTE = OFF, WDT disabled
  8805                           ;	Power-up Timer Enable bit
  8806                           ;	PWRTE = ON, PWRT enabled
  8807                           ;	Brown-out Reset Enable bit
  8808                           ;	BOREN = ON, BOR enabled
  8809                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  8810                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  8811                           ;	Data EEPROM Memory Code Protection bit
  8812                           ;	CPD = OFF, Data EEPROM code protection off
  8813                           ;	Flash Program Memory Write Enable bits
  8814                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  8815                           ;	In-Circuit Debugger Mode bit
  8816                           ;	DEBUG = 0x1, unprogrammed default
  8817                           ;	Flash Program Memory Code Protection bit
  8818                           ;	CP = OFF, Code protection off
  8819  2007                     	org	8199
  8820  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     44      53
    BANK1            80     29      63
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    EWH_getAvrgTempReading@buffer	PTR unsigned char  size(1) Largest target is 10
		 -> ReadingBuffer(BANK1[10]), 

    TMR1_Init@config	PTR struct . size(1) Largest target is 2
		 -> EWH_Init@TMR1_cfg(BANK1[2]), 

    ADC_Init@config	PTR struct . size(1) Largest target is 4
		 -> EWH_Init@adc_config(BANK1[4]), 

    I2C_Init@i2c_config	PTR struct . size(1) Largest target is 6
		 -> EWH_Init@i2c_config(BANK1[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    _main->_EWH_Init
    _EWH_WakeUP_Mode->_EWH_SSD_Update
    _EWH_EEPROM_Read->_EEPROM_ReadByte
    _EEPROM_ReadByte->_I2C_Master_ReadByte
    _EWH_SetTemp_Mode->_EWH_SSD_Update
    _EWH_SSD_OFF->_SSD_OFF
    _EWH_EEPROM_Update->_EEPROM_WriteByte
    _EWH_Operating_Mode->_EWH_getAvrgTempReading
    _EWH_getAvrgTempReading->___lwdiv
    _EWH_SSD_Update->_SSD_Write
    _SSD_Write->___awdiv
    _SSD_OFF->_SSD_config
    _EWH_Init->_I2C_Init
    _I2C_Init->___lldiv
    _EWH_EEPROM_Init->_EEPROM_WriteByte
    _EEPROM_WriteByte->_I2C_Master_WriteByte

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   12333
                                             27 BANK1      2     2      0
                           _EWH_Init
                 _EWH_Operating_Mode
                   _EWH_SetTemp_Mode
                     _EWH_Sleep_Mode
                    _EWH_WakeUP_Mode
 ---------------------------------------------------------------------------------
 (1) _EWH_WakeUP_Mode                                      2     2      0    2357
                                             14 BANK1      2     2      0
                     _EWH_ClearEvent
                    _EWH_EEPROM_Read
                     _EWH_SSD_Update
                        _EWH_SetMode
 ---------------------------------------------------------------------------------
 (2) _EWH_EEPROM_Read                                      0     0      0     210
                    _EEPROM_ReadByte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_ReadByte                                      5     3      2     210
                                              2 BANK1      5     3      2
                _I2C_Master_ReadByte
      _I2C_Master_Send_RepeatedStart
              _I2C_Master_Send_Start
               _I2C_Master_Send_Stop
               _I2C_Master_WriteByte
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_ReadByte                                  2     2      0      23
                                              0 BANK1      2     2      0
                _I2C_Master_Send_ACK
               _I2C_Master_Send_NACK
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Send_NACK                                 0     0      0       0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Send_ACK                                  0     0      0       0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (1) _EWH_Sleep_Mode                                       0     0      0    1274
                        _DD_SetState
                        _EWH_SSD_OFF
                          _TMR1_Stop
 ---------------------------------------------------------------------------------
 (1) _EWH_SetTemp_Mode                                     2     2      0    3835
                                             14 BANK1      2     2      0
                        _DD_SetState
                     _EWH_ClearEvent
                  _EWH_EEPROM_Update
                        _EWH_SSD_OFF
                     _EWH_SSD_Update
                        _EWH_SetMode
                         _TMR1_Start
 ---------------------------------------------------------------------------------
 (2) _EWH_SSD_OFF                                          0     0      0     360
                            _SSD_OFF
 ---------------------------------------------------------------------------------
 (2) _EWH_EEPROM_Update                                    1     1      0     414
                                              6 BANK1      1     1      0
                   _EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (1) _EWH_Operating_Mode                                   3     3      0    3665
                                             16 BANK1      3     3      0
                        _DD_SetState
                     _EWH_ClearEvent
                     _EWH_SSD_Update
                       _EWH_SetEvent
                        _EWH_SetMode
             _EWH_getAvrgTempReading
                         _TMR1_Start
                          _TMR1_Stop
 ---------------------------------------------------------------------------------
 (2) _TMR1_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EWH_getAvrgTempReading                               9     8      1     582
                                              7 BANK1      9     8      1
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (2) _EWH_SetMode                                          1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EWH_SetEvent                                         1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EWH_SSD_Update                                       4     2      2    2103
                                             10 BANK1      4     2      2
                            _SSD_OFF
                          _SSD_Write
                            ___awdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     311
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (3) _SSD_Write                                            2     1      1     556
                                              8 BANK1      2     1      1
                         _SSD_config
                            ___awdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _SSD_OFF                                              1     1      0     360
                                              4 BANK1      1     1      0
                         _SSD_config
 ---------------------------------------------------------------------------------
 (4) _SSD_config                                           4     3      1     338
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (2) _EWH_ClearEvent                                       1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _DD_SetState                                          4     3      1     914
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (1) _EWH_Init                                            12    12      0    1202
                                             15 BANK1     12    12      0
                           _ADC_Init
                            _DD_Init
                    _EWH_EEPROM_Init
                           _I2C_Init
                            _SW_Init
                          _TMR1_Init
 ---------------------------------------------------------------------------------
 (2) _TMR1_Init                                            3     3      0      77
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _SW_Init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             1     1      0     413
                                             14 BANK1      1     1      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (2) _EWH_EEPROM_Init                                      0     0      0     392
                   _EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_WriteByte                                     5     2      3     392
                                              1 BANK1      5     2      3
      _I2C_Master_Send_RepeatedStart
              _I2C_Master_Send_Start
               _I2C_Master_Send_Stop
               _I2C_Master_WriteByte
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_WriteByte                                 1     1      0      22
                                              0 BANK1      1     1      0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Send_Stop                                 0     0      0       0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Send_Start                                0     0      0       0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Send_RepeatedStart                        0     0      0       0
                      _I2C_Wait_IDLE
 ---------------------------------------------------------------------------------
 (5) _I2C_Wait_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DD_Init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             3     3      0      99
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  8     8      0    3702
                                             36 BANK0      8     8      0
                    _ADC_ReadChannel
                        _DD_GetState
                            ___awmod
                            ___flmul
                            ___fltol
                           ___xxtofl
                     i1_EWH_SetEvent
                      i1_EWH_SetMode
 ---------------------------------------------------------------------------------
 (8) i1_EWH_SetMode                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) i1_EWH_SetEvent                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (8) ___fltol                                             10     6      4     305
                                             26 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             26    18      8    2417
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (9) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     448
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) _DD_GetState                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (8) _ADC_ReadChannel                                      6     4      2      45
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EWH_Init
     _ADC_Init
     _DD_Init
     _EWH_EEPROM_Init
       _EEPROM_WriteByte
         _I2C_Master_Send_RepeatedStart
           _I2C_Wait_IDLE
         _I2C_Master_Send_Start
           _I2C_Wait_IDLE
         _I2C_Master_Send_Stop
           _I2C_Wait_IDLE
         _I2C_Master_WriteByte
           _I2C_Wait_IDLE
     _I2C_Init
       ___lldiv
     _SW_Init
     _TMR1_Init
   _EWH_Operating_Mode
     _DD_SetState
     _EWH_ClearEvent
     _EWH_SSD_Update
       _SSD_OFF
         _SSD_config
       _SSD_Write
         _SSD_config
         ___awdiv (ARG)
         ___lwmod (ARG)
       ___awdiv
       ___lwmod
     _EWH_SetEvent
     _EWH_SetMode
     _EWH_getAvrgTempReading
       ___lwdiv
     _TMR1_Start
     _TMR1_Stop
   _EWH_SetTemp_Mode
     _DD_SetState
     _EWH_ClearEvent
     _EWH_EEPROM_Update
       _EEPROM_WriteByte
         _I2C_Master_Send_RepeatedStart
           _I2C_Wait_IDLE
         _I2C_Master_Send_Start
           _I2C_Wait_IDLE
         _I2C_Master_Send_Stop
           _I2C_Wait_IDLE
         _I2C_Master_WriteByte
           _I2C_Wait_IDLE
     _EWH_SSD_OFF
       _SSD_OFF
         _SSD_config
     _EWH_SSD_Update
       _SSD_OFF
         _SSD_config
       _SSD_Write
         _SSD_config
         ___awdiv (ARG)
         ___lwmod (ARG)
       ___awdiv
       ___lwmod
     _EWH_SetMode
     _TMR1_Start
   _EWH_Sleep_Mode
     _DD_SetState
     _EWH_SSD_OFF
       _SSD_OFF
         _SSD_config
     _TMR1_Stop
   _EWH_WakeUP_Mode
     _EWH_ClearEvent
     _EWH_EEPROM_Read
       _EEPROM_ReadByte
         _I2C_Master_ReadByte
           _I2C_Master_Send_ACK
             _I2C_Wait_IDLE
           _I2C_Master_Send_NACK
             _I2C_Wait_IDLE
           _I2C_Wait_IDLE
         _I2C_Master_Send_RepeatedStart
           _I2C_Wait_IDLE
         _I2C_Master_Send_Start
           _I2C_Wait_IDLE
         _I2C_Master_Send_Stop
           _I2C_Wait_IDLE
         _I2C_Master_WriteByte
           _I2C_Wait_IDLE
     _EWH_SSD_Update
       _SSD_OFF
         _SSD_config
       _SSD_Write
         _SSD_config
         ___awdiv (ARG)
         ___lwmod (ARG)
       ___awdiv
       ___lwmod
     _EWH_SetMode

 _ISR (ROOT)
   _ADC_ReadChannel
   _DD_GetState
   ___awmod
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   i1_EWH_SetEvent
   i1_EWH_SetMode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1D      3F       7       78.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2C      35       5       66.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      82      12        0.0%
ABS                  0      0      82       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Jul 12 08:50:59 2020

                          ?_DD_SetState 00A0                                       pc 0002  
                                    l13 0A2B                                      l31 0D53  
                                    l16 0A5A            __size_of_I2C_Master_ReadByte 0029  
                                    l28 0D04                                      l91 0891  
                                    l94 089D                                      l88 0BA7  
                                    l97 0836                            ___awdiv@sign 00A5  
                                    fsr 0004                              _SSD_config 0E81  
          __size_of_I2C_Master_Send_ACK 000A                     __Umul8_16@word_mpld 0076  
                 _I2C_Master_Send_Start 082E                                     l100 083F  
                                   l103 082D                                     l112 0937  
                                   l120 09BC                                     l114 093B  
                                   l106 0865                                     l115 0946  
                                   l301 07A9                                     l109 086F  
                                   l302 07B0                                     l305 07FF  
                                   l241 090B                                     l341 0BB1  
                                   l342 0BB6                                     l262 0CF8  
                                   l343 0BBB                                     l351 08CA  
                                   l345 0BD9                                     l521 06C7  
                                   l354 0804                                     l506 0FFF  
                                   l347 0BDB                                     l339 0BAC  
                                   l348 0BF1                                     l540 0B17  
                                   l543 081C                                     l552 08BA  
                                   l297 0790                                     l385 0848  
                                   l537 04CD                                     l298 0794  
                                   l546 085B                                     l651 0928  
                                   l555 08DB                                     l564 08AA  
                                   l549 0851                                     l573 0A1F  
                                   l558 0890                                     l647 0EEB  
                                   l655 0884                                     l567 0DAF  
                                   l495 096C                                     l780 0E17  
                                   l897 0E80                                     _GIE 005F  
                                   _PEN 048A                                     _ISR 04CE  
                                   _SEN 0488                                     fsr0 0004  
                                   indf 0000                            ___awmod@sign 0075  
                       TMR1_Init@config 00A2              __size_of_EWH_EEPROM_Update 0011  
                    I2C_Init@i2c_config 00AE                            ___flmul@aexp 0032  
                          ___flmul@bexp 0033                            ___flmul@sign 002D  
                          ___flmul@temp 0038                            ___flmul@prod 0034  
         __size_of_I2C_Master_Send_NACK 000A                         __end_of_DD_Init 090C  
                                  ?_ISR 0070                            ___fltol@exp1 0043  
                                  l1016 0B5D                                    l1026 0A96  
                                  l3000 0846                                    l3002 0847  
                                  l3020 0DA4                                    l3012 0D54  
                                  l3004 089E                                    l3100 0F9F  
                                  l3006 084C                                    l3014 0D75  
                                  l3022 0818                                    l3030 09FE  
                                  l3110 0FD4                                    l3102 0FAF  
                                  l3016 0D80                                    l3040 0855  
                                  l3032 0A02                                    l3024 08CE  
                                  l3200 0618                                    l3008 0885  
                                  l3120 0FF9                                    l3112 0FE4  
                                  l3104 0FB2                                    l3042 08AB  
                                  l3018 0D86                                    l3034 0A08  
                                  l3026 09EB                                    l3130 03C2  
                                  l3122 0398                                    l3202 061E  
                                  l3210 0641                                    l3114 0FE7  
                                  l3106 0FB9                                    l3060 0ADA  
                                  l3036 0A1E                                    l3028 09EF  
                                  l3140 0405                                    l3132 03C4  
                                  l3124 039D                                    l3212 0651  
                                  l3204 0629                                    l3108 0FC9  
                                  l3116 0FEE                                    l3070 0AEC  
                                  l3062 0ADC                                    l3150 0448  
                                  l3134 03C9                                    l3142 0418  
                                  l3126 03AB                                    l3230 0695  
                                  l3214 0657                                    l3206 0639  
                                  l3222 0675                                    l3118 0FF3  
                                  l3080 0B08                                    l3072 0AED  
                                  l3064 0AE2                                    l3152 044E  
                                  l3144 0428                                    l3160 0463  
                                  l3136 03DB                                    l3128 03B3  
                                  l3240 06B2                                    l3232 069B  
                                  l3224 067C                                    l3216 0662  
                                  l3208 063D                                    l2600 0864  
                                  l2610 0833                                    l3082 0B0D  
                                  l3074 0AF3                                    l3066 0AE6  
                                  l3058 0AD4                                    l3170 0499  
                                  l3162 0473                                    l3154 0453  
                                  l3146 042D                                    l3138 03EF  
                                  l3242 06B8                                    l3234 06A1  
                                  l3226 0689                                    l3218 0672  
                                  l2602 0866                                    l3090 0F68  
                                  l2612 0825                                    l2620 093C  
                                  l2700 0A26                                    l3084 0B12  
                                  l3076 0AFD                                    l3068 0AEA  
                                  l3180 04B3                                    l3172 049E  
                                  l3164 0478                                    l3156 0459  
                                  l3148 0438                                    l3244 06BE  
                                  l3236 06A8                                    l3228 068E  
                                  l2604 086B                                    l3092 0F6E  
                                  l2614 082A                                    l2622 0941  
                                  l2702 0A45                                    l3078 0B02  
                                  l3182 04B9                                    l3174 04A4  
                                  l3166 0483                                    l3158 045C  
                                  l3246 06C1                                    l3238 06AD  
                                  l3190 05DF                                    l3086 0947  
                                  l2606 086E                                    l2630 0997  
                                  l2710 0D40                                    l3094 0F78  
                                  l2608 082E                                    l2616 092C  
                                  l2720 090F                                    l3184 04C0  
                                  l3176 04A7                                    l3168 0493  
                                  l3192 05E8                                    l3088 0967  
                                  l2640 09B4                                    l2632 099C  
                                  l2712 0D4B                                    l2704 0CF9  
                                  l3096 0F84                                    l2626 0837  
                                  l2618 0931                                    l2650 0E85  
                                  l2722 0917                                    l2810 0B2C  
                                  l2802 0B18                                    l3178 04AE  
                                  l3194 05F1                                    l3186 05D7  
                                  l2642 09B9                                    l2634 09A4  
                                  l2714 0D50                                    l2706 0CFF  
                                  l3098 0F94                                    l3610 0C0B  
                                  l3602 0C01                                    l2628 083C  
                                  l2740 0DD2                                    l2732 0DB0  
                                  l2900 0CA3                                    l2660 0E99  
                                  l2652 0E89                                    l2724 091A  
                                  l2820 0B4C                                    l2812 0B30  
                                  l2804 0B1C                                    l3196 05FA  
                                  l3188 05DC                                    l2636 09A7  
                                  l2708 0D1E                                    l3620 0C20  
                                  l2750 0E00                                    l2742 0DD6  
                                  l2734 0DC2                                    l2910 0CBE  
                                  l2902 0CA8                                    l2670 0EAD  
                                  l2662 0E9D                                    l2654 0E8E  
                                  l2646 0E84                                    l2718 087D  
                                  l2726 0920                                    l2830 0A63  
                                  l2822 0B53                                    l2814 0B34  
                                  l2806 0B22                                    l3198 0608  
                                  l2638 09AE                                    l3622 0C26  
                                  l3614 0C0F                                    l3606 0C05  
                                  l2592 0891                                    l2752 0E09  
                                  l2744 0DDF                                    l2736 0DC5  
                                  l2920 0CD8                                    l2912 0CC2  
                                  l2904 0CAC                                    l2680 0EC1  
                                  l2672 0EB1                                    l2664 0EA2  
                                  l2656 0E92                                    l2760 0E1B  
                                  l2840 0A7F                                    l2832 0A66  
                                  l2816 0B45                                    l2808 0B25  
                                  l2824 0B59                                    l3616 0C14  
                                  l2594 0897                                    l2746 0DF1  
                                  l2738 0DCE                                    l2754 0E0F  
                                  l2850 0B61                                    l2922 0CDE  
                                  l2914 0CC8                                    l2906 0CB2  
                                  l2682 0EC5                                    l2674 0EB6  
                                  l2666 0EA6                                    l2690 0ED5  
                                  l2770 0E2F                                    l2762 0E1F  
                                  l2842 0A85                                    l2834 0A6D  
                                  l2818 0B4B                                    l3618 0C1A  
                                  l3626 0C2B                                    l2940 079F  
                                  l2748 0DFF                                    l2860 0B94  
                                  l2852 0B63                                    l2916 0CCF  
                                  l2908 0CB9                                    l2684 0ECA  
                                  l2676 0EBA                                    l2780 0E45  
                                  l2772 0E33                                    l2764 0E24  
                                  l2844 0A8C                                    l2836 0A71  
                                  l2828 0A5B                                    l2596 085C  
                                  l2950 07F0                                    l2942 07A5  
                                  l2934 0785                                    l2870 0B9F  
                                  l2854 0B6C                                    l2918 0CD4  
                                  l2926 0CE5                                    l2686 0ECE  
                                  l2790 0E65                                    l2782 0E49  
                                  l2774 0E35                                    l2766 0E26  
                                  l2758 0E18                                    l2838 0A75  
                                  l2846 0A92                                    l2598 0861  
                                  l3590 0BF2                                    l2952 07F7  
                                  l2936 0789                                    l2944 07B7  
                                  l2880 08F5                                    l2872 08EF  
                                  l2864 0B95                                    l2856 0B8D  
                                  l2960 0BAB                                    l2792 0E6C  
                                  l2784 0E4D                                    l2776 0E3B  
                                  l2768 0E2A                                    l2938 0798  
                                  l2946 07DC                                    l2698 0A20  
                                  l2858 0B90                                    l3930 0BE9  
                                  l2786 0E5E                                    l2778 0E3E  
                                  l2794 0E72                                    l3922 0C35  
                                  l3594 0BF7                                    l2948 07EE  
                                  l3932 07C5                                    l2892 0903  
                                  l2884 08F9                                    l2876 08EF  
                                  l2868 0B96                                    l2964 0BC0  
                                  l3924 0EDD                                    l2796 0E77  
                                  l2788 0E64                                    l2990 0843  
                                  l3926 0CED                                    l2798 0E7C  
                                  l2982 08BB                                    l3598 0BFD  
                                  l2896 0907                                    l2888 08FD  
                                  l3928 0BCB                                    l2968 0BDD  
                                  l2984 0801                                    l2994 0844  
                                  l2986 0840                                    l2898 0CA2  
                                  l2998 0845                                    _ADIE 0466  
                                  _ADIF 0066                                    _ADON 00F8  
         __size_of_I2C_Master_Send_Stop 0009                                    _T0CS 040D  
                                  u2000 0D1E                                    u2001 0D1D  
                                  u2020 0920                                    u2100 0E1F  
                                  u2021 091F                                    u2101 0E1E  
                                  u2030 0DC2                                    u2110 0E2A  
                                  u2031 0DC1                                    u2111 0E29  
                                  u2015 0D32                                    u2120 0E3B  
                                  u2200 0B22                                    u2121 0E3A  
                                  u2201 0B21                                    u2050 0DD6  
                                  u2051 0DD5                                    u2140 0E4D  
                                  u2300 0A7F                                    u2220 0B34  
                                  u2045 0DC7                                    u2141 0E4C  
                                  u2301 0A7E                                    u2221 0B33  
                                  u2070 0DF1                                    u2071 0DF0  
                                  u2135 0E3F                                    u2215 0B26  
                                  u2160 0E5E                                    u2320 0A92  
                                  u2240 0B45                                    u2065 0DD8  
                                  u2161 0E5D                                    u2321 0A91  
                                  u2305 0A7B                                    u2241 0B44  
                                  u2090 0E0F                                    u2330 0B9F  
                                  u2091 0E0E                                    u2075 0DED  
                                  u2331 0B9E                                    u2155 0E4E  
                                  u2315 0A86                                    u2235 0B35  
                                  u2340 0CA8                                    u2180 0E72  
                                  u2260 0B59                                    u2500 0FE4  
                                  u2085 0E01                                    u2341 0CA7  
                                  u2181 0E71                                    u2165 0E5A  
                                  u2261 0B58                                    u2245 0B41  
                                  u2501 0FE3                                    u2350 0CBE  
                                  u2190 0E77                                    u2270 0A63  
                                  u2510 0FF3                                    u2351 0CBD  
                                  u2191 0E76                                    u2175 0E66  
                                  u2271 0A62                                    u2255 0B4D  
                                  u2511 0FF2                                    u2360 0CD4  
                                  u2600 0448                                    u2520 03B3  
                                  u2440 0F94                                    u2361 0CD3  
                                  u2601 0447                                    u2521 03B2  
                                  u2441 0F93                                    u2290 0A75  
                                  u2530 03C9                                    u2291 0A74  
                                  u2531 03C8                                    u2435 0F8B  
                                  u2380 07F7                                    u1900 089D  
                                  u2620 0473                                    u2540 03DB  
                                  u2460 0FAF                                    u2381 07F6  
                                  u1901 089C                                    u2285 0A67  
                                  u2621 0472                                    u2541 03DA  
                                  u2461 0FAE                                    u1910 093B  
                                  u2390 0A08                                    u2630 0478  
                                  u2550 0405                                    u2710 0639  
                                  u2375 07E4                                    u1911 093A  
                                  u2391 0A07                                    u2631 0477  
                                  u2615 046A                                    u2551 0404  
                                  u2711 0638                                    u2455 0FA6  
                                  u2800 06B2                                    u1920 09AE  
                                  u2480 0FC9                                    u2545 03D7  
                                  u2801 06B1                                    u2705 0630  
                                  u1921 09AD                                    u2481 0FC8  
                                  u1930 0E8E                                    u2650 0493  
                                  u2570 0428                                    u2730 0651  
                                  u1931 0E8D                                    u2651 0492  
                                  u2571 0427                                    u2555 0401  
                                  u2731 0650                                    u2475 0FC0  
                                  u1940 0EA2                                    u2660 04B3  
                                  u2580 042D                                    u2740 0657  
                                  u1941 0EA1                                    u2661 04B2  
                                  u2645 048A                                    u2581 042C  
                                  u2565 041F                                    u2741 0656  
                                  u2725 0648                                    u1950 0EB6  
                                  u1951 0EB5                                    u2495 0FDB  
                                  u1960 0ECA                                    u2760 0672  
                                  u2680 0618                                    u1961 0EC9  
                                  u2761 0671                                    u2681 0617  
                                  u1890 0897                                    u2770 067C  
                                  u2690 061E                                    u1891 0896  
                                  u2595 043F                                    u2771 067B  
                                  u2755 0669                                    u2691 061D  
                                  u2675 060F                                    _PEIE 005E  
                                  u1980 0A45                                    u2780 0695  
                                  u1981 0A44                                    u2781 0694  
                                  _INTE 005C                                    u2790 06AD  
                                  _INTF 0059                                    u1975 0A32  
                                  u3807 0433                                    u2791 06AC  
                                  u3817 047E                                    u3827 0D7B  
                                  u1995 0D0B                                    _RCEN 048B  
                                  u3837 0DAA                                    u3767 0F9A  
                                  u3777 0FCF                                    u3787 0624  
                                  u3797 065D                                    _TMR1 000E  
                                  _RSEN 0489                                    _main 0BF2  
                       __end_of_SSD_OFF 0885                        __end_of_I2C_Init 0BA8  
                                  btemp 007E                    EEPROM_WriteByte@data 00A3  
                      __end_of_ADC_Init 0800                  _EWH_getAvrgTempReading 09E8  
                                  start 0012                __size_of_EEPROM_ReadByte 005B  
              __size_of_EWH_EEPROM_Init 0010                __size_of_EWH_EEPROM_Read 000C  
                       __end_of_SW_Init 0849                            ?_EWH_SSD_OFF 0070  
             EWH_ClearEvent@Event_index 00A0                         _ADC_ReadChannel 09BD  
                                 ??_ISR 0044                           ___fltol@sign1 0042  
                                 ?_main 0070                                   _ACKEN 048C  
                                 _ACKDT 048D                         __end_of___awdiv 0E81  
                       __end_of___awmod 0C9F                        __end_of_EWH_Init 0B18  
                       __end_of___flmul 0398                         __end_of___fltol 0F68  
                          ?_EWH_SetMode 0070                         __end_of___lldiv 0E18  
                       ___awdiv@divisor 00A0                         __end_of___lwdiv 0B5E  
                                 i1l311 09E7                                   i1l308 09D9  
                       __end_of___lwmod 0A97                                   i1l267 0AD3  
                                 i1l543 0814                                   i1l546 080C  
                                 i1l910 0C9E                                   i1l930 0F67  
                                 i1l940 0F67                                   i1l596 05CC  
                                 i1l937 0F52                         ___awdiv@counter 00A4  
         __size_of_I2C_Master_WriteByte 001E                                   _PORTA 0005  
                                 _PORTB 0006                                   _PORTC 0007  
                                 _PORTD 0008                                   _TRISA 0085  
                                 _TRISB 0086                                   _TRISC 0087  
                                 _TRISD 0088                                   _SSPIE 0463  
                                 _SSPEN 00A5                                   _SSPIF 0063  
                      ??i1_EWH_SetEvent 0070                      __size_of_TMR1_Init 004A  
                           ?_TMR1_Start 0070                      __size_of_TMR1_Stop 0004  
                                 pclath 000A                                   status 0003  
                                 wtemp0 007E                      __size_of_SSD_Write 001D  
                __size_of_I2C_Wait_IDLE 000D                         __initialization 0015  
             __size_of_EWH_SetTemp_Mode 00F1                            __end_of_main 0C46  
                ?_I2C_Master_Send_Start 0070                             ?_SSD_config 00A0  
                                ??_main 00BB                               ??_DD_Init 00A0  
                       _EWH_WakeUP_Mode 0F68                                  _ADCON0 001F  
                                _ADCON1 009F                               ??_SSD_OFF 00A4  
                                _ADRESH 001E                                  _ADRESL 009E  
                      ___awdiv@dividend 00A2                           ?_EWH_SetEvent 0070  
                                i1l1133 0397                                  i1l1152 0981  
                                i1l1145 038B                                  i1l1154 0993  
                                i1l1139 0303                                  i1l1190 074B  
                                i1l1191 0757                                  i1l1177 06EA  
                                i1l3050 097B                                  i1l1179 0781  
                                i1l3300 0C61                                  i1l3052 098A  
                                i1l3044 096E                                  i1l3310 0C7D  
                                i1l3302 0C64                                  i1l3054 098F  
                                i1l3046 0970                                  i1l3320 0C9A  
                                i1l3312 0C83                                  i1l3304 0C6B  
                                i1l3048 0977                                  i1l3400 0096  
                                i1l3250 0A99                                  i1l3314 0C8A  
                                i1l3306 0C6F                                  i1l3410 00C1  
                                i1l3402 009B                                  i1l3330 0F02  
                                i1l3308 0C73                                  i1l3316 0C90  
                                i1l3500 038F                                  i1l3420 015E  
                                i1l3412 00DE                                  i1l3340 0F26  
                                i1l3332 0F17                                  i1l3324 0EEC  
                                i1l3262 0AB3                                  i1l3270 0AC0  
                                i1l3318 0C95                                  i1l3430 01C1  
                                i1l3422 0167                                  i1l3414 00FA  
                                i1l3406 00A4                                  i1l3350 0F40  
                                i1l3334 0F18                                  i1l3326 0EF9  
                                i1l3510 06E2                                  i1l3280 09D6  
                                i1l3256 0AA6                                  i1l3248 0A98  
                                i1l3440 0261                                  i1l3432 01DA  
                                i1l3424 0177                                  i1l3416 0126  
                                i1l3408 00B4                                  i1l3360 0F5C  
                                i1l3336 0F20                                  i1l3520 0704  
                                i1l3512 06F2                                  i1l3504 06C9  
                                i1l3282 09DD                                  i1l3290 0C4B  
                                i1l3450 02CF                                  i1l3442 0287  
                                i1l3434 01F7                                  i1l3426 0194  
                                i1l3418 0142                                  i1l3370 0049  
                                i1l3362 0037                                  i1l3346 0F2E  
                                i1l3338 0F22                                  i1l3530 072F  
                                i1l3522 070D                                  i1l3506 06CE  
                                i1l3276 09BE                                  i1l3292 0C50  
                                i1l3460 02E7                                  i1l3452 02D3  
                                i1l3444 02AF                                  i1l3436 0224  
                                i1l3428 01A4                                  i1l3380 0065  
                                i1l3372 004E                                  i1l3364 003E  
                                i1l3356 0F47                                  i1l3348 0F37  
                                i1l3540 0759                                  i1l3532 0736  
                                i1l3524 0714                                  i1l3516 06FB  
                                i1l3508 06D2                                  i1l3700 058E  
                                i1l3278 09D1                                  i1l3294 0C52  
                                i1l3286 0C46                                  i1l3470 0308  
                                i1l3462 02E8                                  i1l3454 02D4  
                                i1l3446 02B8                                  i1l3438 0234  
                                i1l3390 007A                                  i1l3382 006A  
                                i1l3374 0053                                  i1l3366 0044  
                                i1l3358 0F57                                  i1l3542 076F  
                                i1l3534 0741                                  i1l3526 0718  
                                i1l3518 0700                                  i1l3710 05B6  
                                i1l3702 0594                                  i1l3296 0C56  
                                i1l3288 0C47                                  i1l3472 030D  
                                i1l3480 033E                                  i1l3464 02EC  
                                i1l3456 02DD                                  i1l3448 02C6  
                                i1l3392 007F                                  i1l3384 0070  
                                i1l3376 005B                                  i1l3368 0048  
                                i1l3544 0774                                  i1l3536 0745  
                                i1l3528 0726                                  i1l3552 080E  
                                i1l3720 05C8                                  i1l3712 05C1  
                                i1l3704 059C                                  i1l3298 0C5B  
                                i1l3490 0371                                  i1l3482 034B  
                                i1l3474 031B                                  i1l3466 0300  
                                i1l3458 02E3                                  i1l3394 0087  
                                i1l3386 0074                                  i1l3378 005D  
                                i1l3546 0778                                  i1l3538 074F  
                                i1l3554 0806                                  i1l3706 05A7  
                                i1l3492 0377                                  i1l3484 0356  
                                i1l3476 031F                                  i1l3396 0089  
                                i1l3388 0075                                  i1l3548 0779  
                                i1l3716 05C4                                  i1l3708 05AE  
                                i1l3660 04D2                                  i1l3494 037F  
                                i1l3486 0365                                  i1l3478 0338  
                                i1l3398 0091                                  i1l3718 05C7  
                                i1l3670 04EC                                  i1l3662 04D8  
                                i1l3496 0383                                  i1l3488 036F  
                                u300_20 0F3F                                  i1l3680 04FF  
                                i1l3672 04EE                                  i1l3664 04DF  
                                u300_21 0F3E                                  i1l3498 0384  
                                i1l3682 0507                                  i1l3690 0571  
                                i1l3674 04F4                                  i1l3666 04E0  
                                i1l3658 04CE                                  i1l3692 0579  
                                i1l3684 054D                                  i1l3668 04E7  
                                i1l3676 04F5                                  i1l3934 0AC8  
                                i1l3694 0581                                  i1l3686 0555  
                                i1l3678 04FB                                  u301_20 0F46  
                                i1l3696 0582                                  i1l3688 0559  
                                u301_21 0F45                                  i1l3698 0588  
                                u310_20 007F                                  u310_21 007E  
                                _INTEDG 040E                                  u302_25 0F49  
                                u311_20 0096                                  u303_20 0F57  
                                u311_21 0095                                  u303_21 0F56  
                                u240_20 097B                                  u312_20 009B  
                                u304_20 0F5C                                  u240_21 097A  
                                u312_21 009A                                  u304_21 0F5B  
                                u320_25 01C3                                  u305_20 0048  
                                u321_21 01E9                                  u313_21 00EC  
                                u305_21 0047                                  u321_22 01F0  
                                u313_22 00F3                                  u321_23 01F7  
                                u313_23 00FA                                  u241_25 0982  
                                u242_20 098F                                  u330_20 02D3  
                                u306_20 004E                                  u242_21 098E  
                                u330_21 02D2                                  u322_21 0216  
                                u314_21 0108                                  u306_21 004D  
                                u322_22 021D                                  u314_22 010F  
                                u322_23 0224                                  u314_23 0116  
                                u307_20 0053                                  u323_21 0243  
                                u315_21 0134                                  u307_21 0052  
                                u323_22 024A                                  u315_22 013B  
                                u323_23 0251                                  u315_23 0142  
                                u331_25 02D6                                  u340_20 0365  
                                u332_20 02E7                                  u324_20 026D  
                                u308_20 0074                                  u340_21 0364  
                                u332_21 02E6                                  u316_21 0150  
                                u308_21 0073                                  u316_22 0157  
                                u316_23 015E                                  u340_25 0361  
                                u324_25 0268                                  u341_20 0383  
                                u333_20 02EC                                  u309_20 007A  
                                u341_21 0382                                  u333_21 02EB  
                                u325_21 0279                                  u309_21 0079  
                                u325_22 0280                                  u325_23 0287  
                                u317_25 0160                                  u334_20 0300  
                                u326_20 0295                                  u350_20 0745  
                                u342_20 06CE                                  u334_21 02FF  
                                u318_21 0186                                  u350_21 0744  
                                u342_21 06CD                                  u318_22 018D  
                                u318_23 0194                                  u326_25 0290  
                                u335_20 0307                                  u351_20 074B  
                                u343_20 06D2                                  u335_21 0306  
                                u327_21 02A1                                  u319_21 01B3  
                                u351_21 074A                                  u343_21 06D1  
                                u327_22 02A8                                  u319_22 01BA  
                                u327_23 02AF                                  u319_23 01C1  
                                u336_20 030D                                  u352_20 074F  
                                u344_20 06F2                                  u336_21 030C  
                                u352_21 074E                                  u344_21 06F1  
                                u328_25 02B1                                  u337_20 031F  
                                u353_20 0764                                  u337_21 031E  
                                u281_25 0A9E                                  u329_25 02C8  
                                u353_25 075F                                  u345_25 0705  
                                u290_20 0C73                                  u338_20 032E  
                                u354_20 0774                                  u346_20 0713  
                                u370_20 0581                                  u290_21 0C72  
                                u354_21 0773                                  u346_21 0712  
                                u370_21 0580                                  u282_25 0AAB  
                                u338_25 0329                                  u291_20 0C7D  
                                u339_20 034B                                  u355_20 0778  
                                u371_20 058E                                  u291_21 0C7C  
                                u339_21 034A                                  u355_21 0777  
                                u371_21 058D                                  u283_25 0AB8  
                                u291_25 0C79                                  u339_25 0347  
                                u347_25 0727                                  u348_20 0735  
                                u372_20 059C                                  u364_20 04D2  
                                u348_21 0734                                  u372_21 059B  
                                u364_21 04D1                                  u284_25 09C7  
                                u292_25 0C84                                  u285_20 09DD  
                                u293_20 0C90                                  u373_20 05A7  
                                u365_20 04DF                                  u285_21 09DC  
                                u293_21 0C8F                                  u373_21 05A6  
                                u365_21 04DE                                  u349_25 073A  
                                u294_20 0C95                                  u286_20 0C4B  
                                u374_20 05B6                                  u366_20 04EC  
                                u294_21 0C94                                  u286_21 0C4A  
                                u374_21 05B5                                  u366_21 04EB  
                                u287_20 0C56                                  u295_20 0EF9  
                                u375_20 05C1                                  u367_20 04FB  
                                u287_21 0C55                                  u295_21 0EF8  
                                u375_21 05C0                                  u367_21 04FA  
                                u288_20 0C61                                  u296_20 0F10  
                                u368_20 0507                                  u288_21 0C60  
                                u368_21 0506                                  u296_25 0F0B  
                                u384_27 09D3                                  u297_20 0F26  
                                u369_20 0579                                  u297_21 0F25  
                                u369_21 0578                                  u289_25 0C65  
                                u298_20 0F2D                                  u298_21 0F2C  
                                u299_25 0F2F                               ??_SW_Init 00A0  
                                _TMR1IE 0460                                  _TMR1IF 0060  
                                _TMR1ON 0080                                  _SSPADD 0093  
                                _SSPCON 0014                                  _SSPBUF 0013  
               __end_of_ADC_ReadChannel 09E8                        __end_of___xxtofl 0782  
                  __size_of_DD_GetState 003D                           _ReadingBuffer 00CB  
                     __end_of_TMR1_Init 0BF2                       __end_of_TMR1_Stop 0805  
                             ??___awdiv 00A4                               ??___awmod 0074  
                             ??___flmul 0028                               ??___fltol 003E  
                             ??___lldiv 00A8                     __size_of_TMR1_Start 0010  
                             ??___lwdiv 00A4                               ??___lwmod 00A4  
               __size_of_EWH_SSD_Update 005C                       ??_EEPROM_ReadByte 00A4  
                     ??_EWH_EEPROM_Init 00A6                       ??_EWH_EEPROM_Read 00A7  
                 ADC_ReadChannel@result 0073                    __size_of_DD_SetState 005A  
                      ___awdiv@quotient 00A6                         ___awmod@divisor 0070  
                       ___awmod@counter 0074                __end_of_EEPROM_WriteByte 0A5B  
                   EWH_SetMode@new_mode 00A0                       __end_of_SSD_Write 0929  
                             ?_I2C_Init 0070                      __size_of__Umul8_16 0027  
                         _I2C_Wait_IDLE 0891                               ?_ADC_Init 0070  
                                saved_w 007E                          ??_EWH_SetEvent 00A0  
                   _I2C_Master_ReadByte 0994                            ___xxtofl@arg 007A  
                          ___xxtofl@exp 0079                            ___xxtofl@val 0070  
               __end_of__initialization 0033                     _I2C_Master_Send_ACK 085C  
                   __size_of_SSD_config 006B              __end_of_EWH_Operating_Mode 04CE  
                            ___fltol@f1 003A                            SSD_config@ID 00A3  
                             ?_EWH_Init 0070                  __size_ofi1_EWH_SetMode 0008  
                     _ReadingBufferFull 00C5                          _TempavgReading 00C4  
               __size_of_EWH_ClearEvent 0009                          __pcstackCOMMON 0070  
                          __pidataBANK1 0870                    __size_of_EWH_SSD_OFF 000D  
                  ?_I2C_Master_ReadByte 0070                 __end_of_EWH_WakeUP_Mode 1000  
                      EWH_Init@TMR1_cfg 00AF                    ?_I2C_Master_Send_ACK 0070  
                    EWH_Init@i2c_config 00B1                          ?_I2C_Wait_IDLE 0070  
                            ??_I2C_Init 00AE                              ??_ADC_Init 00A0  
                  __size_of_EWH_SetMode 0008     EWH_getAvrgTempReading@sumOfReadings 00AB  
                            __pbssBANK0 004C                              __pbssBANK1 00BD  
               ?_EWH_getAvrgTempReading 00A7                        ?_ADC_ReadChannel 0070  
                            ??_EWH_Init 00AF                     SSD_config@SSD_state 00A0  
                     __end_of__Umul8_16 0994                              __pmaintext 0BF2  
          __end_of_I2C_Master_Send_NACK 0870                        _EWH_SetTemp_Mode 05D7  
          __end_of_I2C_Master_Send_Stop 0840                   ??_I2C_Master_ReadByte 00A0  
                            __pintentry 0004                                 _ACKSTAT 048E  
                 ??_I2C_Master_Send_ACK 00A0                                 _T1CKPS0 0084  
                               _T1CKPS1 0085                                 _DD_Init 08EF  
                         i1_EWH_SetMode 080D                               ?___xxtofl 0070  
                          ??_TMR1_Start 00A0          __end_of_EWH_getAvrgTempReading 0A20  
                               _SSPCON2 0091                                 _SSD_OFF 087A  
                               _SSPSTAT 0094                               SSD_OFF@ID 00A4  
                               _SW_Init 0840            __end_of_I2C_Master_WriteByte 0947  
               __size_of_EWH_Sleep_Mode 0026                 ??_I2C_Master_Send_Start 00A0  
                               ___awdiv 0E18                                 ___awmod 0C46  
                               ___flmul 0037                                 ___fltol 0EEC  
                               ___lldiv 0DB0                    __end_of_EWH_SetEvent 085C  
                ADC_ReadChannel@channel 0075                                 ___lwdiv 0B18  
                        _EWH_SSD_Update 0D54                                 ___lwmod 0A5B  
                    __end_of_TMR1_Start 08CB                        ?_EWH_WakeUP_Mode 0070  
                          ??_SSD_config 00A1                         ??_I2C_Wait_IDLE 00A0  
                               __ptext1 0F68                                 __ptext2 0885  
                               __ptext3 0CF9                                 __ptext4 0994  
                               __ptext5 0866                                 __ptext6 085C  
                               __ptext7 0947                                 __ptext8 05D7  
                               __ptext9 089E                          ?i1_EWH_SetMode 0070  
                          __size_of_ISR 0109                  EEPROM_ReadByte@address 00A2  
                            ??___xxtofl 0074                      EWH_Init@adc_config 00B7  
                      ___awmod@dividend 0072                 EEPROM_WriteByte@address 00A1  
                               clrloop0 081E                    end_of_initialization 0033  
                    __end_of_SSD_config 0EEC                               _EWH_State 0054  
                       _EEPROM_ReadByte 0CF9                         _EWH_EEPROM_Init 08AB  
                       _EWH_EEPROM_Read 0885                          _EWH_ClearEvent 0849  
                       ___lldiv@divisor 00A0                         ___lldiv@counter 00AD  
                __end_of_EWH_SSD_Update 0DB0                        DD_SetState@state 00A0  
                             _TMR1_Init 0BA8                               _TMR1_Stop 0801  
                     ?_EEPROM_WriteByte 00A1                      ??_EEPROM_WriteByte 00A4  
                         ___xxtofl@sign 0078                       __size_of_I2C_Init 004A  
                  _I2C_Master_Send_NACK 0866                               _SSD_Write 090C  
                     __size_of_ADC_Init 007E                    _I2C_Master_Send_Stop 0837  
                         ??_DD_GetState 0070                             ___flmul@grs 002E  
                __end_of_EWH_ClearEvent 0852                 __size_ofi1_EWH_SetEvent 0008  
                       ?_EWH_SSD_Update 00AA                       __size_of_EWH_Init 0044  
                         ??_DD_SetState 00A1                         ??i1_EWH_SetMode 0070  
                            ?_TMR1_Init 0070                      _EWH_Operating_Mode 0398  
                            ?_TMR1_Stop 0070                    _I2C_Master_WriteByte 0929  
                   start_initialization 0015                             __end_of_ISR 05D7  
                   ?_EWH_Operating_Mode 0070                   ?_I2C_Master_Send_NACK 0070  
              __end_of_EWH_SetTemp_Mode 06C8                              ?_SSD_Write 00A8  
                 ?_I2C_Master_Send_Stop 0070                 __end_of_EEPROM_ReadByte 0D54  
               __end_of_EWH_EEPROM_Init 08BB                 __end_of_EWH_EEPROM_Read 0891  
          EWH_getAvrgTempReading@buffer 00AE    EWH_getAvrgTempReading@averageReading 00AD  
          EWH_getAvrgTempReading@length 00A7                         ?_EWH_ClearEvent 0070  
       ??_I2C_Master_Send_RepeatedStart 00A0                       _TempReading_count 00C7  
                 __size_of_EWH_SetEvent 000A                           ??_EWH_SSD_OFF 00A5  
                   __end_of_DD_GetState 0AD4                          _EWH_Sleep_Mode 0947  
                  ??_EWH_Operating_Mode 00B0                          ADC_Init@config 00A2  
                           SSD_Write@ID 00A9                              init_fetch0 08DC  
                             __Umul8_16 096D                             __pdataBANK1 00D5  
                            ISR@Reading 004A                 EWH_SetEvent@Event_index 00A0  
                         ??_EWH_SetMode 00A0                     __end_of_DD_SetState 0CF9  
                 ?_I2C_Master_WriteByte 0070                                ?_DD_Init 0070  
                             ___flmul@a 0024                               ___flmul@b 0020  
                         _Devices_State 00C1                               ___latbits 0002  
                         __pcstackBANK0 0020                           __pcstackBANK1 00A0  
                     __size_of___xxtofl 00BA                                ?_SSD_OFF 0070  
                       _SW_StateControl 004F               i1EWH_SetEvent@Event_index 0070  
                          _EWH_SetEvent 0852                                ?_SW_Init 0070  
                          _current_Temp 00C8                  __end_of_EWH_Sleep_Mode 096D  
           __end_of_I2C_Master_ReadByte 09BD                                ISR@count 0052  
                      ___lwdiv@dividend 00A2             __end_of_I2C_Master_Send_ACK 0866  
                              ?___awdiv 00A0                                ?___awmod 0070  
                              ?___flmul 0020                                ?___fltol 003A  
                              ?___lldiv 00A0                              ?__Umul8_16 0070  
              __size_of_ADC_ReadChannel 002B                                ?___lwdiv 00A0  
                              ?___lwmod 00A0          __size_of_I2C_Master_Send_Start 0009  
         __end_of_I2C_Master_Send_Start 0837                     __end_of_EWH_SSD_OFF 08AB  
                           ??_TMR1_Init 00A0                             ??_TMR1_Stop 00A0  
                 i1EWH_SetMode@new_mode 0070                                _I2C_Init 0B5E  
                              _ADC_Init 0782                  ??_I2C_Master_Send_NACK 00A0  
                ??_I2C_Master_Send_Stop 00A0                       DD_GetState@device 0072  
                           ??_SSD_Write 00A9                     __end_of_EWH_SetMode 081D  
                      ___lwdiv@quotient 00A4                        ?_EEPROM_ReadByte 00A2  
                      ?_EWH_EEPROM_Init 0070                        ?_EWH_EEPROM_Read 0070  
                           _DD_GetState 0A97                         SSD_Write@Number 00A8  
                     interrupt_function 0004                          i1_EWH_SetEvent 0805  
                             clear_ram0 081D                         ?_EWH_Sleep_Mode 0070  
                              _EWH_Init 0AD4                                _EWH_Mode 00CA  
 __end_of_I2C_Master_Send_RepeatedStart 082E  __size_of_I2C_Master_Send_RepeatedStart 0009  
         _I2C_Master_Send_RepeatedStart 0825                             _DD_SetState 0C9F  
         I2C_Master_ReadByte@Read_State 00A1                  ??_I2C_Master_WriteByte 00A0  
                              _SSD_code 00D5                      EWH_SSD_Update@temp 00AA  
                 __end_of_I2C_Wait_IDLE 089E                        __size_of_DD_Init 001D  
              __size_of_EWH_WakeUP_Mode 0098                                _SW_State 004C  
                __end_ofi1_EWH_SetEvent 080D                        __size_of_SSD_OFF 000B  
             __size_of_EEPROM_WriteByte 003B                        ??_EWH_SSD_Update 00AC  
                      __size_of_SW_Init 0009                 EWH_getAvrgTempReading@i 00AF  
                           _EWH_SSD_OFF 089E                             ??__Umul8_16 0072  
                      __size_of___awdiv 0069                        __size_of___awmod 0059  
                      __size_of___flmul 0361                        __size_of___fltol 007C  
                      __size_of___lldiv 0068                        __size_of___lwdiv 0046  
                      __size_of___lwmod 003C             EWH_EEPROM_Update@newSetTemp 00A6  
                           _EWH_SetMode 0815                ??_EWH_getAvrgTempReading 00A8  
                     ??_ADC_ReadChannel 0072                                ___xxtofl 06C8  
                     _NoPress_Sec_count 0053                         ___lwdiv@divisor 00A0  
                       ___lwdiv@counter 00A6                        ??_EWH_ClearEvent 00A0  
                              __ptext10 08CB                                __ptext11 0398  
                              __ptext20 0E18                                __ptext12 0801  
                              __ptext21 090C                                __ptext13 08BB  
                              __ptext30 0DB0                                __ptext22 087A  
                              __ptext14 09E8                                __ptext31 08AB  
                              __ptext23 0E81                                __ptext15 0B18  
                              __ptext40 04CE                                __ptext32 0A20  
                              __ptext24 0849                                __ptext16 0815  
                              __ptext41 080D                                __ptext33 0929  
                              __ptext25 0C9F                                __ptext17 0852  
                              __ptext42 0805                                __ptext34 0837  
                              __ptext26 0AD4                                __ptext18 0D54  
                              __ptext43 06C8                                __ptext35 082E  
                              __ptext27 0BA8                                __ptext19 0A5B  
                              __ptext44 0EEC                                __ptext36 0825  
                              __ptext28 0840                                __ptext45 0037  
                              __ptext37 0891                                __ptext29 0B5E  
                              __ptext46 096D                                __ptext38 08EF  
                              __ptext47 0C46                                __ptext39 0782  
                              __ptext48 0A97                                __ptext49 09BD  
                     _EWH_EEPROM_Update 08CB                       ?_EWH_SetTemp_Mode 0070  
                       ?i1_EWH_SetEvent 0070                      ?_EWH_EEPROM_Update 0070  
                    ??_EWH_SetTemp_Mode 00AE                           __size_of_main 0054  
                   ??_EWH_EEPROM_Update 00A6                                _set_Temp 00C9  
        ?_I2C_Master_Send_RepeatedStart 0070                   __end_ofi1_EWH_SetMode 0815  
             __end_of_EWH_EEPROM_Update 08DC                                init_ram0 08E0  
                            _EWH_Events 00BD                                intlevel1 0000  
                      ___lwmod@dividend 00A2                       ??_EWH_WakeUP_Mode 00AE  
                      ___lldiv@dividend 00A4                     EEPROM_ReadByte@data 00A6  
           __size_of_EWH_Operating_Mode 0136                       DD_SetState@device 00A3  
                __Umul8_16@multiplicand 0070         __size_of_EWH_getAvrgTempReading 0038  
                      ___lldiv@quotient 00A9                         ___lwmod@divisor 00A0  
                       ___lwmod@counter 00A4                          _SSD_Blink_flag 00C6  
                            _TMR1_Start 08BB                I2C_Master_WriteByte@Data 00A0  
                      ??_EWH_Sleep_Mode 00A5                            ?_DD_GetState 0070  
                      _EEPROM_WriteByte 0A20                    __Umul8_16@multiplier 0078  
                     __Umul8_16@product 0074  
